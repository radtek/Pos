<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:enums="clr-namespace:Chefmate.Core.Enums;assembly=Chefmate.Core"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:converters="clr-namespace:Chefmate.UI.Converters">
    
    <converters:EnumToBoolConverter x:Key="EnumToBoolConverter"/>
    <converters:RecallValueConverter x:Key="RecallValueConverter"/>
    <converters:VolumeStringConverters x:Key="VolumeStringConverters"/>
    <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <converters:StringToColorConverter x:Key="StringToColorConverter"/>
    
    <!--Labels Style-->
    <Style x:Key="ListLabel" TargetType ="{x:Type Label}">
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    </Style>
    <Style x:Key="WindowHeaderLabel" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="#F09422"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style x:Key="FormLabel" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    <Style x:Key="ErrorLabelStyle"  TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="Foreground" Value="Maroon"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    <Style x:Key="AnalysisValueLable" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.AnalysisFontFamily}"></Setter>
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.AnalysisFontSize}"></Setter>
        <Setter Property="FontWeight" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.AnalysisFontWeight}"></Setter>
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.HeaderForeGround}"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>
    <Style x:Key="AnalysisHeaderLable" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.AnalysisFontFamily}"></Setter>
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.AnalysisFontSize}"></Setter>
        <Setter Property="FontWeight" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.AnalysisFontWeight}"></Setter>
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.HeaderForeGround}"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <Style x:Key="HeaderTopStyle" TargetType="{x:Type Label}">
        <Setter Property="Background" Value="#F09422"/>
        <Setter Property="Height" Value="5"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="2,30,30,0"/>
    </Style>
    <Style x:Key="GroupHeaderStyle" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="Margin" Value="2,0,30,0"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>
    <Style x:Key="NumpadHeaderLable"  TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Background" Value="#F09422"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <!--TextBox Style-->
    <Style x:Key="FormTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Margin" Value="10,2,10,2"></Setter>
        <Setter Property="MaxLines" Value="1"></Setter>
    </Style>

    <!--TextBlock Style-->
    <Style x:Key="CourseLable" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="TextWrapping" Value="Wrap"></Setter>
        <Setter Property="FontFamily" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.GroupFontFamily}"></Setter>
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.GroupFontSize}"></Setter>
        <Setter Property="FontWeight" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.GroupFontWeight}"></Setter>
    </Style>
    <Style x:Key="ItemLable" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.ItemFontFamily}"></Setter>
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.ItemFontSize}"></Setter>
        <Setter Property="Text" Value="{Binding Name}"></Setter>
        <Setter Property="TextWrapping" Value="Wrap"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="MaxHeight" Value="35"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding OrderStatus}" Value="{x:Static enums:OrderStatus.Bumped}">
                <Setter Property="TextBlock.TextDecorations" >
                    <Setter.Value>
                        <TextDecorationCollection>
                            <TextDecoration Location="StrikeThrough">
                                <TextDecoration.Pen>
                                    <Pen Brush="Green" Thickness="2">
                                    </Pen>
                                </TextDecoration.Pen>
                            </TextDecoration>
                        </TextDecorationCollection>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding OrderStatus}" Value="{x:Static enums:OrderStatus.Canceled}">
                <Setter Property="TextBlock.TextDecorations" >
                    <Setter.Value>
                        <TextDecorationCollection>
                            <TextDecoration Location="StrikeThrough">
                                <TextDecoration.Pen>
                                    <Pen Brush="Red" Thickness="2">
                                    </Pen>
                                </TextDecoration.Pen>
                            </TextDecoration>
                        </TextDecorationCollection>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding DisplayAttributes.IsOriginalItem}" Value="False">
                <Setter Property="TextBlock.TextDecorations" >
                    <Setter.Value>
                        <TextDecorationCollection>
                            <TextDecoration Location="StrikeThrough">
                                <TextDecoration.Pen>
                                    <Pen Brush="Blue" Thickness="2">
                                    </Pen>
                                </TextDecoration.Pen>
                            </TextDecoration>
                        </TextDecorationCollection>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SideLable" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.ItemFontFamily}"></Setter>
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.ItemFontSize}"></Setter>
        <Setter Property="Height" Value="50"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="TextWrapping" Value="Wrap"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ItemStatus}" Value="{x:Static enums:OrderStatus.Bumped}">
                <Setter Property="TextBlock.TextDecorations" >
                    <Setter.Value>
                        <TextDecorationCollection>
                            <TextDecoration Location="StrikeThrough">
                                <TextDecoration.Pen>
                                    <Pen Brush="Green" Thickness="2">
                                    </Pen>
                                </TextDecoration.Pen>
                            </TextDecoration>
                        </TextDecorationCollection>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding DisplayAttributes.IsOriginalItem}" Value="False">
                <Setter Property="TextBlock.TextDecorations" >
                    <Setter.Value>
                        <TextDecorationCollection>
                            <TextDecoration Location="StrikeThrough">
                                <TextDecoration.Pen>
                                    <Pen Brush="Blue" Thickness="2">
                                    </Pen>
                                </TextDecoration.Pen>
                            </TextDecoration>
                        </TextDecorationCollection>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>

    </Style>
    <Style x:Key="OptionLable" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.ItemFontFamily}"></Setter>
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.ItemFontSize}"></Setter>
        <Setter Property="Height" Value="50"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="TextWrapping" Value="Wrap"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ItemStatus}" Value="{x:Static enums:OrderStatus.Bumped}">
                <Setter Property="TextBlock.TextDecorations" >
                    <Setter.Value>
                        <TextDecorationCollection>
                            <TextDecoration Location="StrikeThrough">
                                <TextDecoration.Pen>
                                    <Pen Brush="Green" Thickness="2">
                                    </Pen>
                                </TextDecoration.Pen>
                            </TextDecoration>
                        </TextDecorationCollection>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding DisplayAttributes.IsOriginalItem}" Value="False">
                <Setter Property="TextBlock.TextDecorations" >
                    <Setter.Value>
                        <TextDecorationCollection>
                            <TextDecoration Location="StrikeThrough">
                                <TextDecoration.Pen>
                                    <Pen Brush="Blue" Thickness="2">
                                    </Pen>
                                </TextDecoration.Pen>
                            </TextDecoration>
                        </TextDecorationCollection>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsPlus}" Value="True">
                <Setter Property="Foreground" Value="Blue"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsPlus}" Value="False">
                <Setter Property="Foreground" Value="Red"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="NoteLable" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.ItemFontFamily}"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="Foreground" Value="Red"></Setter>
        <Setter Property="TextWrapping" Value="WrapWithOverflow"></Setter>
    </Style>
    <Style x:Key="OrderHeaderTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.OrderFontFamily}"></Setter>
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.OrderHeaderFontSize}"></Setter>
    </Style>
    <Style x:Key="OrderHeaderTableTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.OrderFontFamily}"></Setter>
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.OrderHeaderFontSize}"></Setter>
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="MaxHeight" Value="25"></Setter>
    </Style>
    <Style x:Key="WebOrderHeaderTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.OrderFontFamily}"></Setter>
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.OrderHeaderFontSize}"></Setter>
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Height" Value="30"></Setter>
    </Style>

    <!--TabItem Style-->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="#F09422"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.Setters>
                    <Setter Property="Background" Value="White"></Setter>
                    <Setter Property="Foreground" Value="#F09422"></Setter>
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--ComboBox Style-->
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="IsEditable" Value="False"></Setter>
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="Margin" Value="15,0,15,0"></Setter>
    </Style>
    <Style x:Key="FormComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Margin" Value="10,5,10,5"></Setter>
    </Style>

    <Style x:Key="SoundComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="IsEditable" Value="False"></Setter>
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Margin" Value="5,5,5,20"></Setter>
    </Style>

    <!--Button Style-->
    <Style
        x:Key="ButtonFocusVisual">
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#F09422"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="15" />
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="MaxHeight" Value="50"/>
        <Setter Property="Margin" Value="10,0,5,0"/>
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="LightGray"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <Grid>
                        <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="3,3,2,2" CornerRadius="4" />

                        <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FunctionButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.HeaderBackGround}"></Setter>
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=GuiStyles.HeaderForeGround}"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                                x:Name="Border"
                                IsEnabled="{TemplateBinding IsEnabled}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                 BorderThickness="3,3,2,2" CornerRadius="4" />

                        <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="LightGray"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NavigationButtonStyle" TargetType="{x:Type Button}">
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>-->
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="15" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                                x:Name="Border"
                                IsEnabled="{TemplateBinding IsEnabled}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                 BorderThickness="3,3,2,2" CornerRadius="4" />

                        <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="LightGray"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SoundButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="#8A8A8A"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="MaxHeight" Value="50"/>
        <Setter Property="Margin" Value="10,0,5,0"/>
    </Style>
    <Style x:Key="NumpadButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="5"></Setter>
        <Setter Property="Width" Value="50"></Setter>
        <Setter Property="Height" Value="50"></Setter>
    </Style>
    <Style x:Key="TextKeyboardButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="2"></Setter>
        <Setter Property="Width" Value="50"></Setter>
        <Setter Property="Height" Value="50"></Setter>
    </Style>
    <Style x:Key="CommandButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="5"></Setter>
        <Setter Property="MinHeight" Value="40"></Setter>
    </Style>
    <Style x:Key="KeypadSpaceButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="2"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
    </Style>
    <Style x:Key="ImageButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"></Setter>
    </Style>
    <!--CheckBox Style-->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Margin" Value="10,0,0,0"></Setter>
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    </Style>

    <!--Radiobutton Style-->
    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Margin" Value="5"></Setter>
    </Style>

    <!--GroupBox Style-->
    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Padding" Value="5"></Setter>
    </Style>

    <!--Border Style-->
    <Style x:Key="GroupBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="BorderBrush" Value="Gray"></Setter>
        <Setter Property="Height" Value="50"></Setter>
    </Style>
    <Style x:Key="AnalysisGroupBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="BorderBrush" Value="Gray"></Setter>
    </Style>

    <Style x:Key="MarginalGroupBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="BorderBrush" Value="Gray"></Setter>
        <Setter Property="Margin" Value="2,-1,30,2"/>
        <Setter Property="MinHeight" Value="100"/>
    </Style>

    <!--RepeatButton Style-->
    <Style TargetType="{x:Type RepeatButton}">
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <!--DataGridColumnHeader Style-->
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="FontSize" Value="15"></Setter>
    </Style>

    <!--DataGridRow Style-->
    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
    </Style>

    <!--DataGrid Style-->
    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="AlternatingRowBackground" Value="Bisque"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="RowHeight" Value="35"/>
    </Style>

    <!--Window Style-->
    <Style TargetType="{x:Type Window}">
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
    </Style>
    <!--Path Style-->
    <Style TargetType="{x:Type Path}">
        <Setter Property="Fill" Value="White"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <!--Color Picker Style-->
    <Style TargetType="{x:Type xctk:ColorPicker}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Margin" Value="10,5,10,5"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
</ResourceDictionary>
    
    
    
    