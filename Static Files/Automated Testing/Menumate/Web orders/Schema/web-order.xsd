<?xml version="1.0" encoding="UTF-8"?>

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--
    ** This pattern ensures that dates entered comply only to the
    ** format that our documentation specifies.
    ** 
    ** For example:
    **   2012-03-15 09:04:05
    **   2012-10-28 00:00:00
    -->
	<xs:simpleType name="_date">
		<xs:restriction base="xs:string">
			<xs:pattern
			 value="[1-2][0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[12]) ([01][0-9]|2[0-3])(:[0-5][0-9]){2}"/>
		</xs:restriction>
	</xs:simpleType>

  <!-- Floats must be in the form X.YY. -->
	<xs:simpleType name="_float">
		<xs:restriction base="xs:string">
			<xs:pattern value="\p{Nd}+\.\p{Nd}{2}"/>
		</xs:restriction>
	</xs:simpleType>

  <!-- Ensures that recieved GUIDs actually are valid! -->
	<xs:simpleType name="_guid">
		<xs:restriction base="xs:string">
			<xs:pattern
			 value="[\p{Nd}a-fA-F]{8}-([\p{Nd}a-fA-F]{4}-){3}[\p{Nd}a-fA-F]{12}"/>
		</xs:restriction>
	</xs:simpleType>

  <!--
    *** Convience types defined to avoid having to retype
    *** restrictions.
    -->
	<xs:simpleType name="_nonempty_string">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="_nonzero_ubyte">
		<xs:restriction base="xs:unsignedByte">
			<xs:minInclusive value="1"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="_pricelevel">
		<xs:restriction base="xs:byte">
			<xs:maxInclusive value="1"/>
			<xs:minInclusive value="-1"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="_ubyte_boolean">
		<xs:restriction base="xs:unsignedByte">
			<xs:enumeration value="0"/>
			<xs:enumeration value="1"/>
		</xs:restriction>
	</xs:simpleType>

  <!--
    ** The product's complex-type is defined here so that we
    ** includes infinite PRODUCT elements within.
    -->
	<xs:complexType name="_product">
		<xs:sequence>
      <!--
       ** PRODUCT_NAME, SIZE, PRODUCT_CHARGE_PRICE and PRODUCT_COMMENT
       ** are all optional. PN and S aren't essential as it's only for
       ** logging on our side. PCP isn't needed if and only if PRICELEVEL
       ** is zero.
       -->
			<xs:element name="SERVINGCOURSE" type="_nonempty_string" minOccurs="0"/>
			<xs:element name="PRODUCT_NAME" type="_nonempty_string"
									minOccurs="0"/>
			<xs:element name="SIZE" type="_nonempty_string" minOccurs="0"/>
			<xs:element name="PRODUCT_PLU" type="_nonempty_string"/>
			<xs:element name="PRODUCT_BASE_PRICE" type="_float"/>
			<xs:element name="PRODUCT_CHARGE_PRICE" type="_float" minOccurs="0"/>
			<xs:element name="PRICELEVEL" type="_pricelevel" minOccurs="0"/>
			<xs:element name="PRODUCT_COMMENT" type="_nonempty_string"
									minOccurs="0"/>
			<xs:element name="QTY" type="xs:unsignedByte"/>
      <!-- A product isn't required to have a side. -->
			<xs:element name="PRODUCT" type="_product" minOccurs="0"
                  maxOccurs="unbounded"/>
      <!--
        ** As with the PRODUCT sub-element, the item doesn't have
        ** to have any options specified.
        -->
			<xs:element name="OPTION" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="KEY" type="xs:unsignedLong"/>
						<xs:element name="NAME" type="_nonempty_string"/>
					</xs:sequence>
					<xs:attribute name="REMOVE" type="xs:boolean" use="required"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="GUID" type="_guid" use="required"/>
	</xs:complexType>

	<xs:element name="ORDER">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="FROM">
					<xs:complexType>
						<xs:sequence>
              <!-- In the end this is the only element we really need. -->
							<xs:element name="NAME" type="_nonempty_string"/>
							<xs:element name="AUTH_NAME" type="_nonempty_string"
													minOccurs="0"/>
							<xs:element name="AUTH_PASS" type="_nonempty_string"
													minOccurs="0"/>
              <xs:element name="PHONE_NUMBER" type="_nonempty_string"
                          minOccurs="0" maxOccurs="1"/>
						</xs:sequence>
						<xs:attribute name="ID" type="_nonempty_string"
													use="required"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="ACCOUNT">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="DELIVERY" minOccurs="0">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="TO" type="_nonempty_string"/>
										<xs:element name="STREET_NO" type="_nonempty_string"/>
										<xs:element name="STREET_NAME" type="_nonempty_string"/>
										<xs:element name="SUBURB" type="_nonempty_string"/>
										<xs:element name="POST_CODE" type="_nonempty_string"/>
										<xs:element name="CITY" type="_nonempty_string"/>
										<xs:element name="COUNTRY" type="_nonempty_string"/>
										<xs:element name="NOTE" type="_nonempty_string"/>
                    <xs:element name="PHONE" type="_nonempty_string"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
              <xs:element name="COMMENTS" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="COMMENT" maxOccurs="unbounded"
                                type="_nonempty_string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
							<xs:element name="PAYMENTS">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="PAYMENT_INFO">
											<xs:complexType>
												<xs:sequence>
													<xs:element name="INFO" type="_nonempty_string"
																			maxOccurs="unbounded"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
                    <!--
                      ** No need to specify an empty payment element if no
                      ** payments were ever made... it's implicit!
                      -->
										<xs:element name="PAYMENT" minOccurs="0" maxOccurs="unbounded">
											<xs:complexType>
												<xs:sequence>
													<xs:element name="NAME" type="_nonempty_string"/>
													<xs:element name="VALUE" type="_float"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="PRODUCT" type="_product"
                          maxOccurs="unbounded"/>
						</xs:sequence>
            <!--
              ** If COVER isn't specified we can safely assume that the
              ** is for only one person. It doesn't make any sense to have
              ** an order for no one!
              -->
						<xs:attribute name="COVERS" type="_nonzero_ubyte" default="1"/>
            <!--
              ** We can also assume that if the sender doesn't specify a
              ** member number that it's because they don't know what it
              ** might be! Our specification mandates that the MN be 0
              ** when this is the case.
              -->
						<xs:attribute name="MEMBER_NUMBER" type="xs:unsignedLong"
													default="0"/>
						<xs:attribute name="NAME" type="_nonempty_string" use="required"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="EXPECTED_DATE" type="_date" use="required"/>
			<xs:attribute name="GUID" type="_guid" use="required"/>
			<xs:attribute name="ORDER_TOTAL" type="_float" default="0.00"/>
			<xs:attribute name="ORDER_DATE" type="_date" use="required"/>
			<xs:attribute name="RESPOND" type="xs:boolean" use="required"/>
      <!--
        ** It makes sense that there's no SCHEDULED attribute specified
        ** if the order isn't scheduled or expected at a certain time!
        -->
			<xs:attribute name="SCHEDULED" type="_ubyte_boolean" default="0"/>
			<xs:attribute name="STORE_NAME" type="_nonempty_string" use="required"/>
		</xs:complexType>
	</xs:element>
</xs:schema>

