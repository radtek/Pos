// Borland C++ Builder
// Copyright (c) 1995, 2002 by Borland Software Corporation
// All rights reserved

// (DO NOT EDIT: machine generated header) 'OpWrdXP.pas' rev: 6.00

#ifndef OpWrdXPHPP
#define OpWrdXPHPP

#pragma delphiheader begin
#pragma option push -w-
#pragma option push -Vx
#include <OpShared.hpp>	// Pascal unit
#include <OpVBIdXP.hpp>	// Pascal unit
#include <OpOfcXP.hpp>	// Pascal unit
#include <StdVCL.hpp>	// Pascal unit
#include <OleCtrls.hpp>	// Pascal unit
#include <Graphics.hpp>	// Pascal unit
#include <Classes.hpp>	// Pascal unit
#include <ActiveX.hpp>	// Pascal unit
#include <Windows.hpp>	// Pascal unit
#include <SysInit.hpp>	// Pascal unit
#include <System.hpp>	// Pascal unit

//-- user supplied -----------------------------------------------------------

namespace Opwrdxp
{
//-- type declarations -------------------------------------------------------
class DELPHICLASS TOpWordBase;
class PASCALIMPLEMENTATION TOpWordBase : public Opshared::TOpOfficeComponent 
{
	typedef Opshared::TOpOfficeComponent inherited;
	
public:
	#pragma option push -w-inl
	/* TOpOfficeComponent.Create */ inline __fastcall virtual TOpWordBase(Classes::TComponent* AOwner) : Opshared::TOpOfficeComponent(AOwner) { }
	#pragma option pop
	#pragma option push -w-inl
	/* TOpOfficeComponent.Destroy */ inline __fastcall virtual ~TOpWordBase(void) { }
	#pragma option pop
	
};


typedef Activex::TOleEnum WdMailSystem;

typedef Activex::TOleEnum WdTemplateType;

typedef Activex::TOleEnum WdContinue;

typedef Activex::TOleEnum WdIMEMode;

typedef Activex::TOleEnum WdBaselineAlignment;

typedef Activex::TOleEnum WdIndexFilter;

typedef Activex::TOleEnum WdIndexSortBy;

typedef Activex::TOleEnum WdJustificationMode;

typedef Activex::TOleEnum WdFarEastLineBreakLevel;

typedef Activex::TOleEnum WdMultipleWordConversionsMode;

typedef Activex::TOleEnum WdColorIndex;

typedef Activex::TOleEnum WdTextureIndex;

typedef Activex::TOleEnum WdUnderline;

typedef Activex::TOleEnum WdEmphasisMark;

typedef Activex::TOleEnum WdInternationalIndex;

typedef Activex::TOleEnum WdAutoMacros;

typedef Activex::TOleEnum WdCaptionPosition;

typedef Activex::TOleEnum WdCountry;

typedef Activex::TOleEnum WdHeadingSeparator;

typedef Activex::TOleEnum WdSeparatorType;

typedef Activex::TOleEnum WdPageNumberAlignment;

typedef Activex::TOleEnum WdBorderType;

typedef Activex::TOleEnum WdBorderTypeHID;

typedef Activex::TOleEnum WdFramePosition;

typedef Activex::TOleEnum WdAnimation;

typedef Activex::TOleEnum WdCharacterCase;

typedef Activex::TOleEnum WdCharacterCaseHID;

typedef Activex::TOleEnum WdSummaryMode;

typedef Activex::TOleEnum WdSummaryLength;

typedef Activex::TOleEnum WdStyleType;

typedef Activex::TOleEnum WdUnits;

typedef Activex::TOleEnum WdGoToItem;

typedef Activex::TOleEnum WdGoToDirection;

typedef Activex::TOleEnum WdCollapseDirection;

typedef Activex::TOleEnum WdRowHeightRule;

typedef Activex::TOleEnum WdFrameSizeRule;

typedef Activex::TOleEnum WdInsertCells;

typedef Activex::TOleEnum WdDeleteCells;

typedef Activex::TOleEnum WdListApplyTo;

typedef Activex::TOleEnum WdAlertLevel;

typedef Activex::TOleEnum WdCursorType;

typedef Activex::TOleEnum WdEnableCancelKey;

typedef Activex::TOleEnum WdRulerStyle;

typedef Activex::TOleEnum WdParagraphAlignment;

typedef Activex::TOleEnum WdParagraphAlignmentHID;

typedef Activex::TOleEnum WdListLevelAlignment;

typedef Activex::TOleEnum WdRowAlignment;

typedef Activex::TOleEnum WdTabAlignment;

typedef Activex::TOleEnum WdVerticalAlignment;

typedef Activex::TOleEnum WdCellVerticalAlignment;

typedef Activex::TOleEnum WdTrailingCharacter;

typedef Activex::TOleEnum WdListGalleryType;

typedef Activex::TOleEnum WdListNumberStyle;

typedef Activex::TOleEnum WdListNumberStyleHID;

typedef Activex::TOleEnum WdNoteNumberStyle;

typedef Activex::TOleEnum WdNoteNumberStyleHID;

typedef Activex::TOleEnum WdCaptionNumberStyle;

typedef Activex::TOleEnum WdCaptionNumberStyleHID;

typedef Activex::TOleEnum WdPageNumberStyle;

typedef Activex::TOleEnum WdPageNumberStyleHID;

typedef Activex::TOleEnum WdStatistic;

typedef Activex::TOleEnum WdStatisticHID;

typedef Activex::TOleEnum WdBuiltInProperty;

typedef Activex::TOleEnum WdLineSpacing;

typedef Activex::TOleEnum WdNumberType;

typedef Activex::TOleEnum WdListType;

typedef Activex::TOleEnum WdStoryType;

typedef Activex::TOleEnum WdSaveFormat;

typedef Activex::TOleEnum WdOpenFormat;

typedef Activex::TOleEnum WdHeaderFooterIndex;

typedef Activex::TOleEnum WdTocFormat;

typedef Activex::TOleEnum WdTofFormat;

typedef Activex::TOleEnum WdToaFormat;

typedef Activex::TOleEnum WdLineStyle;

typedef Activex::TOleEnum WdLineWidth;

typedef Activex::TOleEnum WdBreakType;

typedef Activex::TOleEnum WdTabLeader;

typedef Activex::TOleEnum WdTabLeaderHID;

typedef Activex::TOleEnum WdMeasurementUnits;

typedef Activex::TOleEnum WdMeasurementUnitsHID;

typedef Activex::TOleEnum WdDropPosition;

typedef Activex::TOleEnum WdNumberingRule;

typedef Activex::TOleEnum WdFootnoteLocation;

typedef Activex::TOleEnum WdEndnoteLocation;

typedef Activex::TOleEnum WdSortSeparator;

typedef Activex::TOleEnum WdTableFieldSeparator;

typedef Activex::TOleEnum WdSortFieldType;

typedef Activex::TOleEnum WdSortFieldTypeHID;

typedef Activex::TOleEnum WdSortOrder;

typedef Activex::TOleEnum WdTableFormat;

typedef Activex::TOleEnum WdTableFormatApply;

typedef Activex::TOleEnum WdLanguageID;

typedef Activex::TOleEnum WdFieldType;

typedef Activex::TOleEnum WdBuiltinStyle;

typedef Activex::TOleEnum WdWordDialogTab;

typedef Activex::TOleEnum WdWordDialogTabHID;

typedef Activex::TOleEnum WdWordDialog;

typedef Activex::TOleEnum WdWordDialogHID;

typedef Activex::TOleEnum WdFieldKind;

typedef Activex::TOleEnum WdTextFormFieldType;

typedef Activex::TOleEnum WdChevronConvertRule;

typedef Activex::TOleEnum WdMailMergeMainDocType;

typedef Activex::TOleEnum WdMailMergeState;

typedef Activex::TOleEnum WdMailMergeDestination;

typedef Activex::TOleEnum WdMailMergeActiveRecord;

typedef Activex::TOleEnum WdMailMergeDefaultRecord;

typedef Activex::TOleEnum WdMailMergeDataSource;

typedef Activex::TOleEnum WdMailMergeComparison;

typedef Activex::TOleEnum WdBookmarkSortBy;

typedef Activex::TOleEnum WdWindowState;

typedef Activex::TOleEnum WdPictureLinkType;

typedef Activex::TOleEnum WdLinkType;

typedef Activex::TOleEnum WdWindowType;

typedef Activex::TOleEnum WdViewType;

typedef Activex::TOleEnum WdSeekView;

typedef Activex::TOleEnum WdSpecialPane;

typedef Activex::TOleEnum WdPageFit;

typedef Activex::TOleEnum WdBrowseTarget;

typedef Activex::TOleEnum WdPaperTray;

typedef Activex::TOleEnum WdOrientation;

typedef Activex::TOleEnum WdSelectionType;

typedef Activex::TOleEnum WdCaptionLabelID;

typedef Activex::TOleEnum WdReferenceType;

typedef Activex::TOleEnum WdReferenceKind;

typedef Activex::TOleEnum WdIndexFormat;

typedef Activex::TOleEnum WdIndexType;

typedef Activex::TOleEnum WdRevisionsWrap;

typedef Activex::TOleEnum WdRevisionType;

typedef Activex::TOleEnum WdRoutingSlipDelivery;

typedef Activex::TOleEnum WdRoutingSlipStatus;

typedef Activex::TOleEnum WdSectionStart;

typedef Activex::TOleEnum WdSaveOptions;

typedef Activex::TOleEnum WdDocumentKind;

typedef Activex::TOleEnum WdDocumentType;

typedef Activex::TOleEnum WdOriginalFormat;

typedef Activex::TOleEnum WdRelocate;

typedef Activex::TOleEnum WdInsertedTextMark;

typedef Activex::TOleEnum WdRevisedLinesMark;

typedef Activex::TOleEnum WdDeletedTextMark;

typedef Activex::TOleEnum WdRevisedPropertiesMark;

typedef Activex::TOleEnum WdFieldShading;

typedef Activex::TOleEnum WdDefaultFilePath;

typedef Activex::TOleEnum WdCompatibility;

typedef Activex::TOleEnum WdPaperSize;

typedef Activex::TOleEnum WdCustomLabelPageSize;

typedef Activex::TOleEnum WdProtectionType;

typedef Activex::TOleEnum WdPartOfSpeech;

typedef Activex::TOleEnum WdSubscriberFormats;

typedef Activex::TOleEnum WdEditionType;

typedef Activex::TOleEnum WdEditionOption;

typedef Activex::TOleEnum WdRelativeHorizontalPosition;

typedef Activex::TOleEnum WdRelativeVerticalPosition;

typedef Activex::TOleEnum WdHelpType;

typedef Activex::TOleEnum WdHelpTypeHID;

typedef Activex::TOleEnum WdKeyCategory;

typedef Activex::TOleEnum WdKey;

typedef Activex::TOleEnum WdOLEType;

typedef Activex::TOleEnum WdOLEVerb;

typedef Activex::TOleEnum WdOLEPlacement;

typedef Activex::TOleEnum WdEnvelopeOrientation;

typedef Activex::TOleEnum WdLetterStyle;

typedef Activex::TOleEnum WdLetterheadLocation;

typedef Activex::TOleEnum WdSalutationType;

typedef Activex::TOleEnum WdSalutationGender;

typedef Activex::TOleEnum WdMovementType;

typedef Activex::TOleEnum WdConstants;

typedef Activex::TOleEnum WdPasteDataType;

typedef Activex::TOleEnum WdPrintOutItem;

typedef Activex::TOleEnum WdPrintOutPages;

typedef Activex::TOleEnum WdPrintOutRange;

typedef Activex::TOleEnum WdDictionaryType;

typedef Activex::TOleEnum WdDictionaryTypeHID;

typedef Activex::TOleEnum WdSpellingWordType;

typedef Activex::TOleEnum WdSpellingErrorType;

typedef Activex::TOleEnum WdProofreadingErrorType;

typedef Activex::TOleEnum WdInlineShapeType;

typedef Activex::TOleEnum WdArrangeStyle;

typedef Activex::TOleEnum WdSelectionFlags;

typedef Activex::TOleEnum WdAutoVersions;

typedef Activex::TOleEnum WdOrganizerObject;

typedef Activex::TOleEnum WdFindMatch;

typedef Activex::TOleEnum WdFindWrap;

typedef Activex::TOleEnum WdInformation;

typedef Activex::TOleEnum WdWrapType;

typedef Activex::TOleEnum WdWrapSideType;

typedef Activex::TOleEnum WdOutlineLevel;

typedef Activex::TOleEnum WdTextOrientation;

typedef Activex::TOleEnum WdTextOrientationHID;

typedef Activex::TOleEnum WdPageBorderArt;

typedef Activex::TOleEnum WdBorderDistanceFrom;

typedef Activex::TOleEnum WdReplace;

typedef Activex::TOleEnum WdFontBias;

typedef Activex::TOleEnum WdBrowserLevel;

typedef Activex::TOleEnum WdEnclosureType;

typedef Activex::TOleEnum WdEncloseStyle;

typedef Activex::TOleEnum WdHighAnsiText;

typedef Activex::TOleEnum WdLayoutMode;

typedef Activex::TOleEnum WdDocumentMedium;

typedef Activex::TOleEnum WdMailerPriority;

typedef Activex::TOleEnum WdDocumentViewDirection;

typedef Activex::TOleEnum WdArabicNumeral;

typedef Activex::TOleEnum WdMonthNames;

typedef Activex::TOleEnum WdCursorMovement;

typedef Activex::TOleEnum WdVisualSelection;

typedef Activex::TOleEnum WdTableDirection;

typedef Activex::TOleEnum WdFlowDirection;

typedef Activex::TOleEnum WdDiacriticColor;

typedef Activex::TOleEnum WdGutterStyle;

typedef Activex::TOleEnum WdGutterStyleOld;

typedef Activex::TOleEnum WdSectionDirection;

typedef Activex::TOleEnum WdDateLanguage;

typedef Activex::TOleEnum WdCalendarTypeBi;

typedef Activex::TOleEnum WdCalendarType;

typedef Activex::TOleEnum WdReadingOrder;

typedef Activex::TOleEnum WdHebSpellStart;

typedef Activex::TOleEnum WdAraSpeller;

typedef Activex::TOleEnum WdColor;

typedef Activex::TOleEnum WdShapePosition;

typedef Activex::TOleEnum WdTablePosition;

typedef Activex::TOleEnum WdDefaultListBehavior;

typedef Activex::TOleEnum WdDefaultTableBehavior;

typedef Activex::TOleEnum WdAutoFitBehavior;

typedef Activex::TOleEnum WdPreferredWidthType;

typedef Activex::TOleEnum WdFarEastLineBreakLanguageID;

typedef Activex::TOleEnum WdViewTypeOld;

typedef Activex::TOleEnum WdFramesetType;

typedef Activex::TOleEnum WdFramesetSizeType;

typedef Activex::TOleEnum WdFramesetNewFrameLocation;

typedef Activex::TOleEnum WdScrollbarType;

typedef Activex::TOleEnum WdTwoLinesInOneType;

typedef Activex::TOleEnum WdHorizontalInVerticalType;

typedef Activex::TOleEnum WdHorizontalLineAlignment;

typedef Activex::TOleEnum WdHorizontalLineWidthType;

typedef Activex::TOleEnum WdPhoneticGuideAlignmentType;

typedef Activex::TOleEnum WdNewDocumentType;

typedef Activex::TOleEnum WdKana;

typedef Activex::TOleEnum WdCharacterWidth;

typedef Activex::TOleEnum WdNumberStyleWordBasicBiDi;

typedef Activex::TOleEnum WdTCSCConverterDirection;

typedef Activex::TOleEnum WdDisableFeaturesIntroducedAfter;

typedef Activex::TOleEnum WdWrapTypeMerged;

typedef Activex::TOleEnum WdRecoveryType;

typedef Activex::TOleEnum WdLineEndingType;

typedef Activex::TOleEnum WdStyleSheetLinkType;

typedef Activex::TOleEnum WdStyleSheetPrecedence;

typedef Activex::TOleEnum WdEmailHTMLFidelity;

typedef Activex::TOleEnum WdMailMergeMailFormat;

typedef Activex::TOleEnum WdMappedDataFields;

typedef Activex::TOleEnum WdConditionCode;

typedef Activex::TOleEnum WdCompareTarget;

typedef Activex::TOleEnum WdMergeTarget;

typedef Activex::TOleEnum WdUseFormattingFrom;

typedef Activex::TOleEnum WdRevisionsView;

typedef Activex::TOleEnum WdRevisionsMode;

typedef Activex::TOleEnum WdRevisionsBalloonWidthType;

typedef Activex::TOleEnum WdRevisionsBalloonPrintOrientation;

typedef Activex::TOleEnum WdRevisionsBalloonMargin;

typedef Activex::TOleEnum WdTaskPanes;

typedef Activex::TOleEnum WdShowFilter;

typedef Activex::TOleEnum WdMergeSubType;

typedef Activex::TOleEnum WdDocumentDirection;

typedef Activex::TOleEnum WdLanguageID2000;

__interface _Document;
typedef System::DelphiInterface<_Document> _di__Document;
typedef _Document Document;
;

typedef _Document WordDocument;
;

__interface _Font;
typedef System::DelphiInterface<_Font> _di__Font;
typedef _Font WordFont;
;

__interface _ParagraphFormat;
typedef System::DelphiInterface<_ParagraphFormat> _di__ParagraphFormat;
typedef _ParagraphFormat WordParagraphFormat;
;

__interface _OLEControl;
typedef System::DelphiInterface<_OLEControl> _di__OLEControl;
typedef _OLEControl WordOLEControl;
;

__interface _LetterContent;
typedef System::DelphiInterface<_LetterContent> _di__LetterContent;
typedef _LetterContent WordLetterContent;
;

__interface _Application;
typedef System::DelphiInterface<_Application> _di__Application;
typedef _Application WordApplication;
;

typedef _Font Font;
;

typedef _ParagraphFormat ParagraphFormat;
;

typedef _OLEControl OLEControl;
;

typedef _LetterContent LetterContent;
;

typedef _Application Application_;
;

__interface Window;
typedef System::DelphiInterface<Window> _di_Window;
typedef Window Window_;
;

typedef OleVariant *POleVariant1;

typedef Activex::PSafeArray *PPSafeArray1;

typedef Word *PWordBool1;

typedef GUID *PUserType1;

typedef Shortint *PShortint1;

typedef PShortint1 *PPShortint1;

typedef GUID *PUserType2;

typedef int *PSYSINT1;

__interface Documents;
typedef System::DelphiInterface<Documents> _di_Documents;
__interface Windows;
typedef System::DelphiInterface<Windows> _di_Windows;
__interface Selection;
typedef System::DelphiInterface<Selection> _di_Selection;
__interface RecentFiles;
typedef System::DelphiInterface<RecentFiles> _di_RecentFiles;
__interface Template;
typedef System::DelphiInterface<Template> _di_Template;
__interface system;
typedef System::DelphiInterface<system> _di_system;
__interface AutoCorrect;
typedef System::DelphiInterface<AutoCorrect> _di_AutoCorrect;
__interface FontNames;
typedef System::DelphiInterface<FontNames> _di_FontNames;
__interface Languages;
typedef System::DelphiInterface<Languages> _di_Languages;
__interface Browser;
typedef System::DelphiInterface<Browser> _di_Browser;
__interface FileConverters;
typedef System::DelphiInterface<FileConverters> _di_FileConverters;
__interface MailingLabel;
typedef System::DelphiInterface<MailingLabel> _di_MailingLabel;
__interface Dialogs;
typedef System::DelphiInterface<Dialogs> _di_Dialogs;
__interface CaptionLabels;
typedef System::DelphiInterface<CaptionLabels> _di_CaptionLabels;
__interface AutoCaptions;
typedef System::DelphiInterface<AutoCaptions> _di_AutoCaptions;
__interface AddIns;
typedef System::DelphiInterface<AddIns> _di_AddIns;
__interface Tasks;
typedef System::DelphiInterface<Tasks> _di_Tasks;
__interface SynonymInfo;
typedef System::DelphiInterface<SynonymInfo> _di_SynonymInfo;
__interface ListGalleries;
typedef System::DelphiInterface<ListGalleries> _di_ListGalleries;
__interface Templates;
typedef System::DelphiInterface<Templates> _di_Templates;
__interface KeyBindings;
typedef System::DelphiInterface<KeyBindings> _di_KeyBindings;
__interface KeysBoundTo;
typedef System::DelphiInterface<KeysBoundTo> _di_KeysBoundTo;
__interface KeyBinding;
typedef System::DelphiInterface<KeyBinding> _di_KeyBinding;
__interface Options;
typedef System::DelphiInterface<Options> _di_Options;
__interface Dictionaries;
typedef System::DelphiInterface<Dictionaries> _di_Dictionaries;
__interface HangulHanjaConversionDictionaries;
typedef System::DelphiInterface<HangulHanjaConversionDictionaries> _di_HangulHanjaConversionDictionaries;
__interface MailMessage;
typedef System::DelphiInterface<MailMessage> _di_MailMessage;
__interface SpellingSuggestions;
typedef System::DelphiInterface<SpellingSuggestions> _di_SpellingSuggestions;
__interface DefaultWebOptions;
typedef System::DelphiInterface<DefaultWebOptions> _di_DefaultWebOptions;
__interface EmailOptions;
typedef System::DelphiInterface<EmailOptions> _di_EmailOptions;
__interface TaskPanes;
typedef System::DelphiInterface<TaskPanes> _di_TaskPanes;
__interface INTERFACE_UUID("{00020970-0000-0000-C000-000000000046}") _Application  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Get_Documents(_di_Documents &Get_Documents_result) = 0 ;
	virtual HRESULT __safecall Get_Windows(_di_Windows &Get_Windows_result) = 0 ;
	virtual HRESULT __safecall Get_ActiveDocument(_di__Document &Get_ActiveDocument_result) = 0 ;
	virtual HRESULT __safecall Get_ActiveWindow(_di_Window &Get_ActiveWindow_result) = 0 ;
	virtual HRESULT __safecall Get_Selection(_di_Selection &Get_Selection_result) = 0 ;
	virtual HRESULT __safecall Get_WordBasic(_di_IDispatch &Get_WordBasic_result) = 0 ;
	virtual HRESULT __safecall Get_RecentFiles(_di_RecentFiles &Get_RecentFiles_result) = 0 ;
	virtual HRESULT __safecall Get_NormalTemplate(_di_Template &Get_NormalTemplate_result) = 0 ;
	virtual HRESULT __safecall Get_System_(_di_system &Get_System__result) = 0 ;
	virtual HRESULT __safecall Get_AutoCorrect(_di_AutoCorrect &Get_AutoCorrect_result) = 0 ;
	virtual HRESULT __safecall Get_FontNames(_di_FontNames &Get_FontNames_result) = 0 ;
	virtual HRESULT __safecall Get_LandscapeFontNames(_di_FontNames &Get_LandscapeFontNames_result) = 0 ;
	virtual HRESULT __safecall Get_PortraitFontNames(_di_FontNames &Get_PortraitFontNames_result) = 0 ;
	virtual HRESULT __safecall Get_Languages(_di_Languages &Get_Languages_result) = 0 ;
	virtual HRESULT __safecall Get_Assistant(Opofcxp::_di_Assistant &Get_Assistant_result) = 0 ;
	virtual HRESULT __safecall Get_Browser(_di_Browser &Get_Browser_result) = 0 ;
	virtual HRESULT __safecall Get_FileConverters(_di_FileConverters &Get_FileConverters_result) = 0 ;
	virtual HRESULT __safecall Get_MailingLabel(_di_MailingLabel &Get_MailingLabel_result) = 0 ;
	virtual HRESULT __safecall Get_Dialogs(_di_Dialogs &Get_Dialogs_result) = 0 ;
	virtual HRESULT __safecall Get_CaptionLabels(_di_CaptionLabels &Get_CaptionLabels_result) = 0 ;
	virtual HRESULT __safecall Get_AutoCaptions(_di_AutoCaptions &Get_AutoCaptions_result) = 0 ;
	virtual HRESULT __safecall Get_AddIns(_di_AddIns &Get_AddIns_result) = 0 ;
	virtual HRESULT __safecall Get_Visible(Word &Get_Visible_result) = 0 ;
	virtual HRESULT __safecall Set_Visible(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Version(WideString &Get_Version_result) = 0 ;
	virtual HRESULT __safecall Get_ScreenUpdating(Word &Get_ScreenUpdating_result) = 0 ;
	virtual HRESULT __safecall Set_ScreenUpdating(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PrintPreview(Word &Get_PrintPreview_result) = 0 ;
	virtual HRESULT __safecall Set_PrintPreview(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Tasks(_di_Tasks &Get_Tasks_result) = 0 ;
	virtual HRESULT __safecall Get_DisplayStatusBar(Word &Get_DisplayStatusBar_result) = 0 ;
	virtual HRESULT __safecall Set_DisplayStatusBar(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SpecialMode(Word &Get_SpecialMode_result) = 0 ;
	virtual HRESULT __safecall Get_UsableWidth(int &Get_UsableWidth_result) = 0 ;
	virtual HRESULT __safecall Get_UsableHeight(int &Get_UsableHeight_result) = 0 ;
	virtual HRESULT __safecall Get_MathCoprocessorAvailable(Word &Get_MathCoprocessorAvailable_result) = 0 ;
	virtual HRESULT __safecall Get_MouseAvailable(Word &Get_MouseAvailable_result) = 0 ;
	virtual HRESULT __safecall Get_International(Activex::TOleEnum Index, OleVariant &Get_International_result) = 0 ;
	virtual HRESULT __safecall Get_Build(WideString &Get_Build_result) = 0 ;
	virtual HRESULT __safecall Get_CapsLock(Word &Get_CapsLock_result) = 0 ;
	virtual HRESULT __safecall Get_NumLock(Word &Get_NumLock_result) = 0 ;
	virtual HRESULT __safecall Get_UserName(WideString &Get_UserName_result) = 0 ;
	virtual HRESULT __safecall Set_UserName(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_UserInitials(WideString &Get_UserInitials_result) = 0 ;
	virtual HRESULT __safecall Set_UserInitials(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_UserAddress(WideString &Get_UserAddress_result) = 0 ;
	virtual HRESULT __safecall Set_UserAddress(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_MacroContainer(_di_IDispatch &Get_MacroContainer_result) = 0 ;
	virtual HRESULT __safecall Get_DisplayRecentFiles(Word &Get_DisplayRecentFiles_result) = 0 ;
	virtual HRESULT __safecall Set_DisplayRecentFiles(Word prop) = 0 ;
	virtual HRESULT __safecall Get_CommandBars(Opofcxp::_di__CommandBars &Get_CommandBars_result) = 0 ;
	virtual HRESULT __safecall Get_SynonymInfo(const WideString Word, OleVariant &LanguageID, _di_SynonymInfo &Get_SynonymInfo_result) = 0 ;
	virtual HRESULT __safecall Get_VBE(Opvbidxp::_di_VBE &Get_VBE_result) = 0 ;
	virtual HRESULT __safecall Get_DefaultSaveFormat(WideString &Get_DefaultSaveFormat_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultSaveFormat(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_ListGalleries(_di_ListGalleries &Get_ListGalleries_result) = 0 ;
	virtual HRESULT __safecall Get_ActivePrinter(WideString &Get_ActivePrinter_result) = 0 ;
	virtual HRESULT __safecall Set_ActivePrinter(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Templates(_di_Templates &Get_Templates_result) = 0 ;
	virtual HRESULT __safecall Get_CustomizationContext(_di_IDispatch &Get_CustomizationContext_result) = 0 ;
	virtual HRESULT __safecall Set_CustomizationContext(const _di_IDispatch prop) = 0 ;
	virtual HRESULT __safecall Get_KeyBindings(_di_KeyBindings &Get_KeyBindings_result) = 0 ;
	virtual HRESULT __safecall Get_KeysBoundTo(Activex::TOleEnum KeyCategory, const WideString Command, OleVariant &CommandParameter, _di_KeysBoundTo &Get_KeysBoundTo_result) = 0 ;
	virtual HRESULT __safecall Get_FindKey(int KeyCode, OleVariant &KeyCode2, _di_KeyBinding &Get_FindKey_result) = 0 ;
	virtual HRESULT __safecall Get_Caption(WideString &Get_Caption_result) = 0 ;
	virtual HRESULT __safecall Set_Caption(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Path(WideString &Get_Path_result) = 0 ;
	virtual HRESULT __safecall Get_DisplayScrollBars(Word &Get_DisplayScrollBars_result) = 0 ;
	virtual HRESULT __safecall Set_DisplayScrollBars(Word prop) = 0 ;
	virtual HRESULT __safecall Get_StartupPath(WideString &Get_StartupPath_result) = 0 ;
	virtual HRESULT __safecall Set_StartupPath(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_BackgroundSavingStatus(int &Get_BackgroundSavingStatus_result) = 0 ;
	virtual HRESULT __safecall Get_BackgroundPrintingStatus(int &Get_BackgroundPrintingStatus_result) = 0 ;
	virtual HRESULT __safecall Get_Left(int &Get_Left_result) = 0 ;
	virtual HRESULT __safecall Set_Left(int prop) = 0 ;
	virtual HRESULT __safecall Get_Top(int &Get_Top_result) = 0 ;
	virtual HRESULT __safecall Set_Top(int prop) = 0 ;
	virtual HRESULT __safecall Get_Width(int &Get_Width_result) = 0 ;
	virtual HRESULT __safecall Set_Width(int prop) = 0 ;
	virtual HRESULT __safecall Get_Height(int &Get_Height_result) = 0 ;
	virtual HRESULT __safecall Set_Height(int prop) = 0 ;
	virtual HRESULT __safecall Get_WindowState(Activex::TOleEnum &Get_WindowState_result) = 0 ;
	virtual HRESULT __safecall Set_WindowState(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_DisplayAutoCompleteTips(Word &Get_DisplayAutoCompleteTips_result) = 0 ;
	virtual HRESULT __safecall Set_DisplayAutoCompleteTips(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Options(_di_Options &Get_Options_result) = 0 ;
	virtual HRESULT __safecall Get_DisplayAlerts(Activex::TOleEnum &Get_DisplayAlerts_result) = 0 ;
	virtual HRESULT __safecall Set_DisplayAlerts(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_CustomDictionaries(_di_Dictionaries &Get_CustomDictionaries_result) = 0 ;
	virtual HRESULT __safecall Get_PathSeparator(WideString &Get_PathSeparator_result) = 0 ;
	virtual HRESULT __safecall Set_StatusBar(const WideString Param1) = 0 ;
	virtual HRESULT __safecall Get_MAPIAvailable(Word &Get_MAPIAvailable_result) = 0 ;
	virtual HRESULT __safecall Get_DisplayScreenTips(Word &Get_DisplayScreenTips_result) = 0 ;
	virtual HRESULT __safecall Set_DisplayScreenTips(Word prop) = 0 ;
	virtual HRESULT __safecall Get_EnableCancelKey(Activex::TOleEnum &Get_EnableCancelKey_result) = 0 ;
	virtual HRESULT __safecall Set_EnableCancelKey(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_UserControl(Word &Get_UserControl_result) = 0 ;
	virtual HRESULT __safecall Get_FileSearch(Opofcxp::_di_FileSearch &Get_FileSearch_result) = 0 ;
	virtual HRESULT __safecall Get_MailSystem(Activex::TOleEnum &Get_MailSystem_result) = 0 ;
	virtual HRESULT __safecall Get_DefaultTableSeparator(WideString &Get_DefaultTableSeparator_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultTableSeparator(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_ShowVisualBasicEditor(Word &Get_ShowVisualBasicEditor_result) = 0 ;
	virtual HRESULT __safecall Set_ShowVisualBasicEditor(Word prop) = 0 ;
	virtual HRESULT __safecall Get_BrowseExtraFileTypes(WideString &Get_BrowseExtraFileTypes_result) = 0 ;
	virtual HRESULT __safecall Set_BrowseExtraFileTypes(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_IsObjectValid(const _di_IDispatch Object_, Word &Get_IsObjectValid_result) = 0 ;
	virtual HRESULT __safecall Get_HangulHanjaDictionaries(_di_HangulHanjaConversionDictionaries &Get_HangulHanjaDictionaries_result) = 0 ;
	virtual HRESULT __safecall Get_MailMessage(_di_MailMessage &Get_MailMessage_result) = 0 ;
	virtual HRESULT __safecall Get_FocusInMailHeader(Word &Get_FocusInMailHeader_result) = 0 ;
	virtual HRESULT __safecall Quit(OleVariant &SaveChanges, OleVariant &OriginalFormat, OleVariant &RouteDocument) = 0 ;
	virtual HRESULT __safecall ScreenRefresh(void) = 0 ;
	virtual HRESULT __safecall PrintOutOld(OleVariant &Background, OleVariant &Append, OleVariant &Range, OleVariant &OutputFileName, OleVariant &From, OleVariant &To_, OleVariant &Item, OleVariant &Copies, OleVariant &Pages, OleVariant &PageType, OleVariant &PrintToFile, OleVariant &Collate, OleVariant &FileName, OleVariant &ActivePrinterMacGX, OleVariant &ManualDuplexPrint) = 0 ;
	virtual HRESULT __safecall LookupNameProperties(const WideString Name) = 0 ;
	virtual HRESULT __safecall SubstituteFont(const WideString UnavailableFont, const WideString SubstituteFont) = 0 ;
	virtual HRESULT __safecall Repeat_(OleVariant &Times, Word &Repeat__result) = 0 ;
	virtual HRESULT __safecall DDEExecute(int Channel, const WideString Command) = 0 ;
	virtual HRESULT __safecall DDEInitiate(const WideString App, const WideString Topic, int &DDEInitiate_result) = 0 ;
	virtual HRESULT __safecall DDEPoke(int Channel, const WideString Item, const WideString Data) = 0 ;
	virtual HRESULT __safecall DDERequest(int Channel, const WideString Item, WideString &DDERequest_result) = 0 ;
	virtual HRESULT __safecall DDETerminate(int Channel) = 0 ;
	virtual HRESULT __safecall DDETerminateAll(void) = 0 ;
	virtual HRESULT __safecall BuildKeyCode(Activex::TOleEnum Arg1, OleVariant &Arg2, OleVariant &Arg3, OleVariant &Arg4, int &BuildKeyCode_result) = 0 ;
	virtual HRESULT __safecall KeyString(int KeyCode, OleVariant &KeyCode2, WideString &KeyString_result) = 0 ;
	virtual HRESULT __safecall OrganizerCopy(const WideString Source, const WideString Destination, const WideString Name, Activex::TOleEnum Object_) = 0 ;
	virtual HRESULT __safecall OrganizerDelete(const WideString Source, const WideString Name, Activex::TOleEnum Object_) = 0 ;
	virtual HRESULT __safecall OrganizerRename(const WideString Source, const WideString Name, const WideString NewName, Activex::TOleEnum Object_) = 0 ;
	virtual HRESULT __safecall AddAddress(Activex::PSafeArray &TagID, Activex::PSafeArray &Value) = 0 ;
	virtual HRESULT __safecall GetAddress(OleVariant &Name, OleVariant &AddressProperties, OleVariant &UseAutoText, OleVariant &DisplaySelectDialog, OleVariant &SelectDialog, OleVariant &CheckNamesDialog, OleVariant &RecentAddressesChoice, OleVariant &UpdateRecentAddresses, WideString &GetAddress_result) = 0 ;
	virtual HRESULT __safecall CheckGrammar(const WideString String_, Word &CheckGrammar_result) = 0 ;
	virtual HRESULT __safecall CheckSpelling(const WideString Word, OleVariant &CustomDictionary, OleVariant &IgnoreUppercase, OleVariant &MainDictionary, OleVariant &CustomDictionary2, OleVariant &CustomDictionary3, OleVariant &CustomDictionary4, OleVariant &CustomDictionary5, OleVariant &CustomDictionary6, OleVariant &CustomDictionary7, OleVariant &CustomDictionary8, OleVariant &CustomDictionary9, OleVariant &CustomDictionary10, Word &CheckSpelling_result) = 0 ;
	virtual HRESULT __safecall ResetIgnoreAll(void) = 0 ;
	virtual HRESULT __safecall GetSpellingSuggestions(const WideString Word, OleVariant &CustomDictionary, OleVariant &IgnoreUppercase, OleVariant &MainDictionary, OleVariant &SuggestionMode, OleVariant &CustomDictionary2, OleVariant &CustomDictionary3, OleVariant &CustomDictionary4, OleVariant &CustomDictionary5, OleVariant &CustomDictionary6, OleVariant &CustomDictionary7, OleVariant &CustomDictionary8, OleVariant &CustomDictionary9, OleVariant &CustomDictionary10, _di_SpellingSuggestions &GetSpellingSuggestions_result) = 0 ;
	virtual HRESULT __safecall GoBack(void) = 0 ;
	virtual HRESULT __safecall Help(OleVariant &HelpType) = 0 ;
	virtual HRESULT __safecall AutomaticChange(void) = 0 ;
	virtual HRESULT __safecall ShowMe(void) = 0 ;
	virtual HRESULT __safecall HelpTool(void) = 0 ;
	virtual HRESULT __safecall NewWindow(_di_Window &NewWindow_result) = 0 ;
	virtual HRESULT __safecall ListCommands(Word ListAllCommands) = 0 ;
	virtual HRESULT __safecall ShowClipboard(void) = 0 ;
	virtual HRESULT __safecall OnTime(OleVariant &When, const WideString Name, OleVariant &Tolerance) = 0 ;
	virtual HRESULT __safecall NextLetter(void) = 0 ;
	virtual HRESULT __safecall MountVolume(const WideString Zone, const WideString Server, const WideString Volume, OleVariant &User, OleVariant &UserPassword, OleVariant &VolumePassword, short &MountVolume_result) = 0 ;
	virtual HRESULT __safecall CleanString(const WideString String_, WideString &CleanString_result) = 0 ;
	virtual HRESULT __safecall SendFax(void) = 0 ;
	virtual HRESULT __safecall ChangeFileOpenDirectory(const WideString Path) = 0 ;
	virtual HRESULT __safecall RunOld(const WideString MacroName) = 0 ;
	virtual HRESULT __safecall GoForward(void) = 0 ;
	virtual HRESULT __safecall Move(int Left, int Top) = 0 ;
	virtual HRESULT __safecall Resize(int Width, int Height) = 0 ;
	virtual HRESULT __safecall InchesToPoints(float Inches, float &InchesToPoints_result) = 0 ;
	virtual HRESULT __safecall CentimetersToPoints(float Centimeters, float &CentimetersToPoints_result) = 0 ;
	virtual HRESULT __safecall MillimetersToPoints(float Millimeters, float &MillimetersToPoints_result) = 0 ;
	virtual HRESULT __safecall PicasToPoints(float Picas, float &PicasToPoints_result) = 0 ;
	virtual HRESULT __safecall LinesToPoints(float Lines, float &LinesToPoints_result) = 0 ;
	virtual HRESULT __safecall PointsToInches(float Points, float &PointsToInches_result) = 0 ;
	virtual HRESULT __safecall PointsToCentimeters(float Points, float &PointsToCentimeters_result) = 0 ;
	virtual HRESULT __safecall PointsToMillimeters(float Points, float &PointsToMillimeters_result) = 0 ;
	virtual HRESULT __safecall PointsToPicas(float Points, float &PointsToPicas_result) = 0 ;
	virtual HRESULT __safecall PointsToLines(float Points, float &PointsToLines_result) = 0 ;
	virtual HRESULT __safecall Activate(void) = 0 ;
	virtual HRESULT __safecall PointsToPixels(float Points, OleVariant &fVertical, float &PointsToPixels_result) = 0 ;
	virtual HRESULT __safecall PixelsToPoints(float Pixels, OleVariant &fVertical, float &PixelsToPoints_result) = 0 ;
	virtual HRESULT __safecall KeyboardLatin(void) = 0 ;
	virtual HRESULT __safecall KeyboardBidi(void) = 0 ;
	virtual HRESULT __safecall ToggleKeyboard(void) = 0 ;
	virtual HRESULT __safecall Keyboard(int LangId, int &Keyboard_result) = 0 ;
	virtual HRESULT __safecall ProductCode(WideString &ProductCode_result) = 0 ;
	virtual HRESULT __safecall DefaultWebOptions(_di_DefaultWebOptions &DefaultWebOptions_result) = 0 ;
	virtual HRESULT __safecall DiscussionSupport(OleVariant &Range, OleVariant &cid, OleVariant &piCSE) = 0 ;
	virtual HRESULT __safecall SetDefaultTheme(const WideString Name, Activex::TOleEnum DocumentType) = 0 ;
	virtual HRESULT __safecall GetDefaultTheme(Activex::TOleEnum DocumentType, WideString &GetDefaultTheme_result) = 0 ;
	virtual HRESULT __safecall Get_EmailOptions(_di_EmailOptions &Get_EmailOptions_result) = 0 ;
	virtual HRESULT __safecall Get_Language(Activex::TOleEnum &Get_Language_result) = 0 ;
	virtual HRESULT __safecall Get_COMAddIns(Opofcxp::_di_COMAddIns &Get_COMAddIns_result) = 0 ;
	virtual HRESULT __safecall Get_CheckLanguage(Word &Get_CheckLanguage_result) = 0 ;
	virtual HRESULT __safecall Set_CheckLanguage(Word prop) = 0 ;
	virtual HRESULT __safecall Get_LanguageSettings(Opofcxp::_di_LanguageSettings &Get_LanguageSettings_result) = 0 ;
	virtual HRESULT __safecall Get_Dummy1(Word &Get_Dummy1_result) = 0 ;
	virtual HRESULT __safecall Get_AnswerWizard(Opofcxp::_di_AnswerWizard &Get_AnswerWizard_result) = 0 ;
	virtual HRESULT __safecall Get_FeatureInstall(Activex::TOleEnum &Get_FeatureInstall_result) = 0 ;
	virtual HRESULT __safecall Set_FeatureInstall(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall PrintOut2000(OleVariant &Background, OleVariant &Append, OleVariant &Range, OleVariant &OutputFileName, OleVariant &From, OleVariant &To_, OleVariant &Item, OleVariant &Copies, OleVariant &Pages, OleVariant &PageType, OleVariant &PrintToFile, OleVariant &Collate, OleVariant &FileName, OleVariant &ActivePrinterMacGX, OleVariant &ManualDuplexPrint, OleVariant &PrintZoomColumn, OleVariant &PrintZoomRow, OleVariant &PrintZoomPaperWidth, OleVariant &PrintZoomPaperHeight) = 0 ;
	virtual HRESULT __safecall Run(const WideString MacroName, OleVariant &varg1, OleVariant &varg2, OleVariant &varg3, OleVariant &varg4, OleVariant &varg5, OleVariant &varg6, OleVariant &varg7, OleVariant &varg8, OleVariant &varg9, OleVariant &varg10, OleVariant &varg11, OleVariant &varg12, OleVariant &varg13, OleVariant &varg14, OleVariant &varg15, OleVariant &varg16, OleVariant &varg17, OleVariant &varg18, OleVariant &varg19, OleVariant &varg20, OleVariant &varg21, OleVariant &varg22, OleVariant &varg23, OleVariant &varg24, OleVariant &varg25, OleVariant &varg26, OleVariant &varg27, OleVariant &varg28, OleVariant &varg29, OleVariant &varg30, OleVariant &Run_result) = 0 ;
	virtual HRESULT __safecall PrintOut(OleVariant &Background, OleVariant &Append, OleVariant &Range, OleVariant &OutputFileName, OleVariant &From, OleVariant &To_, OleVariant &Item, OleVariant &Copies, OleVariant &Pages, OleVariant &PageType, OleVariant &PrintToFile, OleVariant &Collate, OleVariant &FileName, OleVariant &ActivePrinterMacGX, OleVariant &ManualDuplexPrint, OleVariant &PrintZoomColumn, OleVariant &PrintZoomRow, OleVariant &PrintZoomPaperWidth, OleVariant &PrintZoomPaperHeight) = 0 ;
	virtual HRESULT __safecall Get_AutomationSecurity(Activex::TOleEnum &Get_AutomationSecurity_result) = 0 ;
	virtual HRESULT __safecall Set_AutomationSecurity(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_FileDialog(Activex::TOleEnum FileDialogType, Opofcxp::_di_FileDialog &Get_FileDialog_result) = 0 ;
	virtual HRESULT __safecall Get_EmailTemplate(WideString &Get_EmailTemplate_result) = 0 ;
	virtual HRESULT __safecall Set_EmailTemplate(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_ShowWindowsInTaskbar(Word &Get_ShowWindowsInTaskbar_result) = 0 ;
	virtual HRESULT __safecall Set_ShowWindowsInTaskbar(Word prop) = 0 ;
	virtual HRESULT __safecall Get_NewDocument(Opofcxp::_di_NewFile &Get_NewDocument_result) = 0 ;
	virtual HRESULT __safecall Get_ShowStartupDialog(Word &Get_ShowStartupDialog_result) = 0 ;
	virtual HRESULT __safecall Set_ShowStartupDialog(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoCorrectEmail(_di_AutoCorrect &Get_AutoCorrectEmail_result) = 0 ;
	virtual HRESULT __safecall Get_TaskPanes(_di_TaskPanes &Get_TaskPanes_result) = 0 ;
	virtual HRESULT __safecall Get_DefaultLegalBlackline(Word &Get_DefaultLegalBlackline_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultLegalBlackline(Word prop) = 0 ;
	virtual HRESULT __safecall Dummy2(Word &Dummy2_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Documents _scw_Get_Documents() { _di_Documents r; HRESULT hr = Get_Documents(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Documents Documents = {read=_scw_Get_Documents};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Windows _scw_Get_Windows() { _di_Windows r; HRESULT hr = Get_Windows(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Windows Windows = {read=_scw_Get_Windows};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Document _scw_Get_ActiveDocument() { _di__Document r; HRESULT hr = Get_ActiveDocument(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Document ActiveDocument = {read=_scw_Get_ActiveDocument};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Window _scw_Get_ActiveWindow() { _di_Window r; HRESULT hr = Get_ActiveWindow(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Window ActiveWindow = {read=_scw_Get_ActiveWindow};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Selection _scw_Get_Selection() { _di_Selection r; HRESULT hr = Get_Selection(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Selection Selection = {read=_scw_Get_Selection};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_WordBasic() { _di_IDispatch r; HRESULT hr = Get_WordBasic(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch WordBasic = {read=_scw_Get_WordBasic};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_RecentFiles _scw_Get_RecentFiles() { _di_RecentFiles r; HRESULT hr = Get_RecentFiles(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_RecentFiles RecentFiles = {read=_scw_Get_RecentFiles};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Template _scw_Get_NormalTemplate() { _di_Template r; HRESULT hr = Get_NormalTemplate(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Template NormalTemplate = {read=_scw_Get_NormalTemplate};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_system _scw_Get_System_() { _di_system r; HRESULT hr = Get_System_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_system System_ = {read=_scw_Get_System_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_AutoCorrect _scw_Get_AutoCorrect() { _di_AutoCorrect r; HRESULT hr = Get_AutoCorrect(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_AutoCorrect AutoCorrect = {read=_scw_Get_AutoCorrect};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_FontNames _scw_Get_FontNames() { _di_FontNames r; HRESULT hr = Get_FontNames(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_FontNames FontNames = {read=_scw_Get_FontNames};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_FontNames _scw_Get_LandscapeFontNames() { _di_FontNames r; HRESULT hr = Get_LandscapeFontNames(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_FontNames LandscapeFontNames = {read=_scw_Get_LandscapeFontNames};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_FontNames _scw_Get_PortraitFontNames() { _di_FontNames r; HRESULT hr = Get_PortraitFontNames(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_FontNames PortraitFontNames = {read=_scw_Get_PortraitFontNames};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Languages _scw_Get_Languages() { _di_Languages r; HRESULT hr = Get_Languages(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Languages Languages = {read=_scw_Get_Languages};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Opofcxp::_di_Assistant _scw_Get_Assistant() { Opofcxp::_di_Assistant r; HRESULT hr = Get_Assistant(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Opofcxp::_di_Assistant Assistant = {read=_scw_Get_Assistant};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Browser _scw_Get_Browser() { _di_Browser r; HRESULT hr = Get_Browser(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Browser Browser = {read=_scw_Get_Browser};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_FileConverters _scw_Get_FileConverters() { _di_FileConverters r; HRESULT hr = Get_FileConverters(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_FileConverters FileConverters = {read=_scw_Get_FileConverters};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_MailingLabel _scw_Get_MailingLabel() { _di_MailingLabel r; HRESULT hr = Get_MailingLabel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_MailingLabel MailingLabel = {read=_scw_Get_MailingLabel};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Dialogs _scw_Get_Dialogs() { _di_Dialogs r; HRESULT hr = Get_Dialogs(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Dialogs Dialogs = {read=_scw_Get_Dialogs};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_CaptionLabels _scw_Get_CaptionLabels() { _di_CaptionLabels r; HRESULT hr = Get_CaptionLabels(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_CaptionLabels CaptionLabels = {read=_scw_Get_CaptionLabels};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_AutoCaptions _scw_Get_AutoCaptions() { _di_AutoCaptions r; HRESULT hr = Get_AutoCaptions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_AutoCaptions AutoCaptions = {read=_scw_Get_AutoCaptions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_AddIns _scw_Get_AddIns() { _di_AddIns r; HRESULT hr = Get_AddIns(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_AddIns AddIns = {read=_scw_Get_AddIns};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Visible() { Word r; HRESULT hr = Get_Visible(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Visible = {read=_scw_Get_Visible, write=Set_Visible};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Version() { WideString r; HRESULT hr = Get_Version(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Version = {read=_scw_Get_Version};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ScreenUpdating() { Word r; HRESULT hr = Get_ScreenUpdating(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ScreenUpdating = {read=_scw_Get_ScreenUpdating, write=Set_ScreenUpdating};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PrintPreview() { Word r; HRESULT hr = Get_PrintPreview(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PrintPreview = {read=_scw_Get_PrintPreview, write=Set_PrintPreview};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Tasks _scw_Get_Tasks() { _di_Tasks r; HRESULT hr = Get_Tasks(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Tasks Tasks = {read=_scw_Get_Tasks};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisplayStatusBar() { Word r; HRESULT hr = Get_DisplayStatusBar(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisplayStatusBar = {read=_scw_Get_DisplayStatusBar, write=Set_DisplayStatusBar};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SpecialMode() { Word r; HRESULT hr = Get_SpecialMode(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SpecialMode = {read=_scw_Get_SpecialMode};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_UsableWidth() { int r; HRESULT hr = Get_UsableWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int UsableWidth = {read=_scw_Get_UsableWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_UsableHeight() { int r; HRESULT hr = Get_UsableHeight(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int UsableHeight = {read=_scw_Get_UsableHeight};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MathCoprocessorAvailable() { Word r; HRESULT hr = Get_MathCoprocessorAvailable(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MathCoprocessorAvailable = {read=_scw_Get_MathCoprocessorAvailable};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MouseAvailable() { Word r; HRESULT hr = Get_MouseAvailable(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MouseAvailable = {read=_scw_Get_MouseAvailable};
	#pragma option push -w-inl
	/* safecall wrapper */ inline OleVariant _scw_Get_International(Activex::TOleEnum Index) { OleVariant r; HRESULT hr = Get_International(Index, r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property OleVariant International[Activex::TOleEnum Index] = {read=_scw_Get_International};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Build() { WideString r; HRESULT hr = Get_Build(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Build = {read=_scw_Get_Build};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_CapsLock() { Word r; HRESULT hr = Get_CapsLock(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word CapsLock = {read=_scw_Get_CapsLock};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_NumLock() { Word r; HRESULT hr = Get_NumLock(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word NumLock = {read=_scw_Get_NumLock};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_UserName() { WideString r; HRESULT hr = Get_UserName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString UserName = {read=_scw_Get_UserName, write=Set_UserName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_UserInitials() { WideString r; HRESULT hr = Get_UserInitials(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString UserInitials = {read=_scw_Get_UserInitials, write=Set_UserInitials};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_UserAddress() { WideString r; HRESULT hr = Get_UserAddress(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString UserAddress = {read=_scw_Get_UserAddress, write=Set_UserAddress};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_MacroContainer() { _di_IDispatch r; HRESULT hr = Get_MacroContainer(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch MacroContainer = {read=_scw_Get_MacroContainer};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisplayRecentFiles() { Word r; HRESULT hr = Get_DisplayRecentFiles(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisplayRecentFiles = {read=_scw_Get_DisplayRecentFiles, write=Set_DisplayRecentFiles};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Opofcxp::_di__CommandBars _scw_Get_CommandBars() { Opofcxp::_di__CommandBars r; HRESULT hr = Get_CommandBars(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Opofcxp::_di__CommandBars CommandBars = {read=_scw_Get_CommandBars};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_SynonymInfo _scw_Get_SynonymInfo(const WideString Word, OleVariant &LanguageID) { _di_SynonymInfo r; HRESULT hr = Get_SynonymInfo(Word, LanguageID, r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_SynonymInfo SynonymInfo[WideString Word][OleVariant LanguageID] = {read=_scw_Get_SynonymInfo};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Opvbidxp::_di_VBE _scw_Get_VBE() { Opvbidxp::_di_VBE r; HRESULT hr = Get_VBE(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Opvbidxp::_di_VBE VBE = {read=_scw_Get_VBE};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_DefaultSaveFormat() { WideString r; HRESULT hr = Get_DefaultSaveFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString DefaultSaveFormat = {read=_scw_Get_DefaultSaveFormat, write=Set_DefaultSaveFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ListGalleries _scw_Get_ListGalleries() { _di_ListGalleries r; HRESULT hr = Get_ListGalleries(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ListGalleries ListGalleries = {read=_scw_Get_ListGalleries};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ActivePrinter() { WideString r; HRESULT hr = Get_ActivePrinter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ActivePrinter = {read=_scw_Get_ActivePrinter, write=Set_ActivePrinter};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Templates _scw_Get_Templates() { _di_Templates r; HRESULT hr = Get_Templates(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Templates Templates = {read=_scw_Get_Templates};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_CustomizationContext() { _di_IDispatch r; HRESULT hr = Get_CustomizationContext(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch CustomizationContext = {read=_scw_Get_CustomizationContext, write=Set_CustomizationContext};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_KeyBindings _scw_Get_KeyBindings() { _di_KeyBindings r; HRESULT hr = Get_KeyBindings(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_KeyBindings KeyBindings = {read=_scw_Get_KeyBindings};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_KeysBoundTo _scw_Get_KeysBoundTo(Activex::TOleEnum KeyCategory, const WideString Command, OleVariant &CommandParameter) { _di_KeysBoundTo r; HRESULT hr = Get_KeysBoundTo(KeyCategory, Command, CommandParameter, r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_KeysBoundTo KeysBoundTo[Activex::TOleEnum KeyCategory][WideString Command][OleVariant CommandParameter] = {read=_scw_Get_KeysBoundTo};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_KeyBinding _scw_Get_FindKey(int KeyCode, OleVariant &KeyCode2) { _di_KeyBinding r; HRESULT hr = Get_FindKey(KeyCode, KeyCode2, r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_KeyBinding FindKey[int KeyCode][OleVariant KeyCode2] = {read=_scw_Get_FindKey};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Caption() { WideString r; HRESULT hr = Get_Caption(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Caption = {read=_scw_Get_Caption, write=Set_Caption};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Path() { WideString r; HRESULT hr = Get_Path(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Path = {read=_scw_Get_Path};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisplayScrollBars() { Word r; HRESULT hr = Get_DisplayScrollBars(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisplayScrollBars = {read=_scw_Get_DisplayScrollBars, write=Set_DisplayScrollBars};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_StartupPath() { WideString r; HRESULT hr = Get_StartupPath(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString StartupPath = {read=_scw_Get_StartupPath, write=Set_StartupPath};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_BackgroundSavingStatus() { int r; HRESULT hr = Get_BackgroundSavingStatus(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int BackgroundSavingStatus = {read=_scw_Get_BackgroundSavingStatus};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_BackgroundPrintingStatus() { int r; HRESULT hr = Get_BackgroundPrintingStatus(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int BackgroundPrintingStatus = {read=_scw_Get_BackgroundPrintingStatus};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Left() { int r; HRESULT hr = Get_Left(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Left = {read=_scw_Get_Left, write=Set_Left};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Top() { int r; HRESULT hr = Get_Top(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Top = {read=_scw_Get_Top, write=Set_Top};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Width() { int r; HRESULT hr = Get_Width(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Width = {read=_scw_Get_Width, write=Set_Width};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Height() { int r; HRESULT hr = Get_Height(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Height = {read=_scw_Get_Height, write=Set_Height};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_WindowState() { Activex::TOleEnum r; HRESULT hr = Get_WindowState(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum WindowState = {read=_scw_Get_WindowState, write=Set_WindowState};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisplayAutoCompleteTips() { Word r; HRESULT hr = Get_DisplayAutoCompleteTips(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisplayAutoCompleteTips = {read=_scw_Get_DisplayAutoCompleteTips, write=Set_DisplayAutoCompleteTips};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Options _scw_Get_Options() { _di_Options r; HRESULT hr = Get_Options(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Options Options = {read=_scw_Get_Options};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_DisplayAlerts() { Activex::TOleEnum r; HRESULT hr = Get_DisplayAlerts(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum DisplayAlerts = {read=_scw_Get_DisplayAlerts, write=Set_DisplayAlerts};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Dictionaries _scw_Get_CustomDictionaries() { _di_Dictionaries r; HRESULT hr = Get_CustomDictionaries(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Dictionaries CustomDictionaries = {read=_scw_Get_CustomDictionaries};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_PathSeparator() { WideString r; HRESULT hr = Get_PathSeparator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString PathSeparator = {read=_scw_Get_PathSeparator};
	__property WideString StatusBar = {write=Set_StatusBar};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MAPIAvailable() { Word r; HRESULT hr = Get_MAPIAvailable(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MAPIAvailable = {read=_scw_Get_MAPIAvailable};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisplayScreenTips() { Word r; HRESULT hr = Get_DisplayScreenTips(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisplayScreenTips = {read=_scw_Get_DisplayScreenTips, write=Set_DisplayScreenTips};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_EnableCancelKey() { Activex::TOleEnum r; HRESULT hr = Get_EnableCancelKey(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum EnableCancelKey = {read=_scw_Get_EnableCancelKey, write=Set_EnableCancelKey};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_UserControl() { Word r; HRESULT hr = Get_UserControl(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word UserControl = {read=_scw_Get_UserControl};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Opofcxp::_di_FileSearch _scw_Get_FileSearch() { Opofcxp::_di_FileSearch r; HRESULT hr = Get_FileSearch(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Opofcxp::_di_FileSearch FileSearch = {read=_scw_Get_FileSearch};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_MailSystem() { Activex::TOleEnum r; HRESULT hr = Get_MailSystem(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum MailSystem = {read=_scw_Get_MailSystem};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_DefaultTableSeparator() { WideString r; HRESULT hr = Get_DefaultTableSeparator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString DefaultTableSeparator = {read=_scw_Get_DefaultTableSeparator, write=Set_DefaultTableSeparator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowVisualBasicEditor() { Word r; HRESULT hr = Get_ShowVisualBasicEditor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowVisualBasicEditor = {read=_scw_Get_ShowVisualBasicEditor, write=Set_ShowVisualBasicEditor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_BrowseExtraFileTypes() { WideString r; HRESULT hr = Get_BrowseExtraFileTypes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString BrowseExtraFileTypes = {read=_scw_Get_BrowseExtraFileTypes, write=Set_BrowseExtraFileTypes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IsObjectValid(const _di_IDispatch Object_) { Word r; HRESULT hr = Get_IsObjectValid(Object_, r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IsObjectValid[_di_IDispatch Object_] = {read=_scw_Get_IsObjectValid};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_HangulHanjaConversionDictionaries _scw_Get_HangulHanjaDictionaries() { _di_HangulHanjaConversionDictionaries r; HRESULT hr = Get_HangulHanjaDictionaries(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_HangulHanjaConversionDictionaries HangulHanjaDictionaries = {read=_scw_Get_HangulHanjaDictionaries};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_MailMessage _scw_Get_MailMessage() { _di_MailMessage r; HRESULT hr = Get_MailMessage(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_MailMessage MailMessage = {read=_scw_Get_MailMessage};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_FocusInMailHeader() { Word r; HRESULT hr = Get_FocusInMailHeader(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word FocusInMailHeader = {read=_scw_Get_FocusInMailHeader};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_EmailOptions _scw_Get_EmailOptions() { _di_EmailOptions r; HRESULT hr = Get_EmailOptions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_EmailOptions EmailOptions = {read=_scw_Get_EmailOptions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Language() { Activex::TOleEnum r; HRESULT hr = Get_Language(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Language = {read=_scw_Get_Language};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Opofcxp::_di_COMAddIns _scw_Get_COMAddIns() { Opofcxp::_di_COMAddIns r; HRESULT hr = Get_COMAddIns(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Opofcxp::_di_COMAddIns COMAddIns = {read=_scw_Get_COMAddIns};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_CheckLanguage() { Word r; HRESULT hr = Get_CheckLanguage(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word CheckLanguage = {read=_scw_Get_CheckLanguage, write=Set_CheckLanguage};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Opofcxp::_di_LanguageSettings _scw_Get_LanguageSettings() { Opofcxp::_di_LanguageSettings r; HRESULT hr = Get_LanguageSettings(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Opofcxp::_di_LanguageSettings LanguageSettings = {read=_scw_Get_LanguageSettings};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Dummy1() { Word r; HRESULT hr = Get_Dummy1(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Dummy1 = {read=_scw_Get_Dummy1};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Opofcxp::_di_AnswerWizard _scw_Get_AnswerWizard() { Opofcxp::_di_AnswerWizard r; HRESULT hr = Get_AnswerWizard(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Opofcxp::_di_AnswerWizard AnswerWizard = {read=_scw_Get_AnswerWizard};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_FeatureInstall() { Activex::TOleEnum r; HRESULT hr = Get_FeatureInstall(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum FeatureInstall = {read=_scw_Get_FeatureInstall, write=Set_FeatureInstall};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_AutomationSecurity() { Activex::TOleEnum r; HRESULT hr = Get_AutomationSecurity(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum AutomationSecurity = {read=_scw_Get_AutomationSecurity, write=Set_AutomationSecurity};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Opofcxp::_di_FileDialog _scw_Get_FileDialog(Activex::TOleEnum FileDialogType) { Opofcxp::_di_FileDialog r; HRESULT hr = Get_FileDialog(FileDialogType, r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Opofcxp::_di_FileDialog FileDialog[Activex::TOleEnum FileDialogType] = {read=_scw_Get_FileDialog};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_EmailTemplate() { WideString r; HRESULT hr = Get_EmailTemplate(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString EmailTemplate = {read=_scw_Get_EmailTemplate, write=Set_EmailTemplate};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowWindowsInTaskbar() { Word r; HRESULT hr = Get_ShowWindowsInTaskbar(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowWindowsInTaskbar = {read=_scw_Get_ShowWindowsInTaskbar, write=Set_ShowWindowsInTaskbar};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Opofcxp::_di_NewFile _scw_Get_NewDocument() { Opofcxp::_di_NewFile r; HRESULT hr = Get_NewDocument(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Opofcxp::_di_NewFile NewDocument = {read=_scw_Get_NewDocument};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowStartupDialog() { Word r; HRESULT hr = Get_ShowStartupDialog(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowStartupDialog = {read=_scw_Get_ShowStartupDialog, write=Set_ShowStartupDialog};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_AutoCorrect _scw_Get_AutoCorrectEmail() { _di_AutoCorrect r; HRESULT hr = Get_AutoCorrectEmail(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_AutoCorrect AutoCorrectEmail = {read=_scw_Get_AutoCorrectEmail};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_TaskPanes _scw_Get_TaskPanes() { _di_TaskPanes r; HRESULT hr = Get_TaskPanes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_TaskPanes TaskPanes = {read=_scw_Get_TaskPanes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DefaultLegalBlackline() { Word r; HRESULT hr = Get_DefaultLegalBlackline(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DefaultLegalBlackline = {read=_scw_Get_DefaultLegalBlackline, write=Set_DefaultLegalBlackline};
};

__dispinterface _ApplicationDisp;
typedef System::DelphiInterface<_ApplicationDisp> _di__ApplicationDisp;
__dispinterface INTERFACE_UUID("{00020970-0000-0000-C000-000000000046}") _ApplicationDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002096F-0000-0000-C000-000000000046}") FontNames  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, WideString &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface FontNamesDisp;
typedef System::DelphiInterface<FontNamesDisp> _di_FontNamesDisp;
__dispinterface INTERFACE_UUID("{0002096F-0000-0000-C000-000000000046}") FontNamesDisp  : public IDispatch 
{
	
};

__interface Language;
typedef System::DelphiInterface<Language> _di_Language;
__interface INTERFACE_UUID("{0002096E-0000-0000-C000-000000000046}") Languages  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_Language &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface LanguagesDisp;
typedef System::DelphiInterface<LanguagesDisp> _di_LanguagesDisp;
__dispinterface INTERFACE_UUID("{0002096E-0000-0000-C000-000000000046}") LanguagesDisp  : public IDispatch 
{
	
};

__interface Dictionary;
typedef System::DelphiInterface<Dictionary> _di_Dictionary;
__interface INTERFACE_UUID("{0002096D-0000-0000-C000-000000000046}") Language  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_ID(Activex::TOleEnum &Get_ID_result) = 0 ;
	virtual HRESULT __safecall Get_NameLocal(WideString &Get_NameLocal_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Get_ActiveGrammarDictionary(_di_Dictionary &Get_ActiveGrammarDictionary_result) = 0 ;
	virtual HRESULT __safecall Get_ActiveHyphenationDictionary(_di_Dictionary &Get_ActiveHyphenationDictionary_result) = 0 ;
	virtual HRESULT __safecall Get_ActiveSpellingDictionary(_di_Dictionary &Get_ActiveSpellingDictionary_result) = 0 ;
	virtual HRESULT __safecall Get_ActiveThesaurusDictionary(_di_Dictionary &Get_ActiveThesaurusDictionary_result) = 0 ;
	virtual HRESULT __safecall Get_DefaultWritingStyle(WideString &Get_DefaultWritingStyle_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultWritingStyle(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_WritingStyleList(OleVariant &Get_WritingStyleList_result) = 0 ;
	virtual HRESULT __safecall Get_SpellingDictionaryType(Activex::TOleEnum &Get_SpellingDictionaryType_result) = 0 ;
	virtual HRESULT __safecall Set_SpellingDictionaryType(Activex::TOleEnum prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_ID() { Activex::TOleEnum r; HRESULT hr = Get_ID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum ID = {read=_scw_Get_ID};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_NameLocal() { WideString r; HRESULT hr = Get_NameLocal(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString NameLocal = {read=_scw_Get_NameLocal};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Dictionary _scw_Get_ActiveGrammarDictionary() { _di_Dictionary r; HRESULT hr = Get_ActiveGrammarDictionary(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Dictionary ActiveGrammarDictionary = {read=_scw_Get_ActiveGrammarDictionary};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Dictionary _scw_Get_ActiveHyphenationDictionary() { _di_Dictionary r; HRESULT hr = Get_ActiveHyphenationDictionary(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Dictionary ActiveHyphenationDictionary = {read=_scw_Get_ActiveHyphenationDictionary};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Dictionary _scw_Get_ActiveSpellingDictionary() { _di_Dictionary r; HRESULT hr = Get_ActiveSpellingDictionary(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Dictionary ActiveSpellingDictionary = {read=_scw_Get_ActiveSpellingDictionary};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Dictionary _scw_Get_ActiveThesaurusDictionary() { _di_Dictionary r; HRESULT hr = Get_ActiveThesaurusDictionary(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Dictionary ActiveThesaurusDictionary = {read=_scw_Get_ActiveThesaurusDictionary};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_DefaultWritingStyle() { WideString r; HRESULT hr = Get_DefaultWritingStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString DefaultWritingStyle = {read=_scw_Get_DefaultWritingStyle, write=Set_DefaultWritingStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline OleVariant _scw_Get_WritingStyleList() { OleVariant r; HRESULT hr = Get_WritingStyleList(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property OleVariant WritingStyleList = {read=_scw_Get_WritingStyleList};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_SpellingDictionaryType() { Activex::TOleEnum r; HRESULT hr = Get_SpellingDictionaryType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum SpellingDictionaryType = {read=_scw_Get_SpellingDictionaryType, write=Set_SpellingDictionaryType};
};

__dispinterface LanguageDisp;
typedef System::DelphiInterface<LanguageDisp> _di_LanguageDisp;
__dispinterface INTERFACE_UUID("{0002096D-0000-0000-C000-000000000046}") LanguageDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002096C-0000-0000-C000-000000000046}") Documents  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di__Document &Item_result) = 0 ;
	virtual HRESULT __safecall Close(OleVariant &SaveChanges, OleVariant &OriginalFormat, OleVariant &RouteDocument) = 0 ;
	virtual HRESULT __safecall AddOld(OleVariant &Template, OleVariant &NewTemplate, _di__Document &AddOld_result) = 0 ;
	virtual HRESULT __safecall OpenOld(OleVariant &FileName, OleVariant &ConfirmConversions, OleVariant &ReadOnly, OleVariant &AddToRecentFiles, OleVariant &PasswordDocument, OleVariant &PasswordTemplate, OleVariant &Revert, OleVariant &WritePasswordDocument, OleVariant &WritePasswordTemplate, OleVariant &Format, _di__Document &OpenOld_result) = 0 ;
	virtual HRESULT __safecall Save(OleVariant &NoPrompt, OleVariant &OriginalFormat) = 0 ;
	virtual HRESULT __safecall Add(OleVariant &Template, OleVariant &NewTemplate, OleVariant &DocumentType, OleVariant &Visible, _di__Document &Add_result) = 0 ;
	virtual HRESULT __safecall Open2000(OleVariant &FileName, OleVariant &ConfirmConversions, OleVariant &ReadOnly, OleVariant &AddToRecentFiles, OleVariant &PasswordDocument, OleVariant &PasswordTemplate, OleVariant &Revert, OleVariant &WritePasswordDocument, OleVariant &WritePasswordTemplate, OleVariant &Format, OleVariant &Encoding, OleVariant &Visible, _di__Document &Open2000_result) = 0 ;
	virtual HRESULT __safecall CheckOut(const WideString FileName) = 0 ;
	virtual HRESULT __safecall CanCheckOut(const WideString FileName, Word &CanCheckOut_result) = 0 ;
	virtual HRESULT __safecall Open(OleVariant &FileName, OleVariant &ConfirmConversions, OleVariant &ReadOnly, OleVariant &AddToRecentFiles, OleVariant &PasswordDocument, OleVariant &PasswordTemplate, OleVariant &Revert, OleVariant &WritePasswordDocument, OleVariant &WritePasswordTemplate, OleVariant &Format, OleVariant &Encoding, OleVariant &Visible, OleVariant &OpenAndRepair, OleVariant &DocumentDirection, OleVariant &NoEncodingDialog, _di__Document &Open_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface DocumentsDisp;
typedef System::DelphiInterface<DocumentsDisp> _di_DocumentsDisp;
__dispinterface INTERFACE_UUID("{0002096C-0000-0000-C000-000000000046}") DocumentsDisp  : public IDispatch 
{
	
};

__interface Bookmarks;
typedef System::DelphiInterface<Bookmarks> _di_Bookmarks;
__interface Tables;
typedef System::DelphiInterface<Tables> _di_Tables;
__interface Footnotes;
typedef System::DelphiInterface<Footnotes> _di_Footnotes;
__interface Endnotes;
typedef System::DelphiInterface<Endnotes> _di_Endnotes;
__interface Comments;
typedef System::DelphiInterface<Comments> _di_Comments;
__interface Sections;
typedef System::DelphiInterface<Sections> _di_Sections;
__interface Paragraphs;
typedef System::DelphiInterface<Paragraphs> _di_Paragraphs;
__interface Words;
typedef System::DelphiInterface<Words> _di_Words;
__interface Sentences;
typedef System::DelphiInterface<Sentences> _di_Sentences;
__interface Characters;
typedef System::DelphiInterface<Characters> _di_Characters;
__interface Fields;
typedef System::DelphiInterface<Fields> _di_Fields;
__interface FormFields;
typedef System::DelphiInterface<FormFields> _di_FormFields;
__interface Styles;
typedef System::DelphiInterface<Styles> _di_Styles;
__interface Frames;
typedef System::DelphiInterface<Frames> _di_Frames;
__interface TablesOfFigures;
typedef System::DelphiInterface<TablesOfFigures> _di_TablesOfFigures;
__interface Variables;
typedef System::DelphiInterface<Variables> _di_Variables;
__interface MailMerge;
typedef System::DelphiInterface<MailMerge> _di_MailMerge;
__interface Envelope;
typedef System::DelphiInterface<Envelope> _di_Envelope;
__interface Revisions;
typedef System::DelphiInterface<Revisions> _di_Revisions;
__interface TablesOfContents;
typedef System::DelphiInterface<TablesOfContents> _di_TablesOfContents;
__interface TablesOfAuthorities;
typedef System::DelphiInterface<TablesOfAuthorities> _di_TablesOfAuthorities;
__interface PageSetup;
typedef System::DelphiInterface<PageSetup> _di_PageSetup;
__interface RoutingSlip;
typedef System::DelphiInterface<RoutingSlip> _di_RoutingSlip;
__interface TablesOfAuthoritiesCategories;
typedef System::DelphiInterface<TablesOfAuthoritiesCategories> _di_TablesOfAuthoritiesCategories;
__interface Indexes;
typedef System::DelphiInterface<Indexes> _di_Indexes;
__interface Range;
typedef System::DelphiInterface<Range> _di_Range;
__interface Subdocuments;
typedef System::DelphiInterface<Subdocuments> _di_Subdocuments;
__interface StoryRanges;
typedef System::DelphiInterface<StoryRanges> _di_StoryRanges;
__interface Hyperlinks;
typedef System::DelphiInterface<Hyperlinks> _di_Hyperlinks;
__interface Shapes;
typedef System::DelphiInterface<Shapes> _di_Shapes;
__interface ListTemplates;
typedef System::DelphiInterface<ListTemplates> _di_ListTemplates;
__interface Lists;
typedef System::DelphiInterface<Lists> _di_Lists;
__interface InlineShapes;
typedef System::DelphiInterface<InlineShapes> _di_InlineShapes;
__interface Shape;
typedef System::DelphiInterface<Shape> _di_Shape;
__interface Versions;
typedef System::DelphiInterface<Versions> _di_Versions;
__interface ListParagraphs;
typedef System::DelphiInterface<ListParagraphs> _di_ListParagraphs;
__interface Mailer;
typedef System::DelphiInterface<Mailer> _di_Mailer;
__interface ReadabilityStatistics;
typedef System::DelphiInterface<ReadabilityStatistics> _di_ReadabilityStatistics;
__interface ProofreadingErrors;
typedef System::DelphiInterface<ProofreadingErrors> _di_ProofreadingErrors;
__interface Email;
typedef System::DelphiInterface<Email> _di_Email;
__interface Frameset;
typedef System::DelphiInterface<Frameset> _di_Frameset;
__interface WebOptions;
typedef System::DelphiInterface<WebOptions> _di_WebOptions;
__interface HTMLDivisions;
typedef System::DelphiInterface<HTMLDivisions> _di_HTMLDivisions;
__interface SmartTags;
typedef System::DelphiInterface<SmartTags> _di_SmartTags;
__interface StyleSheets;
typedef System::DelphiInterface<StyleSheets> _di_StyleSheets;
__interface INTERFACE_UUID("{0002096B-0000-0000-C000-000000000046}") _Document  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_BuiltInDocumentProperties(_di_IDispatch &Get_BuiltInDocumentProperties_result) = 0 ;
	virtual HRESULT __safecall Get_CustomDocumentProperties(_di_IDispatch &Get_CustomDocumentProperties_result) = 0 ;
	virtual HRESULT __safecall Get_Path(WideString &Get_Path_result) = 0 ;
	virtual HRESULT __safecall Get_Bookmarks(_di_Bookmarks &Get_Bookmarks_result) = 0 ;
	virtual HRESULT __safecall Get_Tables(_di_Tables &Get_Tables_result) = 0 ;
	virtual HRESULT __safecall Get_Footnotes(_di_Footnotes &Get_Footnotes_result) = 0 ;
	virtual HRESULT __safecall Get_Endnotes(_di_Endnotes &Get_Endnotes_result) = 0 ;
	virtual HRESULT __safecall Get_Comments(_di_Comments &Get_Comments_result) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Get_AutoHyphenation(Word &Get_AutoHyphenation_result) = 0 ;
	virtual HRESULT __safecall Set_AutoHyphenation(Word prop) = 0 ;
	virtual HRESULT __safecall Get_HyphenateCaps(Word &Get_HyphenateCaps_result) = 0 ;
	virtual HRESULT __safecall Set_HyphenateCaps(Word prop) = 0 ;
	virtual HRESULT __safecall Get_HyphenationZone(int &Get_HyphenationZone_result) = 0 ;
	virtual HRESULT __safecall Set_HyphenationZone(int prop) = 0 ;
	virtual HRESULT __safecall Get_ConsecutiveHyphensLimit(int &Get_ConsecutiveHyphensLimit_result) = 0 ;
	virtual HRESULT __safecall Set_ConsecutiveHyphensLimit(int prop) = 0 ;
	virtual HRESULT __safecall Get_Sections(_di_Sections &Get_Sections_result) = 0 ;
	virtual HRESULT __safecall Get_Paragraphs(_di_Paragraphs &Get_Paragraphs_result) = 0 ;
	virtual HRESULT __safecall Get_Words(_di_Words &Get_Words_result) = 0 ;
	virtual HRESULT __safecall Get_Sentences(_di_Sentences &Get_Sentences_result) = 0 ;
	virtual HRESULT __safecall Get_Characters(_di_Characters &Get_Characters_result) = 0 ;
	virtual HRESULT __safecall Get_Fields(_di_Fields &Get_Fields_result) = 0 ;
	virtual HRESULT __safecall Get_FormFields(_di_FormFields &Get_FormFields_result) = 0 ;
	virtual HRESULT __safecall Get_Styles(_di_Styles &Get_Styles_result) = 0 ;
	virtual HRESULT __safecall Get_Frames(_di_Frames &Get_Frames_result) = 0 ;
	virtual HRESULT __safecall Get_TablesOfFigures(_di_TablesOfFigures &Get_TablesOfFigures_result) = 0 ;
	virtual HRESULT __safecall Get_Variables(_di_Variables &Get_Variables_result) = 0 ;
	virtual HRESULT __safecall Get_MailMerge(_di_MailMerge &Get_MailMerge_result) = 0 ;
	virtual HRESULT __safecall Get_Envelope(_di_Envelope &Get_Envelope_result) = 0 ;
	virtual HRESULT __safecall Get_FullName(WideString &Get_FullName_result) = 0 ;
	virtual HRESULT __safecall Get_Revisions(_di_Revisions &Get_Revisions_result) = 0 ;
	virtual HRESULT __safecall Get_TablesOfContents(_di_TablesOfContents &Get_TablesOfContents_result) = 0 ;
	virtual HRESULT __safecall Get_TablesOfAuthorities(_di_TablesOfAuthorities &Get_TablesOfAuthorities_result) = 0 ;
	virtual HRESULT __safecall Get_PageSetup(_di_PageSetup &Get_PageSetup_result) = 0 ;
	virtual HRESULT __safecall Set_PageSetup(const _di_PageSetup prop) = 0 ;
	virtual HRESULT __safecall Get_Windows(_di_Windows &Get_Windows_result) = 0 ;
	virtual HRESULT __safecall Get_HasRoutingSlip(Word &Get_HasRoutingSlip_result) = 0 ;
	virtual HRESULT __safecall Set_HasRoutingSlip(Word prop) = 0 ;
	virtual HRESULT __safecall Get_RoutingSlip(_di_RoutingSlip &Get_RoutingSlip_result) = 0 ;
	virtual HRESULT __safecall Get_Routed(Word &Get_Routed_result) = 0 ;
	virtual HRESULT __safecall Get_TablesOfAuthoritiesCategories(_di_TablesOfAuthoritiesCategories &Get_TablesOfAuthoritiesCategories_result) = 0 ;
	virtual HRESULT __safecall Get_Indexes(_di_Indexes &Get_Indexes_result) = 0 ;
	virtual HRESULT __safecall Get_Saved(Word &Get_Saved_result) = 0 ;
	virtual HRESULT __safecall Set_Saved(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Content(_di_Range &Get_Content_result) = 0 ;
	virtual HRESULT __safecall Get_ActiveWindow(_di_Window &Get_ActiveWindow_result) = 0 ;
	virtual HRESULT __safecall Get_Kind(Activex::TOleEnum &Get_Kind_result) = 0 ;
	virtual HRESULT __safecall Set_Kind(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_ReadOnly(Word &Get_ReadOnly_result) = 0 ;
	virtual HRESULT __safecall Get_Subdocuments(_di_Subdocuments &Get_Subdocuments_result) = 0 ;
	virtual HRESULT __safecall Get_IsMasterDocument(Word &Get_IsMasterDocument_result) = 0 ;
	virtual HRESULT __safecall Get_DefaultTabStop(float &Get_DefaultTabStop_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultTabStop(float prop) = 0 ;
	virtual HRESULT __safecall Get_EmbedTrueTypeFonts(Word &Get_EmbedTrueTypeFonts_result) = 0 ;
	virtual HRESULT __safecall Set_EmbedTrueTypeFonts(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SaveFormsData(Word &Get_SaveFormsData_result) = 0 ;
	virtual HRESULT __safecall Set_SaveFormsData(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ReadOnlyRecommended(Word &Get_ReadOnlyRecommended_result) = 0 ;
	virtual HRESULT __safecall Set_ReadOnlyRecommended(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SaveSubsetFonts(Word &Get_SaveSubsetFonts_result) = 0 ;
	virtual HRESULT __safecall Set_SaveSubsetFonts(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Compatibility(Activex::TOleEnum Type_, Word &Get_Compatibility_result) = 0 ;
	virtual HRESULT __safecall Set_Compatibility(Activex::TOleEnum Type_, Word prop) = 0 ;
	virtual HRESULT __safecall Get_StoryRanges(_di_StoryRanges &Get_StoryRanges_result) = 0 ;
	virtual HRESULT __safecall Get_CommandBars(Opofcxp::_di__CommandBars &Get_CommandBars_result) = 0 ;
	virtual HRESULT __safecall Get_IsSubdocument(Word &Get_IsSubdocument_result) = 0 ;
	virtual HRESULT __safecall Get_SaveFormat(int &Get_SaveFormat_result) = 0 ;
	virtual HRESULT __safecall Get_ProtectionType(Activex::TOleEnum &Get_ProtectionType_result) = 0 ;
	virtual HRESULT __safecall Get_Hyperlinks(_di_Hyperlinks &Get_Hyperlinks_result) = 0 ;
	virtual HRESULT __safecall Get_Shapes(_di_Shapes &Get_Shapes_result) = 0 ;
	virtual HRESULT __safecall Get_ListTemplates(_di_ListTemplates &Get_ListTemplates_result) = 0 ;
	virtual HRESULT __safecall Get_Lists(_di_Lists &Get_Lists_result) = 0 ;
	virtual HRESULT __safecall Get_UpdateStylesOnOpen(Word &Get_UpdateStylesOnOpen_result) = 0 ;
	virtual HRESULT __safecall Set_UpdateStylesOnOpen(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AttachedTemplate(OleVariant &Get_AttachedTemplate_result) = 0 ;
	virtual HRESULT __safecall Set_AttachedTemplate(OleVariant &prop) = 0 ;
	virtual HRESULT __safecall Get_InlineShapes(_di_InlineShapes &Get_InlineShapes_result) = 0 ;
	virtual HRESULT __safecall Get_Background(_di_Shape &Get_Background_result) = 0 ;
	virtual HRESULT __safecall Set_Background(const _di_Shape prop) = 0 ;
	virtual HRESULT __safecall Get_GrammarChecked(Word &Get_GrammarChecked_result) = 0 ;
	virtual HRESULT __safecall Set_GrammarChecked(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SpellingChecked(Word &Get_SpellingChecked_result) = 0 ;
	virtual HRESULT __safecall Set_SpellingChecked(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowGrammaticalErrors(Word &Get_ShowGrammaticalErrors_result) = 0 ;
	virtual HRESULT __safecall Set_ShowGrammaticalErrors(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowSpellingErrors(Word &Get_ShowSpellingErrors_result) = 0 ;
	virtual HRESULT __safecall Set_ShowSpellingErrors(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Versions(_di_Versions &Get_Versions_result) = 0 ;
	virtual HRESULT __safecall Get_ShowSummary(Word &Get_ShowSummary_result) = 0 ;
	virtual HRESULT __safecall Set_ShowSummary(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SummaryViewMode(Activex::TOleEnum &Get_SummaryViewMode_result) = 0 ;
	virtual HRESULT __safecall Set_SummaryViewMode(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_SummaryLength(int &Get_SummaryLength_result) = 0 ;
	virtual HRESULT __safecall Set_SummaryLength(int prop) = 0 ;
	virtual HRESULT __safecall Get_PrintFractionalWidths(Word &Get_PrintFractionalWidths_result) = 0 ;
	virtual HRESULT __safecall Set_PrintFractionalWidths(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PrintPostScriptOverText(Word &Get_PrintPostScriptOverText_result) = 0 ;
	virtual HRESULT __safecall Set_PrintPostScriptOverText(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Container(_di_IDispatch &Get_Container_result) = 0 ;
	virtual HRESULT __safecall Get_PrintFormsData(Word &Get_PrintFormsData_result) = 0 ;
	virtual HRESULT __safecall Set_PrintFormsData(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ListParagraphs(_di_ListParagraphs &Get_ListParagraphs_result) = 0 ;
	virtual HRESULT __safecall Set_Password(const WideString Param1) = 0 ;
	virtual HRESULT __safecall Set_WritePassword(const WideString Param1) = 0 ;
	virtual HRESULT __safecall Get_HasPassword(Word &Get_HasPassword_result) = 0 ;
	virtual HRESULT __safecall Get_WriteReserved(Word &Get_WriteReserved_result) = 0 ;
	virtual HRESULT __safecall Get_ActiveWritingStyle(OleVariant &LanguageID, WideString &Get_ActiveWritingStyle_result) = 0 ;
	virtual HRESULT __safecall Set_ActiveWritingStyle(OleVariant &LanguageID, const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_UserControl(Word &Get_UserControl_result) = 0 ;
	virtual HRESULT __safecall Set_UserControl(Word prop) = 0 ;
	virtual HRESULT __safecall Get_HasMailer(Word &Get_HasMailer_result) = 0 ;
	virtual HRESULT __safecall Set_HasMailer(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Mailer(_di_Mailer &Get_Mailer_result) = 0 ;
	virtual HRESULT __safecall Get_ReadabilityStatistics(_di_ReadabilityStatistics &Get_ReadabilityStatistics_result) = 0 ;
	virtual HRESULT __safecall Get_GrammaticalErrors(_di_ProofreadingErrors &Get_GrammaticalErrors_result) = 0 ;
	virtual HRESULT __safecall Get_SpellingErrors(_di_ProofreadingErrors &Get_SpellingErrors_result) = 0 ;
	virtual HRESULT __safecall Get_VBProject(Opvbidxp::_di__VBProject &Get_VBProject_result) = 0 ;
	virtual HRESULT __safecall Get_FormsDesign(Word &Get_FormsDesign_result) = 0 ;
	virtual HRESULT __safecall Get__CodeName(WideString &Get__CodeName_result) = 0 ;
	virtual HRESULT __safecall Set__CodeName(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_CodeName(WideString &Get_CodeName_result) = 0 ;
	virtual HRESULT __safecall Get_SnapToGrid(Word &Get_SnapToGrid_result) = 0 ;
	virtual HRESULT __safecall Set_SnapToGrid(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SnapToShapes(Word &Get_SnapToShapes_result) = 0 ;
	virtual HRESULT __safecall Set_SnapToShapes(Word prop) = 0 ;
	virtual HRESULT __safecall Get_GridDistanceHorizontal(float &Get_GridDistanceHorizontal_result) = 0 ;
	virtual HRESULT __safecall Set_GridDistanceHorizontal(float prop) = 0 ;
	virtual HRESULT __safecall Get_GridDistanceVertical(float &Get_GridDistanceVertical_result) = 0 ;
	virtual HRESULT __safecall Set_GridDistanceVertical(float prop) = 0 ;
	virtual HRESULT __safecall Get_GridOriginHorizontal(float &Get_GridOriginHorizontal_result) = 0 ;
	virtual HRESULT __safecall Set_GridOriginHorizontal(float prop) = 0 ;
	virtual HRESULT __safecall Get_GridOriginVertical(float &Get_GridOriginVertical_result) = 0 ;
	virtual HRESULT __safecall Set_GridOriginVertical(float prop) = 0 ;
	virtual HRESULT __safecall Get_GridSpaceBetweenHorizontalLines(int &Get_GridSpaceBetweenHorizontalLines_result) = 0 ;
	virtual HRESULT __safecall Set_GridSpaceBetweenHorizontalLines(int prop) = 0 ;
	virtual HRESULT __safecall Get_GridSpaceBetweenVerticalLines(int &Get_GridSpaceBetweenVerticalLines_result) = 0 ;
	virtual HRESULT __safecall Set_GridSpaceBetweenVerticalLines(int prop) = 0 ;
	virtual HRESULT __safecall Get_GridOriginFromMargin(Word &Get_GridOriginFromMargin_result) = 0 ;
	virtual HRESULT __safecall Set_GridOriginFromMargin(Word prop) = 0 ;
	virtual HRESULT __safecall Get_KerningByAlgorithm(Word &Get_KerningByAlgorithm_result) = 0 ;
	virtual HRESULT __safecall Set_KerningByAlgorithm(Word prop) = 0 ;
	virtual HRESULT __safecall Get_JustificationMode(Activex::TOleEnum &Get_JustificationMode_result) = 0 ;
	virtual HRESULT __safecall Set_JustificationMode(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_FarEastLineBreakLevel(Activex::TOleEnum &Get_FarEastLineBreakLevel_result) = 0 ;
	virtual HRESULT __safecall Set_FarEastLineBreakLevel(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_NoLineBreakBefore(WideString &Get_NoLineBreakBefore_result) = 0 ;
	virtual HRESULT __safecall Set_NoLineBreakBefore(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_NoLineBreakAfter(WideString &Get_NoLineBreakAfter_result) = 0 ;
	virtual HRESULT __safecall Set_NoLineBreakAfter(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_TrackRevisions(Word &Get_TrackRevisions_result) = 0 ;
	virtual HRESULT __safecall Set_TrackRevisions(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PrintRevisions(Word &Get_PrintRevisions_result) = 0 ;
	virtual HRESULT __safecall Set_PrintRevisions(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowRevisions(Word &Get_ShowRevisions_result) = 0 ;
	virtual HRESULT __safecall Set_ShowRevisions(Word prop) = 0 ;
	virtual HRESULT __safecall Close(OleVariant &SaveChanges, OleVariant &OriginalFormat, OleVariant &RouteDocument) = 0 ;
	virtual HRESULT __safecall SaveAs2000(OleVariant &FileName, OleVariant &FileFormat, OleVariant &LockComments, OleVariant &Password, OleVariant &AddToRecentFiles, OleVariant &WritePassword, OleVariant &ReadOnlyRecommended, OleVariant &EmbedTrueTypeFonts, OleVariant &SaveNativePictureFormat, OleVariant &SaveFormsData, OleVariant &SaveAsAOCELetter) = 0 ;
	virtual HRESULT __safecall Repaginate(void) = 0 ;
	virtual HRESULT __safecall FitToPages(void) = 0 ;
	virtual HRESULT __safecall ManualHyphenation(void) = 0 ;
	virtual HRESULT __safecall Select(void) = 0 ;
	virtual HRESULT __safecall DataForm(void) = 0 ;
	virtual HRESULT __safecall Route(void) = 0 ;
	virtual HRESULT __safecall Save(void) = 0 ;
	virtual HRESULT __safecall PrintOutOld(OleVariant &Background, OleVariant &Append, OleVariant &Range, OleVariant &OutputFileName, OleVariant &From, OleVariant &To_, OleVariant &Item, OleVariant &Copies, OleVariant &Pages, OleVariant &PageType, OleVariant &PrintToFile, OleVariant &Collate, OleVariant &ActivePrinterMacGX, OleVariant &ManualDuplexPrint) = 0 ;
	virtual HRESULT __safecall SendMail(void) = 0 ;
	virtual HRESULT __safecall Range(OleVariant &Start, OleVariant &End_, _di_Range &Range_result) = 0 ;
	virtual HRESULT __safecall RunAutoMacro(Activex::TOleEnum Which) = 0 ;
	virtual HRESULT __safecall Activate(void) = 0 ;
	virtual HRESULT __safecall PrintPreview(void) = 0 ;
	virtual HRESULT __safecall GoTo_(OleVariant &What, OleVariant &Which, OleVariant &Count, OleVariant &Name, _di_Range &GoTo__result) = 0 ;
	virtual HRESULT __safecall Undo(OleVariant &Times, Word &Undo_result) = 0 ;
	virtual HRESULT __safecall Redo(OleVariant &Times, Word &Redo_result) = 0 ;
	virtual HRESULT __safecall ComputeStatistics(Activex::TOleEnum Statistic, OleVariant &IncludeFootnotesAndEndnotes, int &ComputeStatistics_result) = 0 ;
	virtual HRESULT __safecall MakeCompatibilityDefault(void) = 0 ;
	virtual HRESULT __safecall Protect(Activex::TOleEnum Type_, OleVariant &NoReset, OleVariant &Password) = 0 ;
	virtual HRESULT __safecall Unprotect(OleVariant &Password) = 0 ;
	virtual HRESULT __safecall EditionOptions(Activex::TOleEnum Type_, Activex::TOleEnum Option, const WideString Name, OleVariant &Format) = 0 ;
	virtual HRESULT __safecall RunLetterWizard(OleVariant &LetterContent, OleVariant &WizardMode) = 0 ;
	virtual HRESULT __safecall GetLetterContent(_di__LetterContent &GetLetterContent_result) = 0 ;
	virtual HRESULT __safecall SetLetterContent(OleVariant &LetterContent) = 0 ;
	virtual HRESULT __safecall CopyStylesFromTemplate(const WideString Template) = 0 ;
	virtual HRESULT __safecall UpdateStyles(void) = 0 ;
	virtual HRESULT __safecall CheckGrammar(void) = 0 ;
	virtual HRESULT __safecall CheckSpelling(OleVariant &CustomDictionary, OleVariant &IgnoreUppercase, OleVariant &AlwaysSuggest, OleVariant &CustomDictionary2, OleVariant &CustomDictionary3, OleVariant &CustomDictionary4, OleVariant &CustomDictionary5, OleVariant &CustomDictionary6, OleVariant &CustomDictionary7, OleVariant &CustomDictionary8, OleVariant &CustomDictionary9, OleVariant &CustomDictionary10) = 0 ;
	virtual HRESULT __safecall FollowHyperlink(OleVariant &Address, OleVariant &SubAddress, OleVariant &NewWindow, OleVariant &AddHistory, OleVariant &ExtraInfo, OleVariant &Method, OleVariant &HeaderInfo) = 0 ;
	virtual HRESULT __safecall AddToFavorites(void) = 0 ;
	virtual HRESULT __safecall Reload(void) = 0 ;
	virtual HRESULT __safecall AutoSummarize(OleVariant &Length, OleVariant &Mode, OleVariant &UpdateProperties, _di_Range &AutoSummarize_result) = 0 ;
	virtual HRESULT __safecall RemoveNumbers(OleVariant &NumberType) = 0 ;
	virtual HRESULT __safecall ConvertNumbersToText(OleVariant &NumberType) = 0 ;
	virtual HRESULT __safecall CountNumberedItems(OleVariant &NumberType, OleVariant &Level, int &CountNumberedItems_result) = 0 ;
	virtual HRESULT __safecall Post(void) = 0 ;
	virtual HRESULT __safecall ToggleFormsDesign(void) = 0 ;
	virtual HRESULT __safecall Compare2000(const WideString Name) = 0 ;
	virtual HRESULT __safecall UpdateSummaryProperties(void) = 0 ;
	virtual HRESULT __safecall GetCrossReferenceItems(OleVariant &ReferenceType, OleVariant &GetCrossReferenceItems_result) = 0 ;
	virtual HRESULT __safecall AutoFormat(void) = 0 ;
	virtual HRESULT __safecall ViewCode(void) = 0 ;
	virtual HRESULT __safecall ViewPropertyBrowser(void) = 0 ;
	virtual HRESULT __safecall ForwardMailer(void) = 0 ;
	virtual HRESULT __safecall Reply(void) = 0 ;
	virtual HRESULT __safecall ReplyAll(void) = 0 ;
	virtual HRESULT __safecall SendMailer(OleVariant &FileFormat, OleVariant &Priority) = 0 ;
	virtual HRESULT __safecall UndoClear(void) = 0 ;
	virtual HRESULT __safecall PresentIt(void) = 0 ;
	virtual HRESULT __safecall SendFax(const WideString Address, OleVariant &Subject) = 0 ;
	virtual HRESULT __safecall Merge2000(const WideString FileName) = 0 ;
	virtual HRESULT __safecall ClosePrintPreview(void) = 0 ;
	virtual HRESULT __safecall CheckConsistency(void) = 0 ;
	virtual HRESULT __safecall CreateLetterContent(const WideString DateFormat, Word IncludeHeaderFooter, const WideString PageDesign, Activex::TOleEnum LetterStyle, Word Letterhead, Activex::TOleEnum LetterheadLocation, float LetterheadSize, const WideString RecipientName, const WideString RecipientAddress, const WideString Salutation, Activex::TOleEnum SalutationType, const WideString RecipientReference, const WideString MailingInstructions, const WideString AttentionLine, const WideString Subject, const WideString CCList, const WideString ReturnAddress, const WideString SenderName, const WideString Closing, const WideString SenderCompany, const WideString SenderJobTitle, const WideString SenderInitials, int EnclosureNumber, OleVariant &InfoBlock, OleVariant &RecipientCode, OleVariant &RecipientGender, OleVariant &ReturnAddressShortForm, OleVariant &SenderCity, OleVariant &SenderCode, OleVariant &SenderGender, OleVariant &SenderReference, _di__LetterContent &CreateLetterContent_result) = 0 ;
	virtual HRESULT __safecall AcceptAllRevisions(void) = 0 ;
	virtual HRESULT __safecall RejectAllRevisions(void) = 0 ;
	virtual HRESULT __safecall DetectLanguage(void) = 0 ;
	virtual HRESULT __safecall ApplyTheme(const WideString Name) = 0 ;
	virtual HRESULT __safecall RemoveTheme(void) = 0 ;
	virtual HRESULT __safecall WebPagePreview(void) = 0 ;
	virtual HRESULT __safecall ReloadAs(Activex::TOleEnum Encoding) = 0 ;
	virtual HRESULT __safecall Get_ActiveTheme(WideString &Get_ActiveTheme_result) = 0 ;
	virtual HRESULT __safecall Get_ActiveThemeDisplayName(WideString &Get_ActiveThemeDisplayName_result) = 0 ;
	virtual HRESULT __safecall Get_Email(_di_Email &Get_Email_result) = 0 ;
	virtual HRESULT __safecall Get_Scripts(Opofcxp::_di_Scripts &Get_Scripts_result) = 0 ;
	virtual HRESULT __safecall Get_LanguageDetected(Word &Get_LanguageDetected_result) = 0 ;
	virtual HRESULT __safecall Set_LanguageDetected(Word prop) = 0 ;
	virtual HRESULT __safecall Get_FarEastLineBreakLanguage(Activex::TOleEnum &Get_FarEastLineBreakLanguage_result) = 0 ;
	virtual HRESULT __safecall Set_FarEastLineBreakLanguage(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Frameset(_di_Frameset &Get_Frameset_result) = 0 ;
	virtual HRESULT __safecall Get_ClickAndTypeParagraphStyle(OleVariant &Get_ClickAndTypeParagraphStyle_result) = 0 ;
	virtual HRESULT __safecall Set_ClickAndTypeParagraphStyle(OleVariant &prop) = 0 ;
	virtual HRESULT __safecall Get_HTMLProject(Opofcxp::_di_HTMLProject &Get_HTMLProject_result) = 0 ;
	virtual HRESULT __safecall Get_WebOptions(_di_WebOptions &Get_WebOptions_result) = 0 ;
	virtual HRESULT __safecall Get_OpenEncoding(Activex::TOleEnum &Get_OpenEncoding_result) = 0 ;
	virtual HRESULT __safecall Get_SaveEncoding(Activex::TOleEnum &Get_SaveEncoding_result) = 0 ;
	virtual HRESULT __safecall Set_SaveEncoding(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_OptimizeForWord97(Word &Get_OptimizeForWord97_result) = 0 ;
	virtual HRESULT __safecall Set_OptimizeForWord97(Word prop) = 0 ;
	virtual HRESULT __safecall Get_VBASigned(Word &Get_VBASigned_result) = 0 ;
	virtual HRESULT __safecall PrintOut2000(OleVariant &Background, OleVariant &Append, OleVariant &Range, OleVariant &OutputFileName, OleVariant &From, OleVariant &To_, OleVariant &Item, OleVariant &Copies, OleVariant &Pages, OleVariant &PageType, OleVariant &PrintToFile, OleVariant &Collate, OleVariant &ActivePrinterMacGX, OleVariant &ManualDuplexPrint, OleVariant &PrintZoomColumn, OleVariant &PrintZoomRow, OleVariant &PrintZoomPaperWidth, OleVariant &PrintZoomPaperHeight) = 0 ;
	virtual HRESULT __safecall sblt(const WideString s) = 0 ;
	virtual HRESULT __safecall ConvertVietDoc(int CodePageOrigin) = 0 ;
	virtual HRESULT __safecall PrintOut(OleVariant &Background, OleVariant &Append, OleVariant &Range, OleVariant &OutputFileName, OleVariant &From, OleVariant &To_, OleVariant &Item, OleVariant &Copies, OleVariant &Pages, OleVariant &PageType, OleVariant &PrintToFile, OleVariant &Collate, OleVariant &ActivePrinterMacGX, OleVariant &ManualDuplexPrint, OleVariant &PrintZoomColumn, OleVariant &PrintZoomRow, OleVariant &PrintZoomPaperWidth, OleVariant &PrintZoomPaperHeight) = 0 ;
	virtual HRESULT __safecall Get_MailEnvelope(Opofcxp::_di_IMsoEnvelopeVB &Get_MailEnvelope_result) = 0 ;
	virtual HRESULT __safecall Get_DisableFeatures(Word &Get_DisableFeatures_result) = 0 ;
	virtual HRESULT __safecall Set_DisableFeatures(Word prop) = 0 ;
	virtual HRESULT __safecall Get_DoNotEmbedSystemFonts(Word &Get_DoNotEmbedSystemFonts_result) = 0 ;
	virtual HRESULT __safecall Set_DoNotEmbedSystemFonts(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Signatures(Opofcxp::_di_SignatureSet &Get_Signatures_result) = 0 ;
	virtual HRESULT __safecall Get_DefaultTargetFrame(WideString &Get_DefaultTargetFrame_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultTargetFrame(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_HTMLDivisions(_di_HTMLDivisions &Get_HTMLDivisions_result) = 0 ;
	virtual HRESULT __safecall Get_DisableFeaturesIntroducedAfter(Activex::TOleEnum &Get_DisableFeaturesIntroducedAfter_result) = 0 ;
	virtual HRESULT __safecall Set_DisableFeaturesIntroducedAfter(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_RemovePersonalInformation(Word &Get_RemovePersonalInformation_result) = 0 ;
	virtual HRESULT __safecall Set_RemovePersonalInformation(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SmartTags(_di_SmartTags &Get_SmartTags_result) = 0 ;
	virtual HRESULT __safecall Compare(const WideString Name, OleVariant &AuthorName, OleVariant &CompareTarget, OleVariant &DetectFormatChanges, OleVariant &IgnoreAllComparisonWarnings, OleVariant &AddToRecentFiles) = 0 ;
	virtual HRESULT __safecall CheckIn(Word SaveChanges, OleVariant &Comments, Word MakePublic) = 0 ;
	virtual HRESULT __safecall CanCheckin(Word &CanCheckin_result) = 0 ;
	virtual HRESULT __safecall Merge(const WideString FileName, OleVariant &MergeTarget, OleVariant &DetectFormatChanges, OleVariant &UseFormattingFrom, OleVariant &AddToRecentFiles) = 0 ;
	virtual HRESULT __safecall Get_EmbedSmartTags(Word &Get_EmbedSmartTags_result) = 0 ;
	virtual HRESULT __safecall Set_EmbedSmartTags(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SmartTagsAsXMLProps(Word &Get_SmartTagsAsXMLProps_result) = 0 ;
	virtual HRESULT __safecall Set_SmartTagsAsXMLProps(Word prop) = 0 ;
	virtual HRESULT __safecall Get_TextEncoding(Activex::TOleEnum &Get_TextEncoding_result) = 0 ;
	virtual HRESULT __safecall Set_TextEncoding(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_TextLineEnding(Activex::TOleEnum &Get_TextLineEnding_result) = 0 ;
	virtual HRESULT __safecall Set_TextLineEnding(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall SendForReview(OleVariant &Recipients, OleVariant &Subject, OleVariant &ShowMessage, OleVariant &IncludeAttachment) = 0 ;
	virtual HRESULT __safecall ReplyWithChanges(OleVariant &ShowMessage) = 0 ;
	virtual HRESULT __safecall EndReview(void) = 0 ;
	virtual HRESULT __safecall Get_StyleSheets(_di_StyleSheets &Get_StyleSheets_result) = 0 ;
	virtual HRESULT __safecall Get_DefaultTableStyle(OleVariant &Get_DefaultTableStyle_result) = 0 ;
	virtual HRESULT __safecall Get_PasswordEncryptionProvider(WideString &Get_PasswordEncryptionProvider_result) = 0 ;
	virtual HRESULT __safecall Get_PasswordEncryptionAlgorithm(WideString &Get_PasswordEncryptionAlgorithm_result) = 0 ;
	virtual HRESULT __safecall Get_PasswordEncryptionKeyLength(int &Get_PasswordEncryptionKeyLength_result) = 0 ;
	virtual HRESULT __safecall Get_PasswordEncryptionFileProperties(Word &Get_PasswordEncryptionFileProperties_result) = 0 ;
	virtual HRESULT __safecall SetPasswordEncryptionOptions(const WideString PasswordEncryptionProvider, const WideString PasswordEncryptionAlgorithm, int PasswordEncryptionKeyLength, OleVariant &PasswordEncryptionFileProperties) = 0 ;
	virtual HRESULT __safecall RecheckSmartTags(void) = 0 ;
	virtual HRESULT __safecall RemoveSmartTags(void) = 0 ;
	virtual HRESULT __safecall SetDefaultTableStyle(OleVariant &Style, Word SetInTemplate) = 0 ;
	virtual HRESULT __safecall DeleteAllComments(void) = 0 ;
	virtual HRESULT __safecall AcceptAllRevisionsShown(void) = 0 ;
	virtual HRESULT __safecall RejectAllRevisionsShown(void) = 0 ;
	virtual HRESULT __safecall DeleteAllCommentsShown(void) = 0 ;
	virtual HRESULT __safecall ResetFormFields(void) = 0 ;
	virtual HRESULT __safecall SaveAs(OleVariant &FileName, OleVariant &FileFormat, OleVariant &LockComments, OleVariant &Password, OleVariant &AddToRecentFiles, OleVariant &WritePassword, OleVariant &ReadOnlyRecommended, OleVariant &EmbedTrueTypeFonts, OleVariant &SaveNativePictureFormat, OleVariant &SaveFormsData, OleVariant &SaveAsAOCELetter, OleVariant &Encoding, OleVariant &InsertLineBreaks, OleVariant &AllowSubstitutions, OleVariant &LineEnding, OleVariant &AddBiDiMarks) = 0 ;
	virtual HRESULT __safecall Get_EmbedLinguisticData(Word &Get_EmbedLinguisticData_result) = 0 ;
	virtual HRESULT __safecall Set_EmbedLinguisticData(Word prop) = 0 ;
	virtual HRESULT __safecall Get_FormattingShowFont(Word &Get_FormattingShowFont_result) = 0 ;
	virtual HRESULT __safecall Set_FormattingShowFont(Word prop) = 0 ;
	virtual HRESULT __safecall Get_FormattingShowClear(Word &Get_FormattingShowClear_result) = 0 ;
	virtual HRESULT __safecall Set_FormattingShowClear(Word prop) = 0 ;
	virtual HRESULT __safecall Get_FormattingShowParagraph(Word &Get_FormattingShowParagraph_result) = 0 ;
	virtual HRESULT __safecall Set_FormattingShowParagraph(Word prop) = 0 ;
	virtual HRESULT __safecall Get_FormattingShowNumbering(Word &Get_FormattingShowNumbering_result) = 0 ;
	virtual HRESULT __safecall Set_FormattingShowNumbering(Word prop) = 0 ;
	virtual HRESULT __safecall Get_FormattingShowFilter(Activex::TOleEnum &Get_FormattingShowFilter_result) = 0 ;
	virtual HRESULT __safecall Set_FormattingShowFilter(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall CheckNewSmartTags(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_BuiltInDocumentProperties() { _di_IDispatch r; HRESULT hr = Get_BuiltInDocumentProperties(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch BuiltInDocumentProperties = {read=_scw_Get_BuiltInDocumentProperties};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_CustomDocumentProperties() { _di_IDispatch r; HRESULT hr = Get_CustomDocumentProperties(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch CustomDocumentProperties = {read=_scw_Get_CustomDocumentProperties};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Path() { WideString r; HRESULT hr = Get_Path(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Path = {read=_scw_Get_Path};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Bookmarks _scw_Get_Bookmarks() { _di_Bookmarks r; HRESULT hr = Get_Bookmarks(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Bookmarks Bookmarks = {read=_scw_Get_Bookmarks};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Tables _scw_Get_Tables() { _di_Tables r; HRESULT hr = Get_Tables(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Tables Tables = {read=_scw_Get_Tables};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Footnotes _scw_Get_Footnotes() { _di_Footnotes r; HRESULT hr = Get_Footnotes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Footnotes Footnotes = {read=_scw_Get_Footnotes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Endnotes _scw_Get_Endnotes() { _di_Endnotes r; HRESULT hr = Get_Endnotes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Endnotes Endnotes = {read=_scw_Get_Endnotes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Comments _scw_Get_Comments() { _di_Comments r; HRESULT hr = Get_Comments(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Comments Comments = {read=_scw_Get_Comments};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoHyphenation() { Word r; HRESULT hr = Get_AutoHyphenation(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoHyphenation = {read=_scw_Get_AutoHyphenation, write=Set_AutoHyphenation};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_HyphenateCaps() { Word r; HRESULT hr = Get_HyphenateCaps(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word HyphenateCaps = {read=_scw_Get_HyphenateCaps, write=Set_HyphenateCaps};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_HyphenationZone() { int r; HRESULT hr = Get_HyphenationZone(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int HyphenationZone = {read=_scw_Get_HyphenationZone, write=Set_HyphenationZone};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_ConsecutiveHyphensLimit() { int r; HRESULT hr = Get_ConsecutiveHyphensLimit(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int ConsecutiveHyphensLimit = {read=_scw_Get_ConsecutiveHyphensLimit, write=Set_ConsecutiveHyphensLimit};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Sections _scw_Get_Sections() { _di_Sections r; HRESULT hr = Get_Sections(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Sections Sections = {read=_scw_Get_Sections};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Paragraphs _scw_Get_Paragraphs() { _di_Paragraphs r; HRESULT hr = Get_Paragraphs(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Paragraphs Paragraphs = {read=_scw_Get_Paragraphs};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Words _scw_Get_Words() { _di_Words r; HRESULT hr = Get_Words(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Words Words = {read=_scw_Get_Words};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Sentences _scw_Get_Sentences() { _di_Sentences r; HRESULT hr = Get_Sentences(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Sentences Sentences = {read=_scw_Get_Sentences};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Characters _scw_Get_Characters() { _di_Characters r; HRESULT hr = Get_Characters(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Characters Characters = {read=_scw_Get_Characters};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Fields _scw_Get_Fields() { _di_Fields r; HRESULT hr = Get_Fields(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Fields Fields = {read=_scw_Get_Fields};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_FormFields _scw_Get_FormFields() { _di_FormFields r; HRESULT hr = Get_FormFields(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_FormFields FormFields = {read=_scw_Get_FormFields};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Styles _scw_Get_Styles() { _di_Styles r; HRESULT hr = Get_Styles(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Styles Styles = {read=_scw_Get_Styles};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Frames _scw_Get_Frames() { _di_Frames r; HRESULT hr = Get_Frames(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Frames Frames = {read=_scw_Get_Frames};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_TablesOfFigures _scw_Get_TablesOfFigures() { _di_TablesOfFigures r; HRESULT hr = Get_TablesOfFigures(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_TablesOfFigures TablesOfFigures = {read=_scw_Get_TablesOfFigures};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Variables _scw_Get_Variables() { _di_Variables r; HRESULT hr = Get_Variables(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Variables Variables = {read=_scw_Get_Variables};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_MailMerge _scw_Get_MailMerge() { _di_MailMerge r; HRESULT hr = Get_MailMerge(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_MailMerge MailMerge = {read=_scw_Get_MailMerge};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Envelope _scw_Get_Envelope() { _di_Envelope r; HRESULT hr = Get_Envelope(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Envelope Envelope = {read=_scw_Get_Envelope};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_FullName() { WideString r; HRESULT hr = Get_FullName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString FullName = {read=_scw_Get_FullName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Revisions _scw_Get_Revisions() { _di_Revisions r; HRESULT hr = Get_Revisions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Revisions Revisions = {read=_scw_Get_Revisions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_TablesOfContents _scw_Get_TablesOfContents() { _di_TablesOfContents r; HRESULT hr = Get_TablesOfContents(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_TablesOfContents TablesOfContents = {read=_scw_Get_TablesOfContents};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_TablesOfAuthorities _scw_Get_TablesOfAuthorities() { _di_TablesOfAuthorities r; HRESULT hr = Get_TablesOfAuthorities(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_TablesOfAuthorities TablesOfAuthorities = {read=_scw_Get_TablesOfAuthorities};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_PageSetup _scw_Get_PageSetup() { _di_PageSetup r; HRESULT hr = Get_PageSetup(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_PageSetup PageSetup = {read=_scw_Get_PageSetup, write=Set_PageSetup};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Windows _scw_Get_Windows() { _di_Windows r; HRESULT hr = Get_Windows(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Windows Windows = {read=_scw_Get_Windows};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_HasRoutingSlip() { Word r; HRESULT hr = Get_HasRoutingSlip(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word HasRoutingSlip = {read=_scw_Get_HasRoutingSlip, write=Set_HasRoutingSlip};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_RoutingSlip _scw_Get_RoutingSlip() { _di_RoutingSlip r; HRESULT hr = Get_RoutingSlip(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_RoutingSlip RoutingSlip = {read=_scw_Get_RoutingSlip};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Routed() { Word r; HRESULT hr = Get_Routed(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Routed = {read=_scw_Get_Routed};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_TablesOfAuthoritiesCategories _scw_Get_TablesOfAuthoritiesCategories() { _di_TablesOfAuthoritiesCategories r; HRESULT hr = Get_TablesOfAuthoritiesCategories(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_TablesOfAuthoritiesCategories TablesOfAuthoritiesCategories = {read=_scw_Get_TablesOfAuthoritiesCategories};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Indexes _scw_Get_Indexes() { _di_Indexes r; HRESULT hr = Get_Indexes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Indexes Indexes = {read=_scw_Get_Indexes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Saved() { Word r; HRESULT hr = Get_Saved(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Saved = {read=_scw_Get_Saved, write=Set_Saved};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Content() { _di_Range r; HRESULT hr = Get_Content(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Content = {read=_scw_Get_Content};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Window _scw_Get_ActiveWindow() { _di_Window r; HRESULT hr = Get_ActiveWindow(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Window ActiveWindow = {read=_scw_Get_ActiveWindow};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Kind() { Activex::TOleEnum r; HRESULT hr = Get_Kind(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Kind = {read=_scw_Get_Kind, write=Set_Kind};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ReadOnly() { Word r; HRESULT hr = Get_ReadOnly(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ReadOnly = {read=_scw_Get_ReadOnly};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Subdocuments _scw_Get_Subdocuments() { _di_Subdocuments r; HRESULT hr = Get_Subdocuments(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Subdocuments Subdocuments = {read=_scw_Get_Subdocuments};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IsMasterDocument() { Word r; HRESULT hr = Get_IsMasterDocument(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IsMasterDocument = {read=_scw_Get_IsMasterDocument};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_DefaultTabStop() { float r; HRESULT hr = Get_DefaultTabStop(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float DefaultTabStop = {read=_scw_Get_DefaultTabStop, write=Set_DefaultTabStop};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_EmbedTrueTypeFonts() { Word r; HRESULT hr = Get_EmbedTrueTypeFonts(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word EmbedTrueTypeFonts = {read=_scw_Get_EmbedTrueTypeFonts, write=Set_EmbedTrueTypeFonts};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SaveFormsData() { Word r; HRESULT hr = Get_SaveFormsData(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SaveFormsData = {read=_scw_Get_SaveFormsData, write=Set_SaveFormsData};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ReadOnlyRecommended() { Word r; HRESULT hr = Get_ReadOnlyRecommended(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ReadOnlyRecommended = {read=_scw_Get_ReadOnlyRecommended, write=Set_ReadOnlyRecommended};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SaveSubsetFonts() { Word r; HRESULT hr = Get_SaveSubsetFonts(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SaveSubsetFonts = {read=_scw_Get_SaveSubsetFonts, write=Set_SaveSubsetFonts};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Compatibility(Activex::TOleEnum Type_) { Word r; HRESULT hr = Get_Compatibility(Type_, r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Compatibility[Activex::TOleEnum Type_] = {read=_scw_Get_Compatibility, write=Set_Compatibility};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_StoryRanges _scw_Get_StoryRanges() { _di_StoryRanges r; HRESULT hr = Get_StoryRanges(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_StoryRanges StoryRanges = {read=_scw_Get_StoryRanges};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Opofcxp::_di__CommandBars _scw_Get_CommandBars() { Opofcxp::_di__CommandBars r; HRESULT hr = Get_CommandBars(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Opofcxp::_di__CommandBars CommandBars = {read=_scw_Get_CommandBars};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IsSubdocument() { Word r; HRESULT hr = Get_IsSubdocument(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IsSubdocument = {read=_scw_Get_IsSubdocument};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_SaveFormat() { int r; HRESULT hr = Get_SaveFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int SaveFormat = {read=_scw_Get_SaveFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_ProtectionType() { Activex::TOleEnum r; HRESULT hr = Get_ProtectionType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum ProtectionType = {read=_scw_Get_ProtectionType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Hyperlinks _scw_Get_Hyperlinks() { _di_Hyperlinks r; HRESULT hr = Get_Hyperlinks(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Hyperlinks Hyperlinks = {read=_scw_Get_Hyperlinks};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shapes _scw_Get_Shapes() { _di_Shapes r; HRESULT hr = Get_Shapes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shapes Shapes = {read=_scw_Get_Shapes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ListTemplates _scw_Get_ListTemplates() { _di_ListTemplates r; HRESULT hr = Get_ListTemplates(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ListTemplates ListTemplates = {read=_scw_Get_ListTemplates};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Lists _scw_Get_Lists() { _di_Lists r; HRESULT hr = Get_Lists(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Lists Lists = {read=_scw_Get_Lists};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_UpdateStylesOnOpen() { Word r; HRESULT hr = Get_UpdateStylesOnOpen(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word UpdateStylesOnOpen = {read=_scw_Get_UpdateStylesOnOpen, write=Set_UpdateStylesOnOpen};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_InlineShapes _scw_Get_InlineShapes() { _di_InlineShapes r; HRESULT hr = Get_InlineShapes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_InlineShapes InlineShapes = {read=_scw_Get_InlineShapes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shape _scw_Get_Background() { _di_Shape r; HRESULT hr = Get_Background(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shape Background = {read=_scw_Get_Background, write=Set_Background};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_GrammarChecked() { Word r; HRESULT hr = Get_GrammarChecked(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word GrammarChecked = {read=_scw_Get_GrammarChecked, write=Set_GrammarChecked};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SpellingChecked() { Word r; HRESULT hr = Get_SpellingChecked(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SpellingChecked = {read=_scw_Get_SpellingChecked, write=Set_SpellingChecked};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowGrammaticalErrors() { Word r; HRESULT hr = Get_ShowGrammaticalErrors(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowGrammaticalErrors = {read=_scw_Get_ShowGrammaticalErrors, write=Set_ShowGrammaticalErrors};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowSpellingErrors() { Word r; HRESULT hr = Get_ShowSpellingErrors(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowSpellingErrors = {read=_scw_Get_ShowSpellingErrors, write=Set_ShowSpellingErrors};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Versions _scw_Get_Versions() { _di_Versions r; HRESULT hr = Get_Versions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Versions Versions = {read=_scw_Get_Versions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowSummary() { Word r; HRESULT hr = Get_ShowSummary(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowSummary = {read=_scw_Get_ShowSummary, write=Set_ShowSummary};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_SummaryViewMode() { Activex::TOleEnum r; HRESULT hr = Get_SummaryViewMode(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum SummaryViewMode = {read=_scw_Get_SummaryViewMode, write=Set_SummaryViewMode};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_SummaryLength() { int r; HRESULT hr = Get_SummaryLength(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int SummaryLength = {read=_scw_Get_SummaryLength, write=Set_SummaryLength};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PrintFractionalWidths() { Word r; HRESULT hr = Get_PrintFractionalWidths(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PrintFractionalWidths = {read=_scw_Get_PrintFractionalWidths, write=Set_PrintFractionalWidths};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PrintPostScriptOverText() { Word r; HRESULT hr = Get_PrintPostScriptOverText(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PrintPostScriptOverText = {read=_scw_Get_PrintPostScriptOverText, write=Set_PrintPostScriptOverText};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Container() { _di_IDispatch r; HRESULT hr = Get_Container(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Container = {read=_scw_Get_Container};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PrintFormsData() { Word r; HRESULT hr = Get_PrintFormsData(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PrintFormsData = {read=_scw_Get_PrintFormsData, write=Set_PrintFormsData};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ListParagraphs _scw_Get_ListParagraphs() { _di_ListParagraphs r; HRESULT hr = Get_ListParagraphs(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ListParagraphs ListParagraphs = {read=_scw_Get_ListParagraphs};
	__property WideString Password = {write=Set_Password};
	__property WideString WritePassword = {write=Set_WritePassword};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_HasPassword() { Word r; HRESULT hr = Get_HasPassword(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word HasPassword = {read=_scw_Get_HasPassword};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_WriteReserved() { Word r; HRESULT hr = Get_WriteReserved(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word WriteReserved = {read=_scw_Get_WriteReserved};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ActiveWritingStyle(OleVariant &LanguageID) { WideString r; HRESULT hr = Get_ActiveWritingStyle(LanguageID, r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ActiveWritingStyle[OleVariant LanguageID] = {read=_scw_Get_ActiveWritingStyle, write=Set_ActiveWritingStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_UserControl() { Word r; HRESULT hr = Get_UserControl(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word UserControl = {read=_scw_Get_UserControl, write=Set_UserControl};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_HasMailer() { Word r; HRESULT hr = Get_HasMailer(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word HasMailer = {read=_scw_Get_HasMailer, write=Set_HasMailer};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Mailer _scw_Get_Mailer() { _di_Mailer r; HRESULT hr = Get_Mailer(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Mailer Mailer = {read=_scw_Get_Mailer};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ReadabilityStatistics _scw_Get_ReadabilityStatistics() { _di_ReadabilityStatistics r; HRESULT hr = Get_ReadabilityStatistics(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ReadabilityStatistics ReadabilityStatistics = {read=_scw_Get_ReadabilityStatistics};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ProofreadingErrors _scw_Get_GrammaticalErrors() { _di_ProofreadingErrors r; HRESULT hr = Get_GrammaticalErrors(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ProofreadingErrors GrammaticalErrors = {read=_scw_Get_GrammaticalErrors};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ProofreadingErrors _scw_Get_SpellingErrors() { _di_ProofreadingErrors r; HRESULT hr = Get_SpellingErrors(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ProofreadingErrors SpellingErrors = {read=_scw_Get_SpellingErrors};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Opvbidxp::_di__VBProject _scw_Get_VBProject() { Opvbidxp::_di__VBProject r; HRESULT hr = Get_VBProject(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Opvbidxp::_di__VBProject VBProject = {read=_scw_Get_VBProject};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_FormsDesign() { Word r; HRESULT hr = Get_FormsDesign(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word FormsDesign = {read=_scw_Get_FormsDesign};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get__CodeName() { WideString r; HRESULT hr = Get__CodeName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString _CodeName = {read=_scw_Get__CodeName, write=Set__CodeName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_CodeName() { WideString r; HRESULT hr = Get_CodeName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString CodeName = {read=_scw_Get_CodeName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SnapToGrid() { Word r; HRESULT hr = Get_SnapToGrid(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SnapToGrid = {read=_scw_Get_SnapToGrid, write=Set_SnapToGrid};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SnapToShapes() { Word r; HRESULT hr = Get_SnapToShapes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SnapToShapes = {read=_scw_Get_SnapToShapes, write=Set_SnapToShapes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_GridDistanceHorizontal() { float r; HRESULT hr = Get_GridDistanceHorizontal(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float GridDistanceHorizontal = {read=_scw_Get_GridDistanceHorizontal, write=Set_GridDistanceHorizontal};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_GridDistanceVertical() { float r; HRESULT hr = Get_GridDistanceVertical(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float GridDistanceVertical = {read=_scw_Get_GridDistanceVertical, write=Set_GridDistanceVertical};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_GridOriginHorizontal() { float r; HRESULT hr = Get_GridOriginHorizontal(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float GridOriginHorizontal = {read=_scw_Get_GridOriginHorizontal, write=Set_GridOriginHorizontal};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_GridOriginVertical() { float r; HRESULT hr = Get_GridOriginVertical(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float GridOriginVertical = {read=_scw_Get_GridOriginVertical, write=Set_GridOriginVertical};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_GridSpaceBetweenHorizontalLines() { int r; HRESULT hr = Get_GridSpaceBetweenHorizontalLines(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int GridSpaceBetweenHorizontalLines = {read=_scw_Get_GridSpaceBetweenHorizontalLines, write=Set_GridSpaceBetweenHorizontalLines};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_GridSpaceBetweenVerticalLines() { int r; HRESULT hr = Get_GridSpaceBetweenVerticalLines(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int GridSpaceBetweenVerticalLines = {read=_scw_Get_GridSpaceBetweenVerticalLines, write=Set_GridSpaceBetweenVerticalLines};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_GridOriginFromMargin() { Word r; HRESULT hr = Get_GridOriginFromMargin(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word GridOriginFromMargin = {read=_scw_Get_GridOriginFromMargin, write=Set_GridOriginFromMargin};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_KerningByAlgorithm() { Word r; HRESULT hr = Get_KerningByAlgorithm(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word KerningByAlgorithm = {read=_scw_Get_KerningByAlgorithm, write=Set_KerningByAlgorithm};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_JustificationMode() { Activex::TOleEnum r; HRESULT hr = Get_JustificationMode(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum JustificationMode = {read=_scw_Get_JustificationMode, write=Set_JustificationMode};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_FarEastLineBreakLevel() { Activex::TOleEnum r; HRESULT hr = Get_FarEastLineBreakLevel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum FarEastLineBreakLevel = {read=_scw_Get_FarEastLineBreakLevel, write=Set_FarEastLineBreakLevel};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_NoLineBreakBefore() { WideString r; HRESULT hr = Get_NoLineBreakBefore(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString NoLineBreakBefore = {read=_scw_Get_NoLineBreakBefore, write=Set_NoLineBreakBefore};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_NoLineBreakAfter() { WideString r; HRESULT hr = Get_NoLineBreakAfter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString NoLineBreakAfter = {read=_scw_Get_NoLineBreakAfter, write=Set_NoLineBreakAfter};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_TrackRevisions() { Word r; HRESULT hr = Get_TrackRevisions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word TrackRevisions = {read=_scw_Get_TrackRevisions, write=Set_TrackRevisions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PrintRevisions() { Word r; HRESULT hr = Get_PrintRevisions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PrintRevisions = {read=_scw_Get_PrintRevisions, write=Set_PrintRevisions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowRevisions() { Word r; HRESULT hr = Get_ShowRevisions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowRevisions = {read=_scw_Get_ShowRevisions, write=Set_ShowRevisions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ActiveTheme() { WideString r; HRESULT hr = Get_ActiveTheme(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ActiveTheme = {read=_scw_Get_ActiveTheme};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ActiveThemeDisplayName() { WideString r; HRESULT hr = Get_ActiveThemeDisplayName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ActiveThemeDisplayName = {read=_scw_Get_ActiveThemeDisplayName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Email _scw_Get_Email() { _di_Email r; HRESULT hr = Get_Email(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Email Email = {read=_scw_Get_Email};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Opofcxp::_di_Scripts _scw_Get_Scripts() { Opofcxp::_di_Scripts r; HRESULT hr = Get_Scripts(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Opofcxp::_di_Scripts Scripts = {read=_scw_Get_Scripts};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_LanguageDetected() { Word r; HRESULT hr = Get_LanguageDetected(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word LanguageDetected = {read=_scw_Get_LanguageDetected, write=Set_LanguageDetected};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_FarEastLineBreakLanguage() { Activex::TOleEnum r; HRESULT hr = Get_FarEastLineBreakLanguage(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum FarEastLineBreakLanguage = {read=_scw_Get_FarEastLineBreakLanguage, write=Set_FarEastLineBreakLanguage};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Frameset _scw_Get_Frameset() { _di_Frameset r; HRESULT hr = Get_Frameset(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Frameset Frameset = {read=_scw_Get_Frameset};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Opofcxp::_di_HTMLProject _scw_Get_HTMLProject() { Opofcxp::_di_HTMLProject r; HRESULT hr = Get_HTMLProject(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Opofcxp::_di_HTMLProject HTMLProject = {read=_scw_Get_HTMLProject};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_WebOptions _scw_Get_WebOptions() { _di_WebOptions r; HRESULT hr = Get_WebOptions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_WebOptions WebOptions = {read=_scw_Get_WebOptions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_OpenEncoding() { Activex::TOleEnum r; HRESULT hr = Get_OpenEncoding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum OpenEncoding = {read=_scw_Get_OpenEncoding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_SaveEncoding() { Activex::TOleEnum r; HRESULT hr = Get_SaveEncoding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum SaveEncoding = {read=_scw_Get_SaveEncoding, write=Set_SaveEncoding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_OptimizeForWord97() { Word r; HRESULT hr = Get_OptimizeForWord97(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word OptimizeForWord97 = {read=_scw_Get_OptimizeForWord97, write=Set_OptimizeForWord97};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_VBASigned() { Word r; HRESULT hr = Get_VBASigned(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word VBASigned = {read=_scw_Get_VBASigned};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Opofcxp::_di_IMsoEnvelopeVB _scw_Get_MailEnvelope() { Opofcxp::_di_IMsoEnvelopeVB r; HRESULT hr = Get_MailEnvelope(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Opofcxp::_di_IMsoEnvelopeVB MailEnvelope = {read=_scw_Get_MailEnvelope};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisableFeatures() { Word r; HRESULT hr = Get_DisableFeatures(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisableFeatures = {read=_scw_Get_DisableFeatures, write=Set_DisableFeatures};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DoNotEmbedSystemFonts() { Word r; HRESULT hr = Get_DoNotEmbedSystemFonts(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DoNotEmbedSystemFonts = {read=_scw_Get_DoNotEmbedSystemFonts, write=Set_DoNotEmbedSystemFonts};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Opofcxp::_di_SignatureSet _scw_Get_Signatures() { Opofcxp::_di_SignatureSet r; HRESULT hr = Get_Signatures(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Opofcxp::_di_SignatureSet Signatures = {read=_scw_Get_Signatures};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_DefaultTargetFrame() { WideString r; HRESULT hr = Get_DefaultTargetFrame(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString DefaultTargetFrame = {read=_scw_Get_DefaultTargetFrame, write=Set_DefaultTargetFrame};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_HTMLDivisions _scw_Get_HTMLDivisions() { _di_HTMLDivisions r; HRESULT hr = Get_HTMLDivisions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_HTMLDivisions HTMLDivisions = {read=_scw_Get_HTMLDivisions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_DisableFeaturesIntroducedAfter() { Activex::TOleEnum r; HRESULT hr = Get_DisableFeaturesIntroducedAfter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum DisableFeaturesIntroducedAfter = {read=_scw_Get_DisableFeaturesIntroducedAfter, write=Set_DisableFeaturesIntroducedAfter};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_RemovePersonalInformation() { Word r; HRESULT hr = Get_RemovePersonalInformation(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word RemovePersonalInformation = {read=_scw_Get_RemovePersonalInformation, write=Set_RemovePersonalInformation};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_SmartTags _scw_Get_SmartTags() { _di_SmartTags r; HRESULT hr = Get_SmartTags(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_SmartTags SmartTags = {read=_scw_Get_SmartTags};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_EmbedSmartTags() { Word r; HRESULT hr = Get_EmbedSmartTags(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word EmbedSmartTags = {read=_scw_Get_EmbedSmartTags, write=Set_EmbedSmartTags};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SmartTagsAsXMLProps() { Word r; HRESULT hr = Get_SmartTagsAsXMLProps(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SmartTagsAsXMLProps = {read=_scw_Get_SmartTagsAsXMLProps, write=Set_SmartTagsAsXMLProps};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_TextEncoding() { Activex::TOleEnum r; HRESULT hr = Get_TextEncoding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum TextEncoding = {read=_scw_Get_TextEncoding, write=Set_TextEncoding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_TextLineEnding() { Activex::TOleEnum r; HRESULT hr = Get_TextLineEnding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum TextLineEnding = {read=_scw_Get_TextLineEnding, write=Set_TextLineEnding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_StyleSheets _scw_Get_StyleSheets() { _di_StyleSheets r; HRESULT hr = Get_StyleSheets(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_StyleSheets StyleSheets = {read=_scw_Get_StyleSheets};
	#pragma option push -w-inl
	/* safecall wrapper */ inline OleVariant _scw_Get_DefaultTableStyle() { OleVariant r; HRESULT hr = Get_DefaultTableStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property OleVariant DefaultTableStyle = {read=_scw_Get_DefaultTableStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_PasswordEncryptionProvider() { WideString r; HRESULT hr = Get_PasswordEncryptionProvider(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString PasswordEncryptionProvider = {read=_scw_Get_PasswordEncryptionProvider};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_PasswordEncryptionAlgorithm() { WideString r; HRESULT hr = Get_PasswordEncryptionAlgorithm(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString PasswordEncryptionAlgorithm = {read=_scw_Get_PasswordEncryptionAlgorithm};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_PasswordEncryptionKeyLength() { int r; HRESULT hr = Get_PasswordEncryptionKeyLength(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int PasswordEncryptionKeyLength = {read=_scw_Get_PasswordEncryptionKeyLength};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PasswordEncryptionFileProperties() { Word r; HRESULT hr = Get_PasswordEncryptionFileProperties(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PasswordEncryptionFileProperties = {read=_scw_Get_PasswordEncryptionFileProperties};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_EmbedLinguisticData() { Word r; HRESULT hr = Get_EmbedLinguisticData(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word EmbedLinguisticData = {read=_scw_Get_EmbedLinguisticData, write=Set_EmbedLinguisticData};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_FormattingShowFont() { Word r; HRESULT hr = Get_FormattingShowFont(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word FormattingShowFont = {read=_scw_Get_FormattingShowFont, write=Set_FormattingShowFont};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_FormattingShowClear() { Word r; HRESULT hr = Get_FormattingShowClear(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word FormattingShowClear = {read=_scw_Get_FormattingShowClear, write=Set_FormattingShowClear};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_FormattingShowParagraph() { Word r; HRESULT hr = Get_FormattingShowParagraph(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word FormattingShowParagraph = {read=_scw_Get_FormattingShowParagraph, write=Set_FormattingShowParagraph};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_FormattingShowNumbering() { Word r; HRESULT hr = Get_FormattingShowNumbering(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word FormattingShowNumbering = {read=_scw_Get_FormattingShowNumbering, write=Set_FormattingShowNumbering};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_FormattingShowFilter() { Activex::TOleEnum r; HRESULT hr = Get_FormattingShowFilter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum FormattingShowFilter = {read=_scw_Get_FormattingShowFilter, write=Set_FormattingShowFilter};
};

__dispinterface _DocumentDisp;
typedef System::DelphiInterface<_DocumentDisp> _di__DocumentDisp;
__dispinterface INTERFACE_UUID("{0002096B-0000-0000-C000-000000000046}") _DocumentDisp  : public IDispatch 
{
	
};

__interface AutoTextEntries;
typedef System::DelphiInterface<AutoTextEntries> _di_AutoTextEntries;
__interface INTERFACE_UUID("{0002096A-0000-0000-C000-000000000046}") Template  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Path(WideString &Get_Path_result) = 0 ;
	virtual HRESULT __safecall Get_AutoTextEntries(_di_AutoTextEntries &Get_AutoTextEntries_result) = 0 ;
	virtual HRESULT __safecall Get_LanguageID(Activex::TOleEnum &Get_LanguageID_result) = 0 ;
	virtual HRESULT __safecall Set_LanguageID(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Saved(Word &Get_Saved_result) = 0 ;
	virtual HRESULT __safecall Set_Saved(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Get_FullName(WideString &Get_FullName_result) = 0 ;
	virtual HRESULT __safecall Get_BuiltInDocumentProperties(_di_IDispatch &Get_BuiltInDocumentProperties_result) = 0 ;
	virtual HRESULT __safecall Get_CustomDocumentProperties(_di_IDispatch &Get_CustomDocumentProperties_result) = 0 ;
	virtual HRESULT __safecall Get_ListTemplates(_di_ListTemplates &Get_ListTemplates_result) = 0 ;
	virtual HRESULT __safecall Get_LanguageIDFarEast(Activex::TOleEnum &Get_LanguageIDFarEast_result) = 0 ;
	virtual HRESULT __safecall Set_LanguageIDFarEast(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_VBProject(Opvbidxp::_di__VBProject &Get_VBProject_result) = 0 ;
	virtual HRESULT __safecall Get_KerningByAlgorithm(Word &Get_KerningByAlgorithm_result) = 0 ;
	virtual HRESULT __safecall Set_KerningByAlgorithm(Word prop) = 0 ;
	virtual HRESULT __safecall Get_JustificationMode(Activex::TOleEnum &Get_JustificationMode_result) = 0 ;
	virtual HRESULT __safecall Set_JustificationMode(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_FarEastLineBreakLevel(Activex::TOleEnum &Get_FarEastLineBreakLevel_result) = 0 ;
	virtual HRESULT __safecall Set_FarEastLineBreakLevel(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_NoLineBreakBefore(WideString &Get_NoLineBreakBefore_result) = 0 ;
	virtual HRESULT __safecall Set_NoLineBreakBefore(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_NoLineBreakAfter(WideString &Get_NoLineBreakAfter_result) = 0 ;
	virtual HRESULT __safecall Set_NoLineBreakAfter(const WideString prop) = 0 ;
	virtual HRESULT __safecall OpenAsDocument(_di__Document &OpenAsDocument_result) = 0 ;
	virtual HRESULT __safecall Save(void) = 0 ;
	virtual HRESULT __safecall Get_NoProofing(int &Get_NoProofing_result) = 0 ;
	virtual HRESULT __safecall Set_NoProofing(int prop) = 0 ;
	virtual HRESULT __safecall Get_FarEastLineBreakLanguage(Activex::TOleEnum &Get_FarEastLineBreakLanguage_result) = 0 ;
	virtual HRESULT __safecall Set_FarEastLineBreakLanguage(Activex::TOleEnum prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Path() { WideString r; HRESULT hr = Get_Path(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Path = {read=_scw_Get_Path};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_AutoTextEntries _scw_Get_AutoTextEntries() { _di_AutoTextEntries r; HRESULT hr = Get_AutoTextEntries(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_AutoTextEntries AutoTextEntries = {read=_scw_Get_AutoTextEntries};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LanguageID() { Activex::TOleEnum r; HRESULT hr = Get_LanguageID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LanguageID = {read=_scw_Get_LanguageID, write=Set_LanguageID};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Saved() { Word r; HRESULT hr = Get_Saved(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Saved = {read=_scw_Get_Saved, write=Set_Saved};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_FullName() { WideString r; HRESULT hr = Get_FullName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString FullName = {read=_scw_Get_FullName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_BuiltInDocumentProperties() { _di_IDispatch r; HRESULT hr = Get_BuiltInDocumentProperties(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch BuiltInDocumentProperties = {read=_scw_Get_BuiltInDocumentProperties};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_CustomDocumentProperties() { _di_IDispatch r; HRESULT hr = Get_CustomDocumentProperties(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch CustomDocumentProperties = {read=_scw_Get_CustomDocumentProperties};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ListTemplates _scw_Get_ListTemplates() { _di_ListTemplates r; HRESULT hr = Get_ListTemplates(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ListTemplates ListTemplates = {read=_scw_Get_ListTemplates};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LanguageIDFarEast() { Activex::TOleEnum r; HRESULT hr = Get_LanguageIDFarEast(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LanguageIDFarEast = {read=_scw_Get_LanguageIDFarEast, write=Set_LanguageIDFarEast};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Opvbidxp::_di__VBProject _scw_Get_VBProject() { Opvbidxp::_di__VBProject r; HRESULT hr = Get_VBProject(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Opvbidxp::_di__VBProject VBProject = {read=_scw_Get_VBProject};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_KerningByAlgorithm() { Word r; HRESULT hr = Get_KerningByAlgorithm(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word KerningByAlgorithm = {read=_scw_Get_KerningByAlgorithm, write=Set_KerningByAlgorithm};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_JustificationMode() { Activex::TOleEnum r; HRESULT hr = Get_JustificationMode(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum JustificationMode = {read=_scw_Get_JustificationMode, write=Set_JustificationMode};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_FarEastLineBreakLevel() { Activex::TOleEnum r; HRESULT hr = Get_FarEastLineBreakLevel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum FarEastLineBreakLevel = {read=_scw_Get_FarEastLineBreakLevel, write=Set_FarEastLineBreakLevel};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_NoLineBreakBefore() { WideString r; HRESULT hr = Get_NoLineBreakBefore(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString NoLineBreakBefore = {read=_scw_Get_NoLineBreakBefore, write=Set_NoLineBreakBefore};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_NoLineBreakAfter() { WideString r; HRESULT hr = Get_NoLineBreakAfter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString NoLineBreakAfter = {read=_scw_Get_NoLineBreakAfter, write=Set_NoLineBreakAfter};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_NoProofing() { int r; HRESULT hr = Get_NoProofing(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int NoProofing = {read=_scw_Get_NoProofing, write=Set_NoProofing};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_FarEastLineBreakLanguage() { Activex::TOleEnum r; HRESULT hr = Get_FarEastLineBreakLanguage(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum FarEastLineBreakLanguage = {read=_scw_Get_FarEastLineBreakLanguage, write=Set_FarEastLineBreakLanguage};
};

__dispinterface TemplateDisp;
typedef System::DelphiInterface<TemplateDisp> _di_TemplateDisp;
__dispinterface INTERFACE_UUID("{0002096A-0000-0000-C000-000000000046}") TemplateDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209A2-0000-0000-C000-000000000046}") Templates  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_Template &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
};

__dispinterface TemplatesDisp;
typedef System::DelphiInterface<TemplatesDisp> _di_TemplatesDisp;
__dispinterface INTERFACE_UUID("{000209A2-0000-0000-C000-000000000046}") TemplatesDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020969-0000-0000-C000-000000000046}") RoutingSlip  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Subject(WideString &Get_Subject_result) = 0 ;
	virtual HRESULT __safecall Set_Subject(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Message(WideString &Get_Message_result) = 0 ;
	virtual HRESULT __safecall Set_Message(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Delivery(Activex::TOleEnum &Get_Delivery_result) = 0 ;
	virtual HRESULT __safecall Set_Delivery(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_TrackStatus(Word &Get_TrackStatus_result) = 0 ;
	virtual HRESULT __safecall Set_TrackStatus(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Protect(Activex::TOleEnum &Get_Protect_result) = 0 ;
	virtual HRESULT __safecall Set_Protect(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_ReturnWhenDone(Word &Get_ReturnWhenDone_result) = 0 ;
	virtual HRESULT __safecall Set_ReturnWhenDone(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Status(Activex::TOleEnum &Get_Status_result) = 0 ;
	virtual HRESULT __safecall Get_Recipients(OleVariant &Index, OleVariant &Get_Recipients_result) = 0 ;
	virtual HRESULT __safecall Reset(void) = 0 ;
	virtual HRESULT __safecall AddRecipient(const WideString Recipient) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Subject() { WideString r; HRESULT hr = Get_Subject(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Subject = {read=_scw_Get_Subject, write=Set_Subject};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Message() { WideString r; HRESULT hr = Get_Message(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Message = {read=_scw_Get_Message, write=Set_Message};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Delivery() { Activex::TOleEnum r; HRESULT hr = Get_Delivery(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Delivery = {read=_scw_Get_Delivery, write=Set_Delivery};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_TrackStatus() { Word r; HRESULT hr = Get_TrackStatus(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word TrackStatus = {read=_scw_Get_TrackStatus, write=Set_TrackStatus};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Protect() { Activex::TOleEnum r; HRESULT hr = Get_Protect(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Protect = {read=_scw_Get_Protect, write=Set_Protect};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ReturnWhenDone() { Word r; HRESULT hr = Get_ReturnWhenDone(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ReturnWhenDone = {read=_scw_Get_ReturnWhenDone, write=Set_ReturnWhenDone};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Status() { Activex::TOleEnum r; HRESULT hr = Get_Status(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Status = {read=_scw_Get_Status};
	#pragma option push -w-inl
	/* safecall wrapper */ inline OleVariant _scw_Get_Recipients(OleVariant &Index) { OleVariant r; HRESULT hr = Get_Recipients(Index, r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property OleVariant Recipients[OleVariant Index] = {read=_scw_Get_Recipients};
};

__dispinterface RoutingSlipDisp;
typedef System::DelphiInterface<RoutingSlipDisp> _di_RoutingSlipDisp;
__dispinterface INTERFACE_UUID("{00020969-0000-0000-C000-000000000046}") RoutingSlipDisp  : public IDispatch 
{
	
};

__interface Bookmark;
typedef System::DelphiInterface<Bookmark> _di_Bookmark;
__interface INTERFACE_UUID("{00020968-0000-0000-C000-000000000046}") Bookmark  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Get_Empty(Word &Get_Empty_result) = 0 ;
	virtual HRESULT __safecall Get_Start(int &Get_Start_result) = 0 ;
	virtual HRESULT __safecall Set_Start(int prop) = 0 ;
	virtual HRESULT __safecall Get_End_(int &Get_End__result) = 0 ;
	virtual HRESULT __safecall Set_End_(int prop) = 0 ;
	virtual HRESULT __safecall Get_Column(Word &Get_Column_result) = 0 ;
	virtual HRESULT __safecall Get_StoryType(Activex::TOleEnum &Get_StoryType_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Select(void) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall Copy(const WideString Name, _di_Bookmark &Copy_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Empty() { Word r; HRESULT hr = Get_Empty(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Empty = {read=_scw_Get_Empty};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Start() { int r; HRESULT hr = Get_Start(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Start = {read=_scw_Get_Start, write=Set_Start};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_End_() { int r; HRESULT hr = Get_End_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int End_ = {read=_scw_Get_End_, write=Set_End_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Column() { Word r; HRESULT hr = Get_Column(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Column = {read=_scw_Get_Column};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_StoryType() { Activex::TOleEnum r; HRESULT hr = Get_StoryType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum StoryType = {read=_scw_Get_StoryType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface BookmarkDisp;
typedef System::DelphiInterface<BookmarkDisp> _di_BookmarkDisp;
__dispinterface INTERFACE_UUID("{00020968-0000-0000-C000-000000000046}") BookmarkDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020967-0000-0000-C000-000000000046}") Bookmarks  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_DefaultSorting(Activex::TOleEnum &Get_DefaultSorting_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultSorting(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_ShowHidden(Word &Get_ShowHidden_result) = 0 ;
	virtual HRESULT __safecall Set_ShowHidden(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_Bookmark &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const WideString Name, OleVariant &Range, _di_Bookmark &Add_result) = 0 ;
	virtual HRESULT __safecall Exists(const WideString Name, Word &Exists_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_DefaultSorting() { Activex::TOleEnum r; HRESULT hr = Get_DefaultSorting(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum DefaultSorting = {read=_scw_Get_DefaultSorting, write=Set_DefaultSorting};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowHidden() { Word r; HRESULT hr = Get_ShowHidden(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowHidden = {read=_scw_Get_ShowHidden, write=Set_ShowHidden};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface BookmarksDisp;
typedef System::DelphiInterface<BookmarksDisp> _di_BookmarksDisp;
__dispinterface INTERFACE_UUID("{00020967-0000-0000-C000-000000000046}") BookmarksDisp  : public IDispatch 
{
	
};

__interface Variable;
typedef System::DelphiInterface<Variable> _di_Variable;
__interface INTERFACE_UUID("{00020966-0000-0000-C000-000000000046}") Variable  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Get_Value(WideString &Get_Value_result) = 0 ;
	virtual HRESULT __safecall Set_Value(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Value() { WideString r; HRESULT hr = Get_Value(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Value = {read=_scw_Get_Value, write=Set_Value};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
};

__dispinterface VariableDisp;
typedef System::DelphiInterface<VariableDisp> _di_VariableDisp;
__dispinterface INTERFACE_UUID("{00020966-0000-0000-C000-000000000046}") VariableDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020965-0000-0000-C000-000000000046}") Variables  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_Variable &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const WideString Name, OleVariant &Value, _di_Variable &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface VariablesDisp;
typedef System::DelphiInterface<VariablesDisp> _di_VariablesDisp;
__dispinterface INTERFACE_UUID("{00020965-0000-0000-C000-000000000046}") VariablesDisp  : public IDispatch 
{
	
};

__interface RecentFile;
typedef System::DelphiInterface<RecentFile> _di_RecentFile;
__interface INTERFACE_UUID("{00020964-0000-0000-C000-000000000046}") RecentFile  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_ReadOnly(Word &Get_ReadOnly_result) = 0 ;
	virtual HRESULT __safecall Set_ReadOnly(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Path(WideString &Get_Path_result) = 0 ;
	virtual HRESULT __safecall Open(_di__Document &Open_result) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ReadOnly() { Word r; HRESULT hr = Get_ReadOnly(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ReadOnly = {read=_scw_Get_ReadOnly, write=Set_ReadOnly};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Path() { WideString r; HRESULT hr = Get_Path(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Path = {read=_scw_Get_Path};
};

__dispinterface RecentFileDisp;
typedef System::DelphiInterface<RecentFileDisp> _di_RecentFileDisp;
__dispinterface INTERFACE_UUID("{00020964-0000-0000-C000-000000000046}") RecentFileDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020963-0000-0000-C000-000000000046}") RecentFiles  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Maximum(int &Get_Maximum_result) = 0 ;
	virtual HRESULT __safecall Set_Maximum(int prop) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_RecentFile &Item_result) = 0 ;
	virtual HRESULT __safecall Add(OleVariant &Document, OleVariant &ReadOnly, _di_RecentFile &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Maximum() { int r; HRESULT hr = Get_Maximum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Maximum = {read=_scw_Get_Maximum, write=Set_Maximum};
};

__dispinterface RecentFilesDisp;
typedef System::DelphiInterface<RecentFilesDisp> _di_RecentFilesDisp;
__dispinterface INTERFACE_UUID("{00020963-0000-0000-C000-000000000046}") RecentFilesDisp  : public IDispatch 
{
	
};

__interface Pane;
typedef System::DelphiInterface<Pane> _di_Pane;
__interface Panes;
typedef System::DelphiInterface<Panes> _di_Panes;
__interface View;
typedef System::DelphiInterface<View> _di_View;
__interface INTERFACE_UUID("{00020962-0000-0000-C000-000000000046}") Window  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_ActivePane(_di_Pane &Get_ActivePane_result) = 0 ;
	virtual HRESULT __safecall Get_Document(_di__Document &Get_Document_result) = 0 ;
	virtual HRESULT __safecall Get_Panes(_di_Panes &Get_Panes_result) = 0 ;
	virtual HRESULT __safecall Get_Selection(_di_Selection &Get_Selection_result) = 0 ;
	virtual HRESULT __safecall Get_Left(int &Get_Left_result) = 0 ;
	virtual HRESULT __safecall Set_Left(int prop) = 0 ;
	virtual HRESULT __safecall Get_Top(int &Get_Top_result) = 0 ;
	virtual HRESULT __safecall Set_Top(int prop) = 0 ;
	virtual HRESULT __safecall Get_Width(int &Get_Width_result) = 0 ;
	virtual HRESULT __safecall Set_Width(int prop) = 0 ;
	virtual HRESULT __safecall Get_Height(int &Get_Height_result) = 0 ;
	virtual HRESULT __safecall Set_Height(int prop) = 0 ;
	virtual HRESULT __safecall Get_Split(Word &Get_Split_result) = 0 ;
	virtual HRESULT __safecall Set_Split(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SplitVertical(int &Get_SplitVertical_result) = 0 ;
	virtual HRESULT __safecall Set_SplitVertical(int prop) = 0 ;
	virtual HRESULT __safecall Get_Caption(WideString &Get_Caption_result) = 0 ;
	virtual HRESULT __safecall Set_Caption(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_WindowState(Activex::TOleEnum &Get_WindowState_result) = 0 ;
	virtual HRESULT __safecall Set_WindowState(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_DisplayRulers(Word &Get_DisplayRulers_result) = 0 ;
	virtual HRESULT __safecall Set_DisplayRulers(Word prop) = 0 ;
	virtual HRESULT __safecall Get_DisplayVerticalRuler(Word &Get_DisplayVerticalRuler_result) = 0 ;
	virtual HRESULT __safecall Set_DisplayVerticalRuler(Word prop) = 0 ;
	virtual HRESULT __safecall Get_View(_di_View &Get_View_result) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Get_Next(_di_Window &Get_Next_result) = 0 ;
	virtual HRESULT __safecall Get_Previous(_di_Window &Get_Previous_result) = 0 ;
	virtual HRESULT __safecall Get_WindowNumber(int &Get_WindowNumber_result) = 0 ;
	virtual HRESULT __safecall Get_DisplayVerticalScrollBar(Word &Get_DisplayVerticalScrollBar_result) = 0 ;
	virtual HRESULT __safecall Set_DisplayVerticalScrollBar(Word prop) = 0 ;
	virtual HRESULT __safecall Get_DisplayHorizontalScrollBar(Word &Get_DisplayHorizontalScrollBar_result) = 0 ;
	virtual HRESULT __safecall Set_DisplayHorizontalScrollBar(Word prop) = 0 ;
	virtual HRESULT __safecall Get_StyleAreaWidth(float &Get_StyleAreaWidth_result) = 0 ;
	virtual HRESULT __safecall Set_StyleAreaWidth(float prop) = 0 ;
	virtual HRESULT __safecall Get_DisplayScreenTips(Word &Get_DisplayScreenTips_result) = 0 ;
	virtual HRESULT __safecall Set_DisplayScreenTips(Word prop) = 0 ;
	virtual HRESULT __safecall Get_HorizontalPercentScrolled(int &Get_HorizontalPercentScrolled_result) = 0 ;
	virtual HRESULT __safecall Set_HorizontalPercentScrolled(int prop) = 0 ;
	virtual HRESULT __safecall Get_VerticalPercentScrolled(int &Get_VerticalPercentScrolled_result) = 0 ;
	virtual HRESULT __safecall Set_VerticalPercentScrolled(int prop) = 0 ;
	virtual HRESULT __safecall Get_DocumentMap(Word &Get_DocumentMap_result) = 0 ;
	virtual HRESULT __safecall Set_DocumentMap(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Active(Word &Get_Active_result) = 0 ;
	virtual HRESULT __safecall Get_DocumentMapPercentWidth(int &Get_DocumentMapPercentWidth_result) = 0 ;
	virtual HRESULT __safecall Set_DocumentMapPercentWidth(int prop) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_IMEMode(Activex::TOleEnum &Get_IMEMode_result) = 0 ;
	virtual HRESULT __safecall Set_IMEMode(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Activate(void) = 0 ;
	virtual HRESULT __safecall Close(OleVariant &SaveChanges, OleVariant &RouteDocument) = 0 ;
	virtual HRESULT __safecall LargeScroll(OleVariant &Down, OleVariant &Up, OleVariant &ToRight, OleVariant &ToLeft) = 0 ;
	virtual HRESULT __safecall SmallScroll(OleVariant &Down, OleVariant &Up, OleVariant &ToRight, OleVariant &ToLeft) = 0 ;
	virtual HRESULT __safecall NewWindow(_di_Window &NewWindow_result) = 0 ;
	virtual HRESULT __safecall PrintOutOld(OleVariant &Background, OleVariant &Append, OleVariant &Range, OleVariant &OutputFileName, OleVariant &From, OleVariant &To_, OleVariant &Item, OleVariant &Copies, OleVariant &Pages, OleVariant &PageType, OleVariant &PrintToFile, OleVariant &Collate, OleVariant &ActivePrinterMacGX, OleVariant &ManualDuplexPrint) = 0 ;
	virtual HRESULT __safecall PageScroll(OleVariant &Down, OleVariant &Up) = 0 ;
	virtual HRESULT __safecall SetFocus(void) = 0 ;
	virtual HRESULT __safecall RangeFromPoint(int x, int y, _di_IDispatch &RangeFromPoint_result) = 0 ;
	virtual HRESULT __safecall ScrollIntoView(const _di_IDispatch obj, OleVariant &Start) = 0 ;
	virtual HRESULT __safecall GetPoint(/* out */ int &ScreenPixelsLeft, /* out */ int &ScreenPixelsTop, /* out */ int &ScreenPixelsWidth, /* out */ int &ScreenPixelsHeight, const _di_IDispatch obj) = 0 ;
	virtual HRESULT __safecall PrintOut2000(OleVariant &Background, OleVariant &Append, OleVariant &Range, OleVariant &OutputFileName, OleVariant &From, OleVariant &To_, OleVariant &Item, OleVariant &Copies, OleVariant &Pages, OleVariant &PageType, OleVariant &PrintToFile, OleVariant &Collate, OleVariant &ActivePrinterMacGX, OleVariant &ManualDuplexPrint, OleVariant &PrintZoomColumn, OleVariant &PrintZoomRow, OleVariant &PrintZoomPaperWidth, OleVariant &PrintZoomPaperHeight) = 0 ;
	virtual HRESULT __safecall Get_UsableWidth(int &Get_UsableWidth_result) = 0 ;
	virtual HRESULT __safecall Get_UsableHeight(int &Get_UsableHeight_result) = 0 ;
	virtual HRESULT __safecall Get_EnvelopeVisible(Word &Get_EnvelopeVisible_result) = 0 ;
	virtual HRESULT __safecall Set_EnvelopeVisible(Word prop) = 0 ;
	virtual HRESULT __safecall Get_DisplayRightRuler(Word &Get_DisplayRightRuler_result) = 0 ;
	virtual HRESULT __safecall Set_DisplayRightRuler(Word prop) = 0 ;
	virtual HRESULT __safecall Get_DisplayLeftScrollBar(Word &Get_DisplayLeftScrollBar_result) = 0 ;
	virtual HRESULT __safecall Set_DisplayLeftScrollBar(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Visible(Word &Get_Visible_result) = 0 ;
	virtual HRESULT __safecall Set_Visible(Word prop) = 0 ;
	virtual HRESULT __safecall PrintOut(OleVariant &Background, OleVariant &Append, OleVariant &Range, OleVariant &OutputFileName, OleVariant &From, OleVariant &To_, OleVariant &Item, OleVariant &Copies, OleVariant &Pages, OleVariant &PageType, OleVariant &PrintToFile, OleVariant &Collate, OleVariant &ActivePrinterMacGX, OleVariant &ManualDuplexPrint, OleVariant &PrintZoomColumn, OleVariant &PrintZoomRow, OleVariant &PrintZoomPaperWidth, OleVariant &PrintZoomPaperHeight) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Pane _scw_Get_ActivePane() { _di_Pane r; HRESULT hr = Get_ActivePane(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Pane ActivePane = {read=_scw_Get_ActivePane};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Document _scw_Get_Document() { _di__Document r; HRESULT hr = Get_Document(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Document Document = {read=_scw_Get_Document};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Panes _scw_Get_Panes() { _di_Panes r; HRESULT hr = Get_Panes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Panes Panes = {read=_scw_Get_Panes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Selection _scw_Get_Selection() { _di_Selection r; HRESULT hr = Get_Selection(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Selection Selection = {read=_scw_Get_Selection};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Left() { int r; HRESULT hr = Get_Left(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Left = {read=_scw_Get_Left, write=Set_Left};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Top() { int r; HRESULT hr = Get_Top(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Top = {read=_scw_Get_Top, write=Set_Top};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Width() { int r; HRESULT hr = Get_Width(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Width = {read=_scw_Get_Width, write=Set_Width};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Height() { int r; HRESULT hr = Get_Height(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Height = {read=_scw_Get_Height, write=Set_Height};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Split() { Word r; HRESULT hr = Get_Split(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Split = {read=_scw_Get_Split, write=Set_Split};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_SplitVertical() { int r; HRESULT hr = Get_SplitVertical(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int SplitVertical = {read=_scw_Get_SplitVertical, write=Set_SplitVertical};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Caption() { WideString r; HRESULT hr = Get_Caption(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Caption = {read=_scw_Get_Caption, write=Set_Caption};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_WindowState() { Activex::TOleEnum r; HRESULT hr = Get_WindowState(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum WindowState = {read=_scw_Get_WindowState, write=Set_WindowState};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisplayRulers() { Word r; HRESULT hr = Get_DisplayRulers(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisplayRulers = {read=_scw_Get_DisplayRulers, write=Set_DisplayRulers};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisplayVerticalRuler() { Word r; HRESULT hr = Get_DisplayVerticalRuler(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisplayVerticalRuler = {read=_scw_Get_DisplayVerticalRuler, write=Set_DisplayVerticalRuler};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_View _scw_Get_View() { _di_View r; HRESULT hr = Get_View(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_View View = {read=_scw_Get_View};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Window _scw_Get_Next() { _di_Window r; HRESULT hr = Get_Next(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Window Next = {read=_scw_Get_Next};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Window _scw_Get_Previous() { _di_Window r; HRESULT hr = Get_Previous(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Window Previous = {read=_scw_Get_Previous};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_WindowNumber() { int r; HRESULT hr = Get_WindowNumber(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int WindowNumber = {read=_scw_Get_WindowNumber};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisplayVerticalScrollBar() { Word r; HRESULT hr = Get_DisplayVerticalScrollBar(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisplayVerticalScrollBar = {read=_scw_Get_DisplayVerticalScrollBar, write=Set_DisplayVerticalScrollBar};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisplayHorizontalScrollBar() { Word r; HRESULT hr = Get_DisplayHorizontalScrollBar(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisplayHorizontalScrollBar = {read=_scw_Get_DisplayHorizontalScrollBar, write=Set_DisplayHorizontalScrollBar};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_StyleAreaWidth() { float r; HRESULT hr = Get_StyleAreaWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float StyleAreaWidth = {read=_scw_Get_StyleAreaWidth, write=Set_StyleAreaWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisplayScreenTips() { Word r; HRESULT hr = Get_DisplayScreenTips(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisplayScreenTips = {read=_scw_Get_DisplayScreenTips, write=Set_DisplayScreenTips};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_HorizontalPercentScrolled() { int r; HRESULT hr = Get_HorizontalPercentScrolled(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int HorizontalPercentScrolled = {read=_scw_Get_HorizontalPercentScrolled, write=Set_HorizontalPercentScrolled};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_VerticalPercentScrolled() { int r; HRESULT hr = Get_VerticalPercentScrolled(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int VerticalPercentScrolled = {read=_scw_Get_VerticalPercentScrolled, write=Set_VerticalPercentScrolled};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DocumentMap() { Word r; HRESULT hr = Get_DocumentMap(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DocumentMap = {read=_scw_Get_DocumentMap, write=Set_DocumentMap};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Active() { Word r; HRESULT hr = Get_Active(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Active = {read=_scw_Get_Active};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_DocumentMapPercentWidth() { int r; HRESULT hr = Get_DocumentMapPercentWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int DocumentMapPercentWidth = {read=_scw_Get_DocumentMapPercentWidth, write=Set_DocumentMapPercentWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_IMEMode() { Activex::TOleEnum r; HRESULT hr = Get_IMEMode(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum IMEMode = {read=_scw_Get_IMEMode, write=Set_IMEMode};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_UsableWidth() { int r; HRESULT hr = Get_UsableWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int UsableWidth = {read=_scw_Get_UsableWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_UsableHeight() { int r; HRESULT hr = Get_UsableHeight(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int UsableHeight = {read=_scw_Get_UsableHeight};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_EnvelopeVisible() { Word r; HRESULT hr = Get_EnvelopeVisible(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word EnvelopeVisible = {read=_scw_Get_EnvelopeVisible, write=Set_EnvelopeVisible};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisplayRightRuler() { Word r; HRESULT hr = Get_DisplayRightRuler(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisplayRightRuler = {read=_scw_Get_DisplayRightRuler, write=Set_DisplayRightRuler};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisplayLeftScrollBar() { Word r; HRESULT hr = Get_DisplayLeftScrollBar(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisplayLeftScrollBar = {read=_scw_Get_DisplayLeftScrollBar, write=Set_DisplayLeftScrollBar};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Visible() { Word r; HRESULT hr = Get_Visible(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Visible = {read=_scw_Get_Visible, write=Set_Visible};
};

__dispinterface WindowDisp;
typedef System::DelphiInterface<WindowDisp> _di_WindowDisp;
__dispinterface INTERFACE_UUID("{00020962-0000-0000-C000-000000000046}") WindowDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020961-0000-0000-C000-000000000046}") Windows  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_Window &Item_result) = 0 ;
	virtual HRESULT __safecall Add(OleVariant &Window, _di_Window &Add_result) = 0 ;
	virtual HRESULT __safecall Arrange(OleVariant &ArrangeStyle) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface WindowsDisp;
typedef System::DelphiInterface<WindowsDisp> _di_WindowsDisp;
__dispinterface INTERFACE_UUID("{00020961-0000-0000-C000-000000000046}") WindowsDisp  : public IDispatch 
{
	
};

__interface Zooms;
typedef System::DelphiInterface<Zooms> _di_Zooms;
__interface INTERFACE_UUID("{00020960-0000-0000-C000-000000000046}") Pane  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Document(_di__Document &Get_Document_result) = 0 ;
	virtual HRESULT __safecall Get_Selection(_di_Selection &Get_Selection_result) = 0 ;
	virtual HRESULT __safecall Get_DisplayRulers(Word &Get_DisplayRulers_result) = 0 ;
	virtual HRESULT __safecall Set_DisplayRulers(Word prop) = 0 ;
	virtual HRESULT __safecall Get_DisplayVerticalRuler(Word &Get_DisplayVerticalRuler_result) = 0 ;
	virtual HRESULT __safecall Set_DisplayVerticalRuler(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Zooms(_di_Zooms &Get_Zooms_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_View(_di_View &Get_View_result) = 0 ;
	virtual HRESULT __safecall Get_Next(_di_Pane &Get_Next_result) = 0 ;
	virtual HRESULT __safecall Get_Previous(_di_Pane &Get_Previous_result) = 0 ;
	virtual HRESULT __safecall Get_HorizontalPercentScrolled(int &Get_HorizontalPercentScrolled_result) = 0 ;
	virtual HRESULT __safecall Set_HorizontalPercentScrolled(int prop) = 0 ;
	virtual HRESULT __safecall Get_VerticalPercentScrolled(int &Get_VerticalPercentScrolled_result) = 0 ;
	virtual HRESULT __safecall Set_VerticalPercentScrolled(int prop) = 0 ;
	virtual HRESULT __safecall Get_MinimumFontSize(int &Get_MinimumFontSize_result) = 0 ;
	virtual HRESULT __safecall Set_MinimumFontSize(int prop) = 0 ;
	virtual HRESULT __safecall Get_BrowseToWindow(Word &Get_BrowseToWindow_result) = 0 ;
	virtual HRESULT __safecall Set_BrowseToWindow(Word prop) = 0 ;
	virtual HRESULT __safecall Get_BrowseWidth(int &Get_BrowseWidth_result) = 0 ;
	virtual HRESULT __safecall Activate(void) = 0 ;
	virtual HRESULT __safecall Close(void) = 0 ;
	virtual HRESULT __safecall LargeScroll(OleVariant &Down, OleVariant &Up, OleVariant &ToRight, OleVariant &ToLeft) = 0 ;
	virtual HRESULT __safecall SmallScroll(OleVariant &Down, OleVariant &Up, OleVariant &ToRight, OleVariant &ToLeft) = 0 ;
	virtual HRESULT __safecall AutoScroll(int Velocity) = 0 ;
	virtual HRESULT __safecall PageScroll(OleVariant &Down, OleVariant &Up) = 0 ;
	virtual HRESULT __safecall NewFrameset(void) = 0 ;
	virtual HRESULT __safecall TOCInFrameset(void) = 0 ;
	virtual HRESULT __safecall Get_Frameset(_di_Frameset &Get_Frameset_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Document _scw_Get_Document() { _di__Document r; HRESULT hr = Get_Document(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Document Document = {read=_scw_Get_Document};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Selection _scw_Get_Selection() { _di_Selection r; HRESULT hr = Get_Selection(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Selection Selection = {read=_scw_Get_Selection};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisplayRulers() { Word r; HRESULT hr = Get_DisplayRulers(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisplayRulers = {read=_scw_Get_DisplayRulers, write=Set_DisplayRulers};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisplayVerticalRuler() { Word r; HRESULT hr = Get_DisplayVerticalRuler(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisplayVerticalRuler = {read=_scw_Get_DisplayVerticalRuler, write=Set_DisplayVerticalRuler};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Zooms _scw_Get_Zooms() { _di_Zooms r; HRESULT hr = Get_Zooms(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Zooms Zooms = {read=_scw_Get_Zooms};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_View _scw_Get_View() { _di_View r; HRESULT hr = Get_View(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_View View = {read=_scw_Get_View};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Pane _scw_Get_Next() { _di_Pane r; HRESULT hr = Get_Next(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Pane Next = {read=_scw_Get_Next};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Pane _scw_Get_Previous() { _di_Pane r; HRESULT hr = Get_Previous(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Pane Previous = {read=_scw_Get_Previous};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_HorizontalPercentScrolled() { int r; HRESULT hr = Get_HorizontalPercentScrolled(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int HorizontalPercentScrolled = {read=_scw_Get_HorizontalPercentScrolled, write=Set_HorizontalPercentScrolled};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_VerticalPercentScrolled() { int r; HRESULT hr = Get_VerticalPercentScrolled(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int VerticalPercentScrolled = {read=_scw_Get_VerticalPercentScrolled, write=Set_VerticalPercentScrolled};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_MinimumFontSize() { int r; HRESULT hr = Get_MinimumFontSize(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int MinimumFontSize = {read=_scw_Get_MinimumFontSize, write=Set_MinimumFontSize};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_BrowseToWindow() { Word r; HRESULT hr = Get_BrowseToWindow(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word BrowseToWindow = {read=_scw_Get_BrowseToWindow, write=Set_BrowseToWindow};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_BrowseWidth() { int r; HRESULT hr = Get_BrowseWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int BrowseWidth = {read=_scw_Get_BrowseWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Frameset _scw_Get_Frameset() { _di_Frameset r; HRESULT hr = Get_Frameset(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Frameset Frameset = {read=_scw_Get_Frameset};
};

__dispinterface PaneDisp;
typedef System::DelphiInterface<PaneDisp> _di_PaneDisp;
__dispinterface INTERFACE_UUID("{00020960-0000-0000-C000-000000000046}") PaneDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002095F-0000-0000-C000-000000000046}") Panes  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_Pane &Item_result) = 0 ;
	virtual HRESULT __safecall Add(OleVariant &SplitVertical, _di_Pane &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface PanesDisp;
typedef System::DelphiInterface<PanesDisp> _di_PanesDisp;
__dispinterface INTERFACE_UUID("{0002095F-0000-0000-C000-000000000046}") PanesDisp  : public IDispatch 
{
	
};

__interface Cells;
typedef System::DelphiInterface<Cells> _di_Cells;
__interface Borders;
typedef System::DelphiInterface<Borders> _di_Borders;
__interface Shading;
typedef System::DelphiInterface<Shading> _di_Shading;
__interface TextRetrievalMode;
typedef System::DelphiInterface<TextRetrievalMode> _di_TextRetrievalMode;
__interface ListFormat;
typedef System::DelphiInterface<ListFormat> _di_ListFormat;
__interface Columns;
typedef System::DelphiInterface<Columns> _di_Columns;
__interface Rows;
typedef System::DelphiInterface<Rows> _di_Rows;
__interface Find;
typedef System::DelphiInterface<Find> _di_Find;
__interface ShapeRange;
typedef System::DelphiInterface<ShapeRange> _di_ShapeRange;
__interface Table;
typedef System::DelphiInterface<Table> _di_Table;
__interface FootnoteOptions;
typedef System::DelphiInterface<FootnoteOptions> _di_FootnoteOptions;
__interface EndnoteOptions;
typedef System::DelphiInterface<EndnoteOptions> _di_EndnoteOptions;
__interface INTERFACE_UUID("{0002095E-0000-0000-C000-000000000046}") Range  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Text(WideString &Get_Text_result) = 0 ;
	virtual HRESULT __safecall Set_Text(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_FormattedText(_di_Range &Get_FormattedText_result) = 0 ;
	virtual HRESULT __safecall Set_FormattedText(const _di_Range prop) = 0 ;
	virtual HRESULT __safecall Get_Start(int &Get_Start_result) = 0 ;
	virtual HRESULT __safecall Set_Start(int prop) = 0 ;
	virtual HRESULT __safecall Get_End_(int &Get_End__result) = 0 ;
	virtual HRESULT __safecall Set_End_(int prop) = 0 ;
	virtual HRESULT __safecall Get_Font(_di__Font &Get_Font_result) = 0 ;
	virtual HRESULT __safecall Set_Font(const _di__Font prop) = 0 ;
	virtual HRESULT __safecall Get_Duplicate(_di_Range &Get_Duplicate_result) = 0 ;
	virtual HRESULT __safecall Get_StoryType(Activex::TOleEnum &Get_StoryType_result) = 0 ;
	virtual HRESULT __safecall Get_Tables(_di_Tables &Get_Tables_result) = 0 ;
	virtual HRESULT __safecall Get_Words(_di_Words &Get_Words_result) = 0 ;
	virtual HRESULT __safecall Get_Sentences(_di_Sentences &Get_Sentences_result) = 0 ;
	virtual HRESULT __safecall Get_Characters(_di_Characters &Get_Characters_result) = 0 ;
	virtual HRESULT __safecall Get_Footnotes(_di_Footnotes &Get_Footnotes_result) = 0 ;
	virtual HRESULT __safecall Get_Endnotes(_di_Endnotes &Get_Endnotes_result) = 0 ;
	virtual HRESULT __safecall Get_Comments(_di_Comments &Get_Comments_result) = 0 ;
	virtual HRESULT __safecall Get_Cells(_di_Cells &Get_Cells_result) = 0 ;
	virtual HRESULT __safecall Get_Sections(_di_Sections &Get_Sections_result) = 0 ;
	virtual HRESULT __safecall Get_Paragraphs(_di_Paragraphs &Get_Paragraphs_result) = 0 ;
	virtual HRESULT __safecall Get_Borders(_di_Borders &Get_Borders_result) = 0 ;
	virtual HRESULT __safecall Set_Borders(const _di_Borders prop) = 0 ;
	virtual HRESULT __safecall Get_Shading(_di_Shading &Get_Shading_result) = 0 ;
	virtual HRESULT __safecall Get_TextRetrievalMode(_di_TextRetrievalMode &Get_TextRetrievalMode_result) = 0 ;
	virtual HRESULT __safecall Set_TextRetrievalMode(const _di_TextRetrievalMode prop) = 0 ;
	virtual HRESULT __safecall Get_Fields(_di_Fields &Get_Fields_result) = 0 ;
	virtual HRESULT __safecall Get_FormFields(_di_FormFields &Get_FormFields_result) = 0 ;
	virtual HRESULT __safecall Get_Frames(_di_Frames &Get_Frames_result) = 0 ;
	virtual HRESULT __safecall Get_ParagraphFormat(_di__ParagraphFormat &Get_ParagraphFormat_result) = 0 ;
	virtual HRESULT __safecall Set_ParagraphFormat(const _di__ParagraphFormat prop) = 0 ;
	virtual HRESULT __safecall Get_ListFormat(_di_ListFormat &Get_ListFormat_result) = 0 ;
	virtual HRESULT __safecall Get_Bookmarks(_di_Bookmarks &Get_Bookmarks_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Bold(int &Get_Bold_result) = 0 ;
	virtual HRESULT __safecall Set_Bold(int prop) = 0 ;
	virtual HRESULT __safecall Get_Italic(int &Get_Italic_result) = 0 ;
	virtual HRESULT __safecall Set_Italic(int prop) = 0 ;
	virtual HRESULT __safecall Get_Underline(Activex::TOleEnum &Get_Underline_result) = 0 ;
	virtual HRESULT __safecall Set_Underline(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_EmphasisMark(Activex::TOleEnum &Get_EmphasisMark_result) = 0 ;
	virtual HRESULT __safecall Set_EmphasisMark(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_DisableCharacterSpaceGrid(Word &Get_DisableCharacterSpaceGrid_result) = 0 ;
	virtual HRESULT __safecall Set_DisableCharacterSpaceGrid(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Revisions(_di_Revisions &Get_Revisions_result) = 0 ;
	virtual HRESULT __safecall Get_Style(OleVariant &Get_Style_result) = 0 ;
	virtual HRESULT __safecall Set_Style(OleVariant &prop) = 0 ;
	virtual HRESULT __safecall Get_StoryLength(int &Get_StoryLength_result) = 0 ;
	virtual HRESULT __safecall Get_LanguageID(Activex::TOleEnum &Get_LanguageID_result) = 0 ;
	virtual HRESULT __safecall Set_LanguageID(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_SynonymInfo(_di_SynonymInfo &Get_SynonymInfo_result) = 0 ;
	virtual HRESULT __safecall Get_Hyperlinks(_di_Hyperlinks &Get_Hyperlinks_result) = 0 ;
	virtual HRESULT __safecall Get_ListParagraphs(_di_ListParagraphs &Get_ListParagraphs_result) = 0 ;
	virtual HRESULT __safecall Get_Subdocuments(_di_Subdocuments &Get_Subdocuments_result) = 0 ;
	virtual HRESULT __safecall Get_GrammarChecked(Word &Get_GrammarChecked_result) = 0 ;
	virtual HRESULT __safecall Set_GrammarChecked(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SpellingChecked(Word &Get_SpellingChecked_result) = 0 ;
	virtual HRESULT __safecall Set_SpellingChecked(Word prop) = 0 ;
	virtual HRESULT __safecall Get_HighlightColorIndex(Activex::TOleEnum &Get_HighlightColorIndex_result) = 0 ;
	virtual HRESULT __safecall Set_HighlightColorIndex(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Columns(_di_Columns &Get_Columns_result) = 0 ;
	virtual HRESULT __safecall Get_Rows(_di_Rows &Get_Rows_result) = 0 ;
	virtual HRESULT __safecall Get_CanEdit(int &Get_CanEdit_result) = 0 ;
	virtual HRESULT __safecall Get_CanPaste(int &Get_CanPaste_result) = 0 ;
	virtual HRESULT __safecall Get_IsEndOfRowMark(Word &Get_IsEndOfRowMark_result) = 0 ;
	virtual HRESULT __safecall Get_BookmarkID(int &Get_BookmarkID_result) = 0 ;
	virtual HRESULT __safecall Get_PreviousBookmarkID(int &Get_PreviousBookmarkID_result) = 0 ;
	virtual HRESULT __safecall Get_Find(_di_Find &Get_Find_result) = 0 ;
	virtual HRESULT __safecall Get_PageSetup(_di_PageSetup &Get_PageSetup_result) = 0 ;
	virtual HRESULT __safecall Set_PageSetup(const _di_PageSetup prop) = 0 ;
	virtual HRESULT __safecall Get_ShapeRange(_di_ShapeRange &Get_ShapeRange_result) = 0 ;
	virtual HRESULT __safecall Get_Case_(Activex::TOleEnum &Get_Case__result) = 0 ;
	virtual HRESULT __safecall Set_Case_(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Information(Activex::TOleEnum Type_, OleVariant &Get_Information_result) = 0 ;
	virtual HRESULT __safecall Get_ReadabilityStatistics(_di_ReadabilityStatistics &Get_ReadabilityStatistics_result) = 0 ;
	virtual HRESULT __safecall Get_GrammaticalErrors(_di_ProofreadingErrors &Get_GrammaticalErrors_result) = 0 ;
	virtual HRESULT __safecall Get_SpellingErrors(_di_ProofreadingErrors &Get_SpellingErrors_result) = 0 ;
	virtual HRESULT __safecall Get_Orientation(Activex::TOleEnum &Get_Orientation_result) = 0 ;
	virtual HRESULT __safecall Set_Orientation(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_InlineShapes(_di_InlineShapes &Get_InlineShapes_result) = 0 ;
	virtual HRESULT __safecall Get_NextStoryRange(_di_Range &Get_NextStoryRange_result) = 0 ;
	virtual HRESULT __safecall Get_LanguageIDFarEast(Activex::TOleEnum &Get_LanguageIDFarEast_result) = 0 ;
	virtual HRESULT __safecall Set_LanguageIDFarEast(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_LanguageIDOther(Activex::TOleEnum &Get_LanguageIDOther_result) = 0 ;
	virtual HRESULT __safecall Set_LanguageIDOther(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Select(void) = 0 ;
	virtual HRESULT __safecall SetRange(int Start, int End_) = 0 ;
	virtual HRESULT __safecall Collapse(OleVariant &Direction) = 0 ;
	virtual HRESULT __safecall InsertBefore(const WideString Text) = 0 ;
	virtual HRESULT __safecall InsertAfter(const WideString Text) = 0 ;
	virtual HRESULT __safecall Next(OleVariant &Unit_, OleVariant &Count, _di_Range &Next_result) = 0 ;
	virtual HRESULT __safecall Previous(OleVariant &Unit_, OleVariant &Count, _di_Range &Previous_result) = 0 ;
	virtual HRESULT __safecall StartOf(OleVariant &Unit_, OleVariant &Extend, int &StartOf_result) = 0 ;
	virtual HRESULT __safecall EndOf(OleVariant &Unit_, OleVariant &Extend, int &EndOf_result) = 0 ;
	virtual HRESULT __safecall Move(OleVariant &Unit_, OleVariant &Count, int &Move_result) = 0 ;
	virtual HRESULT __safecall MoveStart(OleVariant &Unit_, OleVariant &Count, int &MoveStart_result) = 0 ;
	virtual HRESULT __safecall MoveEnd(OleVariant &Unit_, OleVariant &Count, int &MoveEnd_result) = 0 ;
	virtual HRESULT __safecall MoveWhile(OleVariant &Cset, OleVariant &Count, int &MoveWhile_result) = 0 ;
	virtual HRESULT __safecall MoveStartWhile(OleVariant &Cset, OleVariant &Count, int &MoveStartWhile_result) = 0 ;
	virtual HRESULT __safecall MoveEndWhile(OleVariant &Cset, OleVariant &Count, int &MoveEndWhile_result) = 0 ;
	virtual HRESULT __safecall MoveUntil(OleVariant &Cset, OleVariant &Count, int &MoveUntil_result) = 0 ;
	virtual HRESULT __safecall MoveStartUntil(OleVariant &Cset, OleVariant &Count, int &MoveStartUntil_result) = 0 ;
	virtual HRESULT __safecall MoveEndUntil(OleVariant &Cset, OleVariant &Count, int &MoveEndUntil_result) = 0 ;
	virtual HRESULT __safecall Cut(void) = 0 ;
	virtual HRESULT __safecall Copy(void) = 0 ;
	virtual HRESULT __safecall Paste(void) = 0 ;
	virtual HRESULT __safecall InsertBreak(OleVariant &Type_) = 0 ;
	virtual HRESULT __safecall InsertFile(const WideString FileName, OleVariant &Range, OleVariant &ConfirmConversions, OleVariant &Link, OleVariant &Attachment) = 0 ;
	virtual HRESULT __safecall InStory(const _di_Range Range, Word &InStory_result) = 0 ;
	virtual HRESULT __safecall InRange(const _di_Range Range, Word &InRange_result) = 0 ;
	virtual HRESULT __safecall Delete(OleVariant &Unit_, OleVariant &Count, int &Delete_result) = 0 ;
	virtual HRESULT __safecall WholeStory(void) = 0 ;
	virtual HRESULT __safecall Expand(OleVariant &Unit_, int &Expand_result) = 0 ;
	virtual HRESULT __safecall InsertParagraph(void) = 0 ;
	virtual HRESULT __safecall InsertParagraphAfter(void) = 0 ;
	virtual HRESULT __safecall ConvertToTableOld(OleVariant &Separator, OleVariant &NumRows, OleVariant &NumColumns, OleVariant &InitialColumnWidth, OleVariant &Format, OleVariant &ApplyBorders, OleVariant &ApplyShading, OleVariant &ApplyFont, OleVariant &ApplyColor, OleVariant &ApplyHeadingRows, OleVariant &ApplyLastRow, OleVariant &ApplyFirstColumn, OleVariant &ApplyLastColumn, OleVariant &AutoFit, _di_Table &ConvertToTableOld_result) = 0 ;
	virtual HRESULT __safecall InsertDateTimeOld(OleVariant &DateTimeFormat, OleVariant &InsertAsField, OleVariant &InsertAsFullWidth) = 0 ;
	virtual HRESULT __safecall InsertSymbol(int CharacterNumber, OleVariant &Font, OleVariant &Unicode, OleVariant &Bias) = 0 ;
	virtual HRESULT __safecall InsertCrossReference(OleVariant &ReferenceType, Activex::TOleEnum ReferenceKind, OleVariant &ReferenceItem, OleVariant &InsertAsHyperlink, OleVariant &IncludePosition) = 0 ;
	virtual HRESULT __safecall InsertCaption(OleVariant &Label_, OleVariant &Title, OleVariant &TitleAutoText, OleVariant &Position) = 0 ;
	virtual HRESULT __safecall CopyAsPicture(void) = 0 ;
	virtual HRESULT __safecall SortOld(OleVariant &ExcludeHeader, OleVariant &FieldNumber, OleVariant &SortFieldType, OleVariant &SortOrder, OleVariant &FieldNumber2, OleVariant &SortFieldType2, OleVariant &SortOrder2, OleVariant &FieldNumber3, OleVariant &SortFieldType3, OleVariant &SortOrder3, OleVariant &SortColumn, OleVariant &Separator, OleVariant &CaseSensitive, OleVariant &LanguageID) = 0 ;
	virtual HRESULT __safecall SortAscending(void) = 0 ;
	virtual HRESULT __safecall SortDescending(void) = 0 ;
	virtual HRESULT __safecall IsEqual(const _di_Range Range, Word &IsEqual_result) = 0 ;
	virtual HRESULT __safecall Calculate(float &Calculate_result) = 0 ;
	virtual HRESULT __safecall GoTo_(OleVariant &What, OleVariant &Which, OleVariant &Count, OleVariant &Name, _di_Range &GoTo__result) = 0 ;
	virtual HRESULT __safecall GoToNext(Activex::TOleEnum What, _di_Range &GoToNext_result) = 0 ;
	virtual HRESULT __safecall GoToPrevious(Activex::TOleEnum What, _di_Range &GoToPrevious_result) = 0 ;
	virtual HRESULT __safecall PasteSpecial(OleVariant &IconIndex, OleVariant &Link, OleVariant &Placement, OleVariant &DisplayAsIcon, OleVariant &DataType, OleVariant &IconFileName, OleVariant &IconLabel) = 0 ;
	virtual HRESULT __safecall LookupNameProperties(void) = 0 ;
	virtual HRESULT __safecall ComputeStatistics(Activex::TOleEnum Statistic, int &ComputeStatistics_result) = 0 ;
	virtual HRESULT __safecall Relocate(int Direction) = 0 ;
	virtual HRESULT __safecall CheckSynonyms(void) = 0 ;
	virtual HRESULT __safecall SubscribeTo(const WideString Edition, OleVariant &Format) = 0 ;
	virtual HRESULT __safecall CreatePublisher(OleVariant &Edition, OleVariant &ContainsPICT, OleVariant &ContainsRTF, OleVariant &ContainsText) = 0 ;
	virtual HRESULT __safecall InsertAutoText(void) = 0 ;
	virtual HRESULT __safecall InsertDatabase(OleVariant &Format, OleVariant &Style, OleVariant &LinkToSource, OleVariant &Connection, OleVariant &SQLStatement, OleVariant &SQLStatement1, OleVariant &PasswordDocument, OleVariant &PasswordTemplate, OleVariant &WritePasswordDocument, OleVariant &WritePasswordTemplate, OleVariant &DataSource, OleVariant &From, OleVariant &To_, OleVariant &IncludeFields) = 0 ;
	virtual HRESULT __safecall AutoFormat(void) = 0 ;
	virtual HRESULT __safecall CheckGrammar(void) = 0 ;
	virtual HRESULT __safecall CheckSpelling(OleVariant &CustomDictionary, OleVariant &IgnoreUppercase, OleVariant &AlwaysSuggest, OleVariant &CustomDictionary2, OleVariant &CustomDictionary3, OleVariant &CustomDictionary4, OleVariant &CustomDictionary5, OleVariant &CustomDictionary6, OleVariant &CustomDictionary7, OleVariant &CustomDictionary8, OleVariant &CustomDictionary9, OleVariant &CustomDictionary10) = 0 ;
	virtual HRESULT __safecall GetSpellingSuggestions(OleVariant &CustomDictionary, OleVariant &IgnoreUppercase, OleVariant &MainDictionary, OleVariant &SuggestionMode, OleVariant &CustomDictionary2, OleVariant &CustomDictionary3, OleVariant &CustomDictionary4, OleVariant &CustomDictionary5, OleVariant &CustomDictionary6, OleVariant &CustomDictionary7, OleVariant &CustomDictionary8, OleVariant &CustomDictionary9, OleVariant &CustomDictionary10, _di_SpellingSuggestions &GetSpellingSuggestions_result) = 0 ;
	virtual HRESULT __safecall InsertParagraphBefore(void) = 0 ;
	virtual HRESULT __safecall NextSubdocument(void) = 0 ;
	virtual HRESULT __safecall PreviousSubdocument(void) = 0 ;
	virtual HRESULT __safecall ConvertHangulAndHanja(OleVariant &ConversionsMode, OleVariant &FastConversion, OleVariant &CheckHangulEnding, OleVariant &EnableRecentOrdering, OleVariant &CustomDictionary) = 0 ;
	virtual HRESULT __safecall PasteAsNestedTable(void) = 0 ;
	virtual HRESULT __safecall ModifyEnclosure(OleVariant &Style, OleVariant &Symbol, OleVariant &EnclosedText) = 0 ;
	virtual HRESULT __safecall PhoneticGuide(const WideString Text, Activex::TOleEnum Alignment, int Raise_, int FontSize, const WideString FontName) = 0 ;
	virtual HRESULT __safecall InsertDateTime(OleVariant &DateTimeFormat, OleVariant &InsertAsField, OleVariant &InsertAsFullWidth, OleVariant &DateLanguage, OleVariant &CalendarType) = 0 ;
	virtual HRESULT __safecall Sort(OleVariant &ExcludeHeader, OleVariant &FieldNumber, OleVariant &SortFieldType, OleVariant &SortOrder, OleVariant &FieldNumber2, OleVariant &SortFieldType2, OleVariant &SortOrder2, OleVariant &FieldNumber3, OleVariant &SortFieldType3, OleVariant &SortOrder3, OleVariant &SortColumn, OleVariant &Separator, OleVariant &CaseSensitive, OleVariant &BidiSort, OleVariant &IgnoreThe, OleVariant &IgnoreKashida, OleVariant &IgnoreDiacritics, OleVariant &IgnoreHe, OleVariant &LanguageID) = 0 ;
	virtual HRESULT __safecall DetectLanguage(void) = 0 ;
	virtual HRESULT __safecall ConvertToTable(OleVariant &Separator, OleVariant &NumRows, OleVariant &NumColumns, OleVariant &InitialColumnWidth, OleVariant &Format, OleVariant &ApplyBorders, OleVariant &ApplyShading, OleVariant &ApplyFont, OleVariant &ApplyColor, OleVariant &ApplyHeadingRows, OleVariant &ApplyLastRow, OleVariant &ApplyFirstColumn, OleVariant &ApplyLastColumn, OleVariant &AutoFit, OleVariant &AutoFitBehavior, OleVariant &DefaultTableBehavior, _di_Table &ConvertToTable_result) = 0 ;
	virtual HRESULT __safecall TCSCConverter(Activex::TOleEnum WdTCSCConverterDirection, Word CommonTerms, Word UseVariants) = 0 ;
	virtual HRESULT __safecall Get_LanguageDetected(Word &Get_LanguageDetected_result) = 0 ;
	virtual HRESULT __safecall Set_LanguageDetected(Word prop) = 0 ;
	virtual HRESULT __safecall Get_FitTextWidth(float &Get_FitTextWidth_result) = 0 ;
	virtual HRESULT __safecall Set_FitTextWidth(float prop) = 0 ;
	virtual HRESULT __safecall Get_HorizontalInVertical(Activex::TOleEnum &Get_HorizontalInVertical_result) = 0 ;
	virtual HRESULT __safecall Set_HorizontalInVertical(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_TwoLinesInOne(Activex::TOleEnum &Get_TwoLinesInOne_result) = 0 ;
	virtual HRESULT __safecall Set_TwoLinesInOne(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_CombineCharacters(Word &Get_CombineCharacters_result) = 0 ;
	virtual HRESULT __safecall Set_CombineCharacters(Word prop) = 0 ;
	virtual HRESULT __safecall Get_NoProofing(int &Get_NoProofing_result) = 0 ;
	virtual HRESULT __safecall Set_NoProofing(int prop) = 0 ;
	virtual HRESULT __safecall Get_TopLevelTables(_di_Tables &Get_TopLevelTables_result) = 0 ;
	virtual HRESULT __safecall Get_Scripts(Opofcxp::_di_Scripts &Get_Scripts_result) = 0 ;
	virtual HRESULT __safecall Get_CharacterWidth(Activex::TOleEnum &Get_CharacterWidth_result) = 0 ;
	virtual HRESULT __safecall Set_CharacterWidth(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Kana(Activex::TOleEnum &Get_Kana_result) = 0 ;
	virtual HRESULT __safecall Set_Kana(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_BoldBi(int &Get_BoldBi_result) = 0 ;
	virtual HRESULT __safecall Set_BoldBi(int prop) = 0 ;
	virtual HRESULT __safecall Get_ItalicBi(int &Get_ItalicBi_result) = 0 ;
	virtual HRESULT __safecall Set_ItalicBi(int prop) = 0 ;
	virtual HRESULT __safecall Get_ID(WideString &Get_ID_result) = 0 ;
	virtual HRESULT __safecall Set_ID(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_HTMLDivisions(_di_HTMLDivisions &Get_HTMLDivisions_result) = 0 ;
	virtual HRESULT __safecall Get_SmartTags(_di_SmartTags &Get_SmartTags_result) = 0 ;
	virtual HRESULT __safecall Get_ShowAll(Word &Get_ShowAll_result) = 0 ;
	virtual HRESULT __safecall Set_ShowAll(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Document(_di__Document &Get_Document_result) = 0 ;
	virtual HRESULT __safecall Get_FootnoteOptions(_di_FootnoteOptions &Get_FootnoteOptions_result) = 0 ;
	virtual HRESULT __safecall Get_EndnoteOptions(_di_EndnoteOptions &Get_EndnoteOptions_result) = 0 ;
	virtual HRESULT __safecall PasteAndFormat(Activex::TOleEnum Type_) = 0 ;
	virtual HRESULT __safecall PasteExcelTable(Word LinkedToExcel, Word WordFormatting, Word RTF) = 0 ;
	virtual HRESULT __safecall PasteAppendTable(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Text() { WideString r; HRESULT hr = Get_Text(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Text = {read=_scw_Get_Text, write=Set_Text};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_FormattedText() { _di_Range r; HRESULT hr = Get_FormattedText(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range FormattedText = {read=_scw_Get_FormattedText, write=Set_FormattedText};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Start() { int r; HRESULT hr = Get_Start(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Start = {read=_scw_Get_Start, write=Set_Start};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_End_() { int r; HRESULT hr = Get_End_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int End_ = {read=_scw_Get_End_, write=Set_End_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Font _scw_Get_Font() { _di__Font r; HRESULT hr = Get_Font(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Font Font = {read=_scw_Get_Font, write=Set_Font};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Duplicate() { _di_Range r; HRESULT hr = Get_Duplicate(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Duplicate = {read=_scw_Get_Duplicate};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_StoryType() { Activex::TOleEnum r; HRESULT hr = Get_StoryType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum StoryType = {read=_scw_Get_StoryType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Tables _scw_Get_Tables() { _di_Tables r; HRESULT hr = Get_Tables(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Tables Tables = {read=_scw_Get_Tables};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Words _scw_Get_Words() { _di_Words r; HRESULT hr = Get_Words(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Words Words = {read=_scw_Get_Words};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Sentences _scw_Get_Sentences() { _di_Sentences r; HRESULT hr = Get_Sentences(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Sentences Sentences = {read=_scw_Get_Sentences};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Characters _scw_Get_Characters() { _di_Characters r; HRESULT hr = Get_Characters(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Characters Characters = {read=_scw_Get_Characters};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Footnotes _scw_Get_Footnotes() { _di_Footnotes r; HRESULT hr = Get_Footnotes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Footnotes Footnotes = {read=_scw_Get_Footnotes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Endnotes _scw_Get_Endnotes() { _di_Endnotes r; HRESULT hr = Get_Endnotes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Endnotes Endnotes = {read=_scw_Get_Endnotes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Comments _scw_Get_Comments() { _di_Comments r; HRESULT hr = Get_Comments(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Comments Comments = {read=_scw_Get_Comments};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Cells _scw_Get_Cells() { _di_Cells r; HRESULT hr = Get_Cells(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Cells Cells = {read=_scw_Get_Cells};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Sections _scw_Get_Sections() { _di_Sections r; HRESULT hr = Get_Sections(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Sections Sections = {read=_scw_Get_Sections};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Paragraphs _scw_Get_Paragraphs() { _di_Paragraphs r; HRESULT hr = Get_Paragraphs(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Paragraphs Paragraphs = {read=_scw_Get_Paragraphs};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Borders _scw_Get_Borders() { _di_Borders r; HRESULT hr = Get_Borders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Borders Borders = {read=_scw_Get_Borders, write=Set_Borders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shading _scw_Get_Shading() { _di_Shading r; HRESULT hr = Get_Shading(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shading Shading = {read=_scw_Get_Shading};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_TextRetrievalMode _scw_Get_TextRetrievalMode() { _di_TextRetrievalMode r; HRESULT hr = Get_TextRetrievalMode(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_TextRetrievalMode TextRetrievalMode = {read=_scw_Get_TextRetrievalMode, write=Set_TextRetrievalMode};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Fields _scw_Get_Fields() { _di_Fields r; HRESULT hr = Get_Fields(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Fields Fields = {read=_scw_Get_Fields};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_FormFields _scw_Get_FormFields() { _di_FormFields r; HRESULT hr = Get_FormFields(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_FormFields FormFields = {read=_scw_Get_FormFields};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Frames _scw_Get_Frames() { _di_Frames r; HRESULT hr = Get_Frames(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Frames Frames = {read=_scw_Get_Frames};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__ParagraphFormat _scw_Get_ParagraphFormat() { _di__ParagraphFormat r; HRESULT hr = Get_ParagraphFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__ParagraphFormat ParagraphFormat = {read=_scw_Get_ParagraphFormat, write=Set_ParagraphFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ListFormat _scw_Get_ListFormat() { _di_ListFormat r; HRESULT hr = Get_ListFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ListFormat ListFormat = {read=_scw_Get_ListFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Bookmarks _scw_Get_Bookmarks() { _di_Bookmarks r; HRESULT hr = Get_Bookmarks(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Bookmarks Bookmarks = {read=_scw_Get_Bookmarks};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Bold() { int r; HRESULT hr = Get_Bold(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Bold = {read=_scw_Get_Bold, write=Set_Bold};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Italic() { int r; HRESULT hr = Get_Italic(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Italic = {read=_scw_Get_Italic, write=Set_Italic};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Underline() { Activex::TOleEnum r; HRESULT hr = Get_Underline(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Underline = {read=_scw_Get_Underline, write=Set_Underline};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_EmphasisMark() { Activex::TOleEnum r; HRESULT hr = Get_EmphasisMark(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum EmphasisMark = {read=_scw_Get_EmphasisMark, write=Set_EmphasisMark};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisableCharacterSpaceGrid() { Word r; HRESULT hr = Get_DisableCharacterSpaceGrid(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisableCharacterSpaceGrid = {read=_scw_Get_DisableCharacterSpaceGrid, write=Set_DisableCharacterSpaceGrid};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Revisions _scw_Get_Revisions() { _di_Revisions r; HRESULT hr = Get_Revisions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Revisions Revisions = {read=_scw_Get_Revisions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_StoryLength() { int r; HRESULT hr = Get_StoryLength(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int StoryLength = {read=_scw_Get_StoryLength};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LanguageID() { Activex::TOleEnum r; HRESULT hr = Get_LanguageID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LanguageID = {read=_scw_Get_LanguageID, write=Set_LanguageID};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_SynonymInfo _scw_Get_SynonymInfo() { _di_SynonymInfo r; HRESULT hr = Get_SynonymInfo(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_SynonymInfo SynonymInfo = {read=_scw_Get_SynonymInfo};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Hyperlinks _scw_Get_Hyperlinks() { _di_Hyperlinks r; HRESULT hr = Get_Hyperlinks(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Hyperlinks Hyperlinks = {read=_scw_Get_Hyperlinks};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ListParagraphs _scw_Get_ListParagraphs() { _di_ListParagraphs r; HRESULT hr = Get_ListParagraphs(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ListParagraphs ListParagraphs = {read=_scw_Get_ListParagraphs};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Subdocuments _scw_Get_Subdocuments() { _di_Subdocuments r; HRESULT hr = Get_Subdocuments(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Subdocuments Subdocuments = {read=_scw_Get_Subdocuments};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_GrammarChecked() { Word r; HRESULT hr = Get_GrammarChecked(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word GrammarChecked = {read=_scw_Get_GrammarChecked, write=Set_GrammarChecked};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SpellingChecked() { Word r; HRESULT hr = Get_SpellingChecked(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SpellingChecked = {read=_scw_Get_SpellingChecked, write=Set_SpellingChecked};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_HighlightColorIndex() { Activex::TOleEnum r; HRESULT hr = Get_HighlightColorIndex(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum HighlightColorIndex = {read=_scw_Get_HighlightColorIndex, write=Set_HighlightColorIndex};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Columns _scw_Get_Columns() { _di_Columns r; HRESULT hr = Get_Columns(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Columns Columns = {read=_scw_Get_Columns};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Rows _scw_Get_Rows() { _di_Rows r; HRESULT hr = Get_Rows(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Rows Rows = {read=_scw_Get_Rows};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_CanEdit() { int r; HRESULT hr = Get_CanEdit(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int CanEdit = {read=_scw_Get_CanEdit};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_CanPaste() { int r; HRESULT hr = Get_CanPaste(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int CanPaste = {read=_scw_Get_CanPaste};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IsEndOfRowMark() { Word r; HRESULT hr = Get_IsEndOfRowMark(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IsEndOfRowMark = {read=_scw_Get_IsEndOfRowMark};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_BookmarkID() { int r; HRESULT hr = Get_BookmarkID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int BookmarkID = {read=_scw_Get_BookmarkID};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_PreviousBookmarkID() { int r; HRESULT hr = Get_PreviousBookmarkID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int PreviousBookmarkID = {read=_scw_Get_PreviousBookmarkID};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Find _scw_Get_Find() { _di_Find r; HRESULT hr = Get_Find(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Find Find = {read=_scw_Get_Find};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_PageSetup _scw_Get_PageSetup() { _di_PageSetup r; HRESULT hr = Get_PageSetup(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_PageSetup PageSetup = {read=_scw_Get_PageSetup, write=Set_PageSetup};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ShapeRange _scw_Get_ShapeRange() { _di_ShapeRange r; HRESULT hr = Get_ShapeRange(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ShapeRange ShapeRange = {read=_scw_Get_ShapeRange};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Case_() { Activex::TOleEnum r; HRESULT hr = Get_Case_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Case_ = {read=_scw_Get_Case_, write=Set_Case_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline OleVariant _scw_Get_Information(Activex::TOleEnum Type_) { OleVariant r; HRESULT hr = Get_Information(Type_, r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property OleVariant Information[Activex::TOleEnum Type_] = {read=_scw_Get_Information};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ReadabilityStatistics _scw_Get_ReadabilityStatistics() { _di_ReadabilityStatistics r; HRESULT hr = Get_ReadabilityStatistics(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ReadabilityStatistics ReadabilityStatistics = {read=_scw_Get_ReadabilityStatistics};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ProofreadingErrors _scw_Get_GrammaticalErrors() { _di_ProofreadingErrors r; HRESULT hr = Get_GrammaticalErrors(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ProofreadingErrors GrammaticalErrors = {read=_scw_Get_GrammaticalErrors};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ProofreadingErrors _scw_Get_SpellingErrors() { _di_ProofreadingErrors r; HRESULT hr = Get_SpellingErrors(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ProofreadingErrors SpellingErrors = {read=_scw_Get_SpellingErrors};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Orientation() { Activex::TOleEnum r; HRESULT hr = Get_Orientation(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Orientation = {read=_scw_Get_Orientation, write=Set_Orientation};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_InlineShapes _scw_Get_InlineShapes() { _di_InlineShapes r; HRESULT hr = Get_InlineShapes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_InlineShapes InlineShapes = {read=_scw_Get_InlineShapes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_NextStoryRange() { _di_Range r; HRESULT hr = Get_NextStoryRange(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range NextStoryRange = {read=_scw_Get_NextStoryRange};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LanguageIDFarEast() { Activex::TOleEnum r; HRESULT hr = Get_LanguageIDFarEast(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LanguageIDFarEast = {read=_scw_Get_LanguageIDFarEast, write=Set_LanguageIDFarEast};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LanguageIDOther() { Activex::TOleEnum r; HRESULT hr = Get_LanguageIDOther(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LanguageIDOther = {read=_scw_Get_LanguageIDOther, write=Set_LanguageIDOther};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_LanguageDetected() { Word r; HRESULT hr = Get_LanguageDetected(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word LanguageDetected = {read=_scw_Get_LanguageDetected, write=Set_LanguageDetected};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_FitTextWidth() { float r; HRESULT hr = Get_FitTextWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float FitTextWidth = {read=_scw_Get_FitTextWidth, write=Set_FitTextWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_HorizontalInVertical() { Activex::TOleEnum r; HRESULT hr = Get_HorizontalInVertical(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum HorizontalInVertical = {read=_scw_Get_HorizontalInVertical, write=Set_HorizontalInVertical};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_TwoLinesInOne() { Activex::TOleEnum r; HRESULT hr = Get_TwoLinesInOne(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum TwoLinesInOne = {read=_scw_Get_TwoLinesInOne, write=Set_TwoLinesInOne};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_CombineCharacters() { Word r; HRESULT hr = Get_CombineCharacters(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word CombineCharacters = {read=_scw_Get_CombineCharacters, write=Set_CombineCharacters};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_NoProofing() { int r; HRESULT hr = Get_NoProofing(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int NoProofing = {read=_scw_Get_NoProofing, write=Set_NoProofing};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Tables _scw_Get_TopLevelTables() { _di_Tables r; HRESULT hr = Get_TopLevelTables(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Tables TopLevelTables = {read=_scw_Get_TopLevelTables};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Opofcxp::_di_Scripts _scw_Get_Scripts() { Opofcxp::_di_Scripts r; HRESULT hr = Get_Scripts(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Opofcxp::_di_Scripts Scripts = {read=_scw_Get_Scripts};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_CharacterWidth() { Activex::TOleEnum r; HRESULT hr = Get_CharacterWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum CharacterWidth = {read=_scw_Get_CharacterWidth, write=Set_CharacterWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Kana() { Activex::TOleEnum r; HRESULT hr = Get_Kana(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Kana = {read=_scw_Get_Kana, write=Set_Kana};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_BoldBi() { int r; HRESULT hr = Get_BoldBi(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int BoldBi = {read=_scw_Get_BoldBi, write=Set_BoldBi};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_ItalicBi() { int r; HRESULT hr = Get_ItalicBi(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int ItalicBi = {read=_scw_Get_ItalicBi, write=Set_ItalicBi};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ID() { WideString r; HRESULT hr = Get_ID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ID = {read=_scw_Get_ID, write=Set_ID};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_HTMLDivisions _scw_Get_HTMLDivisions() { _di_HTMLDivisions r; HRESULT hr = Get_HTMLDivisions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_HTMLDivisions HTMLDivisions = {read=_scw_Get_HTMLDivisions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_SmartTags _scw_Get_SmartTags() { _di_SmartTags r; HRESULT hr = Get_SmartTags(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_SmartTags SmartTags = {read=_scw_Get_SmartTags};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowAll() { Word r; HRESULT hr = Get_ShowAll(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowAll = {read=_scw_Get_ShowAll, write=Set_ShowAll};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Document _scw_Get_Document() { _di__Document r; HRESULT hr = Get_Document(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Document Document = {read=_scw_Get_Document};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_FootnoteOptions _scw_Get_FootnoteOptions() { _di_FootnoteOptions r; HRESULT hr = Get_FootnoteOptions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_FootnoteOptions FootnoteOptions = {read=_scw_Get_FootnoteOptions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_EndnoteOptions _scw_Get_EndnoteOptions() { _di_EndnoteOptions r; HRESULT hr = Get_EndnoteOptions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_EndnoteOptions EndnoteOptions = {read=_scw_Get_EndnoteOptions};
};

__dispinterface RangeDisp;
typedef System::DelphiInterface<RangeDisp> _di_RangeDisp;
__dispinterface INTERFACE_UUID("{0002095E-0000-0000-C000-000000000046}") RangeDisp  : public IDispatch 
{
	
};

__interface List;
typedef System::DelphiInterface<List> _di_List;
__interface ListTemplate;
typedef System::DelphiInterface<ListTemplate> _di_ListTemplate;
__interface InlineShape;
typedef System::DelphiInterface<InlineShape> _di_InlineShape;
__interface INTERFACE_UUID("{000209C0-0000-0000-C000-000000000046}") ListFormat  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_ListLevelNumber(int &Get_ListLevelNumber_result) = 0 ;
	virtual HRESULT __safecall Set_ListLevelNumber(int prop) = 0 ;
	virtual HRESULT __safecall Get_List(_di_List &Get_List_result) = 0 ;
	virtual HRESULT __safecall Get_ListTemplate(_di_ListTemplate &Get_ListTemplate_result) = 0 ;
	virtual HRESULT __safecall Get_ListValue(int &Get_ListValue_result) = 0 ;
	virtual HRESULT __safecall Get_SingleList(Word &Get_SingleList_result) = 0 ;
	virtual HRESULT __safecall Get_SingleListTemplate(Word &Get_SingleListTemplate_result) = 0 ;
	virtual HRESULT __safecall Get_ListType(Activex::TOleEnum &Get_ListType_result) = 0 ;
	virtual HRESULT __safecall Get_ListString(WideString &Get_ListString_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall CanContinuePreviousList(const _di_ListTemplate ListTemplate, Activex::TOleEnum &CanContinuePreviousList_result) = 0 ;
	virtual HRESULT __safecall RemoveNumbers(OleVariant &NumberType) = 0 ;
	virtual HRESULT __safecall ConvertNumbersToText(OleVariant &NumberType) = 0 ;
	virtual HRESULT __safecall CountNumberedItems(OleVariant &NumberType, OleVariant &Level, int &CountNumberedItems_result) = 0 ;
	virtual HRESULT __safecall ApplyBulletDefaultOld(void) = 0 ;
	virtual HRESULT __safecall ApplyNumberDefaultOld(void) = 0 ;
	virtual HRESULT __safecall ApplyOutlineNumberDefaultOld(void) = 0 ;
	virtual HRESULT __safecall ApplyListTemplateOld(const _di_ListTemplate ListTemplate, OleVariant &ContinuePreviousList, OleVariant &ApplyTo) = 0 ;
	virtual HRESULT __safecall ListOutdent(void) = 0 ;
	virtual HRESULT __safecall ListIndent(void) = 0 ;
	virtual HRESULT __safecall ApplyBulletDefault(OleVariant &DefaultListBehavior) = 0 ;
	virtual HRESULT __safecall ApplyNumberDefault(OleVariant &DefaultListBehavior) = 0 ;
	virtual HRESULT __safecall ApplyOutlineNumberDefault(OleVariant &DefaultListBehavior) = 0 ;
	virtual HRESULT __safecall ApplyListTemplate(const _di_ListTemplate ListTemplate, OleVariant &ContinuePreviousList, OleVariant &ApplyTo, OleVariant &DefaultListBehavior) = 0 ;
	virtual HRESULT __safecall Get_ListPictureBullet(_di_InlineShape &Get_ListPictureBullet_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_ListLevelNumber() { int r; HRESULT hr = Get_ListLevelNumber(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int ListLevelNumber = {read=_scw_Get_ListLevelNumber, write=Set_ListLevelNumber};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_List _scw_Get_List() { _di_List r; HRESULT hr = Get_List(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_List List = {read=_scw_Get_List};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ListTemplate _scw_Get_ListTemplate() { _di_ListTemplate r; HRESULT hr = Get_ListTemplate(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ListTemplate ListTemplate = {read=_scw_Get_ListTemplate};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_ListValue() { int r; HRESULT hr = Get_ListValue(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int ListValue = {read=_scw_Get_ListValue};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SingleList() { Word r; HRESULT hr = Get_SingleList(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SingleList = {read=_scw_Get_SingleList};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SingleListTemplate() { Word r; HRESULT hr = Get_SingleListTemplate(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SingleListTemplate = {read=_scw_Get_SingleListTemplate};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_ListType() { Activex::TOleEnum r; HRESULT hr = Get_ListType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum ListType = {read=_scw_Get_ListType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ListString() { WideString r; HRESULT hr = Get_ListString(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ListString = {read=_scw_Get_ListString};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_InlineShape _scw_Get_ListPictureBullet() { _di_InlineShape r; HRESULT hr = Get_ListPictureBullet(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_InlineShape ListPictureBullet = {read=_scw_Get_ListPictureBullet};
};

__dispinterface ListFormatDisp;
typedef System::DelphiInterface<ListFormatDisp> _di_ListFormatDisp;
__dispinterface INTERFACE_UUID("{000209C0-0000-0000-C000-000000000046}") ListFormatDisp  : public IDispatch 
{
	
};

__interface Replacement;
typedef System::DelphiInterface<Replacement> _di_Replacement;
__interface Frame;
typedef System::DelphiInterface<Frame> _di_Frame;
__interface INTERFACE_UUID("{000209B0-0000-0000-C000-000000000046}") Find  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Forward(Word &Get_Forward_result) = 0 ;
	virtual HRESULT __safecall Set_Forward(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Font(_di__Font &Get_Font_result) = 0 ;
	virtual HRESULT __safecall Set_Font(const _di__Font prop) = 0 ;
	virtual HRESULT __safecall Get_Found(Word &Get_Found_result) = 0 ;
	virtual HRESULT __safecall Get_MatchAllWordForms(Word &Get_MatchAllWordForms_result) = 0 ;
	virtual HRESULT __safecall Set_MatchAllWordForms(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchCase(Word &Get_MatchCase_result) = 0 ;
	virtual HRESULT __safecall Set_MatchCase(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchWildcards(Word &Get_MatchWildcards_result) = 0 ;
	virtual HRESULT __safecall Set_MatchWildcards(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchSoundsLike(Word &Get_MatchSoundsLike_result) = 0 ;
	virtual HRESULT __safecall Set_MatchSoundsLike(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchWholeWord(Word &Get_MatchWholeWord_result) = 0 ;
	virtual HRESULT __safecall Set_MatchWholeWord(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchFuzzy(Word &Get_MatchFuzzy_result) = 0 ;
	virtual HRESULT __safecall Set_MatchFuzzy(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchByte(Word &Get_MatchByte_result) = 0 ;
	virtual HRESULT __safecall Set_MatchByte(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ParagraphFormat(_di__ParagraphFormat &Get_ParagraphFormat_result) = 0 ;
	virtual HRESULT __safecall Set_ParagraphFormat(const _di__ParagraphFormat prop) = 0 ;
	virtual HRESULT __safecall Get_Style(OleVariant &Get_Style_result) = 0 ;
	virtual HRESULT __safecall Set_Style(OleVariant &prop) = 0 ;
	virtual HRESULT __safecall Get_Text(WideString &Get_Text_result) = 0 ;
	virtual HRESULT __safecall Set_Text(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_LanguageID(Activex::TOleEnum &Get_LanguageID_result) = 0 ;
	virtual HRESULT __safecall Set_LanguageID(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Highlight(int &Get_Highlight_result) = 0 ;
	virtual HRESULT __safecall Set_Highlight(int prop) = 0 ;
	virtual HRESULT __safecall Get_Replacement(_di_Replacement &Get_Replacement_result) = 0 ;
	virtual HRESULT __safecall Get_Frame(_di_Frame &Get_Frame_result) = 0 ;
	virtual HRESULT __safecall Get_Wrap(Activex::TOleEnum &Get_Wrap_result) = 0 ;
	virtual HRESULT __safecall Set_Wrap(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Format(Word &Get_Format_result) = 0 ;
	virtual HRESULT __safecall Set_Format(Word prop) = 0 ;
	virtual HRESULT __safecall Get_LanguageIDFarEast(Activex::TOleEnum &Get_LanguageIDFarEast_result) = 0 ;
	virtual HRESULT __safecall Set_LanguageIDFarEast(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_LanguageIDOther(Activex::TOleEnum &Get_LanguageIDOther_result) = 0 ;
	virtual HRESULT __safecall Set_LanguageIDOther(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_CorrectHangulEndings(Word &Get_CorrectHangulEndings_result) = 0 ;
	virtual HRESULT __safecall Set_CorrectHangulEndings(Word prop) = 0 ;
	virtual HRESULT __safecall ExecuteOld(OleVariant &FindText, OleVariant &MatchCase, OleVariant &MatchWholeWord, OleVariant &MatchWildcards, OleVariant &MatchSoundsLike, OleVariant &MatchAllWordForms, OleVariant &Forward, OleVariant &Wrap, OleVariant &Format, OleVariant &ReplaceWith, OleVariant &Replace, Word &ExecuteOld_result) = 0 ;
	virtual HRESULT __safecall ClearFormatting(void) = 0 ;
	virtual HRESULT __safecall SetAllFuzzyOptions(void) = 0 ;
	virtual HRESULT __safecall ClearAllFuzzyOptions(void) = 0 ;
	virtual HRESULT __safecall Execute(OleVariant &FindText, OleVariant &MatchCase, OleVariant &MatchWholeWord, OleVariant &MatchWildcards, OleVariant &MatchSoundsLike, OleVariant &MatchAllWordForms, OleVariant &Forward, OleVariant &Wrap, OleVariant &Format, OleVariant &ReplaceWith, OleVariant &Replace, OleVariant &MatchKashida, OleVariant &MatchDiacritics, OleVariant &MatchAlefHamza, OleVariant &MatchControl, Word &Execute_result) = 0 ;
	virtual HRESULT __safecall Get_NoProofing(int &Get_NoProofing_result) = 0 ;
	virtual HRESULT __safecall Set_NoProofing(int prop) = 0 ;
	virtual HRESULT __safecall Get_MatchKashida(Word &Get_MatchKashida_result) = 0 ;
	virtual HRESULT __safecall Set_MatchKashida(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchDiacritics(Word &Get_MatchDiacritics_result) = 0 ;
	virtual HRESULT __safecall Set_MatchDiacritics(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchAlefHamza(Word &Get_MatchAlefHamza_result) = 0 ;
	virtual HRESULT __safecall Set_MatchAlefHamza(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchControl(Word &Get_MatchControl_result) = 0 ;
	virtual HRESULT __safecall Set_MatchControl(Word prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Forward() { Word r; HRESULT hr = Get_Forward(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Forward = {read=_scw_Get_Forward, write=Set_Forward};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Font _scw_Get_Font() { _di__Font r; HRESULT hr = Get_Font(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Font Font = {read=_scw_Get_Font, write=Set_Font};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Found() { Word r; HRESULT hr = Get_Found(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Found = {read=_scw_Get_Found};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchAllWordForms() { Word r; HRESULT hr = Get_MatchAllWordForms(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchAllWordForms = {read=_scw_Get_MatchAllWordForms, write=Set_MatchAllWordForms};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchCase() { Word r; HRESULT hr = Get_MatchCase(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchCase = {read=_scw_Get_MatchCase, write=Set_MatchCase};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchWildcards() { Word r; HRESULT hr = Get_MatchWildcards(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchWildcards = {read=_scw_Get_MatchWildcards, write=Set_MatchWildcards};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchSoundsLike() { Word r; HRESULT hr = Get_MatchSoundsLike(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchSoundsLike = {read=_scw_Get_MatchSoundsLike, write=Set_MatchSoundsLike};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchWholeWord() { Word r; HRESULT hr = Get_MatchWholeWord(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchWholeWord = {read=_scw_Get_MatchWholeWord, write=Set_MatchWholeWord};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchFuzzy() { Word r; HRESULT hr = Get_MatchFuzzy(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchFuzzy = {read=_scw_Get_MatchFuzzy, write=Set_MatchFuzzy};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchByte() { Word r; HRESULT hr = Get_MatchByte(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchByte = {read=_scw_Get_MatchByte, write=Set_MatchByte};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__ParagraphFormat _scw_Get_ParagraphFormat() { _di__ParagraphFormat r; HRESULT hr = Get_ParagraphFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__ParagraphFormat ParagraphFormat = {read=_scw_Get_ParagraphFormat, write=Set_ParagraphFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Text() { WideString r; HRESULT hr = Get_Text(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Text = {read=_scw_Get_Text, write=Set_Text};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LanguageID() { Activex::TOleEnum r; HRESULT hr = Get_LanguageID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LanguageID = {read=_scw_Get_LanguageID, write=Set_LanguageID};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Highlight() { int r; HRESULT hr = Get_Highlight(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Highlight = {read=_scw_Get_Highlight, write=Set_Highlight};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Replacement _scw_Get_Replacement() { _di_Replacement r; HRESULT hr = Get_Replacement(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Replacement Replacement = {read=_scw_Get_Replacement};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Frame _scw_Get_Frame() { _di_Frame r; HRESULT hr = Get_Frame(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Frame Frame = {read=_scw_Get_Frame};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Wrap() { Activex::TOleEnum r; HRESULT hr = Get_Wrap(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Wrap = {read=_scw_Get_Wrap, write=Set_Wrap};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Format() { Word r; HRESULT hr = Get_Format(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Format = {read=_scw_Get_Format, write=Set_Format};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LanguageIDFarEast() { Activex::TOleEnum r; HRESULT hr = Get_LanguageIDFarEast(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LanguageIDFarEast = {read=_scw_Get_LanguageIDFarEast, write=Set_LanguageIDFarEast};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LanguageIDOther() { Activex::TOleEnum r; HRESULT hr = Get_LanguageIDOther(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LanguageIDOther = {read=_scw_Get_LanguageIDOther, write=Set_LanguageIDOther};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_CorrectHangulEndings() { Word r; HRESULT hr = Get_CorrectHangulEndings(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word CorrectHangulEndings = {read=_scw_Get_CorrectHangulEndings, write=Set_CorrectHangulEndings};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_NoProofing() { int r; HRESULT hr = Get_NoProofing(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int NoProofing = {read=_scw_Get_NoProofing, write=Set_NoProofing};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchKashida() { Word r; HRESULT hr = Get_MatchKashida(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchKashida = {read=_scw_Get_MatchKashida, write=Set_MatchKashida};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchDiacritics() { Word r; HRESULT hr = Get_MatchDiacritics(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchDiacritics = {read=_scw_Get_MatchDiacritics, write=Set_MatchDiacritics};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchAlefHamza() { Word r; HRESULT hr = Get_MatchAlefHamza(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchAlefHamza = {read=_scw_Get_MatchAlefHamza, write=Set_MatchAlefHamza};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchControl() { Word r; HRESULT hr = Get_MatchControl(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchControl = {read=_scw_Get_MatchControl, write=Set_MatchControl};
};

__dispinterface FindDisp;
typedef System::DelphiInterface<FindDisp> _di_FindDisp;
__dispinterface INTERFACE_UUID("{000209B0-0000-0000-C000-000000000046}") FindDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209B1-0000-0000-C000-000000000046}") Replacement  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Font(_di__Font &Get_Font_result) = 0 ;
	virtual HRESULT __safecall Set_Font(const _di__Font prop) = 0 ;
	virtual HRESULT __safecall Get_ParagraphFormat(_di__ParagraphFormat &Get_ParagraphFormat_result) = 0 ;
	virtual HRESULT __safecall Set_ParagraphFormat(const _di__ParagraphFormat prop) = 0 ;
	virtual HRESULT __safecall Get_Style(OleVariant &Get_Style_result) = 0 ;
	virtual HRESULT __safecall Set_Style(OleVariant &prop) = 0 ;
	virtual HRESULT __safecall Get_Text(WideString &Get_Text_result) = 0 ;
	virtual HRESULT __safecall Set_Text(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_LanguageID(Activex::TOleEnum &Get_LanguageID_result) = 0 ;
	virtual HRESULT __safecall Set_LanguageID(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Highlight(int &Get_Highlight_result) = 0 ;
	virtual HRESULT __safecall Set_Highlight(int prop) = 0 ;
	virtual HRESULT __safecall Get_Frame(_di_Frame &Get_Frame_result) = 0 ;
	virtual HRESULT __safecall Get_LanguageIDFarEast(Activex::TOleEnum &Get_LanguageIDFarEast_result) = 0 ;
	virtual HRESULT __safecall Set_LanguageIDFarEast(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall ClearFormatting(void) = 0 ;
	virtual HRESULT __safecall Get_NoProofing(int &Get_NoProofing_result) = 0 ;
	virtual HRESULT __safecall Set_NoProofing(int prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Font _scw_Get_Font() { _di__Font r; HRESULT hr = Get_Font(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Font Font = {read=_scw_Get_Font, write=Set_Font};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__ParagraphFormat _scw_Get_ParagraphFormat() { _di__ParagraphFormat r; HRESULT hr = Get_ParagraphFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__ParagraphFormat ParagraphFormat = {read=_scw_Get_ParagraphFormat, write=Set_ParagraphFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Text() { WideString r; HRESULT hr = Get_Text(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Text = {read=_scw_Get_Text, write=Set_Text};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LanguageID() { Activex::TOleEnum r; HRESULT hr = Get_LanguageID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LanguageID = {read=_scw_Get_LanguageID, write=Set_LanguageID};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Highlight() { int r; HRESULT hr = Get_Highlight(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Highlight = {read=_scw_Get_Highlight, write=Set_Highlight};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Frame _scw_Get_Frame() { _di_Frame r; HRESULT hr = Get_Frame(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Frame Frame = {read=_scw_Get_Frame};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LanguageIDFarEast() { Activex::TOleEnum r; HRESULT hr = Get_LanguageIDFarEast(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LanguageIDFarEast = {read=_scw_Get_LanguageIDFarEast, write=Set_LanguageIDFarEast};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_NoProofing() { int r; HRESULT hr = Get_NoProofing(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int NoProofing = {read=_scw_Get_NoProofing, write=Set_NoProofing};
};

__dispinterface ReplacementDisp;
typedef System::DelphiInterface<ReplacementDisp> _di_ReplacementDisp;
__dispinterface INTERFACE_UUID("{000209B1-0000-0000-C000-000000000046}") ReplacementDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002095D-0000-0000-C000-000000000046}") Characters  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_First(_di_Range &Get_First_result) = 0 ;
	virtual HRESULT __safecall Get_Last(_di_Range &Get_Last_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_Range &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_First() { _di_Range r; HRESULT hr = Get_First(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range First = {read=_scw_Get_First};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Last() { _di_Range r; HRESULT hr = Get_Last(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Last = {read=_scw_Get_Last};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface CharactersDisp;
typedef System::DelphiInterface<CharactersDisp> _di_CharactersDisp;
__dispinterface INTERFACE_UUID("{0002095D-0000-0000-C000-000000000046}") CharactersDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002095C-0000-0000-C000-000000000046}") Words  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_First(_di_Range &Get_First_result) = 0 ;
	virtual HRESULT __safecall Get_Last(_di_Range &Get_Last_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_Range &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_First() { _di_Range r; HRESULT hr = Get_First(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range First = {read=_scw_Get_First};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Last() { _di_Range r; HRESULT hr = Get_Last(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Last = {read=_scw_Get_Last};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface WordsDisp;
typedef System::DelphiInterface<WordsDisp> _di_WordsDisp;
__dispinterface INTERFACE_UUID("{0002095C-0000-0000-C000-000000000046}") WordsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002095B-0000-0000-C000-000000000046}") Sentences  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_First(_di_Range &Get_First_result) = 0 ;
	virtual HRESULT __safecall Get_Last(_di_Range &Get_Last_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_Range &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_First() { _di_Range r; HRESULT hr = Get_First(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range First = {read=_scw_Get_First};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Last() { _di_Range r; HRESULT hr = Get_Last(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Last = {read=_scw_Get_Last};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface SentencesDisp;
typedef System::DelphiInterface<SentencesDisp> _di_SentencesDisp;
__dispinterface INTERFACE_UUID("{0002095B-0000-0000-C000-000000000046}") SentencesDisp  : public IDispatch 
{
	
};

__interface Section;
typedef System::DelphiInterface<Section> _di_Section;
__interface INTERFACE_UUID("{0002095A-0000-0000-C000-000000000046}") Sections  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_First(_di_Section &Get_First_result) = 0 ;
	virtual HRESULT __safecall Get_Last(_di_Section &Get_Last_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_PageSetup(_di_PageSetup &Get_PageSetup_result) = 0 ;
	virtual HRESULT __safecall Set_PageSetup(const _di_PageSetup prop) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_Section &Item_result) = 0 ;
	virtual HRESULT __safecall Add(OleVariant &Range, OleVariant &Start, _di_Section &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Section _scw_Get_First() { _di_Section r; HRESULT hr = Get_First(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Section First = {read=_scw_Get_First};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Section _scw_Get_Last() { _di_Section r; HRESULT hr = Get_Last(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Section Last = {read=_scw_Get_Last};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_PageSetup _scw_Get_PageSetup() { _di_PageSetup r; HRESULT hr = Get_PageSetup(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_PageSetup PageSetup = {read=_scw_Get_PageSetup, write=Set_PageSetup};
};

__dispinterface SectionsDisp;
typedef System::DelphiInterface<SectionsDisp> _di_SectionsDisp;
__dispinterface INTERFACE_UUID("{0002095A-0000-0000-C000-000000000046}") SectionsDisp  : public IDispatch 
{
	
};

__interface HeadersFooters;
typedef System::DelphiInterface<HeadersFooters> _di_HeadersFooters;
__interface INTERFACE_UUID("{00020959-0000-0000-C000-000000000046}") Section  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_PageSetup(_di_PageSetup &Get_PageSetup_result) = 0 ;
	virtual HRESULT __safecall Set_PageSetup(const _di_PageSetup prop) = 0 ;
	virtual HRESULT __safecall Get_Headers(_di_HeadersFooters &Get_Headers_result) = 0 ;
	virtual HRESULT __safecall Get_Footers(_di_HeadersFooters &Get_Footers_result) = 0 ;
	virtual HRESULT __safecall Get_ProtectedForForms(Word &Get_ProtectedForForms_result) = 0 ;
	virtual HRESULT __safecall Set_ProtectedForForms(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_Borders(_di_Borders &Get_Borders_result) = 0 ;
	virtual HRESULT __safecall Set_Borders(const _di_Borders prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_PageSetup _scw_Get_PageSetup() { _di_PageSetup r; HRESULT hr = Get_PageSetup(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_PageSetup PageSetup = {read=_scw_Get_PageSetup, write=Set_PageSetup};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_HeadersFooters _scw_Get_Headers() { _di_HeadersFooters r; HRESULT hr = Get_Headers(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_HeadersFooters Headers = {read=_scw_Get_Headers};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_HeadersFooters _scw_Get_Footers() { _di_HeadersFooters r; HRESULT hr = Get_Footers(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_HeadersFooters Footers = {read=_scw_Get_Footers};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ProtectedForForms() { Word r; HRESULT hr = Get_ProtectedForForms(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ProtectedForForms = {read=_scw_Get_ProtectedForForms, write=Set_ProtectedForForms};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Borders _scw_Get_Borders() { _di_Borders r; HRESULT hr = Get_Borders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Borders Borders = {read=_scw_Get_Borders, write=Set_Borders};
};

__dispinterface SectionDisp;
typedef System::DelphiInterface<SectionDisp> _di_SectionDisp;
__dispinterface INTERFACE_UUID("{00020959-0000-0000-C000-000000000046}") SectionDisp  : public IDispatch 
{
	
};

__interface Paragraph;
typedef System::DelphiInterface<Paragraph> _di_Paragraph;
__interface TabStops;
typedef System::DelphiInterface<TabStops> _di_TabStops;
__interface INTERFACE_UUID("{00020958-0000-0000-C000-000000000046}") Paragraphs  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_First(_di_Paragraph &Get_First_result) = 0 ;
	virtual HRESULT __safecall Get_Last(_di_Paragraph &Get_Last_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Format(_di__ParagraphFormat &Get_Format_result) = 0 ;
	virtual HRESULT __safecall Set_Format(const _di__ParagraphFormat prop) = 0 ;
	virtual HRESULT __safecall Get_TabStops(_di_TabStops &Get_TabStops_result) = 0 ;
	virtual HRESULT __safecall Set_TabStops(const _di_TabStops prop) = 0 ;
	virtual HRESULT __safecall Get_Borders(_di_Borders &Get_Borders_result) = 0 ;
	virtual HRESULT __safecall Set_Borders(const _di_Borders prop) = 0 ;
	virtual HRESULT __safecall Get_Style(OleVariant &Get_Style_result) = 0 ;
	virtual HRESULT __safecall Set_Style(OleVariant &prop) = 0 ;
	virtual HRESULT __safecall Get_Alignment(Activex::TOleEnum &Get_Alignment_result) = 0 ;
	virtual HRESULT __safecall Set_Alignment(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_KeepTogether(int &Get_KeepTogether_result) = 0 ;
	virtual HRESULT __safecall Set_KeepTogether(int prop) = 0 ;
	virtual HRESULT __safecall Get_KeepWithNext(int &Get_KeepWithNext_result) = 0 ;
	virtual HRESULT __safecall Set_KeepWithNext(int prop) = 0 ;
	virtual HRESULT __safecall Get_PageBreakBefore(int &Get_PageBreakBefore_result) = 0 ;
	virtual HRESULT __safecall Set_PageBreakBefore(int prop) = 0 ;
	virtual HRESULT __safecall Get_NoLineNumber(int &Get_NoLineNumber_result) = 0 ;
	virtual HRESULT __safecall Set_NoLineNumber(int prop) = 0 ;
	virtual HRESULT __safecall Get_RightIndent(float &Get_RightIndent_result) = 0 ;
	virtual HRESULT __safecall Set_RightIndent(float prop) = 0 ;
	virtual HRESULT __safecall Get_LeftIndent(float &Get_LeftIndent_result) = 0 ;
	virtual HRESULT __safecall Set_LeftIndent(float prop) = 0 ;
	virtual HRESULT __safecall Get_FirstLineIndent(float &Get_FirstLineIndent_result) = 0 ;
	virtual HRESULT __safecall Set_FirstLineIndent(float prop) = 0 ;
	virtual HRESULT __safecall Get_LineSpacing(float &Get_LineSpacing_result) = 0 ;
	virtual HRESULT __safecall Set_LineSpacing(float prop) = 0 ;
	virtual HRESULT __safecall Get_LineSpacingRule(Activex::TOleEnum &Get_LineSpacingRule_result) = 0 ;
	virtual HRESULT __safecall Set_LineSpacingRule(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_SpaceBefore(float &Get_SpaceBefore_result) = 0 ;
	virtual HRESULT __safecall Set_SpaceBefore(float prop) = 0 ;
	virtual HRESULT __safecall Get_SpaceAfter(float &Get_SpaceAfter_result) = 0 ;
	virtual HRESULT __safecall Set_SpaceAfter(float prop) = 0 ;
	virtual HRESULT __safecall Get_Hyphenation(int &Get_Hyphenation_result) = 0 ;
	virtual HRESULT __safecall Set_Hyphenation(int prop) = 0 ;
	virtual HRESULT __safecall Get_WidowControl(int &Get_WidowControl_result) = 0 ;
	virtual HRESULT __safecall Set_WidowControl(int prop) = 0 ;
	virtual HRESULT __safecall Get_Shading(_di_Shading &Get_Shading_result) = 0 ;
	virtual HRESULT __safecall Get_FarEastLineBreakControl(int &Get_FarEastLineBreakControl_result) = 0 ;
	virtual HRESULT __safecall Set_FarEastLineBreakControl(int prop) = 0 ;
	virtual HRESULT __safecall Get_WordWrap(int &Get_WordWrap_result) = 0 ;
	virtual HRESULT __safecall Set_WordWrap(int prop) = 0 ;
	virtual HRESULT __safecall Get_HangingPunctuation(int &Get_HangingPunctuation_result) = 0 ;
	virtual HRESULT __safecall Set_HangingPunctuation(int prop) = 0 ;
	virtual HRESULT __safecall Get_HalfWidthPunctuationOnTopOfLine(int &Get_HalfWidthPunctuationOnTopOfLine_result) = 0 ;
	virtual HRESULT __safecall Set_HalfWidthPunctuationOnTopOfLine(int prop) = 0 ;
	virtual HRESULT __safecall Get_AddSpaceBetweenFarEastAndAlpha(int &Get_AddSpaceBetweenFarEastAndAlpha_result) = 0 ;
	virtual HRESULT __safecall Set_AddSpaceBetweenFarEastAndAlpha(int prop) = 0 ;
	virtual HRESULT __safecall Get_AddSpaceBetweenFarEastAndDigit(int &Get_AddSpaceBetweenFarEastAndDigit_result) = 0 ;
	virtual HRESULT __safecall Set_AddSpaceBetweenFarEastAndDigit(int prop) = 0 ;
	virtual HRESULT __safecall Get_BaseLineAlignment(Activex::TOleEnum &Get_BaseLineAlignment_result) = 0 ;
	virtual HRESULT __safecall Set_BaseLineAlignment(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_AutoAdjustRightIndent(int &Get_AutoAdjustRightIndent_result) = 0 ;
	virtual HRESULT __safecall Set_AutoAdjustRightIndent(int prop) = 0 ;
	virtual HRESULT __safecall Get_DisableLineHeightGrid(int &Get_DisableLineHeightGrid_result) = 0 ;
	virtual HRESULT __safecall Set_DisableLineHeightGrid(int prop) = 0 ;
	virtual HRESULT __safecall Get_OutlineLevel(Activex::TOleEnum &Get_OutlineLevel_result) = 0 ;
	virtual HRESULT __safecall Set_OutlineLevel(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_Paragraph &Item_result) = 0 ;
	virtual HRESULT __safecall Add(OleVariant &Range, _di_Paragraph &Add_result) = 0 ;
	virtual HRESULT __safecall CloseUp(void) = 0 ;
	virtual HRESULT __safecall OpenUp(void) = 0 ;
	virtual HRESULT __safecall OpenOrCloseUp(void) = 0 ;
	virtual HRESULT __safecall TabHangingIndent(short Count) = 0 ;
	virtual HRESULT __safecall TabIndent(short Count) = 0 ;
	virtual HRESULT __safecall Reset(void) = 0 ;
	virtual HRESULT __safecall Space1(void) = 0 ;
	virtual HRESULT __safecall Space15(void) = 0 ;
	virtual HRESULT __safecall Space2(void) = 0 ;
	virtual HRESULT __safecall IndentCharWidth(short Count) = 0 ;
	virtual HRESULT __safecall IndentFirstLineCharWidth(short Count) = 0 ;
	virtual HRESULT __safecall OutlinePromote(void) = 0 ;
	virtual HRESULT __safecall OutlineDemote(void) = 0 ;
	virtual HRESULT __safecall OutlineDemoteToBody(void) = 0 ;
	virtual HRESULT __safecall Indent(void) = 0 ;
	virtual HRESULT __safecall Outdent(void) = 0 ;
	virtual HRESULT __safecall Get_CharacterUnitRightIndent(float &Get_CharacterUnitRightIndent_result) = 0 ;
	virtual HRESULT __safecall Set_CharacterUnitRightIndent(float prop) = 0 ;
	virtual HRESULT __safecall Get_CharacterUnitLeftIndent(float &Get_CharacterUnitLeftIndent_result) = 0 ;
	virtual HRESULT __safecall Set_CharacterUnitLeftIndent(float prop) = 0 ;
	virtual HRESULT __safecall Get_CharacterUnitFirstLineIndent(float &Get_CharacterUnitFirstLineIndent_result) = 0 ;
	virtual HRESULT __safecall Set_CharacterUnitFirstLineIndent(float prop) = 0 ;
	virtual HRESULT __safecall Get_LineUnitBefore(float &Get_LineUnitBefore_result) = 0 ;
	virtual HRESULT __safecall Set_LineUnitBefore(float prop) = 0 ;
	virtual HRESULT __safecall Get_LineUnitAfter(float &Get_LineUnitAfter_result) = 0 ;
	virtual HRESULT __safecall Set_LineUnitAfter(float prop) = 0 ;
	virtual HRESULT __safecall Get_ReadingOrder(Activex::TOleEnum &Get_ReadingOrder_result) = 0 ;
	virtual HRESULT __safecall Set_ReadingOrder(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_SpaceBeforeAuto(int &Get_SpaceBeforeAuto_result) = 0 ;
	virtual HRESULT __safecall Set_SpaceBeforeAuto(int prop) = 0 ;
	virtual HRESULT __safecall Get_SpaceAfterAuto(int &Get_SpaceAfterAuto_result) = 0 ;
	virtual HRESULT __safecall Set_SpaceAfterAuto(int prop) = 0 ;
	virtual HRESULT __safecall IncreaseSpacing(void) = 0 ;
	virtual HRESULT __safecall DecreaseSpacing(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Paragraph _scw_Get_First() { _di_Paragraph r; HRESULT hr = Get_First(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Paragraph First = {read=_scw_Get_First};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Paragraph _scw_Get_Last() { _di_Paragraph r; HRESULT hr = Get_Last(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Paragraph Last = {read=_scw_Get_Last};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__ParagraphFormat _scw_Get_Format() { _di__ParagraphFormat r; HRESULT hr = Get_Format(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__ParagraphFormat Format = {read=_scw_Get_Format, write=Set_Format};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_TabStops _scw_Get_TabStops() { _di_TabStops r; HRESULT hr = Get_TabStops(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_TabStops TabStops = {read=_scw_Get_TabStops, write=Set_TabStops};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Borders _scw_Get_Borders() { _di_Borders r; HRESULT hr = Get_Borders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Borders Borders = {read=_scw_Get_Borders, write=Set_Borders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Alignment() { Activex::TOleEnum r; HRESULT hr = Get_Alignment(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Alignment = {read=_scw_Get_Alignment, write=Set_Alignment};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_KeepTogether() { int r; HRESULT hr = Get_KeepTogether(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int KeepTogether = {read=_scw_Get_KeepTogether, write=Set_KeepTogether};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_KeepWithNext() { int r; HRESULT hr = Get_KeepWithNext(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int KeepWithNext = {read=_scw_Get_KeepWithNext, write=Set_KeepWithNext};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_PageBreakBefore() { int r; HRESULT hr = Get_PageBreakBefore(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int PageBreakBefore = {read=_scw_Get_PageBreakBefore, write=Set_PageBreakBefore};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_NoLineNumber() { int r; HRESULT hr = Get_NoLineNumber(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int NoLineNumber = {read=_scw_Get_NoLineNumber, write=Set_NoLineNumber};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_RightIndent() { float r; HRESULT hr = Get_RightIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float RightIndent = {read=_scw_Get_RightIndent, write=Set_RightIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_LeftIndent() { float r; HRESULT hr = Get_LeftIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float LeftIndent = {read=_scw_Get_LeftIndent, write=Set_LeftIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_FirstLineIndent() { float r; HRESULT hr = Get_FirstLineIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float FirstLineIndent = {read=_scw_Get_FirstLineIndent, write=Set_FirstLineIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_LineSpacing() { float r; HRESULT hr = Get_LineSpacing(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float LineSpacing = {read=_scw_Get_LineSpacing, write=Set_LineSpacing};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LineSpacingRule() { Activex::TOleEnum r; HRESULT hr = Get_LineSpacingRule(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LineSpacingRule = {read=_scw_Get_LineSpacingRule, write=Set_LineSpacingRule};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_SpaceBefore() { float r; HRESULT hr = Get_SpaceBefore(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float SpaceBefore = {read=_scw_Get_SpaceBefore, write=Set_SpaceBefore};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_SpaceAfter() { float r; HRESULT hr = Get_SpaceAfter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float SpaceAfter = {read=_scw_Get_SpaceAfter, write=Set_SpaceAfter};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Hyphenation() { int r; HRESULT hr = Get_Hyphenation(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Hyphenation = {read=_scw_Get_Hyphenation, write=Set_Hyphenation};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_WidowControl() { int r; HRESULT hr = Get_WidowControl(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int WidowControl = {read=_scw_Get_WidowControl, write=Set_WidowControl};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shading _scw_Get_Shading() { _di_Shading r; HRESULT hr = Get_Shading(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shading Shading = {read=_scw_Get_Shading};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_FarEastLineBreakControl() { int r; HRESULT hr = Get_FarEastLineBreakControl(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int FarEastLineBreakControl = {read=_scw_Get_FarEastLineBreakControl, write=Set_FarEastLineBreakControl};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_WordWrap() { int r; HRESULT hr = Get_WordWrap(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int WordWrap = {read=_scw_Get_WordWrap, write=Set_WordWrap};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_HangingPunctuation() { int r; HRESULT hr = Get_HangingPunctuation(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int HangingPunctuation = {read=_scw_Get_HangingPunctuation, write=Set_HangingPunctuation};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_HalfWidthPunctuationOnTopOfLine() { int r; HRESULT hr = Get_HalfWidthPunctuationOnTopOfLine(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int HalfWidthPunctuationOnTopOfLine = {read=_scw_Get_HalfWidthPunctuationOnTopOfLine, write=Set_HalfWidthPunctuationOnTopOfLine};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_AddSpaceBetweenFarEastAndAlpha() { int r; HRESULT hr = Get_AddSpaceBetweenFarEastAndAlpha(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int AddSpaceBetweenFarEastAndAlpha = {read=_scw_Get_AddSpaceBetweenFarEastAndAlpha, write=Set_AddSpaceBetweenFarEastAndAlpha};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_AddSpaceBetweenFarEastAndDigit() { int r; HRESULT hr = Get_AddSpaceBetweenFarEastAndDigit(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int AddSpaceBetweenFarEastAndDigit = {read=_scw_Get_AddSpaceBetweenFarEastAndDigit, write=Set_AddSpaceBetweenFarEastAndDigit};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_BaseLineAlignment() { Activex::TOleEnum r; HRESULT hr = Get_BaseLineAlignment(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum BaseLineAlignment = {read=_scw_Get_BaseLineAlignment, write=Set_BaseLineAlignment};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_AutoAdjustRightIndent() { int r; HRESULT hr = Get_AutoAdjustRightIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int AutoAdjustRightIndent = {read=_scw_Get_AutoAdjustRightIndent, write=Set_AutoAdjustRightIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_DisableLineHeightGrid() { int r; HRESULT hr = Get_DisableLineHeightGrid(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int DisableLineHeightGrid = {read=_scw_Get_DisableLineHeightGrid, write=Set_DisableLineHeightGrid};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_OutlineLevel() { Activex::TOleEnum r; HRESULT hr = Get_OutlineLevel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum OutlineLevel = {read=_scw_Get_OutlineLevel, write=Set_OutlineLevel};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_CharacterUnitRightIndent() { float r; HRESULT hr = Get_CharacterUnitRightIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float CharacterUnitRightIndent = {read=_scw_Get_CharacterUnitRightIndent, write=Set_CharacterUnitRightIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_CharacterUnitLeftIndent() { float r; HRESULT hr = Get_CharacterUnitLeftIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float CharacterUnitLeftIndent = {read=_scw_Get_CharacterUnitLeftIndent, write=Set_CharacterUnitLeftIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_CharacterUnitFirstLineIndent() { float r; HRESULT hr = Get_CharacterUnitFirstLineIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float CharacterUnitFirstLineIndent = {read=_scw_Get_CharacterUnitFirstLineIndent, write=Set_CharacterUnitFirstLineIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_LineUnitBefore() { float r; HRESULT hr = Get_LineUnitBefore(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float LineUnitBefore = {read=_scw_Get_LineUnitBefore, write=Set_LineUnitBefore};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_LineUnitAfter() { float r; HRESULT hr = Get_LineUnitAfter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float LineUnitAfter = {read=_scw_Get_LineUnitAfter, write=Set_LineUnitAfter};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_ReadingOrder() { Activex::TOleEnum r; HRESULT hr = Get_ReadingOrder(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum ReadingOrder = {read=_scw_Get_ReadingOrder, write=Set_ReadingOrder};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_SpaceBeforeAuto() { int r; HRESULT hr = Get_SpaceBeforeAuto(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int SpaceBeforeAuto = {read=_scw_Get_SpaceBeforeAuto, write=Set_SpaceBeforeAuto};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_SpaceAfterAuto() { int r; HRESULT hr = Get_SpaceAfterAuto(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int SpaceAfterAuto = {read=_scw_Get_SpaceAfterAuto, write=Set_SpaceAfterAuto};
};

__dispinterface ParagraphsDisp;
typedef System::DelphiInterface<ParagraphsDisp> _di_ParagraphsDisp;
__dispinterface INTERFACE_UUID("{00020958-0000-0000-C000-000000000046}") ParagraphsDisp  : public IDispatch 
{
	
};

__interface DropCap;
typedef System::DelphiInterface<DropCap> _di_DropCap;
__interface INTERFACE_UUID("{00020957-0000-0000-C000-000000000046}") Paragraph  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Format(_di__ParagraphFormat &Get_Format_result) = 0 ;
	virtual HRESULT __safecall Set_Format(const _di__ParagraphFormat prop) = 0 ;
	virtual HRESULT __safecall Get_TabStops(_di_TabStops &Get_TabStops_result) = 0 ;
	virtual HRESULT __safecall Set_TabStops(const _di_TabStops prop) = 0 ;
	virtual HRESULT __safecall Get_Borders(_di_Borders &Get_Borders_result) = 0 ;
	virtual HRESULT __safecall Set_Borders(const _di_Borders prop) = 0 ;
	virtual HRESULT __safecall Get_DropCap(_di_DropCap &Get_DropCap_result) = 0 ;
	virtual HRESULT __safecall Get_Style(OleVariant &Get_Style_result) = 0 ;
	virtual HRESULT __safecall Set_Style(OleVariant &prop) = 0 ;
	virtual HRESULT __safecall Get_Alignment(Activex::TOleEnum &Get_Alignment_result) = 0 ;
	virtual HRESULT __safecall Set_Alignment(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_KeepTogether(int &Get_KeepTogether_result) = 0 ;
	virtual HRESULT __safecall Set_KeepTogether(int prop) = 0 ;
	virtual HRESULT __safecall Get_KeepWithNext(int &Get_KeepWithNext_result) = 0 ;
	virtual HRESULT __safecall Set_KeepWithNext(int prop) = 0 ;
	virtual HRESULT __safecall Get_PageBreakBefore(int &Get_PageBreakBefore_result) = 0 ;
	virtual HRESULT __safecall Set_PageBreakBefore(int prop) = 0 ;
	virtual HRESULT __safecall Get_NoLineNumber(int &Get_NoLineNumber_result) = 0 ;
	virtual HRESULT __safecall Set_NoLineNumber(int prop) = 0 ;
	virtual HRESULT __safecall Get_RightIndent(float &Get_RightIndent_result) = 0 ;
	virtual HRESULT __safecall Set_RightIndent(float prop) = 0 ;
	virtual HRESULT __safecall Get_LeftIndent(float &Get_LeftIndent_result) = 0 ;
	virtual HRESULT __safecall Set_LeftIndent(float prop) = 0 ;
	virtual HRESULT __safecall Get_FirstLineIndent(float &Get_FirstLineIndent_result) = 0 ;
	virtual HRESULT __safecall Set_FirstLineIndent(float prop) = 0 ;
	virtual HRESULT __safecall Get_LineSpacing(float &Get_LineSpacing_result) = 0 ;
	virtual HRESULT __safecall Set_LineSpacing(float prop) = 0 ;
	virtual HRESULT __safecall Get_LineSpacingRule(Activex::TOleEnum &Get_LineSpacingRule_result) = 0 ;
	virtual HRESULT __safecall Set_LineSpacingRule(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_SpaceBefore(float &Get_SpaceBefore_result) = 0 ;
	virtual HRESULT __safecall Set_SpaceBefore(float prop) = 0 ;
	virtual HRESULT __safecall Get_SpaceAfter(float &Get_SpaceAfter_result) = 0 ;
	virtual HRESULT __safecall Set_SpaceAfter(float prop) = 0 ;
	virtual HRESULT __safecall Get_Hyphenation(int &Get_Hyphenation_result) = 0 ;
	virtual HRESULT __safecall Set_Hyphenation(int prop) = 0 ;
	virtual HRESULT __safecall Get_WidowControl(int &Get_WidowControl_result) = 0 ;
	virtual HRESULT __safecall Set_WidowControl(int prop) = 0 ;
	virtual HRESULT __safecall Get_Shading(_di_Shading &Get_Shading_result) = 0 ;
	virtual HRESULT __safecall Get_FarEastLineBreakControl(int &Get_FarEastLineBreakControl_result) = 0 ;
	virtual HRESULT __safecall Set_FarEastLineBreakControl(int prop) = 0 ;
	virtual HRESULT __safecall Get_WordWrap(int &Get_WordWrap_result) = 0 ;
	virtual HRESULT __safecall Set_WordWrap(int prop) = 0 ;
	virtual HRESULT __safecall Get_HangingPunctuation(int &Get_HangingPunctuation_result) = 0 ;
	virtual HRESULT __safecall Set_HangingPunctuation(int prop) = 0 ;
	virtual HRESULT __safecall Get_HalfWidthPunctuationOnTopOfLine(int &Get_HalfWidthPunctuationOnTopOfLine_result) = 0 ;
	virtual HRESULT __safecall Set_HalfWidthPunctuationOnTopOfLine(int prop) = 0 ;
	virtual HRESULT __safecall Get_AddSpaceBetweenFarEastAndAlpha(int &Get_AddSpaceBetweenFarEastAndAlpha_result) = 0 ;
	virtual HRESULT __safecall Set_AddSpaceBetweenFarEastAndAlpha(int prop) = 0 ;
	virtual HRESULT __safecall Get_AddSpaceBetweenFarEastAndDigit(int &Get_AddSpaceBetweenFarEastAndDigit_result) = 0 ;
	virtual HRESULT __safecall Set_AddSpaceBetweenFarEastAndDigit(int prop) = 0 ;
	virtual HRESULT __safecall Get_BaseLineAlignment(Activex::TOleEnum &Get_BaseLineAlignment_result) = 0 ;
	virtual HRESULT __safecall Set_BaseLineAlignment(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_AutoAdjustRightIndent(int &Get_AutoAdjustRightIndent_result) = 0 ;
	virtual HRESULT __safecall Set_AutoAdjustRightIndent(int prop) = 0 ;
	virtual HRESULT __safecall Get_DisableLineHeightGrid(int &Get_DisableLineHeightGrid_result) = 0 ;
	virtual HRESULT __safecall Set_DisableLineHeightGrid(int prop) = 0 ;
	virtual HRESULT __safecall Get_OutlineLevel(Activex::TOleEnum &Get_OutlineLevel_result) = 0 ;
	virtual HRESULT __safecall Set_OutlineLevel(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall CloseUp(void) = 0 ;
	virtual HRESULT __safecall OpenUp(void) = 0 ;
	virtual HRESULT __safecall OpenOrCloseUp(void) = 0 ;
	virtual HRESULT __safecall TabHangingIndent(short Count) = 0 ;
	virtual HRESULT __safecall TabIndent(short Count) = 0 ;
	virtual HRESULT __safecall Reset(void) = 0 ;
	virtual HRESULT __safecall Space1(void) = 0 ;
	virtual HRESULT __safecall Space15(void) = 0 ;
	virtual HRESULT __safecall Space2(void) = 0 ;
	virtual HRESULT __safecall IndentCharWidth(short Count) = 0 ;
	virtual HRESULT __safecall IndentFirstLineCharWidth(short Count) = 0 ;
	virtual HRESULT __safecall Next(OleVariant &Count, _di_Paragraph &Next_result) = 0 ;
	virtual HRESULT __safecall Previous(OleVariant &Count, _di_Paragraph &Previous_result) = 0 ;
	virtual HRESULT __safecall OutlinePromote(void) = 0 ;
	virtual HRESULT __safecall OutlineDemote(void) = 0 ;
	virtual HRESULT __safecall OutlineDemoteToBody(void) = 0 ;
	virtual HRESULT __safecall Indent(void) = 0 ;
	virtual HRESULT __safecall Outdent(void) = 0 ;
	virtual HRESULT __safecall Get_CharacterUnitRightIndent(float &Get_CharacterUnitRightIndent_result) = 0 ;
	virtual HRESULT __safecall Set_CharacterUnitRightIndent(float prop) = 0 ;
	virtual HRESULT __safecall Get_CharacterUnitLeftIndent(float &Get_CharacterUnitLeftIndent_result) = 0 ;
	virtual HRESULT __safecall Set_CharacterUnitLeftIndent(float prop) = 0 ;
	virtual HRESULT __safecall Get_CharacterUnitFirstLineIndent(float &Get_CharacterUnitFirstLineIndent_result) = 0 ;
	virtual HRESULT __safecall Set_CharacterUnitFirstLineIndent(float prop) = 0 ;
	virtual HRESULT __safecall Get_LineUnitBefore(float &Get_LineUnitBefore_result) = 0 ;
	virtual HRESULT __safecall Set_LineUnitBefore(float prop) = 0 ;
	virtual HRESULT __safecall Get_LineUnitAfter(float &Get_LineUnitAfter_result) = 0 ;
	virtual HRESULT __safecall Set_LineUnitAfter(float prop) = 0 ;
	virtual HRESULT __safecall Get_ReadingOrder(Activex::TOleEnum &Get_ReadingOrder_result) = 0 ;
	virtual HRESULT __safecall Set_ReadingOrder(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_ID(WideString &Get_ID_result) = 0 ;
	virtual HRESULT __safecall Set_ID(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_SpaceBeforeAuto(int &Get_SpaceBeforeAuto_result) = 0 ;
	virtual HRESULT __safecall Set_SpaceBeforeAuto(int prop) = 0 ;
	virtual HRESULT __safecall Get_SpaceAfterAuto(int &Get_SpaceAfterAuto_result) = 0 ;
	virtual HRESULT __safecall Set_SpaceAfterAuto(int prop) = 0 ;
	virtual HRESULT __safecall Get_IsStyleSeparator(Word &Get_IsStyleSeparator_result) = 0 ;
	virtual HRESULT __safecall SelectNumber(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__ParagraphFormat _scw_Get_Format() { _di__ParagraphFormat r; HRESULT hr = Get_Format(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__ParagraphFormat Format = {read=_scw_Get_Format, write=Set_Format};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_TabStops _scw_Get_TabStops() { _di_TabStops r; HRESULT hr = Get_TabStops(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_TabStops TabStops = {read=_scw_Get_TabStops, write=Set_TabStops};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Borders _scw_Get_Borders() { _di_Borders r; HRESULT hr = Get_Borders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Borders Borders = {read=_scw_Get_Borders, write=Set_Borders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_DropCap _scw_Get_DropCap() { _di_DropCap r; HRESULT hr = Get_DropCap(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_DropCap DropCap = {read=_scw_Get_DropCap};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Alignment() { Activex::TOleEnum r; HRESULT hr = Get_Alignment(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Alignment = {read=_scw_Get_Alignment, write=Set_Alignment};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_KeepTogether() { int r; HRESULT hr = Get_KeepTogether(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int KeepTogether = {read=_scw_Get_KeepTogether, write=Set_KeepTogether};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_KeepWithNext() { int r; HRESULT hr = Get_KeepWithNext(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int KeepWithNext = {read=_scw_Get_KeepWithNext, write=Set_KeepWithNext};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_PageBreakBefore() { int r; HRESULT hr = Get_PageBreakBefore(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int PageBreakBefore = {read=_scw_Get_PageBreakBefore, write=Set_PageBreakBefore};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_NoLineNumber() { int r; HRESULT hr = Get_NoLineNumber(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int NoLineNumber = {read=_scw_Get_NoLineNumber, write=Set_NoLineNumber};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_RightIndent() { float r; HRESULT hr = Get_RightIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float RightIndent = {read=_scw_Get_RightIndent, write=Set_RightIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_LeftIndent() { float r; HRESULT hr = Get_LeftIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float LeftIndent = {read=_scw_Get_LeftIndent, write=Set_LeftIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_FirstLineIndent() { float r; HRESULT hr = Get_FirstLineIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float FirstLineIndent = {read=_scw_Get_FirstLineIndent, write=Set_FirstLineIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_LineSpacing() { float r; HRESULT hr = Get_LineSpacing(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float LineSpacing = {read=_scw_Get_LineSpacing, write=Set_LineSpacing};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LineSpacingRule() { Activex::TOleEnum r; HRESULT hr = Get_LineSpacingRule(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LineSpacingRule = {read=_scw_Get_LineSpacingRule, write=Set_LineSpacingRule};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_SpaceBefore() { float r; HRESULT hr = Get_SpaceBefore(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float SpaceBefore = {read=_scw_Get_SpaceBefore, write=Set_SpaceBefore};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_SpaceAfter() { float r; HRESULT hr = Get_SpaceAfter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float SpaceAfter = {read=_scw_Get_SpaceAfter, write=Set_SpaceAfter};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Hyphenation() { int r; HRESULT hr = Get_Hyphenation(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Hyphenation = {read=_scw_Get_Hyphenation, write=Set_Hyphenation};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_WidowControl() { int r; HRESULT hr = Get_WidowControl(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int WidowControl = {read=_scw_Get_WidowControl, write=Set_WidowControl};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shading _scw_Get_Shading() { _di_Shading r; HRESULT hr = Get_Shading(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shading Shading = {read=_scw_Get_Shading};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_FarEastLineBreakControl() { int r; HRESULT hr = Get_FarEastLineBreakControl(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int FarEastLineBreakControl = {read=_scw_Get_FarEastLineBreakControl, write=Set_FarEastLineBreakControl};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_WordWrap() { int r; HRESULT hr = Get_WordWrap(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int WordWrap = {read=_scw_Get_WordWrap, write=Set_WordWrap};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_HangingPunctuation() { int r; HRESULT hr = Get_HangingPunctuation(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int HangingPunctuation = {read=_scw_Get_HangingPunctuation, write=Set_HangingPunctuation};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_HalfWidthPunctuationOnTopOfLine() { int r; HRESULT hr = Get_HalfWidthPunctuationOnTopOfLine(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int HalfWidthPunctuationOnTopOfLine = {read=_scw_Get_HalfWidthPunctuationOnTopOfLine, write=Set_HalfWidthPunctuationOnTopOfLine};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_AddSpaceBetweenFarEastAndAlpha() { int r; HRESULT hr = Get_AddSpaceBetweenFarEastAndAlpha(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int AddSpaceBetweenFarEastAndAlpha = {read=_scw_Get_AddSpaceBetweenFarEastAndAlpha, write=Set_AddSpaceBetweenFarEastAndAlpha};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_AddSpaceBetweenFarEastAndDigit() { int r; HRESULT hr = Get_AddSpaceBetweenFarEastAndDigit(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int AddSpaceBetweenFarEastAndDigit = {read=_scw_Get_AddSpaceBetweenFarEastAndDigit, write=Set_AddSpaceBetweenFarEastAndDigit};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_BaseLineAlignment() { Activex::TOleEnum r; HRESULT hr = Get_BaseLineAlignment(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum BaseLineAlignment = {read=_scw_Get_BaseLineAlignment, write=Set_BaseLineAlignment};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_AutoAdjustRightIndent() { int r; HRESULT hr = Get_AutoAdjustRightIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int AutoAdjustRightIndent = {read=_scw_Get_AutoAdjustRightIndent, write=Set_AutoAdjustRightIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_DisableLineHeightGrid() { int r; HRESULT hr = Get_DisableLineHeightGrid(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int DisableLineHeightGrid = {read=_scw_Get_DisableLineHeightGrid, write=Set_DisableLineHeightGrid};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_OutlineLevel() { Activex::TOleEnum r; HRESULT hr = Get_OutlineLevel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum OutlineLevel = {read=_scw_Get_OutlineLevel, write=Set_OutlineLevel};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_CharacterUnitRightIndent() { float r; HRESULT hr = Get_CharacterUnitRightIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float CharacterUnitRightIndent = {read=_scw_Get_CharacterUnitRightIndent, write=Set_CharacterUnitRightIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_CharacterUnitLeftIndent() { float r; HRESULT hr = Get_CharacterUnitLeftIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float CharacterUnitLeftIndent = {read=_scw_Get_CharacterUnitLeftIndent, write=Set_CharacterUnitLeftIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_CharacterUnitFirstLineIndent() { float r; HRESULT hr = Get_CharacterUnitFirstLineIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float CharacterUnitFirstLineIndent = {read=_scw_Get_CharacterUnitFirstLineIndent, write=Set_CharacterUnitFirstLineIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_LineUnitBefore() { float r; HRESULT hr = Get_LineUnitBefore(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float LineUnitBefore = {read=_scw_Get_LineUnitBefore, write=Set_LineUnitBefore};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_LineUnitAfter() { float r; HRESULT hr = Get_LineUnitAfter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float LineUnitAfter = {read=_scw_Get_LineUnitAfter, write=Set_LineUnitAfter};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_ReadingOrder() { Activex::TOleEnum r; HRESULT hr = Get_ReadingOrder(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum ReadingOrder = {read=_scw_Get_ReadingOrder, write=Set_ReadingOrder};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ID() { WideString r; HRESULT hr = Get_ID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ID = {read=_scw_Get_ID, write=Set_ID};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_SpaceBeforeAuto() { int r; HRESULT hr = Get_SpaceBeforeAuto(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int SpaceBeforeAuto = {read=_scw_Get_SpaceBeforeAuto, write=Set_SpaceBeforeAuto};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_SpaceAfterAuto() { int r; HRESULT hr = Get_SpaceAfterAuto(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int SpaceAfterAuto = {read=_scw_Get_SpaceAfterAuto, write=Set_SpaceAfterAuto};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IsStyleSeparator() { Word r; HRESULT hr = Get_IsStyleSeparator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IsStyleSeparator = {read=_scw_Get_IsStyleSeparator};
};

__dispinterface ParagraphDisp;
typedef System::DelphiInterface<ParagraphDisp> _di_ParagraphDisp;
__dispinterface INTERFACE_UUID("{00020957-0000-0000-C000-000000000046}") ParagraphDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020956-0000-0000-C000-000000000046}") DropCap  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Position(Activex::TOleEnum &Get_Position_result) = 0 ;
	virtual HRESULT __safecall Set_Position(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_FontName(WideString &Get_FontName_result) = 0 ;
	virtual HRESULT __safecall Set_FontName(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_LinesToDrop(int &Get_LinesToDrop_result) = 0 ;
	virtual HRESULT __safecall Set_LinesToDrop(int prop) = 0 ;
	virtual HRESULT __safecall Get_DistanceFromText(float &Get_DistanceFromText_result) = 0 ;
	virtual HRESULT __safecall Set_DistanceFromText(float prop) = 0 ;
	virtual HRESULT __safecall Clear(void) = 0 ;
	virtual HRESULT __safecall Enable(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Position() { Activex::TOleEnum r; HRESULT hr = Get_Position(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Position = {read=_scw_Get_Position, write=Set_Position};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_FontName() { WideString r; HRESULT hr = Get_FontName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString FontName = {read=_scw_Get_FontName, write=Set_FontName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_LinesToDrop() { int r; HRESULT hr = Get_LinesToDrop(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int LinesToDrop = {read=_scw_Get_LinesToDrop, write=Set_LinesToDrop};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_DistanceFromText() { float r; HRESULT hr = Get_DistanceFromText(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float DistanceFromText = {read=_scw_Get_DistanceFromText, write=Set_DistanceFromText};
};

__dispinterface DropCapDisp;
typedef System::DelphiInterface<DropCapDisp> _di_DropCapDisp;
__dispinterface INTERFACE_UUID("{00020956-0000-0000-C000-000000000046}") DropCapDisp  : public IDispatch 
{
	
};

__interface TabStop;
typedef System::DelphiInterface<TabStop> _di_TabStop;
__interface INTERFACE_UUID("{00020955-0000-0000-C000-000000000046}") TabStops  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_TabStop &Item_result) = 0 ;
	virtual HRESULT __safecall Add(float Position, OleVariant &Alignment, OleVariant &Leader, _di_TabStop &Add_result) = 0 ;
	virtual HRESULT __safecall ClearAll(void) = 0 ;
	virtual HRESULT __safecall Before(float Position, _di_TabStop &Before_result) = 0 ;
	virtual HRESULT __safecall After(float Position, _di_TabStop &After_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface TabStopsDisp;
typedef System::DelphiInterface<TabStopsDisp> _di_TabStopsDisp;
__dispinterface INTERFACE_UUID("{00020955-0000-0000-C000-000000000046}") TabStopsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020954-0000-0000-C000-000000000046}") TabStop  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Alignment(Activex::TOleEnum &Get_Alignment_result) = 0 ;
	virtual HRESULT __safecall Set_Alignment(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Leader(Activex::TOleEnum &Get_Leader_result) = 0 ;
	virtual HRESULT __safecall Set_Leader(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Position(float &Get_Position_result) = 0 ;
	virtual HRESULT __safecall Set_Position(float prop) = 0 ;
	virtual HRESULT __safecall Get_CustomTab(Word &Get_CustomTab_result) = 0 ;
	virtual HRESULT __safecall Get_Next(_di_TabStop &Get_Next_result) = 0 ;
	virtual HRESULT __safecall Get_Previous(_di_TabStop &Get_Previous_result) = 0 ;
	virtual HRESULT __safecall Clear(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Alignment() { Activex::TOleEnum r; HRESULT hr = Get_Alignment(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Alignment = {read=_scw_Get_Alignment, write=Set_Alignment};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Leader() { Activex::TOleEnum r; HRESULT hr = Get_Leader(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Leader = {read=_scw_Get_Leader, write=Set_Leader};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Position() { float r; HRESULT hr = Get_Position(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Position = {read=_scw_Get_Position, write=Set_Position};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_CustomTab() { Word r; HRESULT hr = Get_CustomTab(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word CustomTab = {read=_scw_Get_CustomTab};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_TabStop _scw_Get_Next() { _di_TabStop r; HRESULT hr = Get_Next(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_TabStop Next = {read=_scw_Get_Next};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_TabStop _scw_Get_Previous() { _di_TabStop r; HRESULT hr = Get_Previous(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_TabStop Previous = {read=_scw_Get_Previous};
};

__dispinterface TabStopDisp;
typedef System::DelphiInterface<TabStopDisp> _di_TabStopDisp;
__dispinterface INTERFACE_UUID("{00020954-0000-0000-C000-000000000046}") TabStopDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020953-0000-0000-C000-000000000046}") _ParagraphFormat  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Duplicate(_di__ParagraphFormat &Get_Duplicate_result) = 0 ;
	virtual HRESULT __safecall Get_Style(OleVariant &Get_Style_result) = 0 ;
	virtual HRESULT __safecall Set_Style(OleVariant &prop) = 0 ;
	virtual HRESULT __safecall Get_Alignment(Activex::TOleEnum &Get_Alignment_result) = 0 ;
	virtual HRESULT __safecall Set_Alignment(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_KeepTogether(int &Get_KeepTogether_result) = 0 ;
	virtual HRESULT __safecall Set_KeepTogether(int prop) = 0 ;
	virtual HRESULT __safecall Get_KeepWithNext(int &Get_KeepWithNext_result) = 0 ;
	virtual HRESULT __safecall Set_KeepWithNext(int prop) = 0 ;
	virtual HRESULT __safecall Get_PageBreakBefore(int &Get_PageBreakBefore_result) = 0 ;
	virtual HRESULT __safecall Set_PageBreakBefore(int prop) = 0 ;
	virtual HRESULT __safecall Get_NoLineNumber(int &Get_NoLineNumber_result) = 0 ;
	virtual HRESULT __safecall Set_NoLineNumber(int prop) = 0 ;
	virtual HRESULT __safecall Get_RightIndent(float &Get_RightIndent_result) = 0 ;
	virtual HRESULT __safecall Set_RightIndent(float prop) = 0 ;
	virtual HRESULT __safecall Get_LeftIndent(float &Get_LeftIndent_result) = 0 ;
	virtual HRESULT __safecall Set_LeftIndent(float prop) = 0 ;
	virtual HRESULT __safecall Get_FirstLineIndent(float &Get_FirstLineIndent_result) = 0 ;
	virtual HRESULT __safecall Set_FirstLineIndent(float prop) = 0 ;
	virtual HRESULT __safecall Get_LineSpacing(float &Get_LineSpacing_result) = 0 ;
	virtual HRESULT __safecall Set_LineSpacing(float prop) = 0 ;
	virtual HRESULT __safecall Get_LineSpacingRule(Activex::TOleEnum &Get_LineSpacingRule_result) = 0 ;
	virtual HRESULT __safecall Set_LineSpacingRule(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_SpaceBefore(float &Get_SpaceBefore_result) = 0 ;
	virtual HRESULT __safecall Set_SpaceBefore(float prop) = 0 ;
	virtual HRESULT __safecall Get_SpaceAfter(float &Get_SpaceAfter_result) = 0 ;
	virtual HRESULT __safecall Set_SpaceAfter(float prop) = 0 ;
	virtual HRESULT __safecall Get_Hyphenation(int &Get_Hyphenation_result) = 0 ;
	virtual HRESULT __safecall Set_Hyphenation(int prop) = 0 ;
	virtual HRESULT __safecall Get_WidowControl(int &Get_WidowControl_result) = 0 ;
	virtual HRESULT __safecall Set_WidowControl(int prop) = 0 ;
	virtual HRESULT __safecall Get_FarEastLineBreakControl(int &Get_FarEastLineBreakControl_result) = 0 ;
	virtual HRESULT __safecall Set_FarEastLineBreakControl(int prop) = 0 ;
	virtual HRESULT __safecall Get_WordWrap(int &Get_WordWrap_result) = 0 ;
	virtual HRESULT __safecall Set_WordWrap(int prop) = 0 ;
	virtual HRESULT __safecall Get_HangingPunctuation(int &Get_HangingPunctuation_result) = 0 ;
	virtual HRESULT __safecall Set_HangingPunctuation(int prop) = 0 ;
	virtual HRESULT __safecall Get_HalfWidthPunctuationOnTopOfLine(int &Get_HalfWidthPunctuationOnTopOfLine_result) = 0 ;
	virtual HRESULT __safecall Set_HalfWidthPunctuationOnTopOfLine(int prop) = 0 ;
	virtual HRESULT __safecall Get_AddSpaceBetweenFarEastAndAlpha(int &Get_AddSpaceBetweenFarEastAndAlpha_result) = 0 ;
	virtual HRESULT __safecall Set_AddSpaceBetweenFarEastAndAlpha(int prop) = 0 ;
	virtual HRESULT __safecall Get_AddSpaceBetweenFarEastAndDigit(int &Get_AddSpaceBetweenFarEastAndDigit_result) = 0 ;
	virtual HRESULT __safecall Set_AddSpaceBetweenFarEastAndDigit(int prop) = 0 ;
	virtual HRESULT __safecall Get_BaseLineAlignment(Activex::TOleEnum &Get_BaseLineAlignment_result) = 0 ;
	virtual HRESULT __safecall Set_BaseLineAlignment(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_AutoAdjustRightIndent(int &Get_AutoAdjustRightIndent_result) = 0 ;
	virtual HRESULT __safecall Set_AutoAdjustRightIndent(int prop) = 0 ;
	virtual HRESULT __safecall Get_DisableLineHeightGrid(int &Get_DisableLineHeightGrid_result) = 0 ;
	virtual HRESULT __safecall Set_DisableLineHeightGrid(int prop) = 0 ;
	virtual HRESULT __safecall Get_TabStops(_di_TabStops &Get_TabStops_result) = 0 ;
	virtual HRESULT __safecall Set_TabStops(const _di_TabStops prop) = 0 ;
	virtual HRESULT __safecall Get_Borders(_di_Borders &Get_Borders_result) = 0 ;
	virtual HRESULT __safecall Set_Borders(const _di_Borders prop) = 0 ;
	virtual HRESULT __safecall Get_Shading(_di_Shading &Get_Shading_result) = 0 ;
	virtual HRESULT __safecall Get_OutlineLevel(Activex::TOleEnum &Get_OutlineLevel_result) = 0 ;
	virtual HRESULT __safecall Set_OutlineLevel(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall CloseUp(void) = 0 ;
	virtual HRESULT __safecall OpenUp(void) = 0 ;
	virtual HRESULT __safecall OpenOrCloseUp(void) = 0 ;
	virtual HRESULT __safecall TabHangingIndent(short Count) = 0 ;
	virtual HRESULT __safecall TabIndent(short Count) = 0 ;
	virtual HRESULT __safecall Reset(void) = 0 ;
	virtual HRESULT __safecall Space1(void) = 0 ;
	virtual HRESULT __safecall Space15(void) = 0 ;
	virtual HRESULT __safecall Space2(void) = 0 ;
	virtual HRESULT __safecall IndentCharWidth(short Count) = 0 ;
	virtual HRESULT __safecall IndentFirstLineCharWidth(short Count) = 0 ;
	virtual HRESULT __safecall Get_CharacterUnitRightIndent(float &Get_CharacterUnitRightIndent_result) = 0 ;
	virtual HRESULT __safecall Set_CharacterUnitRightIndent(float prop) = 0 ;
	virtual HRESULT __safecall Get_CharacterUnitLeftIndent(float &Get_CharacterUnitLeftIndent_result) = 0 ;
	virtual HRESULT __safecall Set_CharacterUnitLeftIndent(float prop) = 0 ;
	virtual HRESULT __safecall Get_CharacterUnitFirstLineIndent(float &Get_CharacterUnitFirstLineIndent_result) = 0 ;
	virtual HRESULT __safecall Set_CharacterUnitFirstLineIndent(float prop) = 0 ;
	virtual HRESULT __safecall Get_LineUnitBefore(float &Get_LineUnitBefore_result) = 0 ;
	virtual HRESULT __safecall Set_LineUnitBefore(float prop) = 0 ;
	virtual HRESULT __safecall Get_LineUnitAfter(float &Get_LineUnitAfter_result) = 0 ;
	virtual HRESULT __safecall Set_LineUnitAfter(float prop) = 0 ;
	virtual HRESULT __safecall Get_ReadingOrder(Activex::TOleEnum &Get_ReadingOrder_result) = 0 ;
	virtual HRESULT __safecall Set_ReadingOrder(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_SpaceBeforeAuto(int &Get_SpaceBeforeAuto_result) = 0 ;
	virtual HRESULT __safecall Set_SpaceBeforeAuto(int prop) = 0 ;
	virtual HRESULT __safecall Get_SpaceAfterAuto(int &Get_SpaceAfterAuto_result) = 0 ;
	virtual HRESULT __safecall Set_SpaceAfterAuto(int prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__ParagraphFormat _scw_Get_Duplicate() { _di__ParagraphFormat r; HRESULT hr = Get_Duplicate(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__ParagraphFormat Duplicate = {read=_scw_Get_Duplicate};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Alignment() { Activex::TOleEnum r; HRESULT hr = Get_Alignment(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Alignment = {read=_scw_Get_Alignment, write=Set_Alignment};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_KeepTogether() { int r; HRESULT hr = Get_KeepTogether(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int KeepTogether = {read=_scw_Get_KeepTogether, write=Set_KeepTogether};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_KeepWithNext() { int r; HRESULT hr = Get_KeepWithNext(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int KeepWithNext = {read=_scw_Get_KeepWithNext, write=Set_KeepWithNext};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_PageBreakBefore() { int r; HRESULT hr = Get_PageBreakBefore(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int PageBreakBefore = {read=_scw_Get_PageBreakBefore, write=Set_PageBreakBefore};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_NoLineNumber() { int r; HRESULT hr = Get_NoLineNumber(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int NoLineNumber = {read=_scw_Get_NoLineNumber, write=Set_NoLineNumber};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_RightIndent() { float r; HRESULT hr = Get_RightIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float RightIndent = {read=_scw_Get_RightIndent, write=Set_RightIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_LeftIndent() { float r; HRESULT hr = Get_LeftIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float LeftIndent = {read=_scw_Get_LeftIndent, write=Set_LeftIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_FirstLineIndent() { float r; HRESULT hr = Get_FirstLineIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float FirstLineIndent = {read=_scw_Get_FirstLineIndent, write=Set_FirstLineIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_LineSpacing() { float r; HRESULT hr = Get_LineSpacing(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float LineSpacing = {read=_scw_Get_LineSpacing, write=Set_LineSpacing};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LineSpacingRule() { Activex::TOleEnum r; HRESULT hr = Get_LineSpacingRule(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LineSpacingRule = {read=_scw_Get_LineSpacingRule, write=Set_LineSpacingRule};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_SpaceBefore() { float r; HRESULT hr = Get_SpaceBefore(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float SpaceBefore = {read=_scw_Get_SpaceBefore, write=Set_SpaceBefore};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_SpaceAfter() { float r; HRESULT hr = Get_SpaceAfter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float SpaceAfter = {read=_scw_Get_SpaceAfter, write=Set_SpaceAfter};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Hyphenation() { int r; HRESULT hr = Get_Hyphenation(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Hyphenation = {read=_scw_Get_Hyphenation, write=Set_Hyphenation};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_WidowControl() { int r; HRESULT hr = Get_WidowControl(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int WidowControl = {read=_scw_Get_WidowControl, write=Set_WidowControl};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_FarEastLineBreakControl() { int r; HRESULT hr = Get_FarEastLineBreakControl(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int FarEastLineBreakControl = {read=_scw_Get_FarEastLineBreakControl, write=Set_FarEastLineBreakControl};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_WordWrap() { int r; HRESULT hr = Get_WordWrap(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int WordWrap = {read=_scw_Get_WordWrap, write=Set_WordWrap};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_HangingPunctuation() { int r; HRESULT hr = Get_HangingPunctuation(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int HangingPunctuation = {read=_scw_Get_HangingPunctuation, write=Set_HangingPunctuation};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_HalfWidthPunctuationOnTopOfLine() { int r; HRESULT hr = Get_HalfWidthPunctuationOnTopOfLine(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int HalfWidthPunctuationOnTopOfLine = {read=_scw_Get_HalfWidthPunctuationOnTopOfLine, write=Set_HalfWidthPunctuationOnTopOfLine};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_AddSpaceBetweenFarEastAndAlpha() { int r; HRESULT hr = Get_AddSpaceBetweenFarEastAndAlpha(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int AddSpaceBetweenFarEastAndAlpha = {read=_scw_Get_AddSpaceBetweenFarEastAndAlpha, write=Set_AddSpaceBetweenFarEastAndAlpha};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_AddSpaceBetweenFarEastAndDigit() { int r; HRESULT hr = Get_AddSpaceBetweenFarEastAndDigit(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int AddSpaceBetweenFarEastAndDigit = {read=_scw_Get_AddSpaceBetweenFarEastAndDigit, write=Set_AddSpaceBetweenFarEastAndDigit};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_BaseLineAlignment() { Activex::TOleEnum r; HRESULT hr = Get_BaseLineAlignment(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum BaseLineAlignment = {read=_scw_Get_BaseLineAlignment, write=Set_BaseLineAlignment};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_AutoAdjustRightIndent() { int r; HRESULT hr = Get_AutoAdjustRightIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int AutoAdjustRightIndent = {read=_scw_Get_AutoAdjustRightIndent, write=Set_AutoAdjustRightIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_DisableLineHeightGrid() { int r; HRESULT hr = Get_DisableLineHeightGrid(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int DisableLineHeightGrid = {read=_scw_Get_DisableLineHeightGrid, write=Set_DisableLineHeightGrid};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_TabStops _scw_Get_TabStops() { _di_TabStops r; HRESULT hr = Get_TabStops(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_TabStops TabStops = {read=_scw_Get_TabStops, write=Set_TabStops};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Borders _scw_Get_Borders() { _di_Borders r; HRESULT hr = Get_Borders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Borders Borders = {read=_scw_Get_Borders, write=Set_Borders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shading _scw_Get_Shading() { _di_Shading r; HRESULT hr = Get_Shading(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shading Shading = {read=_scw_Get_Shading};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_OutlineLevel() { Activex::TOleEnum r; HRESULT hr = Get_OutlineLevel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum OutlineLevel = {read=_scw_Get_OutlineLevel, write=Set_OutlineLevel};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_CharacterUnitRightIndent() { float r; HRESULT hr = Get_CharacterUnitRightIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float CharacterUnitRightIndent = {read=_scw_Get_CharacterUnitRightIndent, write=Set_CharacterUnitRightIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_CharacterUnitLeftIndent() { float r; HRESULT hr = Get_CharacterUnitLeftIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float CharacterUnitLeftIndent = {read=_scw_Get_CharacterUnitLeftIndent, write=Set_CharacterUnitLeftIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_CharacterUnitFirstLineIndent() { float r; HRESULT hr = Get_CharacterUnitFirstLineIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float CharacterUnitFirstLineIndent = {read=_scw_Get_CharacterUnitFirstLineIndent, write=Set_CharacterUnitFirstLineIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_LineUnitBefore() { float r; HRESULT hr = Get_LineUnitBefore(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float LineUnitBefore = {read=_scw_Get_LineUnitBefore, write=Set_LineUnitBefore};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_LineUnitAfter() { float r; HRESULT hr = Get_LineUnitAfter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float LineUnitAfter = {read=_scw_Get_LineUnitAfter, write=Set_LineUnitAfter};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_ReadingOrder() { Activex::TOleEnum r; HRESULT hr = Get_ReadingOrder(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum ReadingOrder = {read=_scw_Get_ReadingOrder, write=Set_ReadingOrder};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_SpaceBeforeAuto() { int r; HRESULT hr = Get_SpaceBeforeAuto(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int SpaceBeforeAuto = {read=_scw_Get_SpaceBeforeAuto, write=Set_SpaceBeforeAuto};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_SpaceAfterAuto() { int r; HRESULT hr = Get_SpaceAfterAuto(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int SpaceAfterAuto = {read=_scw_Get_SpaceAfterAuto, write=Set_SpaceAfterAuto};
};

__dispinterface _ParagraphFormatDisp;
typedef System::DelphiInterface<_ParagraphFormatDisp> _di__ParagraphFormatDisp;
__dispinterface INTERFACE_UUID("{00020953-0000-0000-C000-000000000046}") _ParagraphFormatDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020952-0000-0000-C000-000000000046}") _Font  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Duplicate(_di__Font &Get_Duplicate_result) = 0 ;
	virtual HRESULT __safecall Get_Bold(int &Get_Bold_result) = 0 ;
	virtual HRESULT __safecall Set_Bold(int prop) = 0 ;
	virtual HRESULT __safecall Get_Italic(int &Get_Italic_result) = 0 ;
	virtual HRESULT __safecall Set_Italic(int prop) = 0 ;
	virtual HRESULT __safecall Get_Hidden(int &Get_Hidden_result) = 0 ;
	virtual HRESULT __safecall Set_Hidden(int prop) = 0 ;
	virtual HRESULT __safecall Get_SmallCaps(int &Get_SmallCaps_result) = 0 ;
	virtual HRESULT __safecall Set_SmallCaps(int prop) = 0 ;
	virtual HRESULT __safecall Get_AllCaps(int &Get_AllCaps_result) = 0 ;
	virtual HRESULT __safecall Set_AllCaps(int prop) = 0 ;
	virtual HRESULT __safecall Get_StrikeThrough(int &Get_StrikeThrough_result) = 0 ;
	virtual HRESULT __safecall Set_StrikeThrough(int prop) = 0 ;
	virtual HRESULT __safecall Get_DoubleStrikeThrough(int &Get_DoubleStrikeThrough_result) = 0 ;
	virtual HRESULT __safecall Set_DoubleStrikeThrough(int prop) = 0 ;
	virtual HRESULT __safecall Get_ColorIndex(Activex::TOleEnum &Get_ColorIndex_result) = 0 ;
	virtual HRESULT __safecall Set_ColorIndex(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Subscript(int &Get_Subscript_result) = 0 ;
	virtual HRESULT __safecall Set_Subscript(int prop) = 0 ;
	virtual HRESULT __safecall Get_Superscript(int &Get_Superscript_result) = 0 ;
	virtual HRESULT __safecall Set_Superscript(int prop) = 0 ;
	virtual HRESULT __safecall Get_Underline(Activex::TOleEnum &Get_Underline_result) = 0 ;
	virtual HRESULT __safecall Set_Underline(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Size(float &Get_Size_result) = 0 ;
	virtual HRESULT __safecall Set_Size(float prop) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Set_Name(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Position(int &Get_Position_result) = 0 ;
	virtual HRESULT __safecall Set_Position(int prop) = 0 ;
	virtual HRESULT __safecall Get_Spacing(float &Get_Spacing_result) = 0 ;
	virtual HRESULT __safecall Set_Spacing(float prop) = 0 ;
	virtual HRESULT __safecall Get_Scaling(int &Get_Scaling_result) = 0 ;
	virtual HRESULT __safecall Set_Scaling(int prop) = 0 ;
	virtual HRESULT __safecall Get_Shadow(int &Get_Shadow_result) = 0 ;
	virtual HRESULT __safecall Set_Shadow(int prop) = 0 ;
	virtual HRESULT __safecall Get_Outline(int &Get_Outline_result) = 0 ;
	virtual HRESULT __safecall Set_Outline(int prop) = 0 ;
	virtual HRESULT __safecall Get_Emboss(int &Get_Emboss_result) = 0 ;
	virtual HRESULT __safecall Set_Emboss(int prop) = 0 ;
	virtual HRESULT __safecall Get_Kerning(float &Get_Kerning_result) = 0 ;
	virtual HRESULT __safecall Set_Kerning(float prop) = 0 ;
	virtual HRESULT __safecall Get_Engrave(int &Get_Engrave_result) = 0 ;
	virtual HRESULT __safecall Set_Engrave(int prop) = 0 ;
	virtual HRESULT __safecall Get_Animation(Activex::TOleEnum &Get_Animation_result) = 0 ;
	virtual HRESULT __safecall Set_Animation(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Borders(_di_Borders &Get_Borders_result) = 0 ;
	virtual HRESULT __safecall Set_Borders(const _di_Borders prop) = 0 ;
	virtual HRESULT __safecall Get_Shading(_di_Shading &Get_Shading_result) = 0 ;
	virtual HRESULT __safecall Get_EmphasisMark(Activex::TOleEnum &Get_EmphasisMark_result) = 0 ;
	virtual HRESULT __safecall Set_EmphasisMark(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_DisableCharacterSpaceGrid(Word &Get_DisableCharacterSpaceGrid_result) = 0 ;
	virtual HRESULT __safecall Set_DisableCharacterSpaceGrid(Word prop) = 0 ;
	virtual HRESULT __safecall Get_NameFarEast(WideString &Get_NameFarEast_result) = 0 ;
	virtual HRESULT __safecall Set_NameFarEast(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_NameAscii(WideString &Get_NameAscii_result) = 0 ;
	virtual HRESULT __safecall Set_NameAscii(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_NameOther(WideString &Get_NameOther_result) = 0 ;
	virtual HRESULT __safecall Set_NameOther(const WideString prop) = 0 ;
	virtual HRESULT __safecall Grow(void) = 0 ;
	virtual HRESULT __safecall Shrink(void) = 0 ;
	virtual HRESULT __safecall Reset(void) = 0 ;
	virtual HRESULT __safecall SetAsTemplateDefault(void) = 0 ;
	virtual HRESULT __safecall Get_Color(Activex::TOleEnum &Get_Color_result) = 0 ;
	virtual HRESULT __safecall Set_Color(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_BoldBi(int &Get_BoldBi_result) = 0 ;
	virtual HRESULT __safecall Set_BoldBi(int prop) = 0 ;
	virtual HRESULT __safecall Get_ItalicBi(int &Get_ItalicBi_result) = 0 ;
	virtual HRESULT __safecall Set_ItalicBi(int prop) = 0 ;
	virtual HRESULT __safecall Get_SizeBi(float &Get_SizeBi_result) = 0 ;
	virtual HRESULT __safecall Set_SizeBi(float prop) = 0 ;
	virtual HRESULT __safecall Get_NameBi(WideString &Get_NameBi_result) = 0 ;
	virtual HRESULT __safecall Set_NameBi(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_ColorIndexBi(Activex::TOleEnum &Get_ColorIndexBi_result) = 0 ;
	virtual HRESULT __safecall Set_ColorIndexBi(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_DiacriticColor(Activex::TOleEnum &Get_DiacriticColor_result) = 0 ;
	virtual HRESULT __safecall Set_DiacriticColor(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_UnderlineColor(Activex::TOleEnum &Get_UnderlineColor_result) = 0 ;
	virtual HRESULT __safecall Set_UnderlineColor(Activex::TOleEnum prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Font _scw_Get_Duplicate() { _di__Font r; HRESULT hr = Get_Duplicate(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Font Duplicate = {read=_scw_Get_Duplicate};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Bold() { int r; HRESULT hr = Get_Bold(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Bold = {read=_scw_Get_Bold, write=Set_Bold};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Italic() { int r; HRESULT hr = Get_Italic(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Italic = {read=_scw_Get_Italic, write=Set_Italic};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Hidden() { int r; HRESULT hr = Get_Hidden(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Hidden = {read=_scw_Get_Hidden, write=Set_Hidden};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_SmallCaps() { int r; HRESULT hr = Get_SmallCaps(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int SmallCaps = {read=_scw_Get_SmallCaps, write=Set_SmallCaps};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_AllCaps() { int r; HRESULT hr = Get_AllCaps(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int AllCaps = {read=_scw_Get_AllCaps, write=Set_AllCaps};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_StrikeThrough() { int r; HRESULT hr = Get_StrikeThrough(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int StrikeThrough = {read=_scw_Get_StrikeThrough, write=Set_StrikeThrough};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_DoubleStrikeThrough() { int r; HRESULT hr = Get_DoubleStrikeThrough(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int DoubleStrikeThrough = {read=_scw_Get_DoubleStrikeThrough, write=Set_DoubleStrikeThrough};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_ColorIndex() { Activex::TOleEnum r; HRESULT hr = Get_ColorIndex(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum ColorIndex = {read=_scw_Get_ColorIndex, write=Set_ColorIndex};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Subscript() { int r; HRESULT hr = Get_Subscript(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Subscript = {read=_scw_Get_Subscript, write=Set_Subscript};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Superscript() { int r; HRESULT hr = Get_Superscript(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Superscript = {read=_scw_Get_Superscript, write=Set_Superscript};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Underline() { Activex::TOleEnum r; HRESULT hr = Get_Underline(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Underline = {read=_scw_Get_Underline, write=Set_Underline};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Size() { float r; HRESULT hr = Get_Size(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Size = {read=_scw_Get_Size, write=Set_Size};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name, write=Set_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Position() { int r; HRESULT hr = Get_Position(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Position = {read=_scw_Get_Position, write=Set_Position};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Spacing() { float r; HRESULT hr = Get_Spacing(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Spacing = {read=_scw_Get_Spacing, write=Set_Spacing};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Scaling() { int r; HRESULT hr = Get_Scaling(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Scaling = {read=_scw_Get_Scaling, write=Set_Scaling};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Shadow() { int r; HRESULT hr = Get_Shadow(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Shadow = {read=_scw_Get_Shadow, write=Set_Shadow};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Outline() { int r; HRESULT hr = Get_Outline(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Outline = {read=_scw_Get_Outline, write=Set_Outline};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Emboss() { int r; HRESULT hr = Get_Emboss(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Emboss = {read=_scw_Get_Emboss, write=Set_Emboss};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Kerning() { float r; HRESULT hr = Get_Kerning(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Kerning = {read=_scw_Get_Kerning, write=Set_Kerning};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Engrave() { int r; HRESULT hr = Get_Engrave(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Engrave = {read=_scw_Get_Engrave, write=Set_Engrave};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Animation() { Activex::TOleEnum r; HRESULT hr = Get_Animation(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Animation = {read=_scw_Get_Animation, write=Set_Animation};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Borders _scw_Get_Borders() { _di_Borders r; HRESULT hr = Get_Borders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Borders Borders = {read=_scw_Get_Borders, write=Set_Borders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shading _scw_Get_Shading() { _di_Shading r; HRESULT hr = Get_Shading(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shading Shading = {read=_scw_Get_Shading};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_EmphasisMark() { Activex::TOleEnum r; HRESULT hr = Get_EmphasisMark(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum EmphasisMark = {read=_scw_Get_EmphasisMark, write=Set_EmphasisMark};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisableCharacterSpaceGrid() { Word r; HRESULT hr = Get_DisableCharacterSpaceGrid(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisableCharacterSpaceGrid = {read=_scw_Get_DisableCharacterSpaceGrid, write=Set_DisableCharacterSpaceGrid};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_NameFarEast() { WideString r; HRESULT hr = Get_NameFarEast(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString NameFarEast = {read=_scw_Get_NameFarEast, write=Set_NameFarEast};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_NameAscii() { WideString r; HRESULT hr = Get_NameAscii(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString NameAscii = {read=_scw_Get_NameAscii, write=Set_NameAscii};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_NameOther() { WideString r; HRESULT hr = Get_NameOther(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString NameOther = {read=_scw_Get_NameOther, write=Set_NameOther};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Color() { Activex::TOleEnum r; HRESULT hr = Get_Color(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Color = {read=_scw_Get_Color, write=Set_Color};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_BoldBi() { int r; HRESULT hr = Get_BoldBi(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int BoldBi = {read=_scw_Get_BoldBi, write=Set_BoldBi};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_ItalicBi() { int r; HRESULT hr = Get_ItalicBi(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int ItalicBi = {read=_scw_Get_ItalicBi, write=Set_ItalicBi};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_SizeBi() { float r; HRESULT hr = Get_SizeBi(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float SizeBi = {read=_scw_Get_SizeBi, write=Set_SizeBi};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_NameBi() { WideString r; HRESULT hr = Get_NameBi(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString NameBi = {read=_scw_Get_NameBi, write=Set_NameBi};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_ColorIndexBi() { Activex::TOleEnum r; HRESULT hr = Get_ColorIndexBi(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum ColorIndexBi = {read=_scw_Get_ColorIndexBi, write=Set_ColorIndexBi};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_DiacriticColor() { Activex::TOleEnum r; HRESULT hr = Get_DiacriticColor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum DiacriticColor = {read=_scw_Get_DiacriticColor, write=Set_DiacriticColor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_UnderlineColor() { Activex::TOleEnum r; HRESULT hr = Get_UnderlineColor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum UnderlineColor = {read=_scw_Get_UnderlineColor, write=Set_UnderlineColor};
};

__dispinterface _FontDisp;
typedef System::DelphiInterface<_FontDisp> _di__FontDisp;
__dispinterface INTERFACE_UUID("{00020952-0000-0000-C000-000000000046}") _FontDisp  : public IDispatch 
{
	
};

__interface Cell;
typedef System::DelphiInterface<Cell> _di_Cell;
__interface INTERFACE_UUID("{00020951-0000-0000-C000-000000000046}") Table  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Columns(_di_Columns &Get_Columns_result) = 0 ;
	virtual HRESULT __safecall Get_Rows(_di_Rows &Get_Rows_result) = 0 ;
	virtual HRESULT __safecall Get_Borders(_di_Borders &Get_Borders_result) = 0 ;
	virtual HRESULT __safecall Set_Borders(const _di_Borders prop) = 0 ;
	virtual HRESULT __safecall Get_Shading(_di_Shading &Get_Shading_result) = 0 ;
	virtual HRESULT __safecall Get_Uniform(Word &Get_Uniform_result) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatType(int &Get_AutoFormatType_result) = 0 ;
	virtual HRESULT __safecall Select(void) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall SortOld(OleVariant &ExcludeHeader, OleVariant &FieldNumber, OleVariant &SortFieldType, OleVariant &SortOrder, OleVariant &FieldNumber2, OleVariant &SortFieldType2, OleVariant &SortOrder2, OleVariant &FieldNumber3, OleVariant &SortFieldType3, OleVariant &SortOrder3, OleVariant &CaseSensitive, OleVariant &LanguageID) = 0 ;
	virtual HRESULT __safecall SortAscending(void) = 0 ;
	virtual HRESULT __safecall SortDescending(void) = 0 ;
	virtual HRESULT __safecall AutoFormat(OleVariant &Format, OleVariant &ApplyBorders, OleVariant &ApplyShading, OleVariant &ApplyFont, OleVariant &ApplyColor, OleVariant &ApplyHeadingRows, OleVariant &ApplyLastRow, OleVariant &ApplyFirstColumn, OleVariant &ApplyLastColumn, OleVariant &AutoFit) = 0 ;
	virtual HRESULT __safecall UpdateAutoFormat(void) = 0 ;
	virtual HRESULT __safecall ConvertToTextOld(OleVariant &Separator, _di_Range &ConvertToTextOld_result) = 0 ;
	virtual HRESULT __safecall Cell(int Row, int Column, _di_Cell &Cell_result) = 0 ;
	virtual HRESULT __safecall Split(OleVariant &BeforeRow, _di_Table &Split_result) = 0 ;
	virtual HRESULT __safecall ConvertToText(OleVariant &Separator, OleVariant &NestedTables, _di_Range &ConvertToText_result) = 0 ;
	virtual HRESULT __safecall AutoFitBehavior(Activex::TOleEnum Behavior) = 0 ;
	virtual HRESULT __safecall Sort(OleVariant &ExcludeHeader, OleVariant &FieldNumber, OleVariant &SortFieldType, OleVariant &SortOrder, OleVariant &FieldNumber2, OleVariant &SortFieldType2, OleVariant &SortOrder2, OleVariant &FieldNumber3, OleVariant &SortFieldType3, OleVariant &SortOrder3, OleVariant &CaseSensitive, OleVariant &BidiSort, OleVariant &IgnoreThe, OleVariant &IgnoreKashida, OleVariant &IgnoreDiacritics, OleVariant &IgnoreHe, OleVariant &LanguageID) = 0 ;
	virtual HRESULT __safecall Get_Tables(_di_Tables &Get_Tables_result) = 0 ;
	virtual HRESULT __safecall Get_NestingLevel(int &Get_NestingLevel_result) = 0 ;
	virtual HRESULT __safecall Get_AllowPageBreaks(Word &Get_AllowPageBreaks_result) = 0 ;
	virtual HRESULT __safecall Set_AllowPageBreaks(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AllowAutoFit(Word &Get_AllowAutoFit_result) = 0 ;
	virtual HRESULT __safecall Set_AllowAutoFit(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PreferredWidth(float &Get_PreferredWidth_result) = 0 ;
	virtual HRESULT __safecall Set_PreferredWidth(float prop) = 0 ;
	virtual HRESULT __safecall Get_PreferredWidthType(Activex::TOleEnum &Get_PreferredWidthType_result) = 0 ;
	virtual HRESULT __safecall Set_PreferredWidthType(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_TopPadding(float &Get_TopPadding_result) = 0 ;
	virtual HRESULT __safecall Set_TopPadding(float prop) = 0 ;
	virtual HRESULT __safecall Get_BottomPadding(float &Get_BottomPadding_result) = 0 ;
	virtual HRESULT __safecall Set_BottomPadding(float prop) = 0 ;
	virtual HRESULT __safecall Get_LeftPadding(float &Get_LeftPadding_result) = 0 ;
	virtual HRESULT __safecall Set_LeftPadding(float prop) = 0 ;
	virtual HRESULT __safecall Get_RightPadding(float &Get_RightPadding_result) = 0 ;
	virtual HRESULT __safecall Set_RightPadding(float prop) = 0 ;
	virtual HRESULT __safecall Get_Spacing(float &Get_Spacing_result) = 0 ;
	virtual HRESULT __safecall Set_Spacing(float prop) = 0 ;
	virtual HRESULT __safecall Get_TableDirection(Activex::TOleEnum &Get_TableDirection_result) = 0 ;
	virtual HRESULT __safecall Set_TableDirection(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_ID(WideString &Get_ID_result) = 0 ;
	virtual HRESULT __safecall Set_ID(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Style(OleVariant &Get_Style_result) = 0 ;
	virtual HRESULT __safecall Set_Style(OleVariant &prop) = 0 ;
	virtual HRESULT __safecall Get_ApplyStyleHeadingRows(Word &Get_ApplyStyleHeadingRows_result) = 0 ;
	virtual HRESULT __safecall Set_ApplyStyleHeadingRows(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ApplyStyleLastRow(Word &Get_ApplyStyleLastRow_result) = 0 ;
	virtual HRESULT __safecall Set_ApplyStyleLastRow(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ApplyStyleFirstColumn(Word &Get_ApplyStyleFirstColumn_result) = 0 ;
	virtual HRESULT __safecall Set_ApplyStyleFirstColumn(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ApplyStyleLastColumn(Word &Get_ApplyStyleLastColumn_result) = 0 ;
	virtual HRESULT __safecall Set_ApplyStyleLastColumn(Word prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Columns _scw_Get_Columns() { _di_Columns r; HRESULT hr = Get_Columns(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Columns Columns = {read=_scw_Get_Columns};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Rows _scw_Get_Rows() { _di_Rows r; HRESULT hr = Get_Rows(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Rows Rows = {read=_scw_Get_Rows};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Borders _scw_Get_Borders() { _di_Borders r; HRESULT hr = Get_Borders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Borders Borders = {read=_scw_Get_Borders, write=Set_Borders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shading _scw_Get_Shading() { _di_Shading r; HRESULT hr = Get_Shading(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shading Shading = {read=_scw_Get_Shading};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Uniform() { Word r; HRESULT hr = Get_Uniform(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Uniform = {read=_scw_Get_Uniform};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_AutoFormatType() { int r; HRESULT hr = Get_AutoFormatType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int AutoFormatType = {read=_scw_Get_AutoFormatType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Tables _scw_Get_Tables() { _di_Tables r; HRESULT hr = Get_Tables(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Tables Tables = {read=_scw_Get_Tables};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_NestingLevel() { int r; HRESULT hr = Get_NestingLevel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int NestingLevel = {read=_scw_Get_NestingLevel};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AllowPageBreaks() { Word r; HRESULT hr = Get_AllowPageBreaks(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AllowPageBreaks = {read=_scw_Get_AllowPageBreaks, write=Set_AllowPageBreaks};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AllowAutoFit() { Word r; HRESULT hr = Get_AllowAutoFit(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AllowAutoFit = {read=_scw_Get_AllowAutoFit, write=Set_AllowAutoFit};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_PreferredWidth() { float r; HRESULT hr = Get_PreferredWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float PreferredWidth = {read=_scw_Get_PreferredWidth, write=Set_PreferredWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_PreferredWidthType() { Activex::TOleEnum r; HRESULT hr = Get_PreferredWidthType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum PreferredWidthType = {read=_scw_Get_PreferredWidthType, write=Set_PreferredWidthType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_TopPadding() { float r; HRESULT hr = Get_TopPadding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float TopPadding = {read=_scw_Get_TopPadding, write=Set_TopPadding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_BottomPadding() { float r; HRESULT hr = Get_BottomPadding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float BottomPadding = {read=_scw_Get_BottomPadding, write=Set_BottomPadding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_LeftPadding() { float r; HRESULT hr = Get_LeftPadding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float LeftPadding = {read=_scw_Get_LeftPadding, write=Set_LeftPadding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_RightPadding() { float r; HRESULT hr = Get_RightPadding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float RightPadding = {read=_scw_Get_RightPadding, write=Set_RightPadding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Spacing() { float r; HRESULT hr = Get_Spacing(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Spacing = {read=_scw_Get_Spacing, write=Set_Spacing};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_TableDirection() { Activex::TOleEnum r; HRESULT hr = Get_TableDirection(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum TableDirection = {read=_scw_Get_TableDirection, write=Set_TableDirection};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ID() { WideString r; HRESULT hr = Get_ID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ID = {read=_scw_Get_ID, write=Set_ID};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ApplyStyleHeadingRows() { Word r; HRESULT hr = Get_ApplyStyleHeadingRows(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ApplyStyleHeadingRows = {read=_scw_Get_ApplyStyleHeadingRows, write=Set_ApplyStyleHeadingRows};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ApplyStyleLastRow() { Word r; HRESULT hr = Get_ApplyStyleLastRow(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ApplyStyleLastRow = {read=_scw_Get_ApplyStyleLastRow, write=Set_ApplyStyleLastRow};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ApplyStyleFirstColumn() { Word r; HRESULT hr = Get_ApplyStyleFirstColumn(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ApplyStyleFirstColumn = {read=_scw_Get_ApplyStyleFirstColumn, write=Set_ApplyStyleFirstColumn};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ApplyStyleLastColumn() { Word r; HRESULT hr = Get_ApplyStyleLastColumn(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ApplyStyleLastColumn = {read=_scw_Get_ApplyStyleLastColumn, write=Set_ApplyStyleLastColumn};
};

__dispinterface TableDisp;
typedef System::DelphiInterface<TableDisp> _di_TableDisp;
__dispinterface INTERFACE_UUID("{00020951-0000-0000-C000-000000000046}") TableDisp  : public IDispatch 
{
	
};

__interface Row;
typedef System::DelphiInterface<Row> _di_Row;
__interface INTERFACE_UUID("{00020950-0000-0000-C000-000000000046}") Row  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_AllowBreakAcrossPages(int &Get_AllowBreakAcrossPages_result) = 0 ;
	virtual HRESULT __safecall Set_AllowBreakAcrossPages(int prop) = 0 ;
	virtual HRESULT __safecall Get_Alignment(Activex::TOleEnum &Get_Alignment_result) = 0 ;
	virtual HRESULT __safecall Set_Alignment(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_HeadingFormat(int &Get_HeadingFormat_result) = 0 ;
	virtual HRESULT __safecall Set_HeadingFormat(int prop) = 0 ;
	virtual HRESULT __safecall Get_SpaceBetweenColumns(float &Get_SpaceBetweenColumns_result) = 0 ;
	virtual HRESULT __safecall Set_SpaceBetweenColumns(float prop) = 0 ;
	virtual HRESULT __safecall Get_Height(float &Get_Height_result) = 0 ;
	virtual HRESULT __safecall Set_Height(float prop) = 0 ;
	virtual HRESULT __safecall Get_HeightRule(Activex::TOleEnum &Get_HeightRule_result) = 0 ;
	virtual HRESULT __safecall Set_HeightRule(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_LeftIndent(float &Get_LeftIndent_result) = 0 ;
	virtual HRESULT __safecall Set_LeftIndent(float prop) = 0 ;
	virtual HRESULT __safecall Get_IsLast(Word &Get_IsLast_result) = 0 ;
	virtual HRESULT __safecall Get_IsFirst(Word &Get_IsFirst_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_Cells(_di_Cells &Get_Cells_result) = 0 ;
	virtual HRESULT __safecall Get_Borders(_di_Borders &Get_Borders_result) = 0 ;
	virtual HRESULT __safecall Set_Borders(const _di_Borders prop) = 0 ;
	virtual HRESULT __safecall Get_Shading(_di_Shading &Get_Shading_result) = 0 ;
	virtual HRESULT __safecall Get_Next(_di_Row &Get_Next_result) = 0 ;
	virtual HRESULT __safecall Get_Previous(_di_Row &Get_Previous_result) = 0 ;
	virtual HRESULT __safecall Select(void) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall SetLeftIndent(float LeftIndent, Activex::TOleEnum RulerStyle) = 0 ;
	virtual HRESULT __safecall SetHeight(float RowHeight, Activex::TOleEnum HeightRule) = 0 ;
	virtual HRESULT __safecall ConvertToTextOld(OleVariant &Separator, _di_Range &ConvertToTextOld_result) = 0 ;
	virtual HRESULT __safecall ConvertToText(OleVariant &Separator, OleVariant &NestedTables, _di_Range &ConvertToText_result) = 0 ;
	virtual HRESULT __safecall Get_NestingLevel(int &Get_NestingLevel_result) = 0 ;
	virtual HRESULT __safecall Get_ID(WideString &Get_ID_result) = 0 ;
	virtual HRESULT __safecall Set_ID(const WideString prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_AllowBreakAcrossPages() { int r; HRESULT hr = Get_AllowBreakAcrossPages(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int AllowBreakAcrossPages = {read=_scw_Get_AllowBreakAcrossPages, write=Set_AllowBreakAcrossPages};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Alignment() { Activex::TOleEnum r; HRESULT hr = Get_Alignment(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Alignment = {read=_scw_Get_Alignment, write=Set_Alignment};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_HeadingFormat() { int r; HRESULT hr = Get_HeadingFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int HeadingFormat = {read=_scw_Get_HeadingFormat, write=Set_HeadingFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_SpaceBetweenColumns() { float r; HRESULT hr = Get_SpaceBetweenColumns(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float SpaceBetweenColumns = {read=_scw_Get_SpaceBetweenColumns, write=Set_SpaceBetweenColumns};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Height() { float r; HRESULT hr = Get_Height(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Height = {read=_scw_Get_Height, write=Set_Height};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_HeightRule() { Activex::TOleEnum r; HRESULT hr = Get_HeightRule(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum HeightRule = {read=_scw_Get_HeightRule, write=Set_HeightRule};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_LeftIndent() { float r; HRESULT hr = Get_LeftIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float LeftIndent = {read=_scw_Get_LeftIndent, write=Set_LeftIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IsLast() { Word r; HRESULT hr = Get_IsLast(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IsLast = {read=_scw_Get_IsLast};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IsFirst() { Word r; HRESULT hr = Get_IsFirst(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IsFirst = {read=_scw_Get_IsFirst};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Cells _scw_Get_Cells() { _di_Cells r; HRESULT hr = Get_Cells(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Cells Cells = {read=_scw_Get_Cells};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Borders _scw_Get_Borders() { _di_Borders r; HRESULT hr = Get_Borders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Borders Borders = {read=_scw_Get_Borders, write=Set_Borders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shading _scw_Get_Shading() { _di_Shading r; HRESULT hr = Get_Shading(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shading Shading = {read=_scw_Get_Shading};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Row _scw_Get_Next() { _di_Row r; HRESULT hr = Get_Next(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Row Next = {read=_scw_Get_Next};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Row _scw_Get_Previous() { _di_Row r; HRESULT hr = Get_Previous(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Row Previous = {read=_scw_Get_Previous};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_NestingLevel() { int r; HRESULT hr = Get_NestingLevel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int NestingLevel = {read=_scw_Get_NestingLevel};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ID() { WideString r; HRESULT hr = Get_ID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ID = {read=_scw_Get_ID, write=Set_ID};
};

__dispinterface RowDisp;
typedef System::DelphiInterface<RowDisp> _di_RowDisp;
__dispinterface INTERFACE_UUID("{00020950-0000-0000-C000-000000000046}") RowDisp  : public IDispatch 
{
	
};

__interface Column;
typedef System::DelphiInterface<Column> _di_Column;
__interface INTERFACE_UUID("{0002094F-0000-0000-C000-000000000046}") Column  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Width(float &Get_Width_result) = 0 ;
	virtual HRESULT __safecall Set_Width(float prop) = 0 ;
	virtual HRESULT __safecall Get_IsFirst(Word &Get_IsFirst_result) = 0 ;
	virtual HRESULT __safecall Get_IsLast(Word &Get_IsLast_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_Cells(_di_Cells &Get_Cells_result) = 0 ;
	virtual HRESULT __safecall Get_Borders(_di_Borders &Get_Borders_result) = 0 ;
	virtual HRESULT __safecall Set_Borders(const _di_Borders prop) = 0 ;
	virtual HRESULT __safecall Get_Shading(_di_Shading &Get_Shading_result) = 0 ;
	virtual HRESULT __safecall Get_Next(_di_Column &Get_Next_result) = 0 ;
	virtual HRESULT __safecall Get_Previous(_di_Column &Get_Previous_result) = 0 ;
	virtual HRESULT __safecall Select(void) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall SetWidth(float ColumnWidth, Activex::TOleEnum RulerStyle) = 0 ;
	virtual HRESULT __safecall AutoFit(void) = 0 ;
	virtual HRESULT __safecall SortOld(OleVariant &ExcludeHeader, OleVariant &SortFieldType, OleVariant &SortOrder, OleVariant &CaseSensitive, OleVariant &LanguageID) = 0 ;
	virtual HRESULT __safecall Sort(OleVariant &ExcludeHeader, OleVariant &SortFieldType, OleVariant &SortOrder, OleVariant &CaseSensitive, OleVariant &BidiSort, OleVariant &IgnoreThe, OleVariant &IgnoreKashida, OleVariant &IgnoreDiacritics, OleVariant &IgnoreHe, OleVariant &LanguageID) = 0 ;
	virtual HRESULT __safecall Get_NestingLevel(int &Get_NestingLevel_result) = 0 ;
	virtual HRESULT __safecall Get_PreferredWidth(float &Get_PreferredWidth_result) = 0 ;
	virtual HRESULT __safecall Set_PreferredWidth(float prop) = 0 ;
	virtual HRESULT __safecall Get_PreferredWidthType(Activex::TOleEnum &Get_PreferredWidthType_result) = 0 ;
	virtual HRESULT __safecall Set_PreferredWidthType(Activex::TOleEnum prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Width() { float r; HRESULT hr = Get_Width(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Width = {read=_scw_Get_Width, write=Set_Width};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IsFirst() { Word r; HRESULT hr = Get_IsFirst(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IsFirst = {read=_scw_Get_IsFirst};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IsLast() { Word r; HRESULT hr = Get_IsLast(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IsLast = {read=_scw_Get_IsLast};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Cells _scw_Get_Cells() { _di_Cells r; HRESULT hr = Get_Cells(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Cells Cells = {read=_scw_Get_Cells};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Borders _scw_Get_Borders() { _di_Borders r; HRESULT hr = Get_Borders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Borders Borders = {read=_scw_Get_Borders, write=Set_Borders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shading _scw_Get_Shading() { _di_Shading r; HRESULT hr = Get_Shading(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shading Shading = {read=_scw_Get_Shading};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Column _scw_Get_Next() { _di_Column r; HRESULT hr = Get_Next(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Column Next = {read=_scw_Get_Next};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Column _scw_Get_Previous() { _di_Column r; HRESULT hr = Get_Previous(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Column Previous = {read=_scw_Get_Previous};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_NestingLevel() { int r; HRESULT hr = Get_NestingLevel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int NestingLevel = {read=_scw_Get_NestingLevel};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_PreferredWidth() { float r; HRESULT hr = Get_PreferredWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float PreferredWidth = {read=_scw_Get_PreferredWidth, write=Set_PreferredWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_PreferredWidthType() { Activex::TOleEnum r; HRESULT hr = Get_PreferredWidthType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum PreferredWidthType = {read=_scw_Get_PreferredWidthType, write=Set_PreferredWidthType};
};

__dispinterface ColumnDisp;
typedef System::DelphiInterface<ColumnDisp> _di_ColumnDisp;
__dispinterface INTERFACE_UUID("{0002094F-0000-0000-C000-000000000046}") ColumnDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002094E-0000-0000-C000-000000000046}") Cell  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_RowIndex(int &Get_RowIndex_result) = 0 ;
	virtual HRESULT __safecall Get_ColumnIndex(int &Get_ColumnIndex_result) = 0 ;
	virtual HRESULT __safecall Get_Width(float &Get_Width_result) = 0 ;
	virtual HRESULT __safecall Set_Width(float prop) = 0 ;
	virtual HRESULT __safecall Get_Height(float &Get_Height_result) = 0 ;
	virtual HRESULT __safecall Set_Height(float prop) = 0 ;
	virtual HRESULT __safecall Get_HeightRule(Activex::TOleEnum &Get_HeightRule_result) = 0 ;
	virtual HRESULT __safecall Set_HeightRule(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_VerticalAlignment(Activex::TOleEnum &Get_VerticalAlignment_result) = 0 ;
	virtual HRESULT __safecall Set_VerticalAlignment(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Column(_di_Column &Get_Column_result) = 0 ;
	virtual HRESULT __safecall Get_Row(_di_Row &Get_Row_result) = 0 ;
	virtual HRESULT __safecall Get_Next(_di_Cell &Get_Next_result) = 0 ;
	virtual HRESULT __safecall Get_Previous(_di_Cell &Get_Previous_result) = 0 ;
	virtual HRESULT __safecall Get_Shading(_di_Shading &Get_Shading_result) = 0 ;
	virtual HRESULT __safecall Get_Borders(_di_Borders &Get_Borders_result) = 0 ;
	virtual HRESULT __safecall Set_Borders(const _di_Borders prop) = 0 ;
	virtual HRESULT __safecall Select(void) = 0 ;
	virtual HRESULT __safecall Delete(OleVariant &ShiftCells) = 0 ;
	virtual HRESULT __safecall Formula(OleVariant &Formula, OleVariant &NumFormat) = 0 ;
	virtual HRESULT __safecall SetWidth(float ColumnWidth, Activex::TOleEnum RulerStyle) = 0 ;
	virtual HRESULT __safecall SetHeight(OleVariant &RowHeight, Activex::TOleEnum HeightRule) = 0 ;
	virtual HRESULT __safecall Merge(const _di_Cell MergeTo) = 0 ;
	virtual HRESULT __safecall Split(OleVariant &NumRows, OleVariant &NumColumns) = 0 ;
	virtual HRESULT __safecall AutoSum(void) = 0 ;
	virtual HRESULT __safecall Get_Tables(_di_Tables &Get_Tables_result) = 0 ;
	virtual HRESULT __safecall Get_NestingLevel(int &Get_NestingLevel_result) = 0 ;
	virtual HRESULT __safecall Get_WordWrap(Word &Get_WordWrap_result) = 0 ;
	virtual HRESULT __safecall Set_WordWrap(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PreferredWidth(float &Get_PreferredWidth_result) = 0 ;
	virtual HRESULT __safecall Set_PreferredWidth(float prop) = 0 ;
	virtual HRESULT __safecall Get_FitText(Word &Get_FitText_result) = 0 ;
	virtual HRESULT __safecall Set_FitText(Word prop) = 0 ;
	virtual HRESULT __safecall Get_TopPadding(float &Get_TopPadding_result) = 0 ;
	virtual HRESULT __safecall Set_TopPadding(float prop) = 0 ;
	virtual HRESULT __safecall Get_BottomPadding(float &Get_BottomPadding_result) = 0 ;
	virtual HRESULT __safecall Set_BottomPadding(float prop) = 0 ;
	virtual HRESULT __safecall Get_LeftPadding(float &Get_LeftPadding_result) = 0 ;
	virtual HRESULT __safecall Set_LeftPadding(float prop) = 0 ;
	virtual HRESULT __safecall Get_RightPadding(float &Get_RightPadding_result) = 0 ;
	virtual HRESULT __safecall Set_RightPadding(float prop) = 0 ;
	virtual HRESULT __safecall Get_ID(WideString &Get_ID_result) = 0 ;
	virtual HRESULT __safecall Set_ID(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_PreferredWidthType(Activex::TOleEnum &Get_PreferredWidthType_result) = 0 ;
	virtual HRESULT __safecall Set_PreferredWidthType(Activex::TOleEnum prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_RowIndex() { int r; HRESULT hr = Get_RowIndex(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int RowIndex = {read=_scw_Get_RowIndex};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_ColumnIndex() { int r; HRESULT hr = Get_ColumnIndex(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int ColumnIndex = {read=_scw_Get_ColumnIndex};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Width() { float r; HRESULT hr = Get_Width(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Width = {read=_scw_Get_Width, write=Set_Width};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Height() { float r; HRESULT hr = Get_Height(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Height = {read=_scw_Get_Height, write=Set_Height};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_HeightRule() { Activex::TOleEnum r; HRESULT hr = Get_HeightRule(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum HeightRule = {read=_scw_Get_HeightRule, write=Set_HeightRule};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_VerticalAlignment() { Activex::TOleEnum r; HRESULT hr = Get_VerticalAlignment(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum VerticalAlignment = {read=_scw_Get_VerticalAlignment, write=Set_VerticalAlignment};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Column _scw_Get_Column() { _di_Column r; HRESULT hr = Get_Column(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Column Column = {read=_scw_Get_Column};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Row _scw_Get_Row() { _di_Row r; HRESULT hr = Get_Row(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Row Row = {read=_scw_Get_Row};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Cell _scw_Get_Next() { _di_Cell r; HRESULT hr = Get_Next(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Cell Next = {read=_scw_Get_Next};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Cell _scw_Get_Previous() { _di_Cell r; HRESULT hr = Get_Previous(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Cell Previous = {read=_scw_Get_Previous};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shading _scw_Get_Shading() { _di_Shading r; HRESULT hr = Get_Shading(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shading Shading = {read=_scw_Get_Shading};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Borders _scw_Get_Borders() { _di_Borders r; HRESULT hr = Get_Borders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Borders Borders = {read=_scw_Get_Borders, write=Set_Borders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Tables _scw_Get_Tables() { _di_Tables r; HRESULT hr = Get_Tables(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Tables Tables = {read=_scw_Get_Tables};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_NestingLevel() { int r; HRESULT hr = Get_NestingLevel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int NestingLevel = {read=_scw_Get_NestingLevel};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_WordWrap() { Word r; HRESULT hr = Get_WordWrap(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word WordWrap = {read=_scw_Get_WordWrap, write=Set_WordWrap};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_PreferredWidth() { float r; HRESULT hr = Get_PreferredWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float PreferredWidth = {read=_scw_Get_PreferredWidth, write=Set_PreferredWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_FitText() { Word r; HRESULT hr = Get_FitText(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word FitText = {read=_scw_Get_FitText, write=Set_FitText};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_TopPadding() { float r; HRESULT hr = Get_TopPadding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float TopPadding = {read=_scw_Get_TopPadding, write=Set_TopPadding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_BottomPadding() { float r; HRESULT hr = Get_BottomPadding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float BottomPadding = {read=_scw_Get_BottomPadding, write=Set_BottomPadding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_LeftPadding() { float r; HRESULT hr = Get_LeftPadding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float LeftPadding = {read=_scw_Get_LeftPadding, write=Set_LeftPadding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_RightPadding() { float r; HRESULT hr = Get_RightPadding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float RightPadding = {read=_scw_Get_RightPadding, write=Set_RightPadding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ID() { WideString r; HRESULT hr = Get_ID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ID = {read=_scw_Get_ID, write=Set_ID};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_PreferredWidthType() { Activex::TOleEnum r; HRESULT hr = Get_PreferredWidthType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum PreferredWidthType = {read=_scw_Get_PreferredWidthType, write=Set_PreferredWidthType};
};

__dispinterface CellDisp;
typedef System::DelphiInterface<CellDisp> _di_CellDisp;
__dispinterface INTERFACE_UUID("{0002094E-0000-0000-C000-000000000046}") CellDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002094D-0000-0000-C000-000000000046}") Tables  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_Table &Item_result) = 0 ;
	virtual HRESULT __safecall AddOld(const _di_Range Range, int NumRows, int NumColumns, _di_Table &AddOld_result) = 0 ;
	virtual HRESULT __safecall Add(const _di_Range Range, int NumRows, int NumColumns, OleVariant &DefaultTableBehavior, OleVariant &AutoFitBehavior, _di_Table &Add_result) = 0 ;
	virtual HRESULT __safecall Get_NestingLevel(int &Get_NestingLevel_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_NestingLevel() { int r; HRESULT hr = Get_NestingLevel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int NestingLevel = {read=_scw_Get_NestingLevel};
};

__dispinterface TablesDisp;
typedef System::DelphiInterface<TablesDisp> _di_TablesDisp;
__dispinterface INTERFACE_UUID("{0002094D-0000-0000-C000-000000000046}") TablesDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002094C-0000-0000-C000-000000000046}") Rows  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_AllowBreakAcrossPages(int &Get_AllowBreakAcrossPages_result) = 0 ;
	virtual HRESULT __safecall Set_AllowBreakAcrossPages(int prop) = 0 ;
	virtual HRESULT __safecall Get_Alignment(Activex::TOleEnum &Get_Alignment_result) = 0 ;
	virtual HRESULT __safecall Set_Alignment(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_HeadingFormat(int &Get_HeadingFormat_result) = 0 ;
	virtual HRESULT __safecall Set_HeadingFormat(int prop) = 0 ;
	virtual HRESULT __safecall Get_SpaceBetweenColumns(float &Get_SpaceBetweenColumns_result) = 0 ;
	virtual HRESULT __safecall Set_SpaceBetweenColumns(float prop) = 0 ;
	virtual HRESULT __safecall Get_Height(float &Get_Height_result) = 0 ;
	virtual HRESULT __safecall Set_Height(float prop) = 0 ;
	virtual HRESULT __safecall Get_HeightRule(Activex::TOleEnum &Get_HeightRule_result) = 0 ;
	virtual HRESULT __safecall Set_HeightRule(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_LeftIndent(float &Get_LeftIndent_result) = 0 ;
	virtual HRESULT __safecall Set_LeftIndent(float prop) = 0 ;
	virtual HRESULT __safecall Get_First(_di_Row &Get_First_result) = 0 ;
	virtual HRESULT __safecall Get_Last(_di_Row &Get_Last_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Borders(_di_Borders &Get_Borders_result) = 0 ;
	virtual HRESULT __safecall Set_Borders(const _di_Borders prop) = 0 ;
	virtual HRESULT __safecall Get_Shading(_di_Shading &Get_Shading_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_Row &Item_result) = 0 ;
	virtual HRESULT __safecall Add(OleVariant &BeforeRow, _di_Row &Add_result) = 0 ;
	virtual HRESULT __safecall Select(void) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall SetLeftIndent(float LeftIndent, Activex::TOleEnum RulerStyle) = 0 ;
	virtual HRESULT __safecall SetHeight(float RowHeight, Activex::TOleEnum HeightRule) = 0 ;
	virtual HRESULT __safecall ConvertToTextOld(OleVariant &Separator, _di_Range &ConvertToTextOld_result) = 0 ;
	virtual HRESULT __safecall DistributeHeight(void) = 0 ;
	virtual HRESULT __safecall ConvertToText(OleVariant &Separator, OleVariant &NestedTables, _di_Range &ConvertToText_result) = 0 ;
	virtual HRESULT __safecall Get_WrapAroundText(int &Get_WrapAroundText_result) = 0 ;
	virtual HRESULT __safecall Set_WrapAroundText(int prop) = 0 ;
	virtual HRESULT __safecall Get_DistanceTop(float &Get_DistanceTop_result) = 0 ;
	virtual HRESULT __safecall Set_DistanceTop(float prop) = 0 ;
	virtual HRESULT __safecall Get_DistanceBottom(float &Get_DistanceBottom_result) = 0 ;
	virtual HRESULT __safecall Set_DistanceBottom(float prop) = 0 ;
	virtual HRESULT __safecall Get_DistanceLeft(float &Get_DistanceLeft_result) = 0 ;
	virtual HRESULT __safecall Set_DistanceLeft(float prop) = 0 ;
	virtual HRESULT __safecall Get_DistanceRight(float &Get_DistanceRight_result) = 0 ;
	virtual HRESULT __safecall Set_DistanceRight(float prop) = 0 ;
	virtual HRESULT __safecall Get_HorizontalPosition(float &Get_HorizontalPosition_result) = 0 ;
	virtual HRESULT __safecall Set_HorizontalPosition(float prop) = 0 ;
	virtual HRESULT __safecall Get_VerticalPosition(float &Get_VerticalPosition_result) = 0 ;
	virtual HRESULT __safecall Set_VerticalPosition(float prop) = 0 ;
	virtual HRESULT __safecall Get_RelativeHorizontalPosition(Activex::TOleEnum &Get_RelativeHorizontalPosition_result) = 0 ;
	virtual HRESULT __safecall Set_RelativeHorizontalPosition(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_RelativeVerticalPosition(Activex::TOleEnum &Get_RelativeVerticalPosition_result) = 0 ;
	virtual HRESULT __safecall Set_RelativeVerticalPosition(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_AllowOverlap(int &Get_AllowOverlap_result) = 0 ;
	virtual HRESULT __safecall Set_AllowOverlap(int prop) = 0 ;
	virtual HRESULT __safecall Get_NestingLevel(int &Get_NestingLevel_result) = 0 ;
	virtual HRESULT __safecall Get_TableDirection(Activex::TOleEnum &Get_TableDirection_result) = 0 ;
	virtual HRESULT __safecall Set_TableDirection(Activex::TOleEnum prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_AllowBreakAcrossPages() { int r; HRESULT hr = Get_AllowBreakAcrossPages(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int AllowBreakAcrossPages = {read=_scw_Get_AllowBreakAcrossPages, write=Set_AllowBreakAcrossPages};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Alignment() { Activex::TOleEnum r; HRESULT hr = Get_Alignment(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Alignment = {read=_scw_Get_Alignment, write=Set_Alignment};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_HeadingFormat() { int r; HRESULT hr = Get_HeadingFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int HeadingFormat = {read=_scw_Get_HeadingFormat, write=Set_HeadingFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_SpaceBetweenColumns() { float r; HRESULT hr = Get_SpaceBetweenColumns(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float SpaceBetweenColumns = {read=_scw_Get_SpaceBetweenColumns, write=Set_SpaceBetweenColumns};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Height() { float r; HRESULT hr = Get_Height(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Height = {read=_scw_Get_Height, write=Set_Height};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_HeightRule() { Activex::TOleEnum r; HRESULT hr = Get_HeightRule(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum HeightRule = {read=_scw_Get_HeightRule, write=Set_HeightRule};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_LeftIndent() { float r; HRESULT hr = Get_LeftIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float LeftIndent = {read=_scw_Get_LeftIndent, write=Set_LeftIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Row _scw_Get_First() { _di_Row r; HRESULT hr = Get_First(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Row First = {read=_scw_Get_First};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Row _scw_Get_Last() { _di_Row r; HRESULT hr = Get_Last(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Row Last = {read=_scw_Get_Last};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Borders _scw_Get_Borders() { _di_Borders r; HRESULT hr = Get_Borders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Borders Borders = {read=_scw_Get_Borders, write=Set_Borders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shading _scw_Get_Shading() { _di_Shading r; HRESULT hr = Get_Shading(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shading Shading = {read=_scw_Get_Shading};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_WrapAroundText() { int r; HRESULT hr = Get_WrapAroundText(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int WrapAroundText = {read=_scw_Get_WrapAroundText, write=Set_WrapAroundText};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_DistanceTop() { float r; HRESULT hr = Get_DistanceTop(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float DistanceTop = {read=_scw_Get_DistanceTop, write=Set_DistanceTop};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_DistanceBottom() { float r; HRESULT hr = Get_DistanceBottom(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float DistanceBottom = {read=_scw_Get_DistanceBottom, write=Set_DistanceBottom};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_DistanceLeft() { float r; HRESULT hr = Get_DistanceLeft(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float DistanceLeft = {read=_scw_Get_DistanceLeft, write=Set_DistanceLeft};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_DistanceRight() { float r; HRESULT hr = Get_DistanceRight(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float DistanceRight = {read=_scw_Get_DistanceRight, write=Set_DistanceRight};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_HorizontalPosition() { float r; HRESULT hr = Get_HorizontalPosition(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float HorizontalPosition = {read=_scw_Get_HorizontalPosition, write=Set_HorizontalPosition};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_VerticalPosition() { float r; HRESULT hr = Get_VerticalPosition(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float VerticalPosition = {read=_scw_Get_VerticalPosition, write=Set_VerticalPosition};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_RelativeHorizontalPosition() { Activex::TOleEnum r; HRESULT hr = Get_RelativeHorizontalPosition(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum RelativeHorizontalPosition = {read=_scw_Get_RelativeHorizontalPosition, write=Set_RelativeHorizontalPosition};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_RelativeVerticalPosition() { Activex::TOleEnum r; HRESULT hr = Get_RelativeVerticalPosition(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum RelativeVerticalPosition = {read=_scw_Get_RelativeVerticalPosition, write=Set_RelativeVerticalPosition};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_AllowOverlap() { int r; HRESULT hr = Get_AllowOverlap(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int AllowOverlap = {read=_scw_Get_AllowOverlap, write=Set_AllowOverlap};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_NestingLevel() { int r; HRESULT hr = Get_NestingLevel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int NestingLevel = {read=_scw_Get_NestingLevel};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_TableDirection() { Activex::TOleEnum r; HRESULT hr = Get_TableDirection(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum TableDirection = {read=_scw_Get_TableDirection, write=Set_TableDirection};
};

__dispinterface RowsDisp;
typedef System::DelphiInterface<RowsDisp> _di_RowsDisp;
__dispinterface INTERFACE_UUID("{0002094C-0000-0000-C000-000000000046}") RowsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002094B-0000-0000-C000-000000000046}") Columns  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_First(_di_Column &Get_First_result) = 0 ;
	virtual HRESULT __safecall Get_Last(_di_Column &Get_Last_result) = 0 ;
	virtual HRESULT __safecall Get_Width(float &Get_Width_result) = 0 ;
	virtual HRESULT __safecall Set_Width(float prop) = 0 ;
	virtual HRESULT __safecall Get_Borders(_di_Borders &Get_Borders_result) = 0 ;
	virtual HRESULT __safecall Set_Borders(const _di_Borders prop) = 0 ;
	virtual HRESULT __safecall Get_Shading(_di_Shading &Get_Shading_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_Column &Item_result) = 0 ;
	virtual HRESULT __safecall Add(OleVariant &BeforeColumn, _di_Column &Add_result) = 0 ;
	virtual HRESULT __safecall Select(void) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall SetWidth(float ColumnWidth, Activex::TOleEnum RulerStyle) = 0 ;
	virtual HRESULT __safecall AutoFit(void) = 0 ;
	virtual HRESULT __safecall DistributeWidth(void) = 0 ;
	virtual HRESULT __safecall Get_NestingLevel(int &Get_NestingLevel_result) = 0 ;
	virtual HRESULT __safecall Get_PreferredWidth(float &Get_PreferredWidth_result) = 0 ;
	virtual HRESULT __safecall Set_PreferredWidth(float prop) = 0 ;
	virtual HRESULT __safecall Get_PreferredWidthType(Activex::TOleEnum &Get_PreferredWidthType_result) = 0 ;
	virtual HRESULT __safecall Set_PreferredWidthType(Activex::TOleEnum prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Column _scw_Get_First() { _di_Column r; HRESULT hr = Get_First(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Column First = {read=_scw_Get_First};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Column _scw_Get_Last() { _di_Column r; HRESULT hr = Get_Last(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Column Last = {read=_scw_Get_Last};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Width() { float r; HRESULT hr = Get_Width(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Width = {read=_scw_Get_Width, write=Set_Width};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Borders _scw_Get_Borders() { _di_Borders r; HRESULT hr = Get_Borders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Borders Borders = {read=_scw_Get_Borders, write=Set_Borders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shading _scw_Get_Shading() { _di_Shading r; HRESULT hr = Get_Shading(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shading Shading = {read=_scw_Get_Shading};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_NestingLevel() { int r; HRESULT hr = Get_NestingLevel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int NestingLevel = {read=_scw_Get_NestingLevel};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_PreferredWidth() { float r; HRESULT hr = Get_PreferredWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float PreferredWidth = {read=_scw_Get_PreferredWidth, write=Set_PreferredWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_PreferredWidthType() { Activex::TOleEnum r; HRESULT hr = Get_PreferredWidthType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum PreferredWidthType = {read=_scw_Get_PreferredWidthType, write=Set_PreferredWidthType};
};

__dispinterface ColumnsDisp;
typedef System::DelphiInterface<ColumnsDisp> _di_ColumnsDisp;
__dispinterface INTERFACE_UUID("{0002094B-0000-0000-C000-000000000046}") ColumnsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002094A-0000-0000-C000-000000000046}") Cells  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Width(float &Get_Width_result) = 0 ;
	virtual HRESULT __safecall Set_Width(float prop) = 0 ;
	virtual HRESULT __safecall Get_Height(float &Get_Height_result) = 0 ;
	virtual HRESULT __safecall Set_Height(float prop) = 0 ;
	virtual HRESULT __safecall Get_HeightRule(Activex::TOleEnum &Get_HeightRule_result) = 0 ;
	virtual HRESULT __safecall Set_HeightRule(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_VerticalAlignment(Activex::TOleEnum &Get_VerticalAlignment_result) = 0 ;
	virtual HRESULT __safecall Set_VerticalAlignment(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Borders(_di_Borders &Get_Borders_result) = 0 ;
	virtual HRESULT __safecall Set_Borders(const _di_Borders prop) = 0 ;
	virtual HRESULT __safecall Get_Shading(_di_Shading &Get_Shading_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_Cell &Item_result) = 0 ;
	virtual HRESULT __safecall Add(OleVariant &BeforeCell, _di_Cell &Add_result) = 0 ;
	virtual HRESULT __safecall Delete(OleVariant &ShiftCells) = 0 ;
	virtual HRESULT __safecall SetWidth(float ColumnWidth, Activex::TOleEnum RulerStyle) = 0 ;
	virtual HRESULT __safecall SetHeight(OleVariant &RowHeight, Activex::TOleEnum HeightRule) = 0 ;
	virtual HRESULT __safecall Merge(void) = 0 ;
	virtual HRESULT __safecall Split(OleVariant &NumRows, OleVariant &NumColumns, OleVariant &MergeBeforeSplit) = 0 ;
	virtual HRESULT __safecall DistributeHeight(void) = 0 ;
	virtual HRESULT __safecall DistributeWidth(void) = 0 ;
	virtual HRESULT __safecall AutoFit(void) = 0 ;
	virtual HRESULT __safecall Get_NestingLevel(int &Get_NestingLevel_result) = 0 ;
	virtual HRESULT __safecall Get_PreferredWidth(float &Get_PreferredWidth_result) = 0 ;
	virtual HRESULT __safecall Set_PreferredWidth(float prop) = 0 ;
	virtual HRESULT __safecall Get_PreferredWidthType(Activex::TOleEnum &Get_PreferredWidthType_result) = 0 ;
	virtual HRESULT __safecall Set_PreferredWidthType(Activex::TOleEnum prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Width() { float r; HRESULT hr = Get_Width(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Width = {read=_scw_Get_Width, write=Set_Width};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Height() { float r; HRESULT hr = Get_Height(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Height = {read=_scw_Get_Height, write=Set_Height};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_HeightRule() { Activex::TOleEnum r; HRESULT hr = Get_HeightRule(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum HeightRule = {read=_scw_Get_HeightRule, write=Set_HeightRule};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_VerticalAlignment() { Activex::TOleEnum r; HRESULT hr = Get_VerticalAlignment(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum VerticalAlignment = {read=_scw_Get_VerticalAlignment, write=Set_VerticalAlignment};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Borders _scw_Get_Borders() { _di_Borders r; HRESULT hr = Get_Borders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Borders Borders = {read=_scw_Get_Borders, write=Set_Borders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shading _scw_Get_Shading() { _di_Shading r; HRESULT hr = Get_Shading(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shading Shading = {read=_scw_Get_Shading};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_NestingLevel() { int r; HRESULT hr = Get_NestingLevel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int NestingLevel = {read=_scw_Get_NestingLevel};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_PreferredWidth() { float r; HRESULT hr = Get_PreferredWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float PreferredWidth = {read=_scw_Get_PreferredWidth, write=Set_PreferredWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_PreferredWidthType() { Activex::TOleEnum r; HRESULT hr = Get_PreferredWidthType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum PreferredWidthType = {read=_scw_Get_PreferredWidthType, write=Set_PreferredWidthType};
};

__dispinterface CellsDisp;
typedef System::DelphiInterface<CellsDisp> _di_CellsDisp;
__dispinterface INTERFACE_UUID("{0002094A-0000-0000-C000-000000000046}") CellsDisp  : public IDispatch 
{
	
};

__interface AutoCorrectEntries;
typedef System::DelphiInterface<AutoCorrectEntries> _di_AutoCorrectEntries;
__interface FirstLetterExceptions;
typedef System::DelphiInterface<FirstLetterExceptions> _di_FirstLetterExceptions;
__interface TwoInitialCapsExceptions;
typedef System::DelphiInterface<TwoInitialCapsExceptions> _di_TwoInitialCapsExceptions;
__interface HangulAndAlphabetExceptions;
typedef System::DelphiInterface<HangulAndAlphabetExceptions> _di_HangulAndAlphabetExceptions;
__interface OtherCorrectionsExceptions;
typedef System::DelphiInterface<OtherCorrectionsExceptions> _di_OtherCorrectionsExceptions;
__interface INTERFACE_UUID("{00020949-0000-0000-C000-000000000046}") AutoCorrect  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_CorrectDays(Word &Get_CorrectDays_result) = 0 ;
	virtual HRESULT __safecall Set_CorrectDays(Word prop) = 0 ;
	virtual HRESULT __safecall Get_CorrectInitialCaps(Word &Get_CorrectInitialCaps_result) = 0 ;
	virtual HRESULT __safecall Set_CorrectInitialCaps(Word prop) = 0 ;
	virtual HRESULT __safecall Get_CorrectSentenceCaps(Word &Get_CorrectSentenceCaps_result) = 0 ;
	virtual HRESULT __safecall Set_CorrectSentenceCaps(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ReplaceText(Word &Get_ReplaceText_result) = 0 ;
	virtual HRESULT __safecall Set_ReplaceText(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Entries(_di_AutoCorrectEntries &Get_Entries_result) = 0 ;
	virtual HRESULT __safecall Get_FirstLetterExceptions(_di_FirstLetterExceptions &Get_FirstLetterExceptions_result) = 0 ;
	virtual HRESULT __safecall Get_FirstLetterAutoAdd(Word &Get_FirstLetterAutoAdd_result) = 0 ;
	virtual HRESULT __safecall Set_FirstLetterAutoAdd(Word prop) = 0 ;
	virtual HRESULT __safecall Get_TwoInitialCapsExceptions(_di_TwoInitialCapsExceptions &Get_TwoInitialCapsExceptions_result) = 0 ;
	virtual HRESULT __safecall Get_TwoInitialCapsAutoAdd(Word &Get_TwoInitialCapsAutoAdd_result) = 0 ;
	virtual HRESULT __safecall Set_TwoInitialCapsAutoAdd(Word prop) = 0 ;
	virtual HRESULT __safecall Get_CorrectCapsLock(Word &Get_CorrectCapsLock_result) = 0 ;
	virtual HRESULT __safecall Set_CorrectCapsLock(Word prop) = 0 ;
	virtual HRESULT __safecall Get_CorrectHangulAndAlphabet(Word &Get_CorrectHangulAndAlphabet_result) = 0 ;
	virtual HRESULT __safecall Set_CorrectHangulAndAlphabet(Word prop) = 0 ;
	virtual HRESULT __safecall Get_HangulAndAlphabetExceptions(_di_HangulAndAlphabetExceptions &Get_HangulAndAlphabetExceptions_result) = 0 ;
	virtual HRESULT __safecall Get_HangulAndAlphabetAutoAdd(Word &Get_HangulAndAlphabetAutoAdd_result) = 0 ;
	virtual HRESULT __safecall Set_HangulAndAlphabetAutoAdd(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ReplaceTextFromSpellingChecker(Word &Get_ReplaceTextFromSpellingChecker_result) = 0 ;
	virtual HRESULT __safecall Set_ReplaceTextFromSpellingChecker(Word prop) = 0 ;
	virtual HRESULT __safecall Get_OtherCorrectionsAutoAdd(Word &Get_OtherCorrectionsAutoAdd_result) = 0 ;
	virtual HRESULT __safecall Set_OtherCorrectionsAutoAdd(Word prop) = 0 ;
	virtual HRESULT __safecall Get_OtherCorrectionsExceptions(_di_OtherCorrectionsExceptions &Get_OtherCorrectionsExceptions_result) = 0 ;
	virtual HRESULT __safecall Get_CorrectKeyboardSetting(Word &Get_CorrectKeyboardSetting_result) = 0 ;
	virtual HRESULT __safecall Set_CorrectKeyboardSetting(Word prop) = 0 ;
	virtual HRESULT __safecall Get_CorrectTableCells(Word &Get_CorrectTableCells_result) = 0 ;
	virtual HRESULT __safecall Set_CorrectTableCells(Word prop) = 0 ;
	virtual HRESULT __safecall Get_DisplayAutoCorrectOptions(Word &Get_DisplayAutoCorrectOptions_result) = 0 ;
	virtual HRESULT __safecall Set_DisplayAutoCorrectOptions(Word prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_CorrectDays() { Word r; HRESULT hr = Get_CorrectDays(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word CorrectDays = {read=_scw_Get_CorrectDays, write=Set_CorrectDays};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_CorrectInitialCaps() { Word r; HRESULT hr = Get_CorrectInitialCaps(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word CorrectInitialCaps = {read=_scw_Get_CorrectInitialCaps, write=Set_CorrectInitialCaps};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_CorrectSentenceCaps() { Word r; HRESULT hr = Get_CorrectSentenceCaps(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word CorrectSentenceCaps = {read=_scw_Get_CorrectSentenceCaps, write=Set_CorrectSentenceCaps};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ReplaceText() { Word r; HRESULT hr = Get_ReplaceText(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ReplaceText = {read=_scw_Get_ReplaceText, write=Set_ReplaceText};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_AutoCorrectEntries _scw_Get_Entries() { _di_AutoCorrectEntries r; HRESULT hr = Get_Entries(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_AutoCorrectEntries Entries = {read=_scw_Get_Entries};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_FirstLetterExceptions _scw_Get_FirstLetterExceptions() { _di_FirstLetterExceptions r; HRESULT hr = Get_FirstLetterExceptions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_FirstLetterExceptions FirstLetterExceptions = {read=_scw_Get_FirstLetterExceptions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_FirstLetterAutoAdd() { Word r; HRESULT hr = Get_FirstLetterAutoAdd(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word FirstLetterAutoAdd = {read=_scw_Get_FirstLetterAutoAdd, write=Set_FirstLetterAutoAdd};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_TwoInitialCapsExceptions _scw_Get_TwoInitialCapsExceptions() { _di_TwoInitialCapsExceptions r; HRESULT hr = Get_TwoInitialCapsExceptions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_TwoInitialCapsExceptions TwoInitialCapsExceptions = {read=_scw_Get_TwoInitialCapsExceptions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_TwoInitialCapsAutoAdd() { Word r; HRESULT hr = Get_TwoInitialCapsAutoAdd(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word TwoInitialCapsAutoAdd = {read=_scw_Get_TwoInitialCapsAutoAdd, write=Set_TwoInitialCapsAutoAdd};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_CorrectCapsLock() { Word r; HRESULT hr = Get_CorrectCapsLock(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word CorrectCapsLock = {read=_scw_Get_CorrectCapsLock, write=Set_CorrectCapsLock};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_CorrectHangulAndAlphabet() { Word r; HRESULT hr = Get_CorrectHangulAndAlphabet(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word CorrectHangulAndAlphabet = {read=_scw_Get_CorrectHangulAndAlphabet, write=Set_CorrectHangulAndAlphabet};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_HangulAndAlphabetExceptions _scw_Get_HangulAndAlphabetExceptions() { _di_HangulAndAlphabetExceptions r; HRESULT hr = Get_HangulAndAlphabetExceptions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_HangulAndAlphabetExceptions HangulAndAlphabetExceptions = {read=_scw_Get_HangulAndAlphabetExceptions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_HangulAndAlphabetAutoAdd() { Word r; HRESULT hr = Get_HangulAndAlphabetAutoAdd(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word HangulAndAlphabetAutoAdd = {read=_scw_Get_HangulAndAlphabetAutoAdd, write=Set_HangulAndAlphabetAutoAdd};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ReplaceTextFromSpellingChecker() { Word r; HRESULT hr = Get_ReplaceTextFromSpellingChecker(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ReplaceTextFromSpellingChecker = {read=_scw_Get_ReplaceTextFromSpellingChecker, write=Set_ReplaceTextFromSpellingChecker};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_OtherCorrectionsAutoAdd() { Word r; HRESULT hr = Get_OtherCorrectionsAutoAdd(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word OtherCorrectionsAutoAdd = {read=_scw_Get_OtherCorrectionsAutoAdd, write=Set_OtherCorrectionsAutoAdd};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_OtherCorrectionsExceptions _scw_Get_OtherCorrectionsExceptions() { _di_OtherCorrectionsExceptions r; HRESULT hr = Get_OtherCorrectionsExceptions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_OtherCorrectionsExceptions OtherCorrectionsExceptions = {read=_scw_Get_OtherCorrectionsExceptions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_CorrectKeyboardSetting() { Word r; HRESULT hr = Get_CorrectKeyboardSetting(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word CorrectKeyboardSetting = {read=_scw_Get_CorrectKeyboardSetting, write=Set_CorrectKeyboardSetting};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_CorrectTableCells() { Word r; HRESULT hr = Get_CorrectTableCells(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word CorrectTableCells = {read=_scw_Get_CorrectTableCells, write=Set_CorrectTableCells};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisplayAutoCorrectOptions() { Word r; HRESULT hr = Get_DisplayAutoCorrectOptions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisplayAutoCorrectOptions = {read=_scw_Get_DisplayAutoCorrectOptions, write=Set_DisplayAutoCorrectOptions};
};

__dispinterface AutoCorrectDisp;
typedef System::DelphiInterface<AutoCorrectDisp> _di_AutoCorrectDisp;
__dispinterface INTERFACE_UUID("{00020949-0000-0000-C000-000000000046}") AutoCorrectDisp  : public IDispatch 
{
	
};

__interface AutoCorrectEntry;
typedef System::DelphiInterface<AutoCorrectEntry> _di_AutoCorrectEntry;
__interface INTERFACE_UUID("{00020948-0000-0000-C000-000000000046}") AutoCorrectEntries  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_AutoCorrectEntry &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const WideString Name, const WideString Value, _di_AutoCorrectEntry &Add_result) = 0 ;
	virtual HRESULT __safecall AddRichText(const WideString Name, const _di_Range Range, _di_AutoCorrectEntry &AddRichText_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface AutoCorrectEntriesDisp;
typedef System::DelphiInterface<AutoCorrectEntriesDisp> _di_AutoCorrectEntriesDisp;
__dispinterface INTERFACE_UUID("{00020948-0000-0000-C000-000000000046}") AutoCorrectEntriesDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020947-0000-0000-C000-000000000046}") AutoCorrectEntry  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Set_Name(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Value(WideString &Get_Value_result) = 0 ;
	virtual HRESULT __safecall Set_Value(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_RichText(Word &Get_RichText_result) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall Apply(const _di_Range Range) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name, write=Set_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Value() { WideString r; HRESULT hr = Get_Value(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Value = {read=_scw_Get_Value, write=Set_Value};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_RichText() { Word r; HRESULT hr = Get_RichText(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word RichText = {read=_scw_Get_RichText};
};

__dispinterface AutoCorrectEntryDisp;
typedef System::DelphiInterface<AutoCorrectEntryDisp> _di_AutoCorrectEntryDisp;
__dispinterface INTERFACE_UUID("{00020947-0000-0000-C000-000000000046}") AutoCorrectEntryDisp  : public IDispatch 
{
	
};

__interface FirstLetterException;
typedef System::DelphiInterface<FirstLetterException> _di_FirstLetterException;
__interface INTERFACE_UUID("{00020946-0000-0000-C000-000000000046}") FirstLetterExceptions  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_FirstLetterException &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const WideString Name, _di_FirstLetterException &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface FirstLetterExceptionsDisp;
typedef System::DelphiInterface<FirstLetterExceptionsDisp> _di_FirstLetterExceptionsDisp;
__dispinterface INTERFACE_UUID("{00020946-0000-0000-C000-000000000046}") FirstLetterExceptionsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020945-0000-0000-C000-000000000046}") FirstLetterException  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
};

__dispinterface FirstLetterExceptionDisp;
typedef System::DelphiInterface<FirstLetterExceptionDisp> _di_FirstLetterExceptionDisp;
__dispinterface INTERFACE_UUID("{00020945-0000-0000-C000-000000000046}") FirstLetterExceptionDisp  : public IDispatch 
{
	
};

__interface TwoInitialCapsException;
typedef System::DelphiInterface<TwoInitialCapsException> _di_TwoInitialCapsException;
__interface INTERFACE_UUID("{00020944-0000-0000-C000-000000000046}") TwoInitialCapsExceptions  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_TwoInitialCapsException &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const WideString Name, _di_TwoInitialCapsException &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface TwoInitialCapsExceptionsDisp;
typedef System::DelphiInterface<TwoInitialCapsExceptionsDisp> _di_TwoInitialCapsExceptionsDisp;
__dispinterface INTERFACE_UUID("{00020944-0000-0000-C000-000000000046}") TwoInitialCapsExceptionsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020943-0000-0000-C000-000000000046}") TwoInitialCapsException  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
};

__dispinterface TwoInitialCapsExceptionDisp;
typedef System::DelphiInterface<TwoInitialCapsExceptionDisp> _di_TwoInitialCapsExceptionDisp;
__dispinterface INTERFACE_UUID("{00020943-0000-0000-C000-000000000046}") TwoInitialCapsExceptionDisp  : public IDispatch 
{
	
};

__interface Footnote;
typedef System::DelphiInterface<Footnote> _di_Footnote;
__interface INTERFACE_UUID("{00020942-0000-0000-C000-000000000046}") Footnotes  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Location(Activex::TOleEnum &Get_Location_result) = 0 ;
	virtual HRESULT __safecall Set_Location(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_NumberStyle(Activex::TOleEnum &Get_NumberStyle_result) = 0 ;
	virtual HRESULT __safecall Set_NumberStyle(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_StartingNumber(int &Get_StartingNumber_result) = 0 ;
	virtual HRESULT __safecall Set_StartingNumber(int prop) = 0 ;
	virtual HRESULT __safecall Get_NumberingRule(Activex::TOleEnum &Get_NumberingRule_result) = 0 ;
	virtual HRESULT __safecall Set_NumberingRule(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Separator(_di_Range &Get_Separator_result) = 0 ;
	virtual HRESULT __safecall Get_ContinuationSeparator(_di_Range &Get_ContinuationSeparator_result) = 0 ;
	virtual HRESULT __safecall Get_ContinuationNotice(_di_Range &Get_ContinuationNotice_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_Footnote &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const _di_Range Range, OleVariant &Reference, OleVariant &Text, _di_Footnote &Add_result) = 0 ;
	virtual HRESULT __safecall Convert(void) = 0 ;
	virtual HRESULT __safecall SwapWithEndnotes(void) = 0 ;
	virtual HRESULT __safecall ResetSeparator(void) = 0 ;
	virtual HRESULT __safecall ResetContinuationSeparator(void) = 0 ;
	virtual HRESULT __safecall ResetContinuationNotice(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Location() { Activex::TOleEnum r; HRESULT hr = Get_Location(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Location = {read=_scw_Get_Location, write=Set_Location};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_NumberStyle() { Activex::TOleEnum r; HRESULT hr = Get_NumberStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum NumberStyle = {read=_scw_Get_NumberStyle, write=Set_NumberStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_StartingNumber() { int r; HRESULT hr = Get_StartingNumber(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int StartingNumber = {read=_scw_Get_StartingNumber, write=Set_StartingNumber};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_NumberingRule() { Activex::TOleEnum r; HRESULT hr = Get_NumberingRule(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum NumberingRule = {read=_scw_Get_NumberingRule, write=Set_NumberingRule};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Separator() { _di_Range r; HRESULT hr = Get_Separator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Separator = {read=_scw_Get_Separator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_ContinuationSeparator() { _di_Range r; HRESULT hr = Get_ContinuationSeparator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range ContinuationSeparator = {read=_scw_Get_ContinuationSeparator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_ContinuationNotice() { _di_Range r; HRESULT hr = Get_ContinuationNotice(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range ContinuationNotice = {read=_scw_Get_ContinuationNotice};
};

__dispinterface FootnotesDisp;
typedef System::DelphiInterface<FootnotesDisp> _di_FootnotesDisp;
__dispinterface INTERFACE_UUID("{00020942-0000-0000-C000-000000000046}") FootnotesDisp  : public IDispatch 
{
	
};

__interface Endnote;
typedef System::DelphiInterface<Endnote> _di_Endnote;
__interface INTERFACE_UUID("{00020941-0000-0000-C000-000000000046}") Endnotes  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Location(Activex::TOleEnum &Get_Location_result) = 0 ;
	virtual HRESULT __safecall Set_Location(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_NumberStyle(Activex::TOleEnum &Get_NumberStyle_result) = 0 ;
	virtual HRESULT __safecall Set_NumberStyle(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_StartingNumber(int &Get_StartingNumber_result) = 0 ;
	virtual HRESULT __safecall Set_StartingNumber(int prop) = 0 ;
	virtual HRESULT __safecall Get_NumberingRule(Activex::TOleEnum &Get_NumberingRule_result) = 0 ;
	virtual HRESULT __safecall Set_NumberingRule(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Separator(_di_Range &Get_Separator_result) = 0 ;
	virtual HRESULT __safecall Get_ContinuationSeparator(_di_Range &Get_ContinuationSeparator_result) = 0 ;
	virtual HRESULT __safecall Get_ContinuationNotice(_di_Range &Get_ContinuationNotice_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_Endnote &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const _di_Range Range, OleVariant &Reference, OleVariant &Text, _di_Endnote &Add_result) = 0 ;
	virtual HRESULT __safecall Convert(void) = 0 ;
	virtual HRESULT __safecall SwapWithFootnotes(void) = 0 ;
	virtual HRESULT __safecall ResetSeparator(void) = 0 ;
	virtual HRESULT __safecall ResetContinuationSeparator(void) = 0 ;
	virtual HRESULT __safecall ResetContinuationNotice(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Location() { Activex::TOleEnum r; HRESULT hr = Get_Location(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Location = {read=_scw_Get_Location, write=Set_Location};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_NumberStyle() { Activex::TOleEnum r; HRESULT hr = Get_NumberStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum NumberStyle = {read=_scw_Get_NumberStyle, write=Set_NumberStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_StartingNumber() { int r; HRESULT hr = Get_StartingNumber(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int StartingNumber = {read=_scw_Get_StartingNumber, write=Set_StartingNumber};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_NumberingRule() { Activex::TOleEnum r; HRESULT hr = Get_NumberingRule(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum NumberingRule = {read=_scw_Get_NumberingRule, write=Set_NumberingRule};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Separator() { _di_Range r; HRESULT hr = Get_Separator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Separator = {read=_scw_Get_Separator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_ContinuationSeparator() { _di_Range r; HRESULT hr = Get_ContinuationSeparator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range ContinuationSeparator = {read=_scw_Get_ContinuationSeparator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_ContinuationNotice() { _di_Range r; HRESULT hr = Get_ContinuationNotice(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range ContinuationNotice = {read=_scw_Get_ContinuationNotice};
};

__dispinterface EndnotesDisp;
typedef System::DelphiInterface<EndnotesDisp> _di_EndnotesDisp;
__dispinterface INTERFACE_UUID("{00020941-0000-0000-C000-000000000046}") EndnotesDisp  : public IDispatch 
{
	
};

__interface Comment;
typedef System::DelphiInterface<Comment> _di_Comment;
__interface INTERFACE_UUID("{00020940-0000-0000-C000-000000000046}") Comments  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_ShowBy(WideString &Get_ShowBy_result) = 0 ;
	virtual HRESULT __safecall Set_ShowBy(const WideString prop) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_Comment &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const _di_Range Range, OleVariant &Text, _di_Comment &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ShowBy() { WideString r; HRESULT hr = Get_ShowBy(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ShowBy = {read=_scw_Get_ShowBy, write=Set_ShowBy};
};

__dispinterface CommentsDisp;
typedef System::DelphiInterface<CommentsDisp> _di_CommentsDisp;
__dispinterface INTERFACE_UUID("{00020940-0000-0000-C000-000000000046}") CommentsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002093F-0000-0000-C000-000000000046}") Footnote  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Get_Reference(_di_Range &Get_Reference_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Reference() { _di_Range r; HRESULT hr = Get_Reference(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Reference = {read=_scw_Get_Reference};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
};

__dispinterface FootnoteDisp;
typedef System::DelphiInterface<FootnoteDisp> _di_FootnoteDisp;
__dispinterface INTERFACE_UUID("{0002093F-0000-0000-C000-000000000046}") FootnoteDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002093E-0000-0000-C000-000000000046}") Endnote  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Get_Reference(_di_Range &Get_Reference_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Reference() { _di_Range r; HRESULT hr = Get_Reference(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Reference = {read=_scw_Get_Reference};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
};

__dispinterface EndnoteDisp;
typedef System::DelphiInterface<EndnoteDisp> _di_EndnoteDisp;
__dispinterface INTERFACE_UUID("{0002093E-0000-0000-C000-000000000046}") EndnoteDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002093D-0000-0000-C000-000000000046}") Comment  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Get_Reference(_di_Range &Get_Reference_result) = 0 ;
	virtual HRESULT __safecall Get_Scope(_di_Range &Get_Scope_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_Author(WideString &Get_Author_result) = 0 ;
	virtual HRESULT __safecall Set_Author(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Initial(WideString &Get_Initial_result) = 0 ;
	virtual HRESULT __safecall Set_Initial(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_ShowTip(Word &Get_ShowTip_result) = 0 ;
	virtual HRESULT __safecall Set_ShowTip(Word prop) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall Edit(void) = 0 ;
	virtual HRESULT __safecall Get_Date(System::TDateTime &Get_Date_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Reference() { _di_Range r; HRESULT hr = Get_Reference(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Reference = {read=_scw_Get_Reference};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Scope() { _di_Range r; HRESULT hr = Get_Scope(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Scope = {read=_scw_Get_Scope};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Author() { WideString r; HRESULT hr = Get_Author(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Author = {read=_scw_Get_Author, write=Set_Author};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Initial() { WideString r; HRESULT hr = Get_Initial(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Initial = {read=_scw_Get_Initial, write=Set_Initial};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowTip() { Word r; HRESULT hr = Get_ShowTip(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowTip = {read=_scw_Get_ShowTip, write=Set_ShowTip};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::TDateTime _scw_Get_Date() { System::TDateTime r; HRESULT hr = Get_Date(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::TDateTime Date = {read=_scw_Get_Date};
};

__dispinterface CommentDisp;
typedef System::DelphiInterface<CommentDisp> _di_CommentDisp;
__dispinterface INTERFACE_UUID("{0002093D-0000-0000-C000-000000000046}") CommentDisp  : public IDispatch 
{
	
};

__interface Border;
typedef System::DelphiInterface<Border> _di_Border;
__interface INTERFACE_UUID("{0002093C-0000-0000-C000-000000000046}") Borders  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Enable(int &Get_Enable_result) = 0 ;
	virtual HRESULT __safecall Set_Enable(int prop) = 0 ;
	virtual HRESULT __safecall Get_DistanceFromTop(int &Get_DistanceFromTop_result) = 0 ;
	virtual HRESULT __safecall Set_DistanceFromTop(int prop) = 0 ;
	virtual HRESULT __safecall Get_Shadow(Word &Get_Shadow_result) = 0 ;
	virtual HRESULT __safecall Set_Shadow(Word prop) = 0 ;
	virtual HRESULT __safecall Get_InsideLineStyle(Activex::TOleEnum &Get_InsideLineStyle_result) = 0 ;
	virtual HRESULT __safecall Set_InsideLineStyle(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_OutsideLineStyle(Activex::TOleEnum &Get_OutsideLineStyle_result) = 0 ;
	virtual HRESULT __safecall Set_OutsideLineStyle(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_InsideLineWidth(Activex::TOleEnum &Get_InsideLineWidth_result) = 0 ;
	virtual HRESULT __safecall Set_InsideLineWidth(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_OutsideLineWidth(Activex::TOleEnum &Get_OutsideLineWidth_result) = 0 ;
	virtual HRESULT __safecall Set_OutsideLineWidth(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_InsideColorIndex(Activex::TOleEnum &Get_InsideColorIndex_result) = 0 ;
	virtual HRESULT __safecall Set_InsideColorIndex(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_OutsideColorIndex(Activex::TOleEnum &Get_OutsideColorIndex_result) = 0 ;
	virtual HRESULT __safecall Set_OutsideColorIndex(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_DistanceFromLeft(int &Get_DistanceFromLeft_result) = 0 ;
	virtual HRESULT __safecall Set_DistanceFromLeft(int prop) = 0 ;
	virtual HRESULT __safecall Get_DistanceFromBottom(int &Get_DistanceFromBottom_result) = 0 ;
	virtual HRESULT __safecall Set_DistanceFromBottom(int prop) = 0 ;
	virtual HRESULT __safecall Get_DistanceFromRight(int &Get_DistanceFromRight_result) = 0 ;
	virtual HRESULT __safecall Set_DistanceFromRight(int prop) = 0 ;
	virtual HRESULT __safecall Get_AlwaysInFront(Word &Get_AlwaysInFront_result) = 0 ;
	virtual HRESULT __safecall Set_AlwaysInFront(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SurroundHeader(Word &Get_SurroundHeader_result) = 0 ;
	virtual HRESULT __safecall Set_SurroundHeader(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SurroundFooter(Word &Get_SurroundFooter_result) = 0 ;
	virtual HRESULT __safecall Set_SurroundFooter(Word prop) = 0 ;
	virtual HRESULT __safecall Get_JoinBorders(Word &Get_JoinBorders_result) = 0 ;
	virtual HRESULT __safecall Set_JoinBorders(Word prop) = 0 ;
	virtual HRESULT __safecall Get_HasHorizontal(Word &Get_HasHorizontal_result) = 0 ;
	virtual HRESULT __safecall Get_HasVertical(Word &Get_HasVertical_result) = 0 ;
	virtual HRESULT __safecall Get_DistanceFrom(Activex::TOleEnum &Get_DistanceFrom_result) = 0 ;
	virtual HRESULT __safecall Set_DistanceFrom(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_EnableFirstPageInSection(Word &Get_EnableFirstPageInSection_result) = 0 ;
	virtual HRESULT __safecall Set_EnableFirstPageInSection(Word prop) = 0 ;
	virtual HRESULT __safecall Get_EnableOtherPagesInSection(Word &Get_EnableOtherPagesInSection_result) = 0 ;
	virtual HRESULT __safecall Set_EnableOtherPagesInSection(Word prop) = 0 ;
	virtual HRESULT __safecall Item(Activex::TOleEnum Index, _di_Border &Item_result) = 0 ;
	virtual HRESULT __safecall ApplyPageBordersToAllSections(void) = 0 ;
	virtual HRESULT __safecall Get_InsideColor(Activex::TOleEnum &Get_InsideColor_result) = 0 ;
	virtual HRESULT __safecall Set_InsideColor(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_OutsideColor(Activex::TOleEnum &Get_OutsideColor_result) = 0 ;
	virtual HRESULT __safecall Set_OutsideColor(Activex::TOleEnum prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Enable() { int r; HRESULT hr = Get_Enable(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Enable = {read=_scw_Get_Enable, write=Set_Enable};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_DistanceFromTop() { int r; HRESULT hr = Get_DistanceFromTop(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int DistanceFromTop = {read=_scw_Get_DistanceFromTop, write=Set_DistanceFromTop};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Shadow() { Word r; HRESULT hr = Get_Shadow(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Shadow = {read=_scw_Get_Shadow, write=Set_Shadow};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_InsideLineStyle() { Activex::TOleEnum r; HRESULT hr = Get_InsideLineStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum InsideLineStyle = {read=_scw_Get_InsideLineStyle, write=Set_InsideLineStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_OutsideLineStyle() { Activex::TOleEnum r; HRESULT hr = Get_OutsideLineStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum OutsideLineStyle = {read=_scw_Get_OutsideLineStyle, write=Set_OutsideLineStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_InsideLineWidth() { Activex::TOleEnum r; HRESULT hr = Get_InsideLineWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum InsideLineWidth = {read=_scw_Get_InsideLineWidth, write=Set_InsideLineWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_OutsideLineWidth() { Activex::TOleEnum r; HRESULT hr = Get_OutsideLineWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum OutsideLineWidth = {read=_scw_Get_OutsideLineWidth, write=Set_OutsideLineWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_InsideColorIndex() { Activex::TOleEnum r; HRESULT hr = Get_InsideColorIndex(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum InsideColorIndex = {read=_scw_Get_InsideColorIndex, write=Set_InsideColorIndex};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_OutsideColorIndex() { Activex::TOleEnum r; HRESULT hr = Get_OutsideColorIndex(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum OutsideColorIndex = {read=_scw_Get_OutsideColorIndex, write=Set_OutsideColorIndex};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_DistanceFromLeft() { int r; HRESULT hr = Get_DistanceFromLeft(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int DistanceFromLeft = {read=_scw_Get_DistanceFromLeft, write=Set_DistanceFromLeft};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_DistanceFromBottom() { int r; HRESULT hr = Get_DistanceFromBottom(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int DistanceFromBottom = {read=_scw_Get_DistanceFromBottom, write=Set_DistanceFromBottom};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_DistanceFromRight() { int r; HRESULT hr = Get_DistanceFromRight(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int DistanceFromRight = {read=_scw_Get_DistanceFromRight, write=Set_DistanceFromRight};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AlwaysInFront() { Word r; HRESULT hr = Get_AlwaysInFront(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AlwaysInFront = {read=_scw_Get_AlwaysInFront, write=Set_AlwaysInFront};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SurroundHeader() { Word r; HRESULT hr = Get_SurroundHeader(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SurroundHeader = {read=_scw_Get_SurroundHeader, write=Set_SurroundHeader};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SurroundFooter() { Word r; HRESULT hr = Get_SurroundFooter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SurroundFooter = {read=_scw_Get_SurroundFooter, write=Set_SurroundFooter};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_JoinBorders() { Word r; HRESULT hr = Get_JoinBorders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word JoinBorders = {read=_scw_Get_JoinBorders, write=Set_JoinBorders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_HasHorizontal() { Word r; HRESULT hr = Get_HasHorizontal(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word HasHorizontal = {read=_scw_Get_HasHorizontal};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_HasVertical() { Word r; HRESULT hr = Get_HasVertical(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word HasVertical = {read=_scw_Get_HasVertical};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_DistanceFrom() { Activex::TOleEnum r; HRESULT hr = Get_DistanceFrom(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum DistanceFrom = {read=_scw_Get_DistanceFrom, write=Set_DistanceFrom};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_EnableFirstPageInSection() { Word r; HRESULT hr = Get_EnableFirstPageInSection(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word EnableFirstPageInSection = {read=_scw_Get_EnableFirstPageInSection, write=Set_EnableFirstPageInSection};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_EnableOtherPagesInSection() { Word r; HRESULT hr = Get_EnableOtherPagesInSection(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word EnableOtherPagesInSection = {read=_scw_Get_EnableOtherPagesInSection, write=Set_EnableOtherPagesInSection};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_InsideColor() { Activex::TOleEnum r; HRESULT hr = Get_InsideColor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum InsideColor = {read=_scw_Get_InsideColor, write=Set_InsideColor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_OutsideColor() { Activex::TOleEnum r; HRESULT hr = Get_OutsideColor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum OutsideColor = {read=_scw_Get_OutsideColor, write=Set_OutsideColor};
};

__dispinterface BordersDisp;
typedef System::DelphiInterface<BordersDisp> _di_BordersDisp;
__dispinterface INTERFACE_UUID("{0002093C-0000-0000-C000-000000000046}") BordersDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002093B-0000-0000-C000-000000000046}") Border  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Visible(Word &Get_Visible_result) = 0 ;
	virtual HRESULT __safecall Set_Visible(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ColorIndex(Activex::TOleEnum &Get_ColorIndex_result) = 0 ;
	virtual HRESULT __safecall Set_ColorIndex(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Inside(Word &Get_Inside_result) = 0 ;
	virtual HRESULT __safecall Get_LineStyle(Activex::TOleEnum &Get_LineStyle_result) = 0 ;
	virtual HRESULT __safecall Set_LineStyle(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_LineWidth(Activex::TOleEnum &Get_LineWidth_result) = 0 ;
	virtual HRESULT __safecall Set_LineWidth(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_ArtStyle(Activex::TOleEnum &Get_ArtStyle_result) = 0 ;
	virtual HRESULT __safecall Set_ArtStyle(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_ArtWidth(int &Get_ArtWidth_result) = 0 ;
	virtual HRESULT __safecall Set_ArtWidth(int prop) = 0 ;
	virtual HRESULT __safecall Get_Color(Activex::TOleEnum &Get_Color_result) = 0 ;
	virtual HRESULT __safecall Set_Color(Activex::TOleEnum prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Visible() { Word r; HRESULT hr = Get_Visible(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Visible = {read=_scw_Get_Visible, write=Set_Visible};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_ColorIndex() { Activex::TOleEnum r; HRESULT hr = Get_ColorIndex(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum ColorIndex = {read=_scw_Get_ColorIndex, write=Set_ColorIndex};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Inside() { Word r; HRESULT hr = Get_Inside(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Inside = {read=_scw_Get_Inside};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LineStyle() { Activex::TOleEnum r; HRESULT hr = Get_LineStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LineStyle = {read=_scw_Get_LineStyle, write=Set_LineStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LineWidth() { Activex::TOleEnum r; HRESULT hr = Get_LineWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LineWidth = {read=_scw_Get_LineWidth, write=Set_LineWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_ArtStyle() { Activex::TOleEnum r; HRESULT hr = Get_ArtStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum ArtStyle = {read=_scw_Get_ArtStyle, write=Set_ArtStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_ArtWidth() { int r; HRESULT hr = Get_ArtWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int ArtWidth = {read=_scw_Get_ArtWidth, write=Set_ArtWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Color() { Activex::TOleEnum r; HRESULT hr = Get_Color(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Color = {read=_scw_Get_Color, write=Set_Color};
};

__dispinterface BorderDisp;
typedef System::DelphiInterface<BorderDisp> _di_BorderDisp;
__dispinterface INTERFACE_UUID("{0002093B-0000-0000-C000-000000000046}") BorderDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002093A-0000-0000-C000-000000000046}") Shading  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_ForegroundPatternColorIndex(Activex::TOleEnum &Get_ForegroundPatternColorIndex_result) = 0 ;
	virtual HRESULT __safecall Set_ForegroundPatternColorIndex(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_BackgroundPatternColorIndex(Activex::TOleEnum &Get_BackgroundPatternColorIndex_result) = 0 ;
	virtual HRESULT __safecall Set_BackgroundPatternColorIndex(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Texture(Activex::TOleEnum &Get_Texture_result) = 0 ;
	virtual HRESULT __safecall Set_Texture(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_ForegroundPatternColor(Activex::TOleEnum &Get_ForegroundPatternColor_result) = 0 ;
	virtual HRESULT __safecall Set_ForegroundPatternColor(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_BackgroundPatternColor(Activex::TOleEnum &Get_BackgroundPatternColor_result) = 0 ;
	virtual HRESULT __safecall Set_BackgroundPatternColor(Activex::TOleEnum prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_ForegroundPatternColorIndex() { Activex::TOleEnum r; HRESULT hr = Get_ForegroundPatternColorIndex(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum ForegroundPatternColorIndex = {read=_scw_Get_ForegroundPatternColorIndex, write=Set_ForegroundPatternColorIndex};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_BackgroundPatternColorIndex() { Activex::TOleEnum r; HRESULT hr = Get_BackgroundPatternColorIndex(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum BackgroundPatternColorIndex = {read=_scw_Get_BackgroundPatternColorIndex, write=Set_BackgroundPatternColorIndex};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Texture() { Activex::TOleEnum r; HRESULT hr = Get_Texture(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Texture = {read=_scw_Get_Texture, write=Set_Texture};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_ForegroundPatternColor() { Activex::TOleEnum r; HRESULT hr = Get_ForegroundPatternColor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum ForegroundPatternColor = {read=_scw_Get_ForegroundPatternColor, write=Set_ForegroundPatternColor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_BackgroundPatternColor() { Activex::TOleEnum r; HRESULT hr = Get_BackgroundPatternColor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum BackgroundPatternColor = {read=_scw_Get_BackgroundPatternColor, write=Set_BackgroundPatternColor};
};

__dispinterface ShadingDisp;
typedef System::DelphiInterface<ShadingDisp> _di_ShadingDisp;
__dispinterface INTERFACE_UUID("{0002093A-0000-0000-C000-000000000046}") ShadingDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020939-0000-0000-C000-000000000046}") TextRetrievalMode  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_ViewType(Activex::TOleEnum &Get_ViewType_result) = 0 ;
	virtual HRESULT __safecall Set_ViewType(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Duplicate(_di_TextRetrievalMode &Get_Duplicate_result) = 0 ;
	virtual HRESULT __safecall Get_IncludeHiddenText(Word &Get_IncludeHiddenText_result) = 0 ;
	virtual HRESULT __safecall Set_IncludeHiddenText(Word prop) = 0 ;
	virtual HRESULT __safecall Get_IncludeFieldCodes(Word &Get_IncludeFieldCodes_result) = 0 ;
	virtual HRESULT __safecall Set_IncludeFieldCodes(Word prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_ViewType() { Activex::TOleEnum r; HRESULT hr = Get_ViewType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum ViewType = {read=_scw_Get_ViewType, write=Set_ViewType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_TextRetrievalMode _scw_Get_Duplicate() { _di_TextRetrievalMode r; HRESULT hr = Get_Duplicate(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_TextRetrievalMode Duplicate = {read=_scw_Get_Duplicate};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IncludeHiddenText() { Word r; HRESULT hr = Get_IncludeHiddenText(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IncludeHiddenText = {read=_scw_Get_IncludeHiddenText, write=Set_IncludeHiddenText};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IncludeFieldCodes() { Word r; HRESULT hr = Get_IncludeFieldCodes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IncludeFieldCodes = {read=_scw_Get_IncludeFieldCodes, write=Set_IncludeFieldCodes};
};

__dispinterface TextRetrievalModeDisp;
typedef System::DelphiInterface<TextRetrievalModeDisp> _di_TextRetrievalModeDisp;
__dispinterface INTERFACE_UUID("{00020939-0000-0000-C000-000000000046}") TextRetrievalModeDisp  : public IDispatch 
{
	
};

__interface AutoTextEntry;
typedef System::DelphiInterface<AutoTextEntry> _di_AutoTextEntry;
__interface INTERFACE_UUID("{00020937-0000-0000-C000-000000000046}") AutoTextEntries  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_AutoTextEntry &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const WideString Name, const _di_Range Range, _di_AutoTextEntry &Add_result) = 0 ;
	virtual HRESULT __safecall AppendToSpike(const _di_Range Range, _di_AutoTextEntry &AppendToSpike_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface AutoTextEntriesDisp;
typedef System::DelphiInterface<AutoTextEntriesDisp> _di_AutoTextEntriesDisp;
__dispinterface INTERFACE_UUID("{00020937-0000-0000-C000-000000000046}") AutoTextEntriesDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020936-0000-0000-C000-000000000046}") AutoTextEntry  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Set_Name(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_StyleName(WideString &Get_StyleName_result) = 0 ;
	virtual HRESULT __safecall Get_Value(WideString &Get_Value_result) = 0 ;
	virtual HRESULT __safecall Set_Value(const WideString prop) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall Insert(const _di_Range Where, OleVariant &RichText, _di_Range &Insert_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name, write=Set_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_StyleName() { WideString r; HRESULT hr = Get_StyleName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString StyleName = {read=_scw_Get_StyleName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Value() { WideString r; HRESULT hr = Get_Value(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Value = {read=_scw_Get_Value, write=Set_Value};
};

__dispinterface AutoTextEntryDisp;
typedef System::DelphiInterface<AutoTextEntryDisp> _di_AutoTextEntryDisp;
__dispinterface INTERFACE_UUID("{00020936-0000-0000-C000-000000000046}") AutoTextEntryDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020935-0000-0000-C000-000000000046}") system  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_OperatingSystem(WideString &Get_OperatingSystem_result) = 0 ;
	virtual HRESULT __safecall Get_ProcessorType(WideString &Get_ProcessorType_result) = 0 ;
	virtual HRESULT __safecall Get_Version(WideString &Get_Version_result) = 0 ;
	virtual HRESULT __safecall Get_FreeDiskSpace(int &Get_FreeDiskSpace_result) = 0 ;
	virtual HRESULT __safecall Get_Country(Activex::TOleEnum &Get_Country_result) = 0 ;
	virtual HRESULT __safecall Get_LanguageDesignation(WideString &Get_LanguageDesignation_result) = 0 ;
	virtual HRESULT __safecall Get_HorizontalResolution(int &Get_HorizontalResolution_result) = 0 ;
	virtual HRESULT __safecall Get_VerticalResolution(int &Get_VerticalResolution_result) = 0 ;
	virtual HRESULT __safecall Get_ProfileString(const WideString Section, const WideString Key, WideString &Get_ProfileString_result) = 0 ;
	virtual HRESULT __safecall Set_ProfileString(const WideString Section, const WideString Key, const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_PrivateProfileString(const WideString FileName, const WideString Section, const WideString Key, WideString &Get_PrivateProfileString_result) = 0 ;
	virtual HRESULT __safecall Set_PrivateProfileString(const WideString FileName, const WideString Section, const WideString Key, const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_MathCoprocessorInstalled(Word &Get_MathCoprocessorInstalled_result) = 0 ;
	virtual HRESULT __safecall Get_ComputerType(WideString &Get_ComputerType_result) = 0 ;
	virtual HRESULT __safecall Get_MacintoshName(WideString &Get_MacintoshName_result) = 0 ;
	virtual HRESULT __safecall Get_QuickDrawInstalled(Word &Get_QuickDrawInstalled_result) = 0 ;
	virtual HRESULT __safecall Get_Cursor(Activex::TOleEnum &Get_Cursor_result) = 0 ;
	virtual HRESULT __safecall Set_Cursor(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall MSInfo(void) = 0 ;
	virtual HRESULT __safecall Connect(const WideString Path, OleVariant &Drive, OleVariant &Password) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_OperatingSystem() { WideString r; HRESULT hr = Get_OperatingSystem(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString OperatingSystem = {read=_scw_Get_OperatingSystem};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ProcessorType() { WideString r; HRESULT hr = Get_ProcessorType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ProcessorType = {read=_scw_Get_ProcessorType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Version() { WideString r; HRESULT hr = Get_Version(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Version = {read=_scw_Get_Version};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_FreeDiskSpace() { int r; HRESULT hr = Get_FreeDiskSpace(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int FreeDiskSpace = {read=_scw_Get_FreeDiskSpace};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Country() { Activex::TOleEnum r; HRESULT hr = Get_Country(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Country = {read=_scw_Get_Country};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_LanguageDesignation() { WideString r; HRESULT hr = Get_LanguageDesignation(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString LanguageDesignation = {read=_scw_Get_LanguageDesignation};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_HorizontalResolution() { int r; HRESULT hr = Get_HorizontalResolution(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int HorizontalResolution = {read=_scw_Get_HorizontalResolution};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_VerticalResolution() { int r; HRESULT hr = Get_VerticalResolution(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int VerticalResolution = {read=_scw_Get_VerticalResolution};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ProfileString(const WideString Section, const WideString Key) { WideString r; HRESULT hr = Get_ProfileString(Section, Key, r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ProfileString[WideString Section][WideString Key] = {read=_scw_Get_ProfileString, write=Set_ProfileString};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_PrivateProfileString(const WideString FileName, const WideString Section, const WideString Key) { WideString r; HRESULT hr = Get_PrivateProfileString(FileName, Section, Key, r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString PrivateProfileString[WideString FileName][WideString Section][WideString Key] = {read=_scw_Get_PrivateProfileString, write=Set_PrivateProfileString};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MathCoprocessorInstalled() { Word r; HRESULT hr = Get_MathCoprocessorInstalled(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MathCoprocessorInstalled = {read=_scw_Get_MathCoprocessorInstalled};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ComputerType() { WideString r; HRESULT hr = Get_ComputerType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ComputerType = {read=_scw_Get_ComputerType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_MacintoshName() { WideString r; HRESULT hr = Get_MacintoshName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString MacintoshName = {read=_scw_Get_MacintoshName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_QuickDrawInstalled() { Word r; HRESULT hr = Get_QuickDrawInstalled(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word QuickDrawInstalled = {read=_scw_Get_QuickDrawInstalled};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Cursor() { Activex::TOleEnum r; HRESULT hr = Get_Cursor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Cursor = {read=_scw_Get_Cursor, write=Set_Cursor};
};

__dispinterface SystemDisp;
typedef System::DelphiInterface<SystemDisp> _di_SystemDisp;
__dispinterface INTERFACE_UUID("{00020935-0000-0000-C000-000000000046}") SystemDisp  : public IDispatch 
{
	
};

__interface OLEFormat;
typedef System::DelphiInterface<OLEFormat> _di_OLEFormat;
__interface INTERFACE_UUID("{00020933-0000-0000-C000-000000000046}") OLEFormat  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_ClassType(WideString &Get_ClassType_result) = 0 ;
	virtual HRESULT __safecall Set_ClassType(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_DisplayAsIcon(Word &Get_DisplayAsIcon_result) = 0 ;
	virtual HRESULT __safecall Set_DisplayAsIcon(Word prop) = 0 ;
	virtual HRESULT __safecall Get_IconName(WideString &Get_IconName_result) = 0 ;
	virtual HRESULT __safecall Set_IconName(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_IconPath(WideString &Get_IconPath_result) = 0 ;
	virtual HRESULT __safecall Get_IconIndex(int &Get_IconIndex_result) = 0 ;
	virtual HRESULT __safecall Set_IconIndex(int prop) = 0 ;
	virtual HRESULT __safecall Get_IconLabel(WideString &Get_IconLabel_result) = 0 ;
	virtual HRESULT __safecall Set_IconLabel(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Label_(WideString &Get_Label__result) = 0 ;
	virtual HRESULT __safecall Get_Object_(_di_IDispatch &Get_Object__result) = 0 ;
	virtual HRESULT __safecall Get_ProgID(WideString &Get_ProgID_result) = 0 ;
	virtual HRESULT __safecall Activate(void) = 0 ;
	virtual HRESULT __safecall Edit(void) = 0 ;
	virtual HRESULT __safecall Open(void) = 0 ;
	virtual HRESULT __safecall DoVerb(OleVariant &VerbIndex) = 0 ;
	virtual HRESULT __safecall ConvertTo(OleVariant &ClassType, OleVariant &DisplayAsIcon, OleVariant &IconFileName, OleVariant &IconIndex, OleVariant &IconLabel) = 0 ;
	virtual HRESULT __safecall ActivateAs(const WideString ClassType) = 0 ;
	virtual HRESULT __safecall Get_PreserveFormattingOnUpdate(Word &Get_PreserveFormattingOnUpdate_result) = 0 ;
	virtual HRESULT __safecall Set_PreserveFormattingOnUpdate(Word prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ClassType() { WideString r; HRESULT hr = Get_ClassType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ClassType = {read=_scw_Get_ClassType, write=Set_ClassType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisplayAsIcon() { Word r; HRESULT hr = Get_DisplayAsIcon(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisplayAsIcon = {read=_scw_Get_DisplayAsIcon, write=Set_DisplayAsIcon};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_IconName() { WideString r; HRESULT hr = Get_IconName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString IconName = {read=_scw_Get_IconName, write=Set_IconName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_IconPath() { WideString r; HRESULT hr = Get_IconPath(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString IconPath = {read=_scw_Get_IconPath};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_IconIndex() { int r; HRESULT hr = Get_IconIndex(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int IconIndex = {read=_scw_Get_IconIndex, write=Set_IconIndex};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_IconLabel() { WideString r; HRESULT hr = Get_IconLabel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString IconLabel = {read=_scw_Get_IconLabel, write=Set_IconLabel};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Label_() { WideString r; HRESULT hr = Get_Label_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Label_ = {read=_scw_Get_Label_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Object_() { _di_IDispatch r; HRESULT hr = Get_Object_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Object_ = {read=_scw_Get_Object_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ProgID() { WideString r; HRESULT hr = Get_ProgID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ProgID = {read=_scw_Get_ProgID};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PreserveFormattingOnUpdate() { Word r; HRESULT hr = Get_PreserveFormattingOnUpdate(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PreserveFormattingOnUpdate = {read=_scw_Get_PreserveFormattingOnUpdate, write=Set_PreserveFormattingOnUpdate};
};

__dispinterface OLEFormatDisp;
typedef System::DelphiInterface<OLEFormatDisp> _di_OLEFormatDisp;
__dispinterface INTERFACE_UUID("{00020933-0000-0000-C000-000000000046}") OLEFormatDisp  : public IDispatch 
{
	
};

__interface LinkFormat;
typedef System::DelphiInterface<LinkFormat> _di_LinkFormat;
__interface INTERFACE_UUID("{00020931-0000-0000-C000-000000000046}") LinkFormat  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_AutoUpdate(Word &Get_AutoUpdate_result) = 0 ;
	virtual HRESULT __safecall Set_AutoUpdate(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SourceName(WideString &Get_SourceName_result) = 0 ;
	virtual HRESULT __safecall Get_SourcePath(WideString &Get_SourcePath_result) = 0 ;
	virtual HRESULT __safecall Get_Locked(Word &Get_Locked_result) = 0 ;
	virtual HRESULT __safecall Set_Locked(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Get_SourceFullName(WideString &Get_SourceFullName_result) = 0 ;
	virtual HRESULT __safecall Set_SourceFullName(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_SavePictureWithDocument(Word &Get_SavePictureWithDocument_result) = 0 ;
	virtual HRESULT __safecall Set_SavePictureWithDocument(Word prop) = 0 ;
	virtual HRESULT __safecall BreakLink(void) = 0 ;
	virtual HRESULT __safecall Update(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoUpdate() { Word r; HRESULT hr = Get_AutoUpdate(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoUpdate = {read=_scw_Get_AutoUpdate, write=Set_AutoUpdate};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_SourceName() { WideString r; HRESULT hr = Get_SourceName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString SourceName = {read=_scw_Get_SourceName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_SourcePath() { WideString r; HRESULT hr = Get_SourcePath(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString SourcePath = {read=_scw_Get_SourcePath};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Locked() { Word r; HRESULT hr = Get_Locked(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Locked = {read=_scw_Get_Locked, write=Set_Locked};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_SourceFullName() { WideString r; HRESULT hr = Get_SourceFullName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString SourceFullName = {read=_scw_Get_SourceFullName, write=Set_SourceFullName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SavePictureWithDocument() { Word r; HRESULT hr = Get_SavePictureWithDocument(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SavePictureWithDocument = {read=_scw_Get_SavePictureWithDocument, write=Set_SavePictureWithDocument};
};

__dispinterface LinkFormatDisp;
typedef System::DelphiInterface<LinkFormatDisp> _di_LinkFormatDisp;
__dispinterface INTERFACE_UUID("{00020931-0000-0000-C000-000000000046}") LinkFormatDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209A4-0000-0000-C000-000000000046}") _OLEControl  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Left(float &Get_Left_result) = 0 ;
	virtual HRESULT __safecall Set_Left(float prop) = 0 ;
	virtual HRESULT __safecall Get_Top(float &Get_Top_result) = 0 ;
	virtual HRESULT __safecall Set_Top(float prop) = 0 ;
	virtual HRESULT __safecall Get_Height(float &Get_Height_result) = 0 ;
	virtual HRESULT __safecall Set_Height(float prop) = 0 ;
	virtual HRESULT __safecall Get_Width(float &Get_Width_result) = 0 ;
	virtual HRESULT __safecall Set_Width(float prop) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Set_Name(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Automation(_di_IDispatch &Get_Automation_result) = 0 ;
	virtual HRESULT __safecall Select(void) = 0 ;
	virtual HRESULT __safecall Copy(void) = 0 ;
	virtual HRESULT __safecall Cut(void) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall Activate(void) = 0 ;
	virtual HRESULT __safecall Get_AltHTML(WideString &Get_AltHTML_result) = 0 ;
	virtual HRESULT __safecall Set_AltHTML(const WideString prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Left() { float r; HRESULT hr = Get_Left(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Left = {read=_scw_Get_Left, write=Set_Left};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Top() { float r; HRESULT hr = Get_Top(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Top = {read=_scw_Get_Top, write=Set_Top};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Height() { float r; HRESULT hr = Get_Height(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Height = {read=_scw_Get_Height, write=Set_Height};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Width() { float r; HRESULT hr = Get_Width(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Width = {read=_scw_Get_Width, write=Set_Width};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name, write=Set_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Automation() { _di_IDispatch r; HRESULT hr = Get_Automation(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Automation = {read=_scw_Get_Automation};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_AltHTML() { WideString r; HRESULT hr = Get_AltHTML(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString AltHTML = {read=_scw_Get_AltHTML, write=Set_AltHTML};
};

__dispinterface _OLEControlDisp;
typedef System::DelphiInterface<_OLEControlDisp> _di__OLEControlDisp;
__dispinterface INTERFACE_UUID("{000209A4-0000-0000-C000-000000000046}") _OLEControlDisp  : public IDispatch 
{
	
};

__interface Field;
typedef System::DelphiInterface<Field> _di_Field;
__interface INTERFACE_UUID("{00020930-0000-0000-C000-000000000046}") Fields  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Locked(int &Get_Locked_result) = 0 ;
	virtual HRESULT __safecall Set_Locked(int prop) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_Field &Item_result) = 0 ;
	virtual HRESULT __safecall ToggleShowCodes(void) = 0 ;
	virtual HRESULT __safecall Update(int &Update_result) = 0 ;
	virtual HRESULT __safecall Unlink(void) = 0 ;
	virtual HRESULT __safecall UpdateSource(void) = 0 ;
	virtual HRESULT __safecall Add(const _di_Range Range, OleVariant &Type_, OleVariant &Text, OleVariant &PreserveFormatting, _di_Field &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Locked() { int r; HRESULT hr = Get_Locked(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Locked = {read=_scw_Get_Locked, write=Set_Locked};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
};

__dispinterface FieldsDisp;
typedef System::DelphiInterface<FieldsDisp> _di_FieldsDisp;
__dispinterface INTERFACE_UUID("{00020930-0000-0000-C000-000000000046}") FieldsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002092F-0000-0000-C000-000000000046}") Field  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Code(_di_Range &Get_Code_result) = 0 ;
	virtual HRESULT __safecall Set_Code(const _di_Range prop) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Get_Locked(Word &Get_Locked_result) = 0 ;
	virtual HRESULT __safecall Set_Locked(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Kind(Activex::TOleEnum &Get_Kind_result) = 0 ;
	virtual HRESULT __safecall Get_Result(_di_Range &Get_Result_result) = 0 ;
	virtual HRESULT __safecall Set_Result(const _di_Range prop) = 0 ;
	virtual HRESULT __safecall Get_Data(WideString &Get_Data_result) = 0 ;
	virtual HRESULT __safecall Set_Data(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Next(_di_Field &Get_Next_result) = 0 ;
	virtual HRESULT __safecall Get_Previous(_di_Field &Get_Previous_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_ShowCodes(Word &Get_ShowCodes_result) = 0 ;
	virtual HRESULT __safecall Set_ShowCodes(Word prop) = 0 ;
	virtual HRESULT __safecall Get_LinkFormat(_di_LinkFormat &Get_LinkFormat_result) = 0 ;
	virtual HRESULT __safecall Get_OLEFormat(_di_OLEFormat &Get_OLEFormat_result) = 0 ;
	virtual HRESULT __safecall Get_InlineShape(_di_InlineShape &Get_InlineShape_result) = 0 ;
	virtual HRESULT __safecall Select(void) = 0 ;
	virtual HRESULT __safecall Update(Word &Update_result) = 0 ;
	virtual HRESULT __safecall Unlink(void) = 0 ;
	virtual HRESULT __safecall UpdateSource(void) = 0 ;
	virtual HRESULT __safecall DoClick(void) = 0 ;
	virtual HRESULT __safecall Copy(void) = 0 ;
	virtual HRESULT __safecall Cut(void) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Code() { _di_Range r; HRESULT hr = Get_Code(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Code = {read=_scw_Get_Code, write=Set_Code};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Locked() { Word r; HRESULT hr = Get_Locked(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Locked = {read=_scw_Get_Locked, write=Set_Locked};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Kind() { Activex::TOleEnum r; HRESULT hr = Get_Kind(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Kind = {read=_scw_Get_Kind};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Result() { _di_Range r; HRESULT hr = Get_Result(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Result = {read=_scw_Get_Result, write=Set_Result};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Data() { WideString r; HRESULT hr = Get_Data(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Data = {read=_scw_Get_Data, write=Set_Data};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Field _scw_Get_Next() { _di_Field r; HRESULT hr = Get_Next(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Field Next = {read=_scw_Get_Next};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Field _scw_Get_Previous() { _di_Field r; HRESULT hr = Get_Previous(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Field Previous = {read=_scw_Get_Previous};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowCodes() { Word r; HRESULT hr = Get_ShowCodes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowCodes = {read=_scw_Get_ShowCodes, write=Set_ShowCodes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_LinkFormat _scw_Get_LinkFormat() { _di_LinkFormat r; HRESULT hr = Get_LinkFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_LinkFormat LinkFormat = {read=_scw_Get_LinkFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_OLEFormat _scw_Get_OLEFormat() { _di_OLEFormat r; HRESULT hr = Get_OLEFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_OLEFormat OLEFormat = {read=_scw_Get_OLEFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_InlineShape _scw_Get_InlineShape() { _di_InlineShape r; HRESULT hr = Get_InlineShape(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_InlineShape InlineShape = {read=_scw_Get_InlineShape};
};

__dispinterface FieldDisp;
typedef System::DelphiInterface<FieldDisp> _di_FieldDisp;
__dispinterface INTERFACE_UUID("{0002092F-0000-0000-C000-000000000046}") FieldDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002092E-0000-0000-C000-000000000046}") Browser  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Target(Activex::TOleEnum &Get_Target_result) = 0 ;
	virtual HRESULT __safecall Set_Target(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Next(void) = 0 ;
	virtual HRESULT __safecall Previous(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Target() { Activex::TOleEnum r; HRESULT hr = Get_Target(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Target = {read=_scw_Get_Target, write=Set_Target};
};

__dispinterface BrowserDisp;
typedef System::DelphiInterface<BrowserDisp> _di_BrowserDisp;
__dispinterface INTERFACE_UUID("{0002092E-0000-0000-C000-000000000046}") BrowserDisp  : public IDispatch 
{
	
};

__interface Style;
typedef System::DelphiInterface<Style> _di_Style;
__interface INTERFACE_UUID("{0002092D-0000-0000-C000-000000000046}") Styles  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_Style &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const WideString Name, OleVariant &Type_, _di_Style &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface StylesDisp;
typedef System::DelphiInterface<StylesDisp> _di_StylesDisp;
__dispinterface INTERFACE_UUID("{0002092D-0000-0000-C000-000000000046}") StylesDisp  : public IDispatch 
{
	
};

__interface TableStyle;
typedef System::DelphiInterface<TableStyle> _di_TableStyle;
__interface INTERFACE_UUID("{0002092C-0000-0000-C000-000000000046}") Style  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_NameLocal(WideString &Get_NameLocal_result) = 0 ;
	virtual HRESULT __safecall Set_NameLocal(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_BaseStyle(OleVariant &Get_BaseStyle_result) = 0 ;
	virtual HRESULT __safecall Set_BaseStyle(OleVariant &prop) = 0 ;
	virtual HRESULT __safecall Get_Description(WideString &Get_Description_result) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Get_BuiltIn(Word &Get_BuiltIn_result) = 0 ;
	virtual HRESULT __safecall Get_NextParagraphStyle(OleVariant &Get_NextParagraphStyle_result) = 0 ;
	virtual HRESULT __safecall Set_NextParagraphStyle(OleVariant &prop) = 0 ;
	virtual HRESULT __safecall Get_InUse(Word &Get_InUse_result) = 0 ;
	virtual HRESULT __safecall Get_Shading(_di_Shading &Get_Shading_result) = 0 ;
	virtual HRESULT __safecall Get_Borders(_di_Borders &Get_Borders_result) = 0 ;
	virtual HRESULT __safecall Set_Borders(const _di_Borders prop) = 0 ;
	virtual HRESULT __safecall Get_ParagraphFormat(_di__ParagraphFormat &Get_ParagraphFormat_result) = 0 ;
	virtual HRESULT __safecall Set_ParagraphFormat(const _di__ParagraphFormat prop) = 0 ;
	virtual HRESULT __safecall Get_Font(_di__Font &Get_Font_result) = 0 ;
	virtual HRESULT __safecall Set_Font(const _di__Font prop) = 0 ;
	virtual HRESULT __safecall Get_Frame(_di_Frame &Get_Frame_result) = 0 ;
	virtual HRESULT __safecall Get_LanguageID(Activex::TOleEnum &Get_LanguageID_result) = 0 ;
	virtual HRESULT __safecall Set_LanguageID(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_AutomaticallyUpdate(Word &Get_AutomaticallyUpdate_result) = 0 ;
	virtual HRESULT __safecall Set_AutomaticallyUpdate(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ListTemplate(_di_ListTemplate &Get_ListTemplate_result) = 0 ;
	virtual HRESULT __safecall Get_ListLevelNumber(int &Get_ListLevelNumber_result) = 0 ;
	virtual HRESULT __safecall Get_LanguageIDFarEast(Activex::TOleEnum &Get_LanguageIDFarEast_result) = 0 ;
	virtual HRESULT __safecall Set_LanguageIDFarEast(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Hidden(Word &Get_Hidden_result) = 0 ;
	virtual HRESULT __safecall Set_Hidden(Word prop) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall LinkToListTemplate(const _di_ListTemplate ListTemplate, OleVariant &ListLevelNumber) = 0 ;
	virtual HRESULT __safecall Get_NoProofing(int &Get_NoProofing_result) = 0 ;
	virtual HRESULT __safecall Set_NoProofing(int prop) = 0 ;
	virtual HRESULT __safecall Get_LinkStyle(OleVariant &Get_LinkStyle_result) = 0 ;
	virtual HRESULT __safecall Set_LinkStyle(OleVariant &prop) = 0 ;
	virtual HRESULT __safecall Get_Visibility(Word &Get_Visibility_result) = 0 ;
	virtual HRESULT __safecall Set_Visibility(Word prop) = 0 ;
	virtual HRESULT __safecall Get_NoSpaceBetweenParagraphsOfSameStyle(Word &Get_NoSpaceBetweenParagraphsOfSameStyle_result) = 0 ;
	virtual HRESULT __safecall Set_NoSpaceBetweenParagraphsOfSameStyle(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Table(_di_TableStyle &Get_Table_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_NameLocal() { WideString r; HRESULT hr = Get_NameLocal(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString NameLocal = {read=_scw_Get_NameLocal, write=Set_NameLocal};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Description() { WideString r; HRESULT hr = Get_Description(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Description = {read=_scw_Get_Description};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_BuiltIn() { Word r; HRESULT hr = Get_BuiltIn(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word BuiltIn = {read=_scw_Get_BuiltIn};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_InUse() { Word r; HRESULT hr = Get_InUse(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word InUse = {read=_scw_Get_InUse};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shading _scw_Get_Shading() { _di_Shading r; HRESULT hr = Get_Shading(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shading Shading = {read=_scw_Get_Shading};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Borders _scw_Get_Borders() { _di_Borders r; HRESULT hr = Get_Borders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Borders Borders = {read=_scw_Get_Borders, write=Set_Borders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__ParagraphFormat _scw_Get_ParagraphFormat() { _di__ParagraphFormat r; HRESULT hr = Get_ParagraphFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__ParagraphFormat ParagraphFormat = {read=_scw_Get_ParagraphFormat, write=Set_ParagraphFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Font _scw_Get_Font() { _di__Font r; HRESULT hr = Get_Font(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Font Font = {read=_scw_Get_Font, write=Set_Font};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Frame _scw_Get_Frame() { _di_Frame r; HRESULT hr = Get_Frame(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Frame Frame = {read=_scw_Get_Frame};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LanguageID() { Activex::TOleEnum r; HRESULT hr = Get_LanguageID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LanguageID = {read=_scw_Get_LanguageID, write=Set_LanguageID};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutomaticallyUpdate() { Word r; HRESULT hr = Get_AutomaticallyUpdate(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutomaticallyUpdate = {read=_scw_Get_AutomaticallyUpdate, write=Set_AutomaticallyUpdate};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ListTemplate _scw_Get_ListTemplate() { _di_ListTemplate r; HRESULT hr = Get_ListTemplate(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ListTemplate ListTemplate = {read=_scw_Get_ListTemplate};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_ListLevelNumber() { int r; HRESULT hr = Get_ListLevelNumber(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int ListLevelNumber = {read=_scw_Get_ListLevelNumber};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LanguageIDFarEast() { Activex::TOleEnum r; HRESULT hr = Get_LanguageIDFarEast(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LanguageIDFarEast = {read=_scw_Get_LanguageIDFarEast, write=Set_LanguageIDFarEast};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Hidden() { Word r; HRESULT hr = Get_Hidden(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Hidden = {read=_scw_Get_Hidden, write=Set_Hidden};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_NoProofing() { int r; HRESULT hr = Get_NoProofing(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int NoProofing = {read=_scw_Get_NoProofing, write=Set_NoProofing};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Visibility() { Word r; HRESULT hr = Get_Visibility(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Visibility = {read=_scw_Get_Visibility, write=Set_Visibility};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_NoSpaceBetweenParagraphsOfSameStyle() { Word r; HRESULT hr = Get_NoSpaceBetweenParagraphsOfSameStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word NoSpaceBetweenParagraphsOfSameStyle = {read=_scw_Get_NoSpaceBetweenParagraphsOfSameStyle, write=Set_NoSpaceBetweenParagraphsOfSameStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_TableStyle _scw_Get_Table() { _di_TableStyle r; HRESULT hr = Get_Table(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_TableStyle Table = {read=_scw_Get_Table};
};

__dispinterface StyleDisp;
typedef System::DelphiInterface<StyleDisp> _di_StyleDisp;
__dispinterface INTERFACE_UUID("{0002092C-0000-0000-C000-000000000046}") StyleDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002092B-0000-0000-C000-000000000046}") Frames  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_Frame &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const _di_Range Range, _di_Frame &Add_result) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface FramesDisp;
typedef System::DelphiInterface<FramesDisp> _di_FramesDisp;
__dispinterface INTERFACE_UUID("{0002092B-0000-0000-C000-000000000046}") FramesDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002092A-0000-0000-C000-000000000046}") Frame  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_HeightRule(Activex::TOleEnum &Get_HeightRule_result) = 0 ;
	virtual HRESULT __safecall Set_HeightRule(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_WidthRule(Activex::TOleEnum &Get_WidthRule_result) = 0 ;
	virtual HRESULT __safecall Set_WidthRule(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_HorizontalDistanceFromText(float &Get_HorizontalDistanceFromText_result) = 0 ;
	virtual HRESULT __safecall Set_HorizontalDistanceFromText(float prop) = 0 ;
	virtual HRESULT __safecall Get_Height(float &Get_Height_result) = 0 ;
	virtual HRESULT __safecall Set_Height(float prop) = 0 ;
	virtual HRESULT __safecall Get_HorizontalPosition(float &Get_HorizontalPosition_result) = 0 ;
	virtual HRESULT __safecall Set_HorizontalPosition(float prop) = 0 ;
	virtual HRESULT __safecall Get_LockAnchor(Word &Get_LockAnchor_result) = 0 ;
	virtual HRESULT __safecall Set_LockAnchor(Word prop) = 0 ;
	virtual HRESULT __safecall Get_RelativeHorizontalPosition(Activex::TOleEnum &Get_RelativeHorizontalPosition_result) = 0 ;
	virtual HRESULT __safecall Set_RelativeHorizontalPosition(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_RelativeVerticalPosition(Activex::TOleEnum &Get_RelativeVerticalPosition_result) = 0 ;
	virtual HRESULT __safecall Set_RelativeVerticalPosition(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_VerticalDistanceFromText(float &Get_VerticalDistanceFromText_result) = 0 ;
	virtual HRESULT __safecall Set_VerticalDistanceFromText(float prop) = 0 ;
	virtual HRESULT __safecall Get_VerticalPosition(float &Get_VerticalPosition_result) = 0 ;
	virtual HRESULT __safecall Set_VerticalPosition(float prop) = 0 ;
	virtual HRESULT __safecall Get_Width(float &Get_Width_result) = 0 ;
	virtual HRESULT __safecall Set_Width(float prop) = 0 ;
	virtual HRESULT __safecall Get_TextWrap(Word &Get_TextWrap_result) = 0 ;
	virtual HRESULT __safecall Set_TextWrap(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Shading(_di_Shading &Get_Shading_result) = 0 ;
	virtual HRESULT __safecall Get_Borders(_di_Borders &Get_Borders_result) = 0 ;
	virtual HRESULT __safecall Set_Borders(const _di_Borders prop) = 0 ;
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall Select(void) = 0 ;
	virtual HRESULT __safecall Copy(void) = 0 ;
	virtual HRESULT __safecall Cut(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_HeightRule() { Activex::TOleEnum r; HRESULT hr = Get_HeightRule(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum HeightRule = {read=_scw_Get_HeightRule, write=Set_HeightRule};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_WidthRule() { Activex::TOleEnum r; HRESULT hr = Get_WidthRule(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum WidthRule = {read=_scw_Get_WidthRule, write=Set_WidthRule};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_HorizontalDistanceFromText() { float r; HRESULT hr = Get_HorizontalDistanceFromText(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float HorizontalDistanceFromText = {read=_scw_Get_HorizontalDistanceFromText, write=Set_HorizontalDistanceFromText};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Height() { float r; HRESULT hr = Get_Height(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Height = {read=_scw_Get_Height, write=Set_Height};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_HorizontalPosition() { float r; HRESULT hr = Get_HorizontalPosition(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float HorizontalPosition = {read=_scw_Get_HorizontalPosition, write=Set_HorizontalPosition};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_LockAnchor() { Word r; HRESULT hr = Get_LockAnchor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word LockAnchor = {read=_scw_Get_LockAnchor, write=Set_LockAnchor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_RelativeHorizontalPosition() { Activex::TOleEnum r; HRESULT hr = Get_RelativeHorizontalPosition(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum RelativeHorizontalPosition = {read=_scw_Get_RelativeHorizontalPosition, write=Set_RelativeHorizontalPosition};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_RelativeVerticalPosition() { Activex::TOleEnum r; HRESULT hr = Get_RelativeVerticalPosition(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum RelativeVerticalPosition = {read=_scw_Get_RelativeVerticalPosition, write=Set_RelativeVerticalPosition};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_VerticalDistanceFromText() { float r; HRESULT hr = Get_VerticalDistanceFromText(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float VerticalDistanceFromText = {read=_scw_Get_VerticalDistanceFromText, write=Set_VerticalDistanceFromText};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_VerticalPosition() { float r; HRESULT hr = Get_VerticalPosition(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float VerticalPosition = {read=_scw_Get_VerticalPosition, write=Set_VerticalPosition};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Width() { float r; HRESULT hr = Get_Width(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Width = {read=_scw_Get_Width, write=Set_Width};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_TextWrap() { Word r; HRESULT hr = Get_TextWrap(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word TextWrap = {read=_scw_Get_TextWrap, write=Set_TextWrap};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shading _scw_Get_Shading() { _di_Shading r; HRESULT hr = Get_Shading(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shading Shading = {read=_scw_Get_Shading};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Borders _scw_Get_Borders() { _di_Borders r; HRESULT hr = Get_Borders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Borders Borders = {read=_scw_Get_Borders, write=Set_Borders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
};

__dispinterface FrameDisp;
typedef System::DelphiInterface<FrameDisp> _di_FrameDisp;
__dispinterface INTERFACE_UUID("{0002092A-0000-0000-C000-000000000046}") FrameDisp  : public IDispatch 
{
	
};

__interface FormField;
typedef System::DelphiInterface<FormField> _di_FormField;
__interface INTERFACE_UUID("{00020929-0000-0000-C000-000000000046}") FormFields  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Shaded(Word &Get_Shaded_result) = 0 ;
	virtual HRESULT __safecall Set_Shaded(Word prop) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_FormField &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const _di_Range Range, Activex::TOleEnum Type_, _di_FormField &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Shaded() { Word r; HRESULT hr = Get_Shaded(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Shaded = {read=_scw_Get_Shaded, write=Set_Shaded};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
};

__dispinterface FormFieldsDisp;
typedef System::DelphiInterface<FormFieldsDisp> _di_FormFieldsDisp;
__dispinterface INTERFACE_UUID("{00020929-0000-0000-C000-000000000046}") FormFieldsDisp  : public IDispatch 
{
	
};

__interface TextInput;
typedef System::DelphiInterface<TextInput> _di_TextInput;
__interface CheckBox;
typedef System::DelphiInterface<CheckBox> _di_CheckBox;
__interface DropDown;
typedef System::DelphiInterface<DropDown> _di_DropDown;
__interface INTERFACE_UUID("{00020928-0000-0000-C000-000000000046}") FormField  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Set_Name(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_EntryMacro(WideString &Get_EntryMacro_result) = 0 ;
	virtual HRESULT __safecall Set_EntryMacro(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_ExitMacro(WideString &Get_ExitMacro_result) = 0 ;
	virtual HRESULT __safecall Set_ExitMacro(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_OwnHelp(Word &Get_OwnHelp_result) = 0 ;
	virtual HRESULT __safecall Set_OwnHelp(Word prop) = 0 ;
	virtual HRESULT __safecall Get_OwnStatus(Word &Get_OwnStatus_result) = 0 ;
	virtual HRESULT __safecall Set_OwnStatus(Word prop) = 0 ;
	virtual HRESULT __safecall Get_HelpText(WideString &Get_HelpText_result) = 0 ;
	virtual HRESULT __safecall Set_HelpText(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_StatusText(WideString &Get_StatusText_result) = 0 ;
	virtual HRESULT __safecall Set_StatusText(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Enabled(Word &Get_Enabled_result) = 0 ;
	virtual HRESULT __safecall Set_Enabled(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Result(WideString &Get_Result_result) = 0 ;
	virtual HRESULT __safecall Set_Result(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_TextInput(_di_TextInput &Get_TextInput_result) = 0 ;
	virtual HRESULT __safecall Get_CheckBox(_di_CheckBox &Get_CheckBox_result) = 0 ;
	virtual HRESULT __safecall Get_DropDown(_di_DropDown &Get_DropDown_result) = 0 ;
	virtual HRESULT __safecall Get_Next(_di_FormField &Get_Next_result) = 0 ;
	virtual HRESULT __safecall Get_Previous(_di_FormField &Get_Previous_result) = 0 ;
	virtual HRESULT __safecall Get_CalculateOnExit(Word &Get_CalculateOnExit_result) = 0 ;
	virtual HRESULT __safecall Set_CalculateOnExit(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Select(void) = 0 ;
	virtual HRESULT __safecall Copy(void) = 0 ;
	virtual HRESULT __safecall Cut(void) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name, write=Set_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_EntryMacro() { WideString r; HRESULT hr = Get_EntryMacro(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString EntryMacro = {read=_scw_Get_EntryMacro, write=Set_EntryMacro};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ExitMacro() { WideString r; HRESULT hr = Get_ExitMacro(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ExitMacro = {read=_scw_Get_ExitMacro, write=Set_ExitMacro};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_OwnHelp() { Word r; HRESULT hr = Get_OwnHelp(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word OwnHelp = {read=_scw_Get_OwnHelp, write=Set_OwnHelp};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_OwnStatus() { Word r; HRESULT hr = Get_OwnStatus(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word OwnStatus = {read=_scw_Get_OwnStatus, write=Set_OwnStatus};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_HelpText() { WideString r; HRESULT hr = Get_HelpText(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString HelpText = {read=_scw_Get_HelpText, write=Set_HelpText};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_StatusText() { WideString r; HRESULT hr = Get_StatusText(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString StatusText = {read=_scw_Get_StatusText, write=Set_StatusText};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Enabled() { Word r; HRESULT hr = Get_Enabled(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Enabled = {read=_scw_Get_Enabled, write=Set_Enabled};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Result() { WideString r; HRESULT hr = Get_Result(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Result = {read=_scw_Get_Result, write=Set_Result};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_TextInput _scw_Get_TextInput() { _di_TextInput r; HRESULT hr = Get_TextInput(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_TextInput TextInput = {read=_scw_Get_TextInput};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_CheckBox _scw_Get_CheckBox() { _di_CheckBox r; HRESULT hr = Get_CheckBox(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_CheckBox CheckBox = {read=_scw_Get_CheckBox};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_DropDown _scw_Get_DropDown() { _di_DropDown r; HRESULT hr = Get_DropDown(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_DropDown DropDown = {read=_scw_Get_DropDown};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_FormField _scw_Get_Next() { _di_FormField r; HRESULT hr = Get_Next(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_FormField Next = {read=_scw_Get_Next};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_FormField _scw_Get_Previous() { _di_FormField r; HRESULT hr = Get_Previous(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_FormField Previous = {read=_scw_Get_Previous};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_CalculateOnExit() { Word r; HRESULT hr = Get_CalculateOnExit(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word CalculateOnExit = {read=_scw_Get_CalculateOnExit, write=Set_CalculateOnExit};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
};

__dispinterface FormFieldDisp;
typedef System::DelphiInterface<FormFieldDisp> _di_FormFieldDisp;
__dispinterface INTERFACE_UUID("{00020928-0000-0000-C000-000000000046}") FormFieldDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020927-0000-0000-C000-000000000046}") TextInput  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Valid(Word &Get_Valid_result) = 0 ;
	virtual HRESULT __safecall Get_Default(WideString &Get_Default_result) = 0 ;
	virtual HRESULT __safecall Set_Default(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Get_Format(WideString &Get_Format_result) = 0 ;
	virtual HRESULT __safecall Get_Width(int &Get_Width_result) = 0 ;
	virtual HRESULT __safecall Set_Width(int prop) = 0 ;
	virtual HRESULT __safecall Clear(void) = 0 ;
	virtual HRESULT __safecall EditType(Activex::TOleEnum Type_, OleVariant &Default, OleVariant &Format, OleVariant &Enabled) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Valid() { Word r; HRESULT hr = Get_Valid(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Valid = {read=_scw_Get_Valid};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Default() { WideString r; HRESULT hr = Get_Default(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Default = {read=_scw_Get_Default, write=Set_Default};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Format() { WideString r; HRESULT hr = Get_Format(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Format = {read=_scw_Get_Format};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Width() { int r; HRESULT hr = Get_Width(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Width = {read=_scw_Get_Width, write=Set_Width};
};

__dispinterface TextInputDisp;
typedef System::DelphiInterface<TextInputDisp> _di_TextInputDisp;
__dispinterface INTERFACE_UUID("{00020927-0000-0000-C000-000000000046}") TextInputDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020926-0000-0000-C000-000000000046}") CheckBox  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Valid(Word &Get_Valid_result) = 0 ;
	virtual HRESULT __safecall Get_AutoSize(Word &Get_AutoSize_result) = 0 ;
	virtual HRESULT __safecall Set_AutoSize(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Size(float &Get_Size_result) = 0 ;
	virtual HRESULT __safecall Set_Size(float prop) = 0 ;
	virtual HRESULT __safecall Get_Default(Word &Get_Default_result) = 0 ;
	virtual HRESULT __safecall Set_Default(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Value(Word &Get_Value_result) = 0 ;
	virtual HRESULT __safecall Set_Value(Word prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Valid() { Word r; HRESULT hr = Get_Valid(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Valid = {read=_scw_Get_Valid};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoSize() { Word r; HRESULT hr = Get_AutoSize(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoSize = {read=_scw_Get_AutoSize, write=Set_AutoSize};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Size() { float r; HRESULT hr = Get_Size(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Size = {read=_scw_Get_Size, write=Set_Size};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Default() { Word r; HRESULT hr = Get_Default(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Default = {read=_scw_Get_Default, write=Set_Default};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Value() { Word r; HRESULT hr = Get_Value(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Value = {read=_scw_Get_Value, write=Set_Value};
};

__dispinterface CheckBoxDisp;
typedef System::DelphiInterface<CheckBoxDisp> _di_CheckBoxDisp;
__dispinterface INTERFACE_UUID("{00020926-0000-0000-C000-000000000046}") CheckBoxDisp  : public IDispatch 
{
	
};

__interface ListEntries;
typedef System::DelphiInterface<ListEntries> _di_ListEntries;
__interface INTERFACE_UUID("{00020925-0000-0000-C000-000000000046}") DropDown  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Valid(Word &Get_Valid_result) = 0 ;
	virtual HRESULT __safecall Get_Default(int &Get_Default_result) = 0 ;
	virtual HRESULT __safecall Set_Default(int prop) = 0 ;
	virtual HRESULT __safecall Get_Value(int &Get_Value_result) = 0 ;
	virtual HRESULT __safecall Set_Value(int prop) = 0 ;
	virtual HRESULT __safecall Get_ListEntries(_di_ListEntries &Get_ListEntries_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Valid() { Word r; HRESULT hr = Get_Valid(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Valid = {read=_scw_Get_Valid};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Default() { int r; HRESULT hr = Get_Default(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Default = {read=_scw_Get_Default, write=Set_Default};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Value() { int r; HRESULT hr = Get_Value(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Value = {read=_scw_Get_Value, write=Set_Value};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ListEntries _scw_Get_ListEntries() { _di_ListEntries r; HRESULT hr = Get_ListEntries(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ListEntries ListEntries = {read=_scw_Get_ListEntries};
};

__dispinterface DropDownDisp;
typedef System::DelphiInterface<DropDownDisp> _di_DropDownDisp;
__dispinterface INTERFACE_UUID("{00020925-0000-0000-C000-000000000046}") DropDownDisp  : public IDispatch 
{
	
};

__interface ListEntry;
typedef System::DelphiInterface<ListEntry> _di_ListEntry;
__interface INTERFACE_UUID("{00020924-0000-0000-C000-000000000046}") ListEntries  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_ListEntry &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const WideString Name, OleVariant &Index, _di_ListEntry &Add_result) = 0 ;
	virtual HRESULT __safecall Clear(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface ListEntriesDisp;
typedef System::DelphiInterface<ListEntriesDisp> _di_ListEntriesDisp;
__dispinterface INTERFACE_UUID("{00020924-0000-0000-C000-000000000046}") ListEntriesDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020923-0000-0000-C000-000000000046}") ListEntry  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Set_Name(const WideString prop) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name, write=Set_Name};
};

__dispinterface ListEntryDisp;
typedef System::DelphiInterface<ListEntryDisp> _di_ListEntryDisp;
__dispinterface INTERFACE_UUID("{00020923-0000-0000-C000-000000000046}") ListEntryDisp  : public IDispatch 
{
	
};

__interface TableOfFigures;
typedef System::DelphiInterface<TableOfFigures> _di_TableOfFigures;
__interface INTERFACE_UUID("{00020922-0000-0000-C000-000000000046}") TablesOfFigures  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Format(Activex::TOleEnum &Get_Format_result) = 0 ;
	virtual HRESULT __safecall Set_Format(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_TableOfFigures &Item_result) = 0 ;
	virtual HRESULT __safecall AddOld(const _di_Range Range, OleVariant &Caption, OleVariant &IncludeLabel, OleVariant &UseHeadingStyles, OleVariant &UpperHeadingLevel, OleVariant &LowerHeadingLevel, OleVariant &UseFields, OleVariant &TableID, OleVariant &RightAlignPageNumbers, OleVariant &IncludePageNumbers, OleVariant &AddedStyles, _di_TableOfFigures &AddOld_result) = 0 ;
	virtual HRESULT __safecall MarkEntry(const _di_Range Range, OleVariant &Entry, OleVariant &EntryAutoText, OleVariant &TableID, OleVariant &Level, _di_Field &MarkEntry_result) = 0 ;
	virtual HRESULT __safecall Add(const _di_Range Range, OleVariant &Caption, OleVariant &IncludeLabel, OleVariant &UseHeadingStyles, OleVariant &UpperHeadingLevel, OleVariant &LowerHeadingLevel, OleVariant &UseFields, OleVariant &TableID, OleVariant &RightAlignPageNumbers, OleVariant &IncludePageNumbers, OleVariant &AddedStyles, OleVariant &UseHyperlinks, OleVariant &HidePageNumbersInWeb, _di_TableOfFigures &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Format() { Activex::TOleEnum r; HRESULT hr = Get_Format(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Format = {read=_scw_Get_Format, write=Set_Format};
};

__dispinterface TablesOfFiguresDisp;
typedef System::DelphiInterface<TablesOfFiguresDisp> _di_TablesOfFiguresDisp;
__dispinterface INTERFACE_UUID("{00020922-0000-0000-C000-000000000046}") TablesOfFiguresDisp  : public IDispatch 
{
	
};

__interface HeadingStyles;
typedef System::DelphiInterface<HeadingStyles> _di_HeadingStyles;
__interface INTERFACE_UUID("{00020921-0000-0000-C000-000000000046}") TableOfFigures  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Caption(WideString &Get_Caption_result) = 0 ;
	virtual HRESULT __safecall Set_Caption(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_IncludeLabel(Word &Get_IncludeLabel_result) = 0 ;
	virtual HRESULT __safecall Set_IncludeLabel(Word prop) = 0 ;
	virtual HRESULT __safecall Get_RightAlignPageNumbers(Word &Get_RightAlignPageNumbers_result) = 0 ;
	virtual HRESULT __safecall Set_RightAlignPageNumbers(Word prop) = 0 ;
	virtual HRESULT __safecall Get_UseHeadingStyles(Word &Get_UseHeadingStyles_result) = 0 ;
	virtual HRESULT __safecall Set_UseHeadingStyles(Word prop) = 0 ;
	virtual HRESULT __safecall Get_LowerHeadingLevel(int &Get_LowerHeadingLevel_result) = 0 ;
	virtual HRESULT __safecall Set_LowerHeadingLevel(int prop) = 0 ;
	virtual HRESULT __safecall Get_UpperHeadingLevel(int &Get_UpperHeadingLevel_result) = 0 ;
	virtual HRESULT __safecall Set_UpperHeadingLevel(int prop) = 0 ;
	virtual HRESULT __safecall Get_IncludePageNumbers(Word &Get_IncludePageNumbers_result) = 0 ;
	virtual HRESULT __safecall Set_IncludePageNumbers(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Get_UseFields(Word &Get_UseFields_result) = 0 ;
	virtual HRESULT __safecall Set_UseFields(Word prop) = 0 ;
	virtual HRESULT __safecall Get_TableID(WideString &Get_TableID_result) = 0 ;
	virtual HRESULT __safecall Set_TableID(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_HeadingStyles(_di_HeadingStyles &Get_HeadingStyles_result) = 0 ;
	virtual HRESULT __safecall Get_TabLeader(Activex::TOleEnum &Get_TabLeader_result) = 0 ;
	virtual HRESULT __safecall Set_TabLeader(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall UpdatePageNumbers(void) = 0 ;
	virtual HRESULT __safecall Update(void) = 0 ;
	virtual HRESULT __safecall Get_UseHyperlinks(Word &Get_UseHyperlinks_result) = 0 ;
	virtual HRESULT __safecall Set_UseHyperlinks(Word prop) = 0 ;
	virtual HRESULT __safecall Get_HidePageNumbersInWeb(Word &Get_HidePageNumbersInWeb_result) = 0 ;
	virtual HRESULT __safecall Set_HidePageNumbersInWeb(Word prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Caption() { WideString r; HRESULT hr = Get_Caption(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Caption = {read=_scw_Get_Caption, write=Set_Caption};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IncludeLabel() { Word r; HRESULT hr = Get_IncludeLabel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IncludeLabel = {read=_scw_Get_IncludeLabel, write=Set_IncludeLabel};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_RightAlignPageNumbers() { Word r; HRESULT hr = Get_RightAlignPageNumbers(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word RightAlignPageNumbers = {read=_scw_Get_RightAlignPageNumbers, write=Set_RightAlignPageNumbers};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_UseHeadingStyles() { Word r; HRESULT hr = Get_UseHeadingStyles(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word UseHeadingStyles = {read=_scw_Get_UseHeadingStyles, write=Set_UseHeadingStyles};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_LowerHeadingLevel() { int r; HRESULT hr = Get_LowerHeadingLevel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int LowerHeadingLevel = {read=_scw_Get_LowerHeadingLevel, write=Set_LowerHeadingLevel};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_UpperHeadingLevel() { int r; HRESULT hr = Get_UpperHeadingLevel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int UpperHeadingLevel = {read=_scw_Get_UpperHeadingLevel, write=Set_UpperHeadingLevel};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IncludePageNumbers() { Word r; HRESULT hr = Get_IncludePageNumbers(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IncludePageNumbers = {read=_scw_Get_IncludePageNumbers, write=Set_IncludePageNumbers};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_UseFields() { Word r; HRESULT hr = Get_UseFields(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word UseFields = {read=_scw_Get_UseFields, write=Set_UseFields};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_TableID() { WideString r; HRESULT hr = Get_TableID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString TableID = {read=_scw_Get_TableID, write=Set_TableID};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_HeadingStyles _scw_Get_HeadingStyles() { _di_HeadingStyles r; HRESULT hr = Get_HeadingStyles(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_HeadingStyles HeadingStyles = {read=_scw_Get_HeadingStyles};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_TabLeader() { Activex::TOleEnum r; HRESULT hr = Get_TabLeader(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum TabLeader = {read=_scw_Get_TabLeader, write=Set_TabLeader};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_UseHyperlinks() { Word r; HRESULT hr = Get_UseHyperlinks(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word UseHyperlinks = {read=_scw_Get_UseHyperlinks, write=Set_UseHyperlinks};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_HidePageNumbersInWeb() { Word r; HRESULT hr = Get_HidePageNumbersInWeb(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word HidePageNumbersInWeb = {read=_scw_Get_HidePageNumbersInWeb, write=Set_HidePageNumbersInWeb};
};

__dispinterface TableOfFiguresDisp;
typedef System::DelphiInterface<TableOfFiguresDisp> _di_TableOfFiguresDisp;
__dispinterface INTERFACE_UUID("{00020921-0000-0000-C000-000000000046}") TableOfFiguresDisp  : public IDispatch 
{
	
};

__interface MailMergeDataSource;
typedef System::DelphiInterface<MailMergeDataSource> _di_MailMergeDataSource;
__interface MailMergeFields;
typedef System::DelphiInterface<MailMergeFields> _di_MailMergeFields;
__interface INTERFACE_UUID("{00020920-0000-0000-C000-000000000046}") MailMerge  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_MainDocumentType(Activex::TOleEnum &Get_MainDocumentType_result) = 0 ;
	virtual HRESULT __safecall Set_MainDocumentType(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_State(Activex::TOleEnum &Get_State_result) = 0 ;
	virtual HRESULT __safecall Get_Destination(Activex::TOleEnum &Get_Destination_result) = 0 ;
	virtual HRESULT __safecall Set_Destination(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_DataSource(_di_MailMergeDataSource &Get_DataSource_result) = 0 ;
	virtual HRESULT __safecall Get_Fields(_di_MailMergeFields &Get_Fields_result) = 0 ;
	virtual HRESULT __safecall Get_ViewMailMergeFieldCodes(int &Get_ViewMailMergeFieldCodes_result) = 0 ;
	virtual HRESULT __safecall Set_ViewMailMergeFieldCodes(int prop) = 0 ;
	virtual HRESULT __safecall Get_SuppressBlankLines(Word &Get_SuppressBlankLines_result) = 0 ;
	virtual HRESULT __safecall Set_SuppressBlankLines(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MailAsAttachment(Word &Get_MailAsAttachment_result) = 0 ;
	virtual HRESULT __safecall Set_MailAsAttachment(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MailAddressFieldName(WideString &Get_MailAddressFieldName_result) = 0 ;
	virtual HRESULT __safecall Set_MailAddressFieldName(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_MailSubject(WideString &Get_MailSubject_result) = 0 ;
	virtual HRESULT __safecall Set_MailSubject(const WideString prop) = 0 ;
	virtual HRESULT __safecall CreateDataSource(OleVariant &Name, OleVariant &PasswordDocument, OleVariant &WritePasswordDocument, OleVariant &HeaderRecord, OleVariant &MSQuery, OleVariant &SQLStatement, OleVariant &SQLStatement1, OleVariant &Connection, OleVariant &LinkToSource) = 0 ;
	virtual HRESULT __safecall CreateHeaderSource(const WideString Name, OleVariant &PasswordDocument, OleVariant &WritePasswordDocument, OleVariant &HeaderRecord) = 0 ;
	virtual HRESULT __safecall OpenDataSource2000(const WideString Name, OleVariant &Format, OleVariant &ConfirmConversions, OleVariant &ReadOnly, OleVariant &LinkToSource, OleVariant &AddToRecentFiles, OleVariant &PasswordDocument, OleVariant &PasswordTemplate, OleVariant &Revert, OleVariant &WritePasswordDocument, OleVariant &WritePasswordTemplate, OleVariant &Connection, OleVariant &SQLStatement, OleVariant &SQLStatement1) = 0 ;
	virtual HRESULT __safecall OpenHeaderSource2000(const WideString Name, OleVariant &Format, OleVariant &ConfirmConversions, OleVariant &ReadOnly, OleVariant &AddToRecentFiles, OleVariant &PasswordDocument, OleVariant &PasswordTemplate, OleVariant &Revert, OleVariant &WritePasswordDocument, OleVariant &WritePasswordTemplate) = 0 ;
	virtual HRESULT __safecall Execute(OleVariant &Pause) = 0 ;
	virtual HRESULT __safecall Check(void) = 0 ;
	virtual HRESULT __safecall EditDataSource(void) = 0 ;
	virtual HRESULT __safecall EditHeaderSource(void) = 0 ;
	virtual HRESULT __safecall EditMainDocument(void) = 0 ;
	virtual HRESULT __safecall UseAddressBook(const WideString Type_) = 0 ;
	virtual HRESULT __safecall Get_HighlightMergeFields(Word &Get_HighlightMergeFields_result) = 0 ;
	virtual HRESULT __safecall Set_HighlightMergeFields(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MailFormat(Activex::TOleEnum &Get_MailFormat_result) = 0 ;
	virtual HRESULT __safecall Set_MailFormat(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_ShowSendToCustom(WideString &Get_ShowSendToCustom_result) = 0 ;
	virtual HRESULT __safecall Set_ShowSendToCustom(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_WizardState(int &Get_WizardState_result) = 0 ;
	virtual HRESULT __safecall Set_WizardState(int prop) = 0 ;
	virtual HRESULT __safecall OpenDataSource(const WideString Name, OleVariant &Format, OleVariant &ConfirmConversions, OleVariant &ReadOnly, OleVariant &LinkToSource, OleVariant &AddToRecentFiles, OleVariant &PasswordDocument, OleVariant &PasswordTemplate, OleVariant &Revert, OleVariant &WritePasswordDocument, OleVariant &WritePasswordTemplate, OleVariant &Connection, OleVariant &SQLStatement, OleVariant &SQLStatement1, OleVariant &OpenExclusive, OleVariant &SubType) = 0 ;
	virtual HRESULT __safecall OpenHeaderSource(const WideString Name, OleVariant &Format, OleVariant &ConfirmConversions, OleVariant &ReadOnly, OleVariant &AddToRecentFiles, OleVariant &PasswordDocument, OleVariant &PasswordTemplate, OleVariant &Revert, OleVariant &WritePasswordDocument, OleVariant &WritePasswordTemplate, OleVariant &OpenExclusive) = 0 ;
	virtual HRESULT __safecall ShowWizard(OleVariant &InitialState, OleVariant &ShowDocumentStep, OleVariant &ShowTemplateStep, OleVariant &ShowDataStep, OleVariant &ShowWriteStep, OleVariant &ShowPreviewStep, OleVariant &ShowMergeStep) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_MainDocumentType() { Activex::TOleEnum r; HRESULT hr = Get_MainDocumentType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum MainDocumentType = {read=_scw_Get_MainDocumentType, write=Set_MainDocumentType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_State() { Activex::TOleEnum r; HRESULT hr = Get_State(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum State = {read=_scw_Get_State};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Destination() { Activex::TOleEnum r; HRESULT hr = Get_Destination(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Destination = {read=_scw_Get_Destination, write=Set_Destination};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_MailMergeDataSource _scw_Get_DataSource() { _di_MailMergeDataSource r; HRESULT hr = Get_DataSource(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_MailMergeDataSource DataSource = {read=_scw_Get_DataSource};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_MailMergeFields _scw_Get_Fields() { _di_MailMergeFields r; HRESULT hr = Get_Fields(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_MailMergeFields Fields = {read=_scw_Get_Fields};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_ViewMailMergeFieldCodes() { int r; HRESULT hr = Get_ViewMailMergeFieldCodes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int ViewMailMergeFieldCodes = {read=_scw_Get_ViewMailMergeFieldCodes, write=Set_ViewMailMergeFieldCodes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SuppressBlankLines() { Word r; HRESULT hr = Get_SuppressBlankLines(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SuppressBlankLines = {read=_scw_Get_SuppressBlankLines, write=Set_SuppressBlankLines};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MailAsAttachment() { Word r; HRESULT hr = Get_MailAsAttachment(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MailAsAttachment = {read=_scw_Get_MailAsAttachment, write=Set_MailAsAttachment};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_MailAddressFieldName() { WideString r; HRESULT hr = Get_MailAddressFieldName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString MailAddressFieldName = {read=_scw_Get_MailAddressFieldName, write=Set_MailAddressFieldName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_MailSubject() { WideString r; HRESULT hr = Get_MailSubject(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString MailSubject = {read=_scw_Get_MailSubject, write=Set_MailSubject};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_HighlightMergeFields() { Word r; HRESULT hr = Get_HighlightMergeFields(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word HighlightMergeFields = {read=_scw_Get_HighlightMergeFields, write=Set_HighlightMergeFields};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_MailFormat() { Activex::TOleEnum r; HRESULT hr = Get_MailFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum MailFormat = {read=_scw_Get_MailFormat, write=Set_MailFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ShowSendToCustom() { WideString r; HRESULT hr = Get_ShowSendToCustom(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ShowSendToCustom = {read=_scw_Get_ShowSendToCustom, write=Set_ShowSendToCustom};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_WizardState() { int r; HRESULT hr = Get_WizardState(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int WizardState = {read=_scw_Get_WizardState, write=Set_WizardState};
};

__dispinterface MailMergeDisp;
typedef System::DelphiInterface<MailMergeDisp> _di_MailMergeDisp;
__dispinterface INTERFACE_UUID("{00020920-0000-0000-C000-000000000046}") MailMergeDisp  : public IDispatch 
{
	
};

__interface MailMergeField;
typedef System::DelphiInterface<MailMergeField> _di_MailMergeField;
__interface INTERFACE_UUID("{0002091F-0000-0000-C000-000000000046}") MailMergeFields  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_MailMergeField &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const _di_Range Range, const WideString Name, _di_MailMergeField &Add_result) = 0 ;
	virtual HRESULT __safecall AddAsk(const _di_Range Range, const WideString Name, OleVariant &Prompt, OleVariant &DefaultAskText, OleVariant &AskOnce, _di_MailMergeField &AddAsk_result) = 0 ;
	virtual HRESULT __safecall AddFillIn(const _di_Range Range, OleVariant &Prompt, OleVariant &DefaultFillInText, OleVariant &AskOnce, _di_MailMergeField &AddFillIn_result) = 0 ;
	virtual HRESULT __safecall AddIf(const _di_Range Range, const WideString MergeField, Activex::TOleEnum Comparison, OleVariant &CompareTo, OleVariant &TrueAutoText, OleVariant &TrueText, OleVariant &FalseAutoText, OleVariant &FalseText, _di_MailMergeField &AddIf_result) = 0 ;
	virtual HRESULT __safecall AddMergeRec(const _di_Range Range, _di_MailMergeField &AddMergeRec_result) = 0 ;
	virtual HRESULT __safecall AddMergeSeq(const _di_Range Range, _di_MailMergeField &AddMergeSeq_result) = 0 ;
	virtual HRESULT __safecall AddNext(const _di_Range Range, _di_MailMergeField &AddNext_result) = 0 ;
	virtual HRESULT __safecall AddNextIf(const _di_Range Range, const WideString MergeField, Activex::TOleEnum Comparison, OleVariant &CompareTo, _di_MailMergeField &AddNextIf_result) = 0 ;
	virtual HRESULT __safecall AddSet(const _di_Range Range, const WideString Name, OleVariant &ValueText, OleVariant &ValueAutoText, _di_MailMergeField &AddSet_result) = 0 ;
	virtual HRESULT __safecall AddSkipIf(const _di_Range Range, const WideString MergeField, Activex::TOleEnum Comparison, OleVariant &CompareTo, _di_MailMergeField &AddSkipIf_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface MailMergeFieldsDisp;
typedef System::DelphiInterface<MailMergeFieldsDisp> _di_MailMergeFieldsDisp;
__dispinterface INTERFACE_UUID("{0002091F-0000-0000-C000-000000000046}") MailMergeFieldsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002091E-0000-0000-C000-000000000046}") MailMergeField  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Get_Locked(Word &Get_Locked_result) = 0 ;
	virtual HRESULT __safecall Set_Locked(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Code(_di_Range &Get_Code_result) = 0 ;
	virtual HRESULT __safecall Set_Code(const _di_Range prop) = 0 ;
	virtual HRESULT __safecall Get_Next(_di_MailMergeField &Get_Next_result) = 0 ;
	virtual HRESULT __safecall Get_Previous(_di_MailMergeField &Get_Previous_result) = 0 ;
	virtual HRESULT __safecall Select(void) = 0 ;
	virtual HRESULT __safecall Copy(void) = 0 ;
	virtual HRESULT __safecall Cut(void) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Locked() { Word r; HRESULT hr = Get_Locked(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Locked = {read=_scw_Get_Locked, write=Set_Locked};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Code() { _di_Range r; HRESULT hr = Get_Code(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Code = {read=_scw_Get_Code, write=Set_Code};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_MailMergeField _scw_Get_Next() { _di_MailMergeField r; HRESULT hr = Get_Next(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_MailMergeField Next = {read=_scw_Get_Next};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_MailMergeField _scw_Get_Previous() { _di_MailMergeField r; HRESULT hr = Get_Previous(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_MailMergeField Previous = {read=_scw_Get_Previous};
};

__dispinterface MailMergeFieldDisp;
typedef System::DelphiInterface<MailMergeFieldDisp> _di_MailMergeFieldDisp;
__dispinterface INTERFACE_UUID("{0002091E-0000-0000-C000-000000000046}") MailMergeFieldDisp  : public IDispatch 
{
	
};

__interface MailMergeFieldNames;
typedef System::DelphiInterface<MailMergeFieldNames> _di_MailMergeFieldNames;
__interface MailMergeDataFields;
typedef System::DelphiInterface<MailMergeDataFields> _di_MailMergeDataFields;
__interface MappedDataFields;
typedef System::DelphiInterface<MappedDataFields> _di_MappedDataFields;
__interface INTERFACE_UUID("{0002091D-0000-0000-C000-000000000046}") MailMergeDataSource  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Get_HeaderSourceName(WideString &Get_HeaderSourceName_result) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Get_HeaderSourceType(Activex::TOleEnum &Get_HeaderSourceType_result) = 0 ;
	virtual HRESULT __safecall Get_ConnectString(WideString &Get_ConnectString_result) = 0 ;
	virtual HRESULT __safecall Get_QueryString(WideString &Get_QueryString_result) = 0 ;
	virtual HRESULT __safecall Set_QueryString(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_ActiveRecord(Activex::TOleEnum &Get_ActiveRecord_result) = 0 ;
	virtual HRESULT __safecall Set_ActiveRecord(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_FirstRecord(int &Get_FirstRecord_result) = 0 ;
	virtual HRESULT __safecall Set_FirstRecord(int prop) = 0 ;
	virtual HRESULT __safecall Get_LastRecord(int &Get_LastRecord_result) = 0 ;
	virtual HRESULT __safecall Set_LastRecord(int prop) = 0 ;
	virtual HRESULT __safecall Get_FieldNames(_di_MailMergeFieldNames &Get_FieldNames_result) = 0 ;
	virtual HRESULT __safecall Get_DataFields(_di_MailMergeDataFields &Get_DataFields_result) = 0 ;
	virtual HRESULT __safecall FindRecord2000(const WideString FindText, const WideString Field, Word &FindRecord2000_result) = 0 ;
	virtual HRESULT __safecall Get_RecordCount(int &Get_RecordCount_result) = 0 ;
	virtual HRESULT __safecall Get_Included(Word &Get_Included_result) = 0 ;
	virtual HRESULT __safecall Set_Included(Word prop) = 0 ;
	virtual HRESULT __safecall Get_InvalidAddress(Word &Get_InvalidAddress_result) = 0 ;
	virtual HRESULT __safecall Set_InvalidAddress(Word prop) = 0 ;
	virtual HRESULT __safecall Get_InvalidComments(WideString &Get_InvalidComments_result) = 0 ;
	virtual HRESULT __safecall Set_InvalidComments(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_MappedDataFields(_di_MappedDataFields &Get_MappedDataFields_result) = 0 ;
	virtual HRESULT __safecall Get_TableName(WideString &Get_TableName_result) = 0 ;
	virtual HRESULT __safecall FindRecord(const WideString FindText, OleVariant &Field, Word &FindRecord_result) = 0 ;
	virtual HRESULT __safecall SetAllIncludedFlags(Word Included) = 0 ;
	virtual HRESULT __safecall SetAllErrorFlags(Word Invalid, const WideString InvalidComment) = 0 ;
	virtual HRESULT __safecall Close(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_HeaderSourceName() { WideString r; HRESULT hr = Get_HeaderSourceName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString HeaderSourceName = {read=_scw_Get_HeaderSourceName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_HeaderSourceType() { Activex::TOleEnum r; HRESULT hr = Get_HeaderSourceType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum HeaderSourceType = {read=_scw_Get_HeaderSourceType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ConnectString() { WideString r; HRESULT hr = Get_ConnectString(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ConnectString = {read=_scw_Get_ConnectString};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_QueryString() { WideString r; HRESULT hr = Get_QueryString(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString QueryString = {read=_scw_Get_QueryString, write=Set_QueryString};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_ActiveRecord() { Activex::TOleEnum r; HRESULT hr = Get_ActiveRecord(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum ActiveRecord = {read=_scw_Get_ActiveRecord, write=Set_ActiveRecord};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_FirstRecord() { int r; HRESULT hr = Get_FirstRecord(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int FirstRecord = {read=_scw_Get_FirstRecord, write=Set_FirstRecord};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_LastRecord() { int r; HRESULT hr = Get_LastRecord(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int LastRecord = {read=_scw_Get_LastRecord, write=Set_LastRecord};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_MailMergeFieldNames _scw_Get_FieldNames() { _di_MailMergeFieldNames r; HRESULT hr = Get_FieldNames(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_MailMergeFieldNames FieldNames = {read=_scw_Get_FieldNames};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_MailMergeDataFields _scw_Get_DataFields() { _di_MailMergeDataFields r; HRESULT hr = Get_DataFields(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_MailMergeDataFields DataFields = {read=_scw_Get_DataFields};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_RecordCount() { int r; HRESULT hr = Get_RecordCount(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int RecordCount = {read=_scw_Get_RecordCount};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Included() { Word r; HRESULT hr = Get_Included(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Included = {read=_scw_Get_Included, write=Set_Included};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_InvalidAddress() { Word r; HRESULT hr = Get_InvalidAddress(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word InvalidAddress = {read=_scw_Get_InvalidAddress, write=Set_InvalidAddress};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_InvalidComments() { WideString r; HRESULT hr = Get_InvalidComments(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString InvalidComments = {read=_scw_Get_InvalidComments, write=Set_InvalidComments};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_MappedDataFields _scw_Get_MappedDataFields() { _di_MappedDataFields r; HRESULT hr = Get_MappedDataFields(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_MappedDataFields MappedDataFields = {read=_scw_Get_MappedDataFields};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_TableName() { WideString r; HRESULT hr = Get_TableName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString TableName = {read=_scw_Get_TableName};
};

__dispinterface MailMergeDataSourceDisp;
typedef System::DelphiInterface<MailMergeDataSourceDisp> _di_MailMergeDataSourceDisp;
__dispinterface INTERFACE_UUID("{0002091D-0000-0000-C000-000000000046}") MailMergeDataSourceDisp  : public IDispatch 
{
	
};

__interface MailMergeFieldName;
typedef System::DelphiInterface<MailMergeFieldName> _di_MailMergeFieldName;
__interface INTERFACE_UUID("{0002091C-0000-0000-C000-000000000046}") MailMergeFieldNames  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_MailMergeFieldName &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface MailMergeFieldNamesDisp;
typedef System::DelphiInterface<MailMergeFieldNamesDisp> _di_MailMergeFieldNamesDisp;
__dispinterface INTERFACE_UUID("{0002091C-0000-0000-C000-000000000046}") MailMergeFieldNamesDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002091B-0000-0000-C000-000000000046}") MailMergeFieldName  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
};

__dispinterface MailMergeFieldNameDisp;
typedef System::DelphiInterface<MailMergeFieldNameDisp> _di_MailMergeFieldNameDisp;
__dispinterface INTERFACE_UUID("{0002091B-0000-0000-C000-000000000046}") MailMergeFieldNameDisp  : public IDispatch 
{
	
};

__interface MailMergeDataField;
typedef System::DelphiInterface<MailMergeDataField> _di_MailMergeDataField;
__interface INTERFACE_UUID("{0002091A-0000-0000-C000-000000000046}") MailMergeDataFields  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_MailMergeDataField &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface MailMergeDataFieldsDisp;
typedef System::DelphiInterface<MailMergeDataFieldsDisp> _di_MailMergeDataFieldsDisp;
__dispinterface INTERFACE_UUID("{0002091A-0000-0000-C000-000000000046}") MailMergeDataFieldsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020919-0000-0000-C000-000000000046}") MailMergeDataField  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Value(WideString &Get_Value_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Value() { WideString r; HRESULT hr = Get_Value(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Value = {read=_scw_Get_Value};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
};

__dispinterface MailMergeDataFieldDisp;
typedef System::DelphiInterface<MailMergeDataFieldDisp> _di_MailMergeDataFieldDisp;
__dispinterface INTERFACE_UUID("{00020919-0000-0000-C000-000000000046}") MailMergeDataFieldDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020918-0000-0000-C000-000000000046}") Envelope  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Address(_di_Range &Get_Address_result) = 0 ;
	virtual HRESULT __safecall Get_ReturnAddress(_di_Range &Get_ReturnAddress_result) = 0 ;
	virtual HRESULT __safecall Get_DefaultPrintBarCode(Word &Get_DefaultPrintBarCode_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultPrintBarCode(Word prop) = 0 ;
	virtual HRESULT __safecall Get_DefaultPrintFIMA(Word &Get_DefaultPrintFIMA_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultPrintFIMA(Word prop) = 0 ;
	virtual HRESULT __safecall Get_DefaultHeight(float &Get_DefaultHeight_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultHeight(float prop) = 0 ;
	virtual HRESULT __safecall Get_DefaultWidth(float &Get_DefaultWidth_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultWidth(float prop) = 0 ;
	virtual HRESULT __safecall Get_DefaultSize(WideString &Get_DefaultSize_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultSize(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_DefaultOmitReturnAddress(Word &Get_DefaultOmitReturnAddress_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultOmitReturnAddress(Word prop) = 0 ;
	virtual HRESULT __safecall Get_FeedSource(Activex::TOleEnum &Get_FeedSource_result) = 0 ;
	virtual HRESULT __safecall Set_FeedSource(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_AddressFromLeft(float &Get_AddressFromLeft_result) = 0 ;
	virtual HRESULT __safecall Set_AddressFromLeft(float prop) = 0 ;
	virtual HRESULT __safecall Get_AddressFromTop(float &Get_AddressFromTop_result) = 0 ;
	virtual HRESULT __safecall Set_AddressFromTop(float prop) = 0 ;
	virtual HRESULT __safecall Get_ReturnAddressFromLeft(float &Get_ReturnAddressFromLeft_result) = 0 ;
	virtual HRESULT __safecall Set_ReturnAddressFromLeft(float prop) = 0 ;
	virtual HRESULT __safecall Get_ReturnAddressFromTop(float &Get_ReturnAddressFromTop_result) = 0 ;
	virtual HRESULT __safecall Set_ReturnAddressFromTop(float prop) = 0 ;
	virtual HRESULT __safecall Get_AddressStyle(_di_Style &Get_AddressStyle_result) = 0 ;
	virtual HRESULT __safecall Get_ReturnAddressStyle(_di_Style &Get_ReturnAddressStyle_result) = 0 ;
	virtual HRESULT __safecall Get_DefaultOrientation(Activex::TOleEnum &Get_DefaultOrientation_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultOrientation(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_DefaultFaceUp(Word &Get_DefaultFaceUp_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultFaceUp(Word prop) = 0 ;
	virtual HRESULT __safecall Insert2000(OleVariant &ExtractAddress, OleVariant &Address, OleVariant &AutoText, OleVariant &OmitReturnAddress, OleVariant &ReturnAddress, OleVariant &ReturnAutoText, OleVariant &PrintBarCode, OleVariant &PrintFIMA, OleVariant &Size, OleVariant &Height, OleVariant &Width, OleVariant &FeedSource, OleVariant &AddressFromLeft, OleVariant &AddressFromTop, OleVariant &ReturnAddressFromLeft, OleVariant &ReturnAddressFromTop, OleVariant &DefaultFaceUp, OleVariant &DefaultOrientation) = 0 ;
	virtual HRESULT __safecall PrintOut2000(OleVariant &ExtractAddress, OleVariant &Address, OleVariant &AutoText, OleVariant &OmitReturnAddress, OleVariant &ReturnAddress, OleVariant &ReturnAutoText, OleVariant &PrintBarCode, OleVariant &PrintFIMA, OleVariant &Size, OleVariant &Height, OleVariant &Width, OleVariant &FeedSource, OleVariant &AddressFromLeft, OleVariant &AddressFromTop, OleVariant &ReturnAddressFromLeft, OleVariant &ReturnAddressFromTop, OleVariant &DefaultFaceUp, OleVariant &DefaultOrientation) = 0 ;
	virtual HRESULT __safecall UpdateDocument(void) = 0 ;
	virtual HRESULT __safecall Options(void) = 0 ;
	virtual HRESULT __safecall Get_Vertical(Word &Get_Vertical_result) = 0 ;
	virtual HRESULT __safecall Set_Vertical(Word prop) = 0 ;
	virtual HRESULT __safecall Get_RecipientNamefromLeft(float &Get_RecipientNamefromLeft_result) = 0 ;
	virtual HRESULT __safecall Set_RecipientNamefromLeft(float prop) = 0 ;
	virtual HRESULT __safecall Get_RecipientNamefromTop(float &Get_RecipientNamefromTop_result) = 0 ;
	virtual HRESULT __safecall Set_RecipientNamefromTop(float prop) = 0 ;
	virtual HRESULT __safecall Get_RecipientPostalfromLeft(float &Get_RecipientPostalfromLeft_result) = 0 ;
	virtual HRESULT __safecall Set_RecipientPostalfromLeft(float prop) = 0 ;
	virtual HRESULT __safecall Get_RecipientPostalfromTop(float &Get_RecipientPostalfromTop_result) = 0 ;
	virtual HRESULT __safecall Set_RecipientPostalfromTop(float prop) = 0 ;
	virtual HRESULT __safecall Get_SenderNamefromLeft(float &Get_SenderNamefromLeft_result) = 0 ;
	virtual HRESULT __safecall Set_SenderNamefromLeft(float prop) = 0 ;
	virtual HRESULT __safecall Get_SenderNamefromTop(float &Get_SenderNamefromTop_result) = 0 ;
	virtual HRESULT __safecall Set_SenderNamefromTop(float prop) = 0 ;
	virtual HRESULT __safecall Get_SenderPostalfromLeft(float &Get_SenderPostalfromLeft_result) = 0 ;
	virtual HRESULT __safecall Set_SenderPostalfromLeft(float prop) = 0 ;
	virtual HRESULT __safecall Get_SenderPostalfromTop(float &Get_SenderPostalfromTop_result) = 0 ;
	virtual HRESULT __safecall Set_SenderPostalfromTop(float prop) = 0 ;
	virtual HRESULT __safecall Insert(OleVariant &ExtractAddress, OleVariant &Address, OleVariant &AutoText, OleVariant &OmitReturnAddress, OleVariant &ReturnAddress, OleVariant &ReturnAutoText, OleVariant &PrintBarCode, OleVariant &PrintFIMA, OleVariant &Size, OleVariant &Height, OleVariant &Width, OleVariant &FeedSource, OleVariant &AddressFromLeft, OleVariant &AddressFromTop, OleVariant &ReturnAddressFromLeft, OleVariant &ReturnAddressFromTop, OleVariant &DefaultFaceUp, OleVariant &DefaultOrientation, OleVariant &PrintEPostage, OleVariant &Vertical, OleVariant &RecipientNamefromLeft, OleVariant &RecipientNamefromTop, OleVariant &RecipientPostalfromLeft, OleVariant &RecipientPostalfromTop, OleVariant &SenderNamefromLeft, OleVariant &SenderNamefromTop, OleVariant &SenderPostalfromLeft, OleVariant &SenderPostalfromTop) = 0 ;
	virtual HRESULT __safecall PrintOut(OleVariant &ExtractAddress, OleVariant &Address, OleVariant &AutoText, OleVariant &OmitReturnAddress, OleVariant &ReturnAddress, OleVariant &ReturnAutoText, OleVariant &PrintBarCode, OleVariant &PrintFIMA, OleVariant &Size, OleVariant &Height, OleVariant &Width, OleVariant &FeedSource, OleVariant &AddressFromLeft, OleVariant &AddressFromTop, OleVariant &ReturnAddressFromLeft, OleVariant &ReturnAddressFromTop, OleVariant &DefaultFaceUp, OleVariant &DefaultOrientation, OleVariant &PrintEPostage, OleVariant &Vertical, OleVariant &RecipientNamefromLeft, OleVariant &RecipientNamefromTop, OleVariant &RecipientPostalfromLeft, OleVariant &RecipientPostalfromTop, OleVariant &SenderNamefromLeft, OleVariant &SenderNamefromTop, OleVariant &SenderPostalfromLeft, OleVariant &SenderPostalfromTop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Address() { _di_Range r; HRESULT hr = Get_Address(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Address = {read=_scw_Get_Address};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_ReturnAddress() { _di_Range r; HRESULT hr = Get_ReturnAddress(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range ReturnAddress = {read=_scw_Get_ReturnAddress};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DefaultPrintBarCode() { Word r; HRESULT hr = Get_DefaultPrintBarCode(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DefaultPrintBarCode = {read=_scw_Get_DefaultPrintBarCode, write=Set_DefaultPrintBarCode};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DefaultPrintFIMA() { Word r; HRESULT hr = Get_DefaultPrintFIMA(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DefaultPrintFIMA = {read=_scw_Get_DefaultPrintFIMA, write=Set_DefaultPrintFIMA};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_DefaultHeight() { float r; HRESULT hr = Get_DefaultHeight(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float DefaultHeight = {read=_scw_Get_DefaultHeight, write=Set_DefaultHeight};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_DefaultWidth() { float r; HRESULT hr = Get_DefaultWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float DefaultWidth = {read=_scw_Get_DefaultWidth, write=Set_DefaultWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_DefaultSize() { WideString r; HRESULT hr = Get_DefaultSize(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString DefaultSize = {read=_scw_Get_DefaultSize, write=Set_DefaultSize};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DefaultOmitReturnAddress() { Word r; HRESULT hr = Get_DefaultOmitReturnAddress(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DefaultOmitReturnAddress = {read=_scw_Get_DefaultOmitReturnAddress, write=Set_DefaultOmitReturnAddress};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_FeedSource() { Activex::TOleEnum r; HRESULT hr = Get_FeedSource(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum FeedSource = {read=_scw_Get_FeedSource, write=Set_FeedSource};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_AddressFromLeft() { float r; HRESULT hr = Get_AddressFromLeft(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float AddressFromLeft = {read=_scw_Get_AddressFromLeft, write=Set_AddressFromLeft};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_AddressFromTop() { float r; HRESULT hr = Get_AddressFromTop(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float AddressFromTop = {read=_scw_Get_AddressFromTop, write=Set_AddressFromTop};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_ReturnAddressFromLeft() { float r; HRESULT hr = Get_ReturnAddressFromLeft(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float ReturnAddressFromLeft = {read=_scw_Get_ReturnAddressFromLeft, write=Set_ReturnAddressFromLeft};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_ReturnAddressFromTop() { float r; HRESULT hr = Get_ReturnAddressFromTop(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float ReturnAddressFromTop = {read=_scw_Get_ReturnAddressFromTop, write=Set_ReturnAddressFromTop};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Style _scw_Get_AddressStyle() { _di_Style r; HRESULT hr = Get_AddressStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Style AddressStyle = {read=_scw_Get_AddressStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Style _scw_Get_ReturnAddressStyle() { _di_Style r; HRESULT hr = Get_ReturnAddressStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Style ReturnAddressStyle = {read=_scw_Get_ReturnAddressStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_DefaultOrientation() { Activex::TOleEnum r; HRESULT hr = Get_DefaultOrientation(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum DefaultOrientation = {read=_scw_Get_DefaultOrientation, write=Set_DefaultOrientation};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DefaultFaceUp() { Word r; HRESULT hr = Get_DefaultFaceUp(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DefaultFaceUp = {read=_scw_Get_DefaultFaceUp, write=Set_DefaultFaceUp};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Vertical() { Word r; HRESULT hr = Get_Vertical(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Vertical = {read=_scw_Get_Vertical, write=Set_Vertical};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_RecipientNamefromLeft() { float r; HRESULT hr = Get_RecipientNamefromLeft(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float RecipientNamefromLeft = {read=_scw_Get_RecipientNamefromLeft, write=Set_RecipientNamefromLeft};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_RecipientNamefromTop() { float r; HRESULT hr = Get_RecipientNamefromTop(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float RecipientNamefromTop = {read=_scw_Get_RecipientNamefromTop, write=Set_RecipientNamefromTop};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_RecipientPostalfromLeft() { float r; HRESULT hr = Get_RecipientPostalfromLeft(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float RecipientPostalfromLeft = {read=_scw_Get_RecipientPostalfromLeft, write=Set_RecipientPostalfromLeft};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_RecipientPostalfromTop() { float r; HRESULT hr = Get_RecipientPostalfromTop(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float RecipientPostalfromTop = {read=_scw_Get_RecipientPostalfromTop, write=Set_RecipientPostalfromTop};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_SenderNamefromLeft() { float r; HRESULT hr = Get_SenderNamefromLeft(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float SenderNamefromLeft = {read=_scw_Get_SenderNamefromLeft, write=Set_SenderNamefromLeft};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_SenderNamefromTop() { float r; HRESULT hr = Get_SenderNamefromTop(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float SenderNamefromTop = {read=_scw_Get_SenderNamefromTop, write=Set_SenderNamefromTop};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_SenderPostalfromLeft() { float r; HRESULT hr = Get_SenderPostalfromLeft(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float SenderPostalfromLeft = {read=_scw_Get_SenderPostalfromLeft, write=Set_SenderPostalfromLeft};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_SenderPostalfromTop() { float r; HRESULT hr = Get_SenderPostalfromTop(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float SenderPostalfromTop = {read=_scw_Get_SenderPostalfromTop, write=Set_SenderPostalfromTop};
};

__dispinterface EnvelopeDisp;
typedef System::DelphiInterface<EnvelopeDisp> _di_EnvelopeDisp;
__dispinterface INTERFACE_UUID("{00020918-0000-0000-C000-000000000046}") EnvelopeDisp  : public IDispatch 
{
	
};

__interface CustomLabels;
typedef System::DelphiInterface<CustomLabels> _di_CustomLabels;
__interface INTERFACE_UUID("{00020917-0000-0000-C000-000000000046}") MailingLabel  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_DefaultPrintBarCode(Word &Get_DefaultPrintBarCode_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultPrintBarCode(Word prop) = 0 ;
	virtual HRESULT __safecall Get_DefaultLaserTray(Activex::TOleEnum &Get_DefaultLaserTray_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultLaserTray(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_CustomLabels(_di_CustomLabels &Get_CustomLabels_result) = 0 ;
	virtual HRESULT __safecall Get_DefaultLabelName(WideString &Get_DefaultLabelName_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultLabelName(const WideString prop) = 0 ;
	virtual HRESULT __safecall CreateNewDocument2000(OleVariant &Name, OleVariant &Address, OleVariant &AutoText, OleVariant &ExtractAddress, OleVariant &LaserTray, _di__Document &CreateNewDocument2000_result) = 0 ;
	virtual HRESULT __safecall PrintOut2000(OleVariant &Name, OleVariant &Address, OleVariant &ExtractAddress, OleVariant &LaserTray, OleVariant &SingleLabel, OleVariant &Row, OleVariant &Column) = 0 ;
	virtual HRESULT __safecall LabelOptions(void) = 0 ;
	virtual HRESULT __safecall CreateNewDocument(OleVariant &Name, OleVariant &Address, OleVariant &AutoText, OleVariant &ExtractAddress, OleVariant &LaserTray, OleVariant &PrintEPostageLabel, OleVariant &Vertical, _di__Document &CreateNewDocument_result) = 0 ;
	virtual HRESULT __safecall PrintOut(OleVariant &Name, OleVariant &Address, OleVariant &ExtractAddress, OleVariant &LaserTray, OleVariant &SingleLabel, OleVariant &Row, OleVariant &Column, OleVariant &PrintEPostageLabel, OleVariant &Vertical) = 0 ;
	virtual HRESULT __safecall Get_Vertical(Word &Get_Vertical_result) = 0 ;
	virtual HRESULT __safecall Set_Vertical(Word prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DefaultPrintBarCode() { Word r; HRESULT hr = Get_DefaultPrintBarCode(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DefaultPrintBarCode = {read=_scw_Get_DefaultPrintBarCode, write=Set_DefaultPrintBarCode};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_DefaultLaserTray() { Activex::TOleEnum r; HRESULT hr = Get_DefaultLaserTray(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum DefaultLaserTray = {read=_scw_Get_DefaultLaserTray, write=Set_DefaultLaserTray};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_CustomLabels _scw_Get_CustomLabels() { _di_CustomLabels r; HRESULT hr = Get_CustomLabels(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_CustomLabels CustomLabels = {read=_scw_Get_CustomLabels};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_DefaultLabelName() { WideString r; HRESULT hr = Get_DefaultLabelName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString DefaultLabelName = {read=_scw_Get_DefaultLabelName, write=Set_DefaultLabelName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Vertical() { Word r; HRESULT hr = Get_Vertical(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Vertical = {read=_scw_Get_Vertical, write=Set_Vertical};
};

__dispinterface MailingLabelDisp;
typedef System::DelphiInterface<MailingLabelDisp> _di_MailingLabelDisp;
__dispinterface INTERFACE_UUID("{00020917-0000-0000-C000-000000000046}") MailingLabelDisp  : public IDispatch 
{
	
};

__interface CustomLabel;
typedef System::DelphiInterface<CustomLabel> _di_CustomLabel;
__interface INTERFACE_UUID("{00020916-0000-0000-C000-000000000046}") CustomLabels  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_CustomLabel &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const WideString Name, OleVariant &DotMatrix, _di_CustomLabel &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface CustomLabelsDisp;
typedef System::DelphiInterface<CustomLabelsDisp> _di_CustomLabelsDisp;
__dispinterface INTERFACE_UUID("{00020916-0000-0000-C000-000000000046}") CustomLabelsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020915-0000-0000-C000-000000000046}") CustomLabel  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Set_Name(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_TopMargin(float &Get_TopMargin_result) = 0 ;
	virtual HRESULT __safecall Set_TopMargin(float prop) = 0 ;
	virtual HRESULT __safecall Get_SideMargin(float &Get_SideMargin_result) = 0 ;
	virtual HRESULT __safecall Set_SideMargin(float prop) = 0 ;
	virtual HRESULT __safecall Get_Height(float &Get_Height_result) = 0 ;
	virtual HRESULT __safecall Set_Height(float prop) = 0 ;
	virtual HRESULT __safecall Get_Width(float &Get_Width_result) = 0 ;
	virtual HRESULT __safecall Set_Width(float prop) = 0 ;
	virtual HRESULT __safecall Get_VerticalPitch(float &Get_VerticalPitch_result) = 0 ;
	virtual HRESULT __safecall Set_VerticalPitch(float prop) = 0 ;
	virtual HRESULT __safecall Get_HorizontalPitch(float &Get_HorizontalPitch_result) = 0 ;
	virtual HRESULT __safecall Set_HorizontalPitch(float prop) = 0 ;
	virtual HRESULT __safecall Get_NumberAcross(int &Get_NumberAcross_result) = 0 ;
	virtual HRESULT __safecall Set_NumberAcross(int prop) = 0 ;
	virtual HRESULT __safecall Get_NumberDown(int &Get_NumberDown_result) = 0 ;
	virtual HRESULT __safecall Set_NumberDown(int prop) = 0 ;
	virtual HRESULT __safecall Get_DotMatrix(Word &Get_DotMatrix_result) = 0 ;
	virtual HRESULT __safecall Get_PageSize(Activex::TOleEnum &Get_PageSize_result) = 0 ;
	virtual HRESULT __safecall Set_PageSize(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Valid(Word &Get_Valid_result) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name, write=Set_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_TopMargin() { float r; HRESULT hr = Get_TopMargin(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float TopMargin = {read=_scw_Get_TopMargin, write=Set_TopMargin};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_SideMargin() { float r; HRESULT hr = Get_SideMargin(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float SideMargin = {read=_scw_Get_SideMargin, write=Set_SideMargin};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Height() { float r; HRESULT hr = Get_Height(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Height = {read=_scw_Get_Height, write=Set_Height};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Width() { float r; HRESULT hr = Get_Width(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Width = {read=_scw_Get_Width, write=Set_Width};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_VerticalPitch() { float r; HRESULT hr = Get_VerticalPitch(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float VerticalPitch = {read=_scw_Get_VerticalPitch, write=Set_VerticalPitch};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_HorizontalPitch() { float r; HRESULT hr = Get_HorizontalPitch(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float HorizontalPitch = {read=_scw_Get_HorizontalPitch, write=Set_HorizontalPitch};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_NumberAcross() { int r; HRESULT hr = Get_NumberAcross(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int NumberAcross = {read=_scw_Get_NumberAcross, write=Set_NumberAcross};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_NumberDown() { int r; HRESULT hr = Get_NumberDown(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int NumberDown = {read=_scw_Get_NumberDown, write=Set_NumberDown};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DotMatrix() { Word r; HRESULT hr = Get_DotMatrix(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DotMatrix = {read=_scw_Get_DotMatrix};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_PageSize() { Activex::TOleEnum r; HRESULT hr = Get_PageSize(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum PageSize = {read=_scw_Get_PageSize, write=Set_PageSize};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Valid() { Word r; HRESULT hr = Get_Valid(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Valid = {read=_scw_Get_Valid};
};

__dispinterface CustomLabelDisp;
typedef System::DelphiInterface<CustomLabelDisp> _di_CustomLabelDisp;
__dispinterface INTERFACE_UUID("{00020915-0000-0000-C000-000000000046}") CustomLabelDisp  : public IDispatch 
{
	
};

__interface TableOfContents;
typedef System::DelphiInterface<TableOfContents> _di_TableOfContents;
__interface INTERFACE_UUID("{00020914-0000-0000-C000-000000000046}") TablesOfContents  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Format(Activex::TOleEnum &Get_Format_result) = 0 ;
	virtual HRESULT __safecall Set_Format(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_TableOfContents &Item_result) = 0 ;
	virtual HRESULT __safecall AddOld(const _di_Range Range, OleVariant &UseHeadingStyles, OleVariant &UpperHeadingLevel, OleVariant &LowerHeadingLevel, OleVariant &UseFields, OleVariant &TableID, OleVariant &RightAlignPageNumbers, OleVariant &IncludePageNumbers, OleVariant &AddedStyles, _di_TableOfContents &AddOld_result) = 0 ;
	virtual HRESULT __safecall MarkEntry(const _di_Range Range, OleVariant &Entry, OleVariant &EntryAutoText, OleVariant &TableID, OleVariant &Level, _di_Field &MarkEntry_result) = 0 ;
	virtual HRESULT __safecall Add2000(const _di_Range Range, OleVariant &UseHeadingStyles, OleVariant &UpperHeadingLevel, OleVariant &LowerHeadingLevel, OleVariant &UseFields, OleVariant &TableID, OleVariant &RightAlignPageNumbers, OleVariant &IncludePageNumbers, OleVariant &AddedStyles, OleVariant &UseHyperlinks, OleVariant &HidePageNumbersInWeb, _di_TableOfContents &Add2000_result) = 0 ;
	virtual HRESULT __safecall Add(const _di_Range Range, OleVariant &UseHeadingStyles, OleVariant &UpperHeadingLevel, OleVariant &LowerHeadingLevel, OleVariant &UseFields, OleVariant &TableID, OleVariant &RightAlignPageNumbers, OleVariant &IncludePageNumbers, OleVariant &AddedStyles, OleVariant &UseHyperlinks, OleVariant &HidePageNumbersInWeb, OleVariant &UseOutlineLevels, _di_TableOfContents &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Format() { Activex::TOleEnum r; HRESULT hr = Get_Format(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Format = {read=_scw_Get_Format, write=Set_Format};
};

__dispinterface TablesOfContentsDisp;
typedef System::DelphiInterface<TablesOfContentsDisp> _di_TablesOfContentsDisp;
__dispinterface INTERFACE_UUID("{00020914-0000-0000-C000-000000000046}") TablesOfContentsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020913-0000-0000-C000-000000000046}") TableOfContents  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_UseHeadingStyles(Word &Get_UseHeadingStyles_result) = 0 ;
	virtual HRESULT __safecall Set_UseHeadingStyles(Word prop) = 0 ;
	virtual HRESULT __safecall Get_UseFields(Word &Get_UseFields_result) = 0 ;
	virtual HRESULT __safecall Set_UseFields(Word prop) = 0 ;
	virtual HRESULT __safecall Get_UpperHeadingLevel(int &Get_UpperHeadingLevel_result) = 0 ;
	virtual HRESULT __safecall Set_UpperHeadingLevel(int prop) = 0 ;
	virtual HRESULT __safecall Get_LowerHeadingLevel(int &Get_LowerHeadingLevel_result) = 0 ;
	virtual HRESULT __safecall Set_LowerHeadingLevel(int prop) = 0 ;
	virtual HRESULT __safecall Get_TableID(WideString &Get_TableID_result) = 0 ;
	virtual HRESULT __safecall Set_TableID(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_HeadingStyles(_di_HeadingStyles &Get_HeadingStyles_result) = 0 ;
	virtual HRESULT __safecall Get_RightAlignPageNumbers(Word &Get_RightAlignPageNumbers_result) = 0 ;
	virtual HRESULT __safecall Set_RightAlignPageNumbers(Word prop) = 0 ;
	virtual HRESULT __safecall Get_IncludePageNumbers(Word &Get_IncludePageNumbers_result) = 0 ;
	virtual HRESULT __safecall Set_IncludePageNumbers(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Get_TabLeader(Activex::TOleEnum &Get_TabLeader_result) = 0 ;
	virtual HRESULT __safecall Set_TabLeader(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall UpdatePageNumbers(void) = 0 ;
	virtual HRESULT __safecall Update(void) = 0 ;
	virtual HRESULT __safecall Get_UseHyperlinks(Word &Get_UseHyperlinks_result) = 0 ;
	virtual HRESULT __safecall Set_UseHyperlinks(Word prop) = 0 ;
	virtual HRESULT __safecall Get_HidePageNumbersInWeb(Word &Get_HidePageNumbersInWeb_result) = 0 ;
	virtual HRESULT __safecall Set_HidePageNumbersInWeb(Word prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_UseHeadingStyles() { Word r; HRESULT hr = Get_UseHeadingStyles(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word UseHeadingStyles = {read=_scw_Get_UseHeadingStyles, write=Set_UseHeadingStyles};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_UseFields() { Word r; HRESULT hr = Get_UseFields(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word UseFields = {read=_scw_Get_UseFields, write=Set_UseFields};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_UpperHeadingLevel() { int r; HRESULT hr = Get_UpperHeadingLevel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int UpperHeadingLevel = {read=_scw_Get_UpperHeadingLevel, write=Set_UpperHeadingLevel};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_LowerHeadingLevel() { int r; HRESULT hr = Get_LowerHeadingLevel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int LowerHeadingLevel = {read=_scw_Get_LowerHeadingLevel, write=Set_LowerHeadingLevel};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_TableID() { WideString r; HRESULT hr = Get_TableID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString TableID = {read=_scw_Get_TableID, write=Set_TableID};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_HeadingStyles _scw_Get_HeadingStyles() { _di_HeadingStyles r; HRESULT hr = Get_HeadingStyles(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_HeadingStyles HeadingStyles = {read=_scw_Get_HeadingStyles};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_RightAlignPageNumbers() { Word r; HRESULT hr = Get_RightAlignPageNumbers(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word RightAlignPageNumbers = {read=_scw_Get_RightAlignPageNumbers, write=Set_RightAlignPageNumbers};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IncludePageNumbers() { Word r; HRESULT hr = Get_IncludePageNumbers(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IncludePageNumbers = {read=_scw_Get_IncludePageNumbers, write=Set_IncludePageNumbers};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_TabLeader() { Activex::TOleEnum r; HRESULT hr = Get_TabLeader(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum TabLeader = {read=_scw_Get_TabLeader, write=Set_TabLeader};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_UseHyperlinks() { Word r; HRESULT hr = Get_UseHyperlinks(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word UseHyperlinks = {read=_scw_Get_UseHyperlinks, write=Set_UseHyperlinks};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_HidePageNumbersInWeb() { Word r; HRESULT hr = Get_HidePageNumbersInWeb(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word HidePageNumbersInWeb = {read=_scw_Get_HidePageNumbersInWeb, write=Set_HidePageNumbersInWeb};
};

__dispinterface TableOfContentsDisp;
typedef System::DelphiInterface<TableOfContentsDisp> _di_TableOfContentsDisp;
__dispinterface INTERFACE_UUID("{00020913-0000-0000-C000-000000000046}") TableOfContentsDisp  : public IDispatch 
{
	
};

__interface TableOfAuthorities;
typedef System::DelphiInterface<TableOfAuthorities> _di_TableOfAuthorities;
__interface INTERFACE_UUID("{00020912-0000-0000-C000-000000000046}") TablesOfAuthorities  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Format(Activex::TOleEnum &Get_Format_result) = 0 ;
	virtual HRESULT __safecall Set_Format(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_TableOfAuthorities &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const _di_Range Range, OleVariant &Category, OleVariant &Bookmark, OleVariant &Passim, OleVariant &KeepEntryFormatting, OleVariant &Separator, OleVariant &IncludeSequenceName, OleVariant &EntrySeparator, OleVariant &PageRangeSeparator, OleVariant &IncludeCategoryHeader, OleVariant &PageNumberSeparator, _di_TableOfAuthorities &Add_result) = 0 ;
	virtual HRESULT __safecall NextCitation(const WideString ShortCitation) = 0 ;
	virtual HRESULT __safecall MarkCitation(const _di_Range Range, const WideString ShortCitation, OleVariant &LongCitation, OleVariant &LongCitationAutoText, OleVariant &Category, _di_Field &MarkCitation_result) = 0 ;
	virtual HRESULT __safecall MarkAllCitations(const WideString ShortCitation, OleVariant &LongCitation, OleVariant &LongCitationAutoText, OleVariant &Category) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Format() { Activex::TOleEnum r; HRESULT hr = Get_Format(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Format = {read=_scw_Get_Format, write=Set_Format};
};

__dispinterface TablesOfAuthoritiesDisp;
typedef System::DelphiInterface<TablesOfAuthoritiesDisp> _di_TablesOfAuthoritiesDisp;
__dispinterface INTERFACE_UUID("{00020912-0000-0000-C000-000000000046}") TablesOfAuthoritiesDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020911-0000-0000-C000-000000000046}") TableOfAuthorities  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Passim(Word &Get_Passim_result) = 0 ;
	virtual HRESULT __safecall Set_Passim(Word prop) = 0 ;
	virtual HRESULT __safecall Get_KeepEntryFormatting(Word &Get_KeepEntryFormatting_result) = 0 ;
	virtual HRESULT __safecall Set_KeepEntryFormatting(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Category(int &Get_Category_result) = 0 ;
	virtual HRESULT __safecall Set_Category(int prop) = 0 ;
	virtual HRESULT __safecall Get_Bookmark(WideString &Get_Bookmark_result) = 0 ;
	virtual HRESULT __safecall Set_Bookmark(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Separator(WideString &Get_Separator_result) = 0 ;
	virtual HRESULT __safecall Set_Separator(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_IncludeSequenceName(WideString &Get_IncludeSequenceName_result) = 0 ;
	virtual HRESULT __safecall Set_IncludeSequenceName(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_EntrySeparator(WideString &Get_EntrySeparator_result) = 0 ;
	virtual HRESULT __safecall Set_EntrySeparator(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_PageRangeSeparator(WideString &Get_PageRangeSeparator_result) = 0 ;
	virtual HRESULT __safecall Set_PageRangeSeparator(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_IncludeCategoryHeader(Word &Get_IncludeCategoryHeader_result) = 0 ;
	virtual HRESULT __safecall Set_IncludeCategoryHeader(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PageNumberSeparator(WideString &Get_PageNumberSeparator_result) = 0 ;
	virtual HRESULT __safecall Set_PageNumberSeparator(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Get_TabLeader(Activex::TOleEnum &Get_TabLeader_result) = 0 ;
	virtual HRESULT __safecall Set_TabLeader(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall Update(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Passim() { Word r; HRESULT hr = Get_Passim(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Passim = {read=_scw_Get_Passim, write=Set_Passim};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_KeepEntryFormatting() { Word r; HRESULT hr = Get_KeepEntryFormatting(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word KeepEntryFormatting = {read=_scw_Get_KeepEntryFormatting, write=Set_KeepEntryFormatting};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Category() { int r; HRESULT hr = Get_Category(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Category = {read=_scw_Get_Category, write=Set_Category};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Bookmark() { WideString r; HRESULT hr = Get_Bookmark(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Bookmark = {read=_scw_Get_Bookmark, write=Set_Bookmark};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Separator() { WideString r; HRESULT hr = Get_Separator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Separator = {read=_scw_Get_Separator, write=Set_Separator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_IncludeSequenceName() { WideString r; HRESULT hr = Get_IncludeSequenceName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString IncludeSequenceName = {read=_scw_Get_IncludeSequenceName, write=Set_IncludeSequenceName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_EntrySeparator() { WideString r; HRESULT hr = Get_EntrySeparator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString EntrySeparator = {read=_scw_Get_EntrySeparator, write=Set_EntrySeparator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_PageRangeSeparator() { WideString r; HRESULT hr = Get_PageRangeSeparator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString PageRangeSeparator = {read=_scw_Get_PageRangeSeparator, write=Set_PageRangeSeparator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IncludeCategoryHeader() { Word r; HRESULT hr = Get_IncludeCategoryHeader(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IncludeCategoryHeader = {read=_scw_Get_IncludeCategoryHeader, write=Set_IncludeCategoryHeader};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_PageNumberSeparator() { WideString r; HRESULT hr = Get_PageNumberSeparator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString PageNumberSeparator = {read=_scw_Get_PageNumberSeparator, write=Set_PageNumberSeparator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_TabLeader() { Activex::TOleEnum r; HRESULT hr = Get_TabLeader(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum TabLeader = {read=_scw_Get_TabLeader, write=Set_TabLeader};
};

__dispinterface TableOfAuthoritiesDisp;
typedef System::DelphiInterface<TableOfAuthoritiesDisp> _di_TableOfAuthoritiesDisp;
__dispinterface INTERFACE_UUID("{00020911-0000-0000-C000-000000000046}") TableOfAuthoritiesDisp  : public IDispatch 
{
	
};

__interface Dialog;
typedef System::DelphiInterface<Dialog> _di_Dialog;
__interface INTERFACE_UUID("{00020910-0000-0000-C000-000000000046}") Dialogs  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(Activex::TOleEnum Index, _di_Dialog &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface DialogsDisp;
typedef System::DelphiInterface<DialogsDisp> _di_DialogsDisp;
__dispinterface INTERFACE_UUID("{00020910-0000-0000-C000-000000000046}") DialogsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209B8-0000-0000-C000-000000000046}") Dialog  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_DefaultTab(Activex::TOleEnum &Get_DefaultTab_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultTab(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Show(OleVariant &TimeOut, int &Show_result) = 0 ;
	virtual HRESULT __safecall Display(OleVariant &TimeOut, int &Display_result) = 0 ;
	virtual HRESULT __safecall Execute(void) = 0 ;
	virtual HRESULT __safecall Update(void) = 0 ;
	virtual HRESULT __safecall Get_CommandName(WideString &Get_CommandName_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_DefaultTab() { Activex::TOleEnum r; HRESULT hr = Get_DefaultTab(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum DefaultTab = {read=_scw_Get_DefaultTab, write=Set_DefaultTab};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_CommandName() { WideString r; HRESULT hr = Get_CommandName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString CommandName = {read=_scw_Get_CommandName};
};

__dispinterface DialogDisp;
typedef System::DelphiInterface<DialogDisp> _di_DialogDisp;
__dispinterface INTERFACE_UUID("{000209B8-0000-0000-C000-000000000046}") DialogDisp  : public IDispatch 
{
	
};

__interface LineNumbering;
typedef System::DelphiInterface<LineNumbering> _di_LineNumbering;
__interface TextColumns;
typedef System::DelphiInterface<TextColumns> _di_TextColumns;
__interface INTERFACE_UUID("{00020971-0000-0000-C000-000000000046}") PageSetup  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_TopMargin(float &Get_TopMargin_result) = 0 ;
	virtual HRESULT __safecall Set_TopMargin(float prop) = 0 ;
	virtual HRESULT __safecall Get_BottomMargin(float &Get_BottomMargin_result) = 0 ;
	virtual HRESULT __safecall Set_BottomMargin(float prop) = 0 ;
	virtual HRESULT __safecall Get_LeftMargin(float &Get_LeftMargin_result) = 0 ;
	virtual HRESULT __safecall Set_LeftMargin(float prop) = 0 ;
	virtual HRESULT __safecall Get_RightMargin(float &Get_RightMargin_result) = 0 ;
	virtual HRESULT __safecall Set_RightMargin(float prop) = 0 ;
	virtual HRESULT __safecall Get_Gutter(float &Get_Gutter_result) = 0 ;
	virtual HRESULT __safecall Set_Gutter(float prop) = 0 ;
	virtual HRESULT __safecall Get_PageWidth(float &Get_PageWidth_result) = 0 ;
	virtual HRESULT __safecall Set_PageWidth(float prop) = 0 ;
	virtual HRESULT __safecall Get_PageHeight(float &Get_PageHeight_result) = 0 ;
	virtual HRESULT __safecall Set_PageHeight(float prop) = 0 ;
	virtual HRESULT __safecall Get_Orientation(Activex::TOleEnum &Get_Orientation_result) = 0 ;
	virtual HRESULT __safecall Set_Orientation(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_FirstPageTray(Activex::TOleEnum &Get_FirstPageTray_result) = 0 ;
	virtual HRESULT __safecall Set_FirstPageTray(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_OtherPagesTray(Activex::TOleEnum &Get_OtherPagesTray_result) = 0 ;
	virtual HRESULT __safecall Set_OtherPagesTray(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_VerticalAlignment(Activex::TOleEnum &Get_VerticalAlignment_result) = 0 ;
	virtual HRESULT __safecall Set_VerticalAlignment(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_MirrorMargins(int &Get_MirrorMargins_result) = 0 ;
	virtual HRESULT __safecall Set_MirrorMargins(int prop) = 0 ;
	virtual HRESULT __safecall Get_HeaderDistance(float &Get_HeaderDistance_result) = 0 ;
	virtual HRESULT __safecall Set_HeaderDistance(float prop) = 0 ;
	virtual HRESULT __safecall Get_FooterDistance(float &Get_FooterDistance_result) = 0 ;
	virtual HRESULT __safecall Set_FooterDistance(float prop) = 0 ;
	virtual HRESULT __safecall Get_SectionStart(Activex::TOleEnum &Get_SectionStart_result) = 0 ;
	virtual HRESULT __safecall Set_SectionStart(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_OddAndEvenPagesHeaderFooter(int &Get_OddAndEvenPagesHeaderFooter_result) = 0 ;
	virtual HRESULT __safecall Set_OddAndEvenPagesHeaderFooter(int prop) = 0 ;
	virtual HRESULT __safecall Get_DifferentFirstPageHeaderFooter(int &Get_DifferentFirstPageHeaderFooter_result) = 0 ;
	virtual HRESULT __safecall Set_DifferentFirstPageHeaderFooter(int prop) = 0 ;
	virtual HRESULT __safecall Get_SuppressEndnotes(int &Get_SuppressEndnotes_result) = 0 ;
	virtual HRESULT __safecall Set_SuppressEndnotes(int prop) = 0 ;
	virtual HRESULT __safecall Get_LineNumbering(_di_LineNumbering &Get_LineNumbering_result) = 0 ;
	virtual HRESULT __safecall Set_LineNumbering(const _di_LineNumbering prop) = 0 ;
	virtual HRESULT __safecall Get_TextColumns(_di_TextColumns &Get_TextColumns_result) = 0 ;
	virtual HRESULT __safecall Set_TextColumns(const _di_TextColumns prop) = 0 ;
	virtual HRESULT __safecall Get_PaperSize(Activex::TOleEnum &Get_PaperSize_result) = 0 ;
	virtual HRESULT __safecall Set_PaperSize(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_TwoPagesOnOne(Word &Get_TwoPagesOnOne_result) = 0 ;
	virtual HRESULT __safecall Set_TwoPagesOnOne(Word prop) = 0 ;
	virtual HRESULT __safecall Get_GutterOnTop(Word &Get_GutterOnTop_result) = 0 ;
	virtual HRESULT __safecall Set_GutterOnTop(Word prop) = 0 ;
	virtual HRESULT __safecall Get_CharsLine(float &Get_CharsLine_result) = 0 ;
	virtual HRESULT __safecall Set_CharsLine(float prop) = 0 ;
	virtual HRESULT __safecall Get_LinesPage(float &Get_LinesPage_result) = 0 ;
	virtual HRESULT __safecall Set_LinesPage(float prop) = 0 ;
	virtual HRESULT __safecall Get_ShowGrid(Word &Get_ShowGrid_result) = 0 ;
	virtual HRESULT __safecall Set_ShowGrid(Word prop) = 0 ;
	virtual HRESULT __safecall TogglePortrait(void) = 0 ;
	virtual HRESULT __safecall SetAsTemplateDefault(void) = 0 ;
	virtual HRESULT __safecall Get_GutterStyle(Activex::TOleEnum &Get_GutterStyle_result) = 0 ;
	virtual HRESULT __safecall Set_GutterStyle(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_SectionDirection(Activex::TOleEnum &Get_SectionDirection_result) = 0 ;
	virtual HRESULT __safecall Set_SectionDirection(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_LayoutMode(Activex::TOleEnum &Get_LayoutMode_result) = 0 ;
	virtual HRESULT __safecall Set_LayoutMode(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_GutterPos(Activex::TOleEnum &Get_GutterPos_result) = 0 ;
	virtual HRESULT __safecall Set_GutterPos(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_BookFoldPrinting(Word &Get_BookFoldPrinting_result) = 0 ;
	virtual HRESULT __safecall Set_BookFoldPrinting(Word prop) = 0 ;
	virtual HRESULT __safecall Get_BookFoldRevPrinting(Word &Get_BookFoldRevPrinting_result) = 0 ;
	virtual HRESULT __safecall Set_BookFoldRevPrinting(Word prop) = 0 ;
	virtual HRESULT __safecall Get_BookFoldPrintingSheets(int &Get_BookFoldPrintingSheets_result) = 0 ;
	virtual HRESULT __safecall Set_BookFoldPrintingSheets(int prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_TopMargin() { float r; HRESULT hr = Get_TopMargin(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float TopMargin = {read=_scw_Get_TopMargin, write=Set_TopMargin};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_BottomMargin() { float r; HRESULT hr = Get_BottomMargin(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float BottomMargin = {read=_scw_Get_BottomMargin, write=Set_BottomMargin};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_LeftMargin() { float r; HRESULT hr = Get_LeftMargin(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float LeftMargin = {read=_scw_Get_LeftMargin, write=Set_LeftMargin};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_RightMargin() { float r; HRESULT hr = Get_RightMargin(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float RightMargin = {read=_scw_Get_RightMargin, write=Set_RightMargin};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Gutter() { float r; HRESULT hr = Get_Gutter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Gutter = {read=_scw_Get_Gutter, write=Set_Gutter};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_PageWidth() { float r; HRESULT hr = Get_PageWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float PageWidth = {read=_scw_Get_PageWidth, write=Set_PageWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_PageHeight() { float r; HRESULT hr = Get_PageHeight(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float PageHeight = {read=_scw_Get_PageHeight, write=Set_PageHeight};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Orientation() { Activex::TOleEnum r; HRESULT hr = Get_Orientation(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Orientation = {read=_scw_Get_Orientation, write=Set_Orientation};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_FirstPageTray() { Activex::TOleEnum r; HRESULT hr = Get_FirstPageTray(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum FirstPageTray = {read=_scw_Get_FirstPageTray, write=Set_FirstPageTray};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_OtherPagesTray() { Activex::TOleEnum r; HRESULT hr = Get_OtherPagesTray(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum OtherPagesTray = {read=_scw_Get_OtherPagesTray, write=Set_OtherPagesTray};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_VerticalAlignment() { Activex::TOleEnum r; HRESULT hr = Get_VerticalAlignment(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum VerticalAlignment = {read=_scw_Get_VerticalAlignment, write=Set_VerticalAlignment};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_MirrorMargins() { int r; HRESULT hr = Get_MirrorMargins(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int MirrorMargins = {read=_scw_Get_MirrorMargins, write=Set_MirrorMargins};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_HeaderDistance() { float r; HRESULT hr = Get_HeaderDistance(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float HeaderDistance = {read=_scw_Get_HeaderDistance, write=Set_HeaderDistance};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_FooterDistance() { float r; HRESULT hr = Get_FooterDistance(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float FooterDistance = {read=_scw_Get_FooterDistance, write=Set_FooterDistance};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_SectionStart() { Activex::TOleEnum r; HRESULT hr = Get_SectionStart(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum SectionStart = {read=_scw_Get_SectionStart, write=Set_SectionStart};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_OddAndEvenPagesHeaderFooter() { int r; HRESULT hr = Get_OddAndEvenPagesHeaderFooter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int OddAndEvenPagesHeaderFooter = {read=_scw_Get_OddAndEvenPagesHeaderFooter, write=Set_OddAndEvenPagesHeaderFooter};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_DifferentFirstPageHeaderFooter() { int r; HRESULT hr = Get_DifferentFirstPageHeaderFooter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int DifferentFirstPageHeaderFooter = {read=_scw_Get_DifferentFirstPageHeaderFooter, write=Set_DifferentFirstPageHeaderFooter};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_SuppressEndnotes() { int r; HRESULT hr = Get_SuppressEndnotes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int SuppressEndnotes = {read=_scw_Get_SuppressEndnotes, write=Set_SuppressEndnotes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_LineNumbering _scw_Get_LineNumbering() { _di_LineNumbering r; HRESULT hr = Get_LineNumbering(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_LineNumbering LineNumbering = {read=_scw_Get_LineNumbering, write=Set_LineNumbering};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_TextColumns _scw_Get_TextColumns() { _di_TextColumns r; HRESULT hr = Get_TextColumns(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_TextColumns TextColumns = {read=_scw_Get_TextColumns, write=Set_TextColumns};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_PaperSize() { Activex::TOleEnum r; HRESULT hr = Get_PaperSize(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum PaperSize = {read=_scw_Get_PaperSize, write=Set_PaperSize};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_TwoPagesOnOne() { Word r; HRESULT hr = Get_TwoPagesOnOne(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word TwoPagesOnOne = {read=_scw_Get_TwoPagesOnOne, write=Set_TwoPagesOnOne};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_GutterOnTop() { Word r; HRESULT hr = Get_GutterOnTop(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word GutterOnTop = {read=_scw_Get_GutterOnTop, write=Set_GutterOnTop};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_CharsLine() { float r; HRESULT hr = Get_CharsLine(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float CharsLine = {read=_scw_Get_CharsLine, write=Set_CharsLine};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_LinesPage() { float r; HRESULT hr = Get_LinesPage(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float LinesPage = {read=_scw_Get_LinesPage, write=Set_LinesPage};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowGrid() { Word r; HRESULT hr = Get_ShowGrid(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowGrid = {read=_scw_Get_ShowGrid, write=Set_ShowGrid};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_GutterStyle() { Activex::TOleEnum r; HRESULT hr = Get_GutterStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum GutterStyle = {read=_scw_Get_GutterStyle, write=Set_GutterStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_SectionDirection() { Activex::TOleEnum r; HRESULT hr = Get_SectionDirection(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum SectionDirection = {read=_scw_Get_SectionDirection, write=Set_SectionDirection};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LayoutMode() { Activex::TOleEnum r; HRESULT hr = Get_LayoutMode(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LayoutMode = {read=_scw_Get_LayoutMode, write=Set_LayoutMode};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_GutterPos() { Activex::TOleEnum r; HRESULT hr = Get_GutterPos(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum GutterPos = {read=_scw_Get_GutterPos, write=Set_GutterPos};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_BookFoldPrinting() { Word r; HRESULT hr = Get_BookFoldPrinting(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word BookFoldPrinting = {read=_scw_Get_BookFoldPrinting, write=Set_BookFoldPrinting};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_BookFoldRevPrinting() { Word r; HRESULT hr = Get_BookFoldRevPrinting(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word BookFoldRevPrinting = {read=_scw_Get_BookFoldRevPrinting, write=Set_BookFoldRevPrinting};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_BookFoldPrintingSheets() { int r; HRESULT hr = Get_BookFoldPrintingSheets(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int BookFoldPrintingSheets = {read=_scw_Get_BookFoldPrintingSheets, write=Set_BookFoldPrintingSheets};
};

__dispinterface PageSetupDisp;
typedef System::DelphiInterface<PageSetupDisp> _di_PageSetupDisp;
__dispinterface INTERFACE_UUID("{00020971-0000-0000-C000-000000000046}") PageSetupDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020972-0000-0000-C000-000000000046}") LineNumbering  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_RestartMode(Activex::TOleEnum &Get_RestartMode_result) = 0 ;
	virtual HRESULT __safecall Set_RestartMode(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_StartingNumber(int &Get_StartingNumber_result) = 0 ;
	virtual HRESULT __safecall Set_StartingNumber(int prop) = 0 ;
	virtual HRESULT __safecall Get_DistanceFromText(float &Get_DistanceFromText_result) = 0 ;
	virtual HRESULT __safecall Set_DistanceFromText(float prop) = 0 ;
	virtual HRESULT __safecall Get_CountBy(int &Get_CountBy_result) = 0 ;
	virtual HRESULT __safecall Set_CountBy(int prop) = 0 ;
	virtual HRESULT __safecall Get_Active(int &Get_Active_result) = 0 ;
	virtual HRESULT __safecall Set_Active(int prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_RestartMode() { Activex::TOleEnum r; HRESULT hr = Get_RestartMode(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum RestartMode = {read=_scw_Get_RestartMode, write=Set_RestartMode};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_StartingNumber() { int r; HRESULT hr = Get_StartingNumber(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int StartingNumber = {read=_scw_Get_StartingNumber, write=Set_StartingNumber};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_DistanceFromText() { float r; HRESULT hr = Get_DistanceFromText(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float DistanceFromText = {read=_scw_Get_DistanceFromText, write=Set_DistanceFromText};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_CountBy() { int r; HRESULT hr = Get_CountBy(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int CountBy = {read=_scw_Get_CountBy, write=Set_CountBy};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Active() { int r; HRESULT hr = Get_Active(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Active = {read=_scw_Get_Active, write=Set_Active};
};

__dispinterface LineNumberingDisp;
typedef System::DelphiInterface<LineNumberingDisp> _di_LineNumberingDisp;
__dispinterface INTERFACE_UUID("{00020972-0000-0000-C000-000000000046}") LineNumberingDisp  : public IDispatch 
{
	
};

__interface TextColumn;
typedef System::DelphiInterface<TextColumn> _di_TextColumn;
__interface INTERFACE_UUID("{00020973-0000-0000-C000-000000000046}") TextColumns  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_EvenlySpaced(int &Get_EvenlySpaced_result) = 0 ;
	virtual HRESULT __safecall Set_EvenlySpaced(int prop) = 0 ;
	virtual HRESULT __safecall Get_LineBetween(int &Get_LineBetween_result) = 0 ;
	virtual HRESULT __safecall Set_LineBetween(int prop) = 0 ;
	virtual HRESULT __safecall Get_Width(float &Get_Width_result) = 0 ;
	virtual HRESULT __safecall Set_Width(float prop) = 0 ;
	virtual HRESULT __safecall Get_Spacing(float &Get_Spacing_result) = 0 ;
	virtual HRESULT __safecall Set_Spacing(float prop) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_TextColumn &Item_result) = 0 ;
	virtual HRESULT __safecall Add(OleVariant &Width, OleVariant &Spacing, OleVariant &EvenlySpaced, _di_TextColumn &Add_result) = 0 ;
	virtual HRESULT __safecall SetCount(int NumColumns) = 0 ;
	virtual HRESULT __safecall Get_FlowDirection(Activex::TOleEnum &Get_FlowDirection_result) = 0 ;
	virtual HRESULT __safecall Set_FlowDirection(Activex::TOleEnum prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_EvenlySpaced() { int r; HRESULT hr = Get_EvenlySpaced(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int EvenlySpaced = {read=_scw_Get_EvenlySpaced, write=Set_EvenlySpaced};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_LineBetween() { int r; HRESULT hr = Get_LineBetween(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int LineBetween = {read=_scw_Get_LineBetween, write=Set_LineBetween};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Width() { float r; HRESULT hr = Get_Width(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Width = {read=_scw_Get_Width, write=Set_Width};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Spacing() { float r; HRESULT hr = Get_Spacing(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Spacing = {read=_scw_Get_Spacing, write=Set_Spacing};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_FlowDirection() { Activex::TOleEnum r; HRESULT hr = Get_FlowDirection(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum FlowDirection = {read=_scw_Get_FlowDirection, write=Set_FlowDirection};
};

__dispinterface TextColumnsDisp;
typedef System::DelphiInterface<TextColumnsDisp> _di_TextColumnsDisp;
__dispinterface INTERFACE_UUID("{00020973-0000-0000-C000-000000000046}") TextColumnsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020974-0000-0000-C000-000000000046}") TextColumn  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Width(float &Get_Width_result) = 0 ;
	virtual HRESULT __safecall Set_Width(float prop) = 0 ;
	virtual HRESULT __safecall Get_SpaceAfter(float &Get_SpaceAfter_result) = 0 ;
	virtual HRESULT __safecall Set_SpaceAfter(float prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Width() { float r; HRESULT hr = Get_Width(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Width = {read=_scw_Get_Width, write=Set_Width};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_SpaceAfter() { float r; HRESULT hr = Get_SpaceAfter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float SpaceAfter = {read=_scw_Get_SpaceAfter, write=Set_SpaceAfter};
};

__dispinterface TextColumnDisp;
typedef System::DelphiInterface<TextColumnDisp> _di_TextColumnDisp;
__dispinterface INTERFACE_UUID("{00020974-0000-0000-C000-000000000046}") TextColumnDisp  : public IDispatch 
{
	
};

__interface HeaderFooter;
typedef System::DelphiInterface<HeaderFooter> _di_HeaderFooter;
__interface Revision;
typedef System::DelphiInterface<Revision> _di_Revision;
__interface INTERFACE_UUID("{00020975-0000-0000-C000-000000000046}") Selection  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Text(WideString &Get_Text_result) = 0 ;
	virtual HRESULT __safecall Set_Text(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_FormattedText(_di_Range &Get_FormattedText_result) = 0 ;
	virtual HRESULT __safecall Set_FormattedText(const _di_Range prop) = 0 ;
	virtual HRESULT __safecall Get_Start(int &Get_Start_result) = 0 ;
	virtual HRESULT __safecall Set_Start(int prop) = 0 ;
	virtual HRESULT __safecall Get_End_(int &Get_End__result) = 0 ;
	virtual HRESULT __safecall Set_End_(int prop) = 0 ;
	virtual HRESULT __safecall Get_Font(_di__Font &Get_Font_result) = 0 ;
	virtual HRESULT __safecall Set_Font(const _di__Font prop) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Get_StoryType(Activex::TOleEnum &Get_StoryType_result) = 0 ;
	virtual HRESULT __safecall Get_Style(OleVariant &Get_Style_result) = 0 ;
	virtual HRESULT __safecall Set_Style(OleVariant &prop) = 0 ;
	virtual HRESULT __safecall Get_Tables(_di_Tables &Get_Tables_result) = 0 ;
	virtual HRESULT __safecall Get_Words(_di_Words &Get_Words_result) = 0 ;
	virtual HRESULT __safecall Get_Sentences(_di_Sentences &Get_Sentences_result) = 0 ;
	virtual HRESULT __safecall Get_Characters(_di_Characters &Get_Characters_result) = 0 ;
	virtual HRESULT __safecall Get_Footnotes(_di_Footnotes &Get_Footnotes_result) = 0 ;
	virtual HRESULT __safecall Get_Endnotes(_di_Endnotes &Get_Endnotes_result) = 0 ;
	virtual HRESULT __safecall Get_Comments(_di_Comments &Get_Comments_result) = 0 ;
	virtual HRESULT __safecall Get_Cells(_di_Cells &Get_Cells_result) = 0 ;
	virtual HRESULT __safecall Get_Sections(_di_Sections &Get_Sections_result) = 0 ;
	virtual HRESULT __safecall Get_Paragraphs(_di_Paragraphs &Get_Paragraphs_result) = 0 ;
	virtual HRESULT __safecall Get_Borders(_di_Borders &Get_Borders_result) = 0 ;
	virtual HRESULT __safecall Set_Borders(const _di_Borders prop) = 0 ;
	virtual HRESULT __safecall Get_Shading(_di_Shading &Get_Shading_result) = 0 ;
	virtual HRESULT __safecall Get_Fields(_di_Fields &Get_Fields_result) = 0 ;
	virtual HRESULT __safecall Get_FormFields(_di_FormFields &Get_FormFields_result) = 0 ;
	virtual HRESULT __safecall Get_Frames(_di_Frames &Get_Frames_result) = 0 ;
	virtual HRESULT __safecall Get_ParagraphFormat(_di__ParagraphFormat &Get_ParagraphFormat_result) = 0 ;
	virtual HRESULT __safecall Set_ParagraphFormat(const _di__ParagraphFormat prop) = 0 ;
	virtual HRESULT __safecall Get_PageSetup(_di_PageSetup &Get_PageSetup_result) = 0 ;
	virtual HRESULT __safecall Set_PageSetup(const _di_PageSetup prop) = 0 ;
	virtual HRESULT __safecall Get_Bookmarks(_di_Bookmarks &Get_Bookmarks_result) = 0 ;
	virtual HRESULT __safecall Get_StoryLength(int &Get_StoryLength_result) = 0 ;
	virtual HRESULT __safecall Get_LanguageID(Activex::TOleEnum &Get_LanguageID_result) = 0 ;
	virtual HRESULT __safecall Set_LanguageID(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_LanguageIDFarEast(Activex::TOleEnum &Get_LanguageIDFarEast_result) = 0 ;
	virtual HRESULT __safecall Set_LanguageIDFarEast(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_LanguageIDOther(Activex::TOleEnum &Get_LanguageIDOther_result) = 0 ;
	virtual HRESULT __safecall Set_LanguageIDOther(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Hyperlinks(_di_Hyperlinks &Get_Hyperlinks_result) = 0 ;
	virtual HRESULT __safecall Get_Columns(_di_Columns &Get_Columns_result) = 0 ;
	virtual HRESULT __safecall Get_Rows(_di_Rows &Get_Rows_result) = 0 ;
	virtual HRESULT __safecall Get_HeaderFooter(_di_HeaderFooter &Get_HeaderFooter_result) = 0 ;
	virtual HRESULT __safecall Get_IsEndOfRowMark(Word &Get_IsEndOfRowMark_result) = 0 ;
	virtual HRESULT __safecall Get_BookmarkID(int &Get_BookmarkID_result) = 0 ;
	virtual HRESULT __safecall Get_PreviousBookmarkID(int &Get_PreviousBookmarkID_result) = 0 ;
	virtual HRESULT __safecall Get_Find(_di_Find &Get_Find_result) = 0 ;
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Get_Information(Activex::TOleEnum Type_, OleVariant &Get_Information_result) = 0 ;
	virtual HRESULT __safecall Get_Flags(Activex::TOleEnum &Get_Flags_result) = 0 ;
	virtual HRESULT __safecall Set_Flags(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Active(Word &Get_Active_result) = 0 ;
	virtual HRESULT __safecall Get_StartIsActive(Word &Get_StartIsActive_result) = 0 ;
	virtual HRESULT __safecall Set_StartIsActive(Word prop) = 0 ;
	virtual HRESULT __safecall Get_IPAtEndOfLine(Word &Get_IPAtEndOfLine_result) = 0 ;
	virtual HRESULT __safecall Get_ExtendMode(Word &Get_ExtendMode_result) = 0 ;
	virtual HRESULT __safecall Set_ExtendMode(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ColumnSelectMode(Word &Get_ColumnSelectMode_result) = 0 ;
	virtual HRESULT __safecall Set_ColumnSelectMode(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Orientation(Activex::TOleEnum &Get_Orientation_result) = 0 ;
	virtual HRESULT __safecall Set_Orientation(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_InlineShapes(_di_InlineShapes &Get_InlineShapes_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Document(_di__Document &Get_Document_result) = 0 ;
	virtual HRESULT __safecall Get_ShapeRange(_di_ShapeRange &Get_ShapeRange_result) = 0 ;
	virtual HRESULT __safecall Select(void) = 0 ;
	virtual HRESULT __safecall SetRange(int Start, int End_) = 0 ;
	virtual HRESULT __safecall Collapse(OleVariant &Direction) = 0 ;
	virtual HRESULT __safecall InsertBefore(const WideString Text) = 0 ;
	virtual HRESULT __safecall InsertAfter(const WideString Text) = 0 ;
	virtual HRESULT __safecall Next(OleVariant &Unit_, OleVariant &Count, _di_Range &Next_result) = 0 ;
	virtual HRESULT __safecall Previous(OleVariant &Unit_, OleVariant &Count, _di_Range &Previous_result) = 0 ;
	virtual HRESULT __safecall StartOf(OleVariant &Unit_, OleVariant &Extend, int &StartOf_result) = 0 ;
	virtual HRESULT __safecall EndOf(OleVariant &Unit_, OleVariant &Extend, int &EndOf_result) = 0 ;
	virtual HRESULT __safecall Move(OleVariant &Unit_, OleVariant &Count, int &Move_result) = 0 ;
	virtual HRESULT __safecall MoveStart(OleVariant &Unit_, OleVariant &Count, int &MoveStart_result) = 0 ;
	virtual HRESULT __safecall MoveEnd(OleVariant &Unit_, OleVariant &Count, int &MoveEnd_result) = 0 ;
	virtual HRESULT __safecall MoveWhile(OleVariant &Cset, OleVariant &Count, int &MoveWhile_result) = 0 ;
	virtual HRESULT __safecall MoveStartWhile(OleVariant &Cset, OleVariant &Count, int &MoveStartWhile_result) = 0 ;
	virtual HRESULT __safecall MoveEndWhile(OleVariant &Cset, OleVariant &Count, int &MoveEndWhile_result) = 0 ;
	virtual HRESULT __safecall MoveUntil(OleVariant &Cset, OleVariant &Count, int &MoveUntil_result) = 0 ;
	virtual HRESULT __safecall MoveStartUntil(OleVariant &Cset, OleVariant &Count, int &MoveStartUntil_result) = 0 ;
	virtual HRESULT __safecall MoveEndUntil(OleVariant &Cset, OleVariant &Count, int &MoveEndUntil_result) = 0 ;
	virtual HRESULT __safecall Cut(void) = 0 ;
	virtual HRESULT __safecall Copy(void) = 0 ;
	virtual HRESULT __safecall Paste(void) = 0 ;
	virtual HRESULT __safecall InsertBreak(OleVariant &Type_) = 0 ;
	virtual HRESULT __safecall InsertFile(const WideString FileName, OleVariant &Range, OleVariant &ConfirmConversions, OleVariant &Link, OleVariant &Attachment) = 0 ;
	virtual HRESULT __safecall InStory(const _di_Range Range, Word &InStory_result) = 0 ;
	virtual HRESULT __safecall InRange(const _di_Range Range, Word &InRange_result) = 0 ;
	virtual HRESULT __safecall Delete(OleVariant &Unit_, OleVariant &Count, int &Delete_result) = 0 ;
	virtual HRESULT __safecall Expand(OleVariant &Unit_, int &Expand_result) = 0 ;
	virtual HRESULT __safecall InsertParagraph(void) = 0 ;
	virtual HRESULT __safecall InsertParagraphAfter(void) = 0 ;
	virtual HRESULT __safecall ConvertToTableOld(OleVariant &Separator, OleVariant &NumRows, OleVariant &NumColumns, OleVariant &InitialColumnWidth, OleVariant &Format, OleVariant &ApplyBorders, OleVariant &ApplyShading, OleVariant &ApplyFont, OleVariant &ApplyColor, OleVariant &ApplyHeadingRows, OleVariant &ApplyLastRow, OleVariant &ApplyFirstColumn, OleVariant &ApplyLastColumn, OleVariant &AutoFit, _di_Table &ConvertToTableOld_result) = 0 ;
	virtual HRESULT __safecall InsertDateTimeOld(OleVariant &DateTimeFormat, OleVariant &InsertAsField, OleVariant &InsertAsFullWidth) = 0 ;
	virtual HRESULT __safecall InsertSymbol(int CharacterNumber, OleVariant &Font, OleVariant &Unicode, OleVariant &Bias) = 0 ;
	virtual HRESULT __safecall InsertCrossReference(OleVariant &ReferenceType, Activex::TOleEnum ReferenceKind, OleVariant &ReferenceItem, OleVariant &InsertAsHyperlink, OleVariant &IncludePosition) = 0 ;
	virtual HRESULT __safecall InsertCaption(OleVariant &Label_, OleVariant &Title, OleVariant &TitleAutoText, OleVariant &Position) = 0 ;
	virtual HRESULT __safecall CopyAsPicture(void) = 0 ;
	virtual HRESULT __safecall SortOld(OleVariant &ExcludeHeader, OleVariant &FieldNumber, OleVariant &SortFieldType, OleVariant &SortOrder, OleVariant &FieldNumber2, OleVariant &SortFieldType2, OleVariant &SortOrder2, OleVariant &FieldNumber3, OleVariant &SortFieldType3, OleVariant &SortOrder3, OleVariant &SortColumn, OleVariant &Separator, OleVariant &CaseSensitive, OleVariant &LanguageID) = 0 ;
	virtual HRESULT __safecall SortAscending(void) = 0 ;
	virtual HRESULT __safecall SortDescending(void) = 0 ;
	virtual HRESULT __safecall IsEqual(const _di_Range Range, Word &IsEqual_result) = 0 ;
	virtual HRESULT __safecall Calculate(float &Calculate_result) = 0 ;
	virtual HRESULT __safecall GoTo_(OleVariant &What, OleVariant &Which, OleVariant &Count, OleVariant &Name, _di_Range &GoTo__result) = 0 ;
	virtual HRESULT __safecall GoToNext(Activex::TOleEnum What, _di_Range &GoToNext_result) = 0 ;
	virtual HRESULT __safecall GoToPrevious(Activex::TOleEnum What, _di_Range &GoToPrevious_result) = 0 ;
	virtual HRESULT __safecall PasteSpecial(OleVariant &IconIndex, OleVariant &Link, OleVariant &Placement, OleVariant &DisplayAsIcon, OleVariant &DataType, OleVariant &IconFileName, OleVariant &IconLabel) = 0 ;
	virtual HRESULT __safecall PreviousField(_di_Field &PreviousField_result) = 0 ;
	virtual HRESULT __safecall NextField(_di_Field &NextField_result) = 0 ;
	virtual HRESULT __safecall InsertParagraphBefore(void) = 0 ;
	virtual HRESULT __safecall InsertCells(OleVariant &ShiftCells) = 0 ;
	virtual HRESULT __safecall Extend(OleVariant &Character) = 0 ;
	virtual HRESULT __safecall Shrink(void) = 0 ;
	virtual HRESULT __safecall MoveLeft(OleVariant &Unit_, OleVariant &Count, OleVariant &Extend, int &MoveLeft_result) = 0 ;
	virtual HRESULT __safecall MoveRight(OleVariant &Unit_, OleVariant &Count, OleVariant &Extend, int &MoveRight_result) = 0 ;
	virtual HRESULT __safecall MoveUp(OleVariant &Unit_, OleVariant &Count, OleVariant &Extend, int &MoveUp_result) = 0 ;
	virtual HRESULT __safecall MoveDown(OleVariant &Unit_, OleVariant &Count, OleVariant &Extend, int &MoveDown_result) = 0 ;
	virtual HRESULT __safecall HomeKey(OleVariant &Unit_, OleVariant &Extend, int &HomeKey_result) = 0 ;
	virtual HRESULT __safecall EndKey(OleVariant &Unit_, OleVariant &Extend, int &EndKey_result) = 0 ;
	virtual HRESULT __safecall EscapeKey(void) = 0 ;
	virtual HRESULT __safecall TypeText(const WideString Text) = 0 ;
	virtual HRESULT __safecall CopyFormat(void) = 0 ;
	virtual HRESULT __safecall PasteFormat(void) = 0 ;
	virtual HRESULT __safecall TypeParagraph(void) = 0 ;
	virtual HRESULT __safecall TypeBackspace(void) = 0 ;
	virtual HRESULT __safecall NextSubdocument(void) = 0 ;
	virtual HRESULT __safecall PreviousSubdocument(void) = 0 ;
	virtual HRESULT __safecall SelectColumn(void) = 0 ;
	virtual HRESULT __safecall SelectCurrentFont(void) = 0 ;
	virtual HRESULT __safecall SelectCurrentAlignment(void) = 0 ;
	virtual HRESULT __safecall SelectCurrentSpacing(void) = 0 ;
	virtual HRESULT __safecall SelectCurrentIndent(void) = 0 ;
	virtual HRESULT __safecall SelectCurrentTabs(void) = 0 ;
	virtual HRESULT __safecall SelectCurrentColor(void) = 0 ;
	virtual HRESULT __safecall CreateTextbox(void) = 0 ;
	virtual HRESULT __safecall WholeStory(void) = 0 ;
	virtual HRESULT __safecall SelectRow(void) = 0 ;
	virtual HRESULT __safecall SplitTable(void) = 0 ;
	virtual HRESULT __safecall InsertRows(OleVariant &NumRows) = 0 ;
	virtual HRESULT __safecall InsertColumns(void) = 0 ;
	virtual HRESULT __safecall InsertFormula(OleVariant &Formula, OleVariant &NumberFormat) = 0 ;
	virtual HRESULT __safecall NextRevision(OleVariant &Wrap, _di_Revision &NextRevision_result) = 0 ;
	virtual HRESULT __safecall PreviousRevision(OleVariant &Wrap, _di_Revision &PreviousRevision_result) = 0 ;
	virtual HRESULT __safecall PasteAsNestedTable(void) = 0 ;
	virtual HRESULT __safecall CreateAutoTextEntry(const WideString Name, const WideString StyleName, _di_AutoTextEntry &CreateAutoTextEntry_result) = 0 ;
	virtual HRESULT __safecall DetectLanguage(void) = 0 ;
	virtual HRESULT __safecall SelectCell(void) = 0 ;
	virtual HRESULT __safecall InsertRowsBelow(OleVariant &NumRows) = 0 ;
	virtual HRESULT __safecall InsertColumnsRight(void) = 0 ;
	virtual HRESULT __safecall InsertRowsAbove(OleVariant &NumRows) = 0 ;
	virtual HRESULT __safecall RtlRun(void) = 0 ;
	virtual HRESULT __safecall LtrRun(void) = 0 ;
	virtual HRESULT __safecall BoldRun(void) = 0 ;
	virtual HRESULT __safecall ItalicRun(void) = 0 ;
	virtual HRESULT __safecall RtlPara(void) = 0 ;
	virtual HRESULT __safecall LtrPara(void) = 0 ;
	virtual HRESULT __safecall InsertDateTime(OleVariant &DateTimeFormat, OleVariant &InsertAsField, OleVariant &InsertAsFullWidth, OleVariant &DateLanguage, OleVariant &CalendarType) = 0 ;
	virtual HRESULT __safecall Sort2000(OleVariant &ExcludeHeader, OleVariant &FieldNumber, OleVariant &SortFieldType, OleVariant &SortOrder, OleVariant &FieldNumber2, OleVariant &SortFieldType2, OleVariant &SortOrder2, OleVariant &FieldNumber3, OleVariant &SortFieldType3, OleVariant &SortOrder3, OleVariant &SortColumn, OleVariant &Separator, OleVariant &CaseSensitive, OleVariant &BidiSort, OleVariant &IgnoreThe, OleVariant &IgnoreKashida, OleVariant &IgnoreDiacritics, OleVariant &IgnoreHe, OleVariant &LanguageID) = 0 ;
	virtual HRESULT __safecall ConvertToTable(OleVariant &Separator, OleVariant &NumRows, OleVariant &NumColumns, OleVariant &InitialColumnWidth, OleVariant &Format, OleVariant &ApplyBorders, OleVariant &ApplyShading, OleVariant &ApplyFont, OleVariant &ApplyColor, OleVariant &ApplyHeadingRows, OleVariant &ApplyLastRow, OleVariant &ApplyFirstColumn, OleVariant &ApplyLastColumn, OleVariant &AutoFit, OleVariant &AutoFitBehavior, OleVariant &DefaultTableBehavior, _di_Table &ConvertToTable_result) = 0 ;
	virtual HRESULT __safecall Get_NoProofing(int &Get_NoProofing_result) = 0 ;
	virtual HRESULT __safecall Set_NoProofing(int prop) = 0 ;
	virtual HRESULT __safecall Get_TopLevelTables(_di_Tables &Get_TopLevelTables_result) = 0 ;
	virtual HRESULT __safecall Get_LanguageDetected(Word &Get_LanguageDetected_result) = 0 ;
	virtual HRESULT __safecall Set_LanguageDetected(Word prop) = 0 ;
	virtual HRESULT __safecall Get_FitTextWidth(float &Get_FitTextWidth_result) = 0 ;
	virtual HRESULT __safecall Set_FitTextWidth(float prop) = 0 ;
	virtual HRESULT __safecall ClearFormatting(void) = 0 ;
	virtual HRESULT __safecall PasteAppendTable(void) = 0 ;
	virtual HRESULT __safecall Get_HTMLDivisions(_di_HTMLDivisions &Get_HTMLDivisions_result) = 0 ;
	virtual HRESULT __safecall Get_SmartTags(_di_SmartTags &Get_SmartTags_result) = 0 ;
	virtual HRESULT __safecall Get_ChildShapeRange(_di_ShapeRange &Get_ChildShapeRange_result) = 0 ;
	virtual HRESULT __safecall Get_HasChildShapeRange(Word &Get_HasChildShapeRange_result) = 0 ;
	virtual HRESULT __safecall Get_FootnoteOptions(_di_FootnoteOptions &Get_FootnoteOptions_result) = 0 ;
	virtual HRESULT __safecall Get_EndnoteOptions(_di_EndnoteOptions &Get_EndnoteOptions_result) = 0 ;
	virtual HRESULT __safecall ToggleCharacterCode(void) = 0 ;
	virtual HRESULT __safecall PasteAndFormat(Activex::TOleEnum Type_) = 0 ;
	virtual HRESULT __safecall PasteExcelTable(Word LinkedToExcel, Word WordFormatting, Word RTF) = 0 ;
	virtual HRESULT __safecall ShrinkDiscontiguousSelection(void) = 0 ;
	virtual HRESULT __safecall InsertStyleSeparator(void) = 0 ;
	virtual HRESULT __safecall Sort(OleVariant &ExcludeHeader, OleVariant &FieldNumber, OleVariant &SortFieldType, OleVariant &SortOrder, OleVariant &FieldNumber2, OleVariant &SortFieldType2, OleVariant &SortOrder2, OleVariant &FieldNumber3, OleVariant &SortFieldType3, OleVariant &SortOrder3, OleVariant &SortColumn, OleVariant &Separator, OleVariant &CaseSensitive, OleVariant &BidiSort, OleVariant &IgnoreThe, OleVariant &IgnoreKashida, OleVariant &IgnoreDiacritics, OleVariant &IgnoreHe, OleVariant &LanguageID, OleVariant &SubFieldNumber, OleVariant &SubFieldNumber2, OleVariant &SubFieldNumber3) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Text() { WideString r; HRESULT hr = Get_Text(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Text = {read=_scw_Get_Text, write=Set_Text};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_FormattedText() { _di_Range r; HRESULT hr = Get_FormattedText(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range FormattedText = {read=_scw_Get_FormattedText, write=Set_FormattedText};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Start() { int r; HRESULT hr = Get_Start(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Start = {read=_scw_Get_Start, write=Set_Start};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_End_() { int r; HRESULT hr = Get_End_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int End_ = {read=_scw_Get_End_, write=Set_End_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Font _scw_Get_Font() { _di__Font r; HRESULT hr = Get_Font(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Font Font = {read=_scw_Get_Font, write=Set_Font};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_StoryType() { Activex::TOleEnum r; HRESULT hr = Get_StoryType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum StoryType = {read=_scw_Get_StoryType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Tables _scw_Get_Tables() { _di_Tables r; HRESULT hr = Get_Tables(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Tables Tables = {read=_scw_Get_Tables};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Words _scw_Get_Words() { _di_Words r; HRESULT hr = Get_Words(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Words Words = {read=_scw_Get_Words};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Sentences _scw_Get_Sentences() { _di_Sentences r; HRESULT hr = Get_Sentences(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Sentences Sentences = {read=_scw_Get_Sentences};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Characters _scw_Get_Characters() { _di_Characters r; HRESULT hr = Get_Characters(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Characters Characters = {read=_scw_Get_Characters};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Footnotes _scw_Get_Footnotes() { _di_Footnotes r; HRESULT hr = Get_Footnotes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Footnotes Footnotes = {read=_scw_Get_Footnotes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Endnotes _scw_Get_Endnotes() { _di_Endnotes r; HRESULT hr = Get_Endnotes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Endnotes Endnotes = {read=_scw_Get_Endnotes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Comments _scw_Get_Comments() { _di_Comments r; HRESULT hr = Get_Comments(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Comments Comments = {read=_scw_Get_Comments};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Cells _scw_Get_Cells() { _di_Cells r; HRESULT hr = Get_Cells(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Cells Cells = {read=_scw_Get_Cells};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Sections _scw_Get_Sections() { _di_Sections r; HRESULT hr = Get_Sections(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Sections Sections = {read=_scw_Get_Sections};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Paragraphs _scw_Get_Paragraphs() { _di_Paragraphs r; HRESULT hr = Get_Paragraphs(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Paragraphs Paragraphs = {read=_scw_Get_Paragraphs};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Borders _scw_Get_Borders() { _di_Borders r; HRESULT hr = Get_Borders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Borders Borders = {read=_scw_Get_Borders, write=Set_Borders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shading _scw_Get_Shading() { _di_Shading r; HRESULT hr = Get_Shading(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shading Shading = {read=_scw_Get_Shading};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Fields _scw_Get_Fields() { _di_Fields r; HRESULT hr = Get_Fields(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Fields Fields = {read=_scw_Get_Fields};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_FormFields _scw_Get_FormFields() { _di_FormFields r; HRESULT hr = Get_FormFields(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_FormFields FormFields = {read=_scw_Get_FormFields};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Frames _scw_Get_Frames() { _di_Frames r; HRESULT hr = Get_Frames(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Frames Frames = {read=_scw_Get_Frames};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__ParagraphFormat _scw_Get_ParagraphFormat() { _di__ParagraphFormat r; HRESULT hr = Get_ParagraphFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__ParagraphFormat ParagraphFormat = {read=_scw_Get_ParagraphFormat, write=Set_ParagraphFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_PageSetup _scw_Get_PageSetup() { _di_PageSetup r; HRESULT hr = Get_PageSetup(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_PageSetup PageSetup = {read=_scw_Get_PageSetup, write=Set_PageSetup};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Bookmarks _scw_Get_Bookmarks() { _di_Bookmarks r; HRESULT hr = Get_Bookmarks(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Bookmarks Bookmarks = {read=_scw_Get_Bookmarks};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_StoryLength() { int r; HRESULT hr = Get_StoryLength(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int StoryLength = {read=_scw_Get_StoryLength};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LanguageID() { Activex::TOleEnum r; HRESULT hr = Get_LanguageID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LanguageID = {read=_scw_Get_LanguageID, write=Set_LanguageID};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LanguageIDFarEast() { Activex::TOleEnum r; HRESULT hr = Get_LanguageIDFarEast(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LanguageIDFarEast = {read=_scw_Get_LanguageIDFarEast, write=Set_LanguageIDFarEast};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LanguageIDOther() { Activex::TOleEnum r; HRESULT hr = Get_LanguageIDOther(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LanguageIDOther = {read=_scw_Get_LanguageIDOther, write=Set_LanguageIDOther};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Hyperlinks _scw_Get_Hyperlinks() { _di_Hyperlinks r; HRESULT hr = Get_Hyperlinks(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Hyperlinks Hyperlinks = {read=_scw_Get_Hyperlinks};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Columns _scw_Get_Columns() { _di_Columns r; HRESULT hr = Get_Columns(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Columns Columns = {read=_scw_Get_Columns};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Rows _scw_Get_Rows() { _di_Rows r; HRESULT hr = Get_Rows(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Rows Rows = {read=_scw_Get_Rows};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_HeaderFooter _scw_Get_HeaderFooter() { _di_HeaderFooter r; HRESULT hr = Get_HeaderFooter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_HeaderFooter HeaderFooter = {read=_scw_Get_HeaderFooter};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IsEndOfRowMark() { Word r; HRESULT hr = Get_IsEndOfRowMark(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IsEndOfRowMark = {read=_scw_Get_IsEndOfRowMark};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_BookmarkID() { int r; HRESULT hr = Get_BookmarkID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int BookmarkID = {read=_scw_Get_BookmarkID};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_PreviousBookmarkID() { int r; HRESULT hr = Get_PreviousBookmarkID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int PreviousBookmarkID = {read=_scw_Get_PreviousBookmarkID};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Find _scw_Get_Find() { _di_Find r; HRESULT hr = Get_Find(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Find Find = {read=_scw_Get_Find};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
	#pragma option push -w-inl
	/* safecall wrapper */ inline OleVariant _scw_Get_Information(Activex::TOleEnum Type_) { OleVariant r; HRESULT hr = Get_Information(Type_, r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property OleVariant Information[Activex::TOleEnum Type_] = {read=_scw_Get_Information};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Flags() { Activex::TOleEnum r; HRESULT hr = Get_Flags(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Flags = {read=_scw_Get_Flags, write=Set_Flags};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Active() { Word r; HRESULT hr = Get_Active(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Active = {read=_scw_Get_Active};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_StartIsActive() { Word r; HRESULT hr = Get_StartIsActive(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word StartIsActive = {read=_scw_Get_StartIsActive, write=Set_StartIsActive};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IPAtEndOfLine() { Word r; HRESULT hr = Get_IPAtEndOfLine(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IPAtEndOfLine = {read=_scw_Get_IPAtEndOfLine};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ExtendMode() { Word r; HRESULT hr = Get_ExtendMode(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ExtendMode = {read=_scw_Get_ExtendMode, write=Set_ExtendMode};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ColumnSelectMode() { Word r; HRESULT hr = Get_ColumnSelectMode(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ColumnSelectMode = {read=_scw_Get_ColumnSelectMode, write=Set_ColumnSelectMode};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Orientation() { Activex::TOleEnum r; HRESULT hr = Get_Orientation(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Orientation = {read=_scw_Get_Orientation, write=Set_Orientation};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_InlineShapes _scw_Get_InlineShapes() { _di_InlineShapes r; HRESULT hr = Get_InlineShapes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_InlineShapes InlineShapes = {read=_scw_Get_InlineShapes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Document _scw_Get_Document() { _di__Document r; HRESULT hr = Get_Document(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Document Document = {read=_scw_Get_Document};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ShapeRange _scw_Get_ShapeRange() { _di_ShapeRange r; HRESULT hr = Get_ShapeRange(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ShapeRange ShapeRange = {read=_scw_Get_ShapeRange};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_NoProofing() { int r; HRESULT hr = Get_NoProofing(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int NoProofing = {read=_scw_Get_NoProofing, write=Set_NoProofing};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Tables _scw_Get_TopLevelTables() { _di_Tables r; HRESULT hr = Get_TopLevelTables(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Tables TopLevelTables = {read=_scw_Get_TopLevelTables};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_LanguageDetected() { Word r; HRESULT hr = Get_LanguageDetected(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word LanguageDetected = {read=_scw_Get_LanguageDetected, write=Set_LanguageDetected};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_FitTextWidth() { float r; HRESULT hr = Get_FitTextWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float FitTextWidth = {read=_scw_Get_FitTextWidth, write=Set_FitTextWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_HTMLDivisions _scw_Get_HTMLDivisions() { _di_HTMLDivisions r; HRESULT hr = Get_HTMLDivisions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_HTMLDivisions HTMLDivisions = {read=_scw_Get_HTMLDivisions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_SmartTags _scw_Get_SmartTags() { _di_SmartTags r; HRESULT hr = Get_SmartTags(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_SmartTags SmartTags = {read=_scw_Get_SmartTags};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ShapeRange _scw_Get_ChildShapeRange() { _di_ShapeRange r; HRESULT hr = Get_ChildShapeRange(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ShapeRange ChildShapeRange = {read=_scw_Get_ChildShapeRange};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_HasChildShapeRange() { Word r; HRESULT hr = Get_HasChildShapeRange(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word HasChildShapeRange = {read=_scw_Get_HasChildShapeRange};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_FootnoteOptions _scw_Get_FootnoteOptions() { _di_FootnoteOptions r; HRESULT hr = Get_FootnoteOptions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_FootnoteOptions FootnoteOptions = {read=_scw_Get_FootnoteOptions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_EndnoteOptions _scw_Get_EndnoteOptions() { _di_EndnoteOptions r; HRESULT hr = Get_EndnoteOptions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_EndnoteOptions EndnoteOptions = {read=_scw_Get_EndnoteOptions};
};

__dispinterface SelectionDisp;
typedef System::DelphiInterface<SelectionDisp> _di_SelectionDisp;
__dispinterface INTERFACE_UUID("{00020975-0000-0000-C000-000000000046}") SelectionDisp  : public IDispatch 
{
	
};

__interface TableOfAuthoritiesCategory;
typedef System::DelphiInterface<TableOfAuthoritiesCategory> _di_TableOfAuthoritiesCategory;
__interface INTERFACE_UUID("{00020976-0000-0000-C000-000000000046}") TablesOfAuthoritiesCategories  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_TableOfAuthoritiesCategory &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface TablesOfAuthoritiesCategoriesDisp;
typedef System::DelphiInterface<TablesOfAuthoritiesCategoriesDisp> _di_TablesOfAuthoritiesCategoriesDisp;
__dispinterface INTERFACE_UUID("{00020976-0000-0000-C000-000000000046}") TablesOfAuthoritiesCategoriesDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020977-0000-0000-C000-000000000046}") TableOfAuthoritiesCategory  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Set_Name(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name, write=Set_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
};

__dispinterface TableOfAuthoritiesCategoryDisp;
typedef System::DelphiInterface<TableOfAuthoritiesCategoryDisp> _di_TableOfAuthoritiesCategoryDisp;
__dispinterface INTERFACE_UUID("{00020977-0000-0000-C000-000000000046}") TableOfAuthoritiesCategoryDisp  : public IDispatch 
{
	
};

__interface CaptionLabel;
typedef System::DelphiInterface<CaptionLabel> _di_CaptionLabel;
__interface INTERFACE_UUID("{00020978-0000-0000-C000-000000000046}") CaptionLabels  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_CaptionLabel &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const WideString Name, _di_CaptionLabel &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface CaptionLabelsDisp;
typedef System::DelphiInterface<CaptionLabelsDisp> _di_CaptionLabelsDisp;
__dispinterface INTERFACE_UUID("{00020978-0000-0000-C000-000000000046}") CaptionLabelsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020979-0000-0000-C000-000000000046}") CaptionLabel  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Get_BuiltIn(Word &Get_BuiltIn_result) = 0 ;
	virtual HRESULT __safecall Get_ID(Activex::TOleEnum &Get_ID_result) = 0 ;
	virtual HRESULT __safecall Get_IncludeChapterNumber(Word &Get_IncludeChapterNumber_result) = 0 ;
	virtual HRESULT __safecall Set_IncludeChapterNumber(Word prop) = 0 ;
	virtual HRESULT __safecall Get_NumberStyle(Activex::TOleEnum &Get_NumberStyle_result) = 0 ;
	virtual HRESULT __safecall Set_NumberStyle(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_ChapterStyleLevel(int &Get_ChapterStyleLevel_result) = 0 ;
	virtual HRESULT __safecall Set_ChapterStyleLevel(int prop) = 0 ;
	virtual HRESULT __safecall Get_Separator(Activex::TOleEnum &Get_Separator_result) = 0 ;
	virtual HRESULT __safecall Set_Separator(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Position(Activex::TOleEnum &Get_Position_result) = 0 ;
	virtual HRESULT __safecall Set_Position(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_BuiltIn() { Word r; HRESULT hr = Get_BuiltIn(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word BuiltIn = {read=_scw_Get_BuiltIn};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_ID() { Activex::TOleEnum r; HRESULT hr = Get_ID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum ID = {read=_scw_Get_ID};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IncludeChapterNumber() { Word r; HRESULT hr = Get_IncludeChapterNumber(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IncludeChapterNumber = {read=_scw_Get_IncludeChapterNumber, write=Set_IncludeChapterNumber};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_NumberStyle() { Activex::TOleEnum r; HRESULT hr = Get_NumberStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum NumberStyle = {read=_scw_Get_NumberStyle, write=Set_NumberStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_ChapterStyleLevel() { int r; HRESULT hr = Get_ChapterStyleLevel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int ChapterStyleLevel = {read=_scw_Get_ChapterStyleLevel, write=Set_ChapterStyleLevel};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Separator() { Activex::TOleEnum r; HRESULT hr = Get_Separator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Separator = {read=_scw_Get_Separator, write=Set_Separator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Position() { Activex::TOleEnum r; HRESULT hr = Get_Position(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Position = {read=_scw_Get_Position, write=Set_Position};
};

__dispinterface CaptionLabelDisp;
typedef System::DelphiInterface<CaptionLabelDisp> _di_CaptionLabelDisp;
__dispinterface INTERFACE_UUID("{00020979-0000-0000-C000-000000000046}") CaptionLabelDisp  : public IDispatch 
{
	
};

__interface AutoCaption;
typedef System::DelphiInterface<AutoCaption> _di_AutoCaption;
__interface INTERFACE_UUID("{0002097A-0000-0000-C000-000000000046}") AutoCaptions  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_AutoCaption &Item_result) = 0 ;
	virtual HRESULT __safecall CancelAutoInsert(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface AutoCaptionsDisp;
typedef System::DelphiInterface<AutoCaptionsDisp> _di_AutoCaptionsDisp;
__dispinterface INTERFACE_UUID("{0002097A-0000-0000-C000-000000000046}") AutoCaptionsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002097B-0000-0000-C000-000000000046}") AutoCaption  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Get_AutoInsert(Word &Get_AutoInsert_result) = 0 ;
	virtual HRESULT __safecall Set_AutoInsert(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_CaptionLabel(OleVariant &Get_CaptionLabel_result) = 0 ;
	virtual HRESULT __safecall Set_CaptionLabel(OleVariant &prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoInsert() { Word r; HRESULT hr = Get_AutoInsert(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoInsert = {read=_scw_Get_AutoInsert, write=Set_AutoInsert};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
};

__dispinterface AutoCaptionDisp;
typedef System::DelphiInterface<AutoCaptionDisp> _di_AutoCaptionDisp;
__dispinterface INTERFACE_UUID("{0002097B-0000-0000-C000-000000000046}") AutoCaptionDisp  : public IDispatch 
{
	
};

__interface Index;
typedef System::DelphiInterface<Index> _di_Index;
__interface INTERFACE_UUID("{0002097C-0000-0000-C000-000000000046}") Indexes  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Format(Activex::TOleEnum &Get_Format_result) = 0 ;
	virtual HRESULT __safecall Set_Format(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_Index &Item_result) = 0 ;
	virtual HRESULT __safecall AddOld(const _di_Range Range, OleVariant &HeadingSeparator, OleVariant &RightAlignPageNumbers, OleVariant &Type_, OleVariant &NumberOfColumns, OleVariant &AccentedLetters, _di_Index &AddOld_result) = 0 ;
	virtual HRESULT __safecall MarkEntry(const _di_Range Range, OleVariant &Entry, OleVariant &EntryAutoText, OleVariant &CrossReference, OleVariant &CrossReferenceAutoText, OleVariant &BookmarkName, OleVariant &Bold, OleVariant &Italic, OleVariant &Reading, _di_Field &MarkEntry_result) = 0 ;
	virtual HRESULT __safecall MarkAllEntries(const _di_Range Range, OleVariant &Entry, OleVariant &EntryAutoText, OleVariant &CrossReference, OleVariant &CrossReferenceAutoText, OleVariant &BookmarkName, OleVariant &Bold, OleVariant &Italic) = 0 ;
	virtual HRESULT __safecall AutoMarkEntries(const WideString ConcordanceFileName) = 0 ;
	virtual HRESULT __safecall Add(const _di_Range Range, OleVariant &HeadingSeparator, OleVariant &RightAlignPageNumbers, OleVariant &Type_, OleVariant &NumberOfColumns, OleVariant &AccentedLetters, OleVariant &SortBy, OleVariant &IndexLanguage, _di_Index &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Format() { Activex::TOleEnum r; HRESULT hr = Get_Format(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Format = {read=_scw_Get_Format, write=Set_Format};
};

__dispinterface IndexesDisp;
typedef System::DelphiInterface<IndexesDisp> _di_IndexesDisp;
__dispinterface INTERFACE_UUID("{0002097C-0000-0000-C000-000000000046}") IndexesDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002097D-0000-0000-C000-000000000046}") Index  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_HeadingSeparator(Activex::TOleEnum &Get_HeadingSeparator_result) = 0 ;
	virtual HRESULT __safecall Set_HeadingSeparator(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_RightAlignPageNumbers(Word &Get_RightAlignPageNumbers_result) = 0 ;
	virtual HRESULT __safecall Set_RightAlignPageNumbers(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Set_Type_(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_NumberOfColumns(int &Get_NumberOfColumns_result) = 0 ;
	virtual HRESULT __safecall Set_NumberOfColumns(int prop) = 0 ;
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Get_TabLeader(Activex::TOleEnum &Get_TabLeader_result) = 0 ;
	virtual HRESULT __safecall Set_TabLeader(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_AccentedLetters(Word &Get_AccentedLetters_result) = 0 ;
	virtual HRESULT __safecall Set_AccentedLetters(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SortBy(Activex::TOleEnum &Get_SortBy_result) = 0 ;
	virtual HRESULT __safecall Set_SortBy(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Filter(Activex::TOleEnum &Get_Filter_result) = 0 ;
	virtual HRESULT __safecall Set_Filter(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall Update(void) = 0 ;
	virtual HRESULT __safecall Get_IndexLanguage(Activex::TOleEnum &Get_IndexLanguage_result) = 0 ;
	virtual HRESULT __safecall Set_IndexLanguage(Activex::TOleEnum prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_HeadingSeparator() { Activex::TOleEnum r; HRESULT hr = Get_HeadingSeparator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum HeadingSeparator = {read=_scw_Get_HeadingSeparator, write=Set_HeadingSeparator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_RightAlignPageNumbers() { Word r; HRESULT hr = Get_RightAlignPageNumbers(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word RightAlignPageNumbers = {read=_scw_Get_RightAlignPageNumbers, write=Set_RightAlignPageNumbers};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_, write=Set_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_NumberOfColumns() { int r; HRESULT hr = Get_NumberOfColumns(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int NumberOfColumns = {read=_scw_Get_NumberOfColumns, write=Set_NumberOfColumns};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_TabLeader() { Activex::TOleEnum r; HRESULT hr = Get_TabLeader(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum TabLeader = {read=_scw_Get_TabLeader, write=Set_TabLeader};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AccentedLetters() { Word r; HRESULT hr = Get_AccentedLetters(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AccentedLetters = {read=_scw_Get_AccentedLetters, write=Set_AccentedLetters};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_SortBy() { Activex::TOleEnum r; HRESULT hr = Get_SortBy(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum SortBy = {read=_scw_Get_SortBy, write=Set_SortBy};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Filter() { Activex::TOleEnum r; HRESULT hr = Get_Filter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Filter = {read=_scw_Get_Filter, write=Set_Filter};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_IndexLanguage() { Activex::TOleEnum r; HRESULT hr = Get_IndexLanguage(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum IndexLanguage = {read=_scw_Get_IndexLanguage, write=Set_IndexLanguage};
};

__dispinterface IndexDisp;
typedef System::DelphiInterface<IndexDisp> _di_IndexDisp;
__dispinterface INTERFACE_UUID("{0002097D-0000-0000-C000-000000000046}") IndexDisp  : public IDispatch 
{
	
};

__interface AddIn;
typedef System::DelphiInterface<AddIn> _di_AddIn;
__interface INTERFACE_UUID("{0002097E-0000-0000-C000-000000000046}") AddIn  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_Path(WideString &Get_Path_result) = 0 ;
	virtual HRESULT __safecall Get_Installed(Word &Get_Installed_result) = 0 ;
	virtual HRESULT __safecall Set_Installed(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Compiled(Word &Get_Compiled_result) = 0 ;
	virtual HRESULT __safecall Get_Autoload(Word &Get_Autoload_result) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Path() { WideString r; HRESULT hr = Get_Path(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Path = {read=_scw_Get_Path};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Installed() { Word r; HRESULT hr = Get_Installed(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Installed = {read=_scw_Get_Installed, write=Set_Installed};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Compiled() { Word r; HRESULT hr = Get_Compiled(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Compiled = {read=_scw_Get_Compiled};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Autoload() { Word r; HRESULT hr = Get_Autoload(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Autoload = {read=_scw_Get_Autoload};
};

__dispinterface AddInDisp;
typedef System::DelphiInterface<AddInDisp> _di_AddInDisp;
__dispinterface INTERFACE_UUID("{0002097E-0000-0000-C000-000000000046}") AddInDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002097F-0000-0000-C000-000000000046}") AddIns  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_AddIn &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const WideString FileName, OleVariant &Install, _di_AddIn &Add_result) = 0 ;
	virtual HRESULT __safecall Unload(Word RemoveFromList) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface AddInsDisp;
typedef System::DelphiInterface<AddInsDisp> _di_AddInsDisp;
__dispinterface INTERFACE_UUID("{0002097F-0000-0000-C000-000000000046}") AddInsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020980-0000-0000-C000-000000000046}") Revisions  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_Revision &Item_result) = 0 ;
	virtual HRESULT __safecall AcceptAll(void) = 0 ;
	virtual HRESULT __safecall RejectAll(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface RevisionsDisp;
typedef System::DelphiInterface<RevisionsDisp> _di_RevisionsDisp;
__dispinterface INTERFACE_UUID("{00020980-0000-0000-C000-000000000046}") RevisionsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020981-0000-0000-C000-000000000046}") Revision  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Author(WideString &Get_Author_result) = 0 ;
	virtual HRESULT __safecall Get_Date(System::TDateTime &Get_Date_result) = 0 ;
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Accept(void) = 0 ;
	virtual HRESULT __safecall Reject(void) = 0 ;
	virtual HRESULT __safecall Get_Style(_di_Style &Get_Style_result) = 0 ;
	virtual HRESULT __safecall Get_FormatDescription(WideString &Get_FormatDescription_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Author() { WideString r; HRESULT hr = Get_Author(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Author = {read=_scw_Get_Author};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::TDateTime _scw_Get_Date() { System::TDateTime r; HRESULT hr = Get_Date(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::TDateTime Date = {read=_scw_Get_Date};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Style _scw_Get_Style() { _di_Style r; HRESULT hr = Get_Style(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Style Style = {read=_scw_Get_Style};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_FormatDescription() { WideString r; HRESULT hr = Get_FormatDescription(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString FormatDescription = {read=_scw_Get_FormatDescription};
};

__dispinterface RevisionDisp;
typedef System::DelphiInterface<RevisionDisp> _di_RevisionDisp;
__dispinterface INTERFACE_UUID("{00020981-0000-0000-C000-000000000046}") RevisionDisp  : public IDispatch 
{
	
};

__interface Task;
typedef System::DelphiInterface<Task> _di_Task;
__interface INTERFACE_UUID("{00020982-0000-0000-C000-000000000046}") Task  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Get_Left(int &Get_Left_result) = 0 ;
	virtual HRESULT __safecall Set_Left(int prop) = 0 ;
	virtual HRESULT __safecall Get_Top(int &Get_Top_result) = 0 ;
	virtual HRESULT __safecall Set_Top(int prop) = 0 ;
	virtual HRESULT __safecall Get_Width(int &Get_Width_result) = 0 ;
	virtual HRESULT __safecall Set_Width(int prop) = 0 ;
	virtual HRESULT __safecall Get_Height(int &Get_Height_result) = 0 ;
	virtual HRESULT __safecall Set_Height(int prop) = 0 ;
	virtual HRESULT __safecall Get_WindowState(Activex::TOleEnum &Get_WindowState_result) = 0 ;
	virtual HRESULT __safecall Set_WindowState(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Visible(Word &Get_Visible_result) = 0 ;
	virtual HRESULT __safecall Set_Visible(Word prop) = 0 ;
	virtual HRESULT __safecall Activate(OleVariant &Wait) = 0 ;
	virtual HRESULT __safecall Close(void) = 0 ;
	virtual HRESULT __safecall Move(int Left, int Top) = 0 ;
	virtual HRESULT __safecall Resize(int Width, int Height) = 0 ;
	virtual HRESULT __safecall SendWindowMessage(int Message, int wParam, int lParam) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Left() { int r; HRESULT hr = Get_Left(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Left = {read=_scw_Get_Left, write=Set_Left};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Top() { int r; HRESULT hr = Get_Top(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Top = {read=_scw_Get_Top, write=Set_Top};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Width() { int r; HRESULT hr = Get_Width(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Width = {read=_scw_Get_Width, write=Set_Width};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Height() { int r; HRESULT hr = Get_Height(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Height = {read=_scw_Get_Height, write=Set_Height};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_WindowState() { Activex::TOleEnum r; HRESULT hr = Get_WindowState(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum WindowState = {read=_scw_Get_WindowState, write=Set_WindowState};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Visible() { Word r; HRESULT hr = Get_Visible(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Visible = {read=_scw_Get_Visible, write=Set_Visible};
};

__dispinterface TaskDisp;
typedef System::DelphiInterface<TaskDisp> _di_TaskDisp;
__dispinterface INTERFACE_UUID("{00020982-0000-0000-C000-000000000046}") TaskDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020983-0000-0000-C000-000000000046}") Tasks  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_Task &Item_result) = 0 ;
	virtual HRESULT __safecall Exists(const WideString Name, Word &Exists_result) = 0 ;
	virtual HRESULT __safecall exitwindows(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface TasksDisp;
typedef System::DelphiInterface<TasksDisp> _di_TasksDisp;
__dispinterface INTERFACE_UUID("{00020983-0000-0000-C000-000000000046}") TasksDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020984-0000-0000-C000-000000000046}") HeadersFooters  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(Activex::TOleEnum Index, _di_HeaderFooter &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface HeadersFootersDisp;
typedef System::DelphiInterface<HeadersFootersDisp> _di_HeadersFootersDisp;
__dispinterface INTERFACE_UUID("{00020984-0000-0000-C000-000000000046}") HeadersFootersDisp  : public IDispatch 
{
	
};

__interface PageNumbers;
typedef System::DelphiInterface<PageNumbers> _di_PageNumbers;
__interface INTERFACE_UUID("{00020985-0000-0000-C000-000000000046}") HeaderFooter  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Get_Index(Activex::TOleEnum &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_IsHeader(Word &Get_IsHeader_result) = 0 ;
	virtual HRESULT __safecall Get_Exists(Word &Get_Exists_result) = 0 ;
	virtual HRESULT __safecall Set_Exists(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PageNumbers(_di_PageNumbers &Get_PageNumbers_result) = 0 ;
	virtual HRESULT __safecall Get_LinkToPrevious(Word &Get_LinkToPrevious_result) = 0 ;
	virtual HRESULT __safecall Set_LinkToPrevious(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Shapes(_di_Shapes &Get_Shapes_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Index() { Activex::TOleEnum r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IsHeader() { Word r; HRESULT hr = Get_IsHeader(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IsHeader = {read=_scw_Get_IsHeader};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Exists() { Word r; HRESULT hr = Get_Exists(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Exists = {read=_scw_Get_Exists, write=Set_Exists};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_PageNumbers _scw_Get_PageNumbers() { _di_PageNumbers r; HRESULT hr = Get_PageNumbers(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_PageNumbers PageNumbers = {read=_scw_Get_PageNumbers};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_LinkToPrevious() { Word r; HRESULT hr = Get_LinkToPrevious(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word LinkToPrevious = {read=_scw_Get_LinkToPrevious, write=Set_LinkToPrevious};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shapes _scw_Get_Shapes() { _di_Shapes r; HRESULT hr = Get_Shapes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shapes Shapes = {read=_scw_Get_Shapes};
};

__dispinterface HeaderFooterDisp;
typedef System::DelphiInterface<HeaderFooterDisp> _di_HeaderFooterDisp;
__dispinterface INTERFACE_UUID("{00020985-0000-0000-C000-000000000046}") HeaderFooterDisp  : public IDispatch 
{
	
};

__interface PageNumber;
typedef System::DelphiInterface<PageNumber> _di_PageNumber;
__interface INTERFACE_UUID("{00020986-0000-0000-C000-000000000046}") PageNumbers  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_NumberStyle(Activex::TOleEnum &Get_NumberStyle_result) = 0 ;
	virtual HRESULT __safecall Set_NumberStyle(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_IncludeChapterNumber(Word &Get_IncludeChapterNumber_result) = 0 ;
	virtual HRESULT __safecall Set_IncludeChapterNumber(Word prop) = 0 ;
	virtual HRESULT __safecall Get_HeadingLevelForChapter(int &Get_HeadingLevelForChapter_result) = 0 ;
	virtual HRESULT __safecall Set_HeadingLevelForChapter(int prop) = 0 ;
	virtual HRESULT __safecall Get_ChapterPageSeparator(Activex::TOleEnum &Get_ChapterPageSeparator_result) = 0 ;
	virtual HRESULT __safecall Set_ChapterPageSeparator(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_RestartNumberingAtSection(Word &Get_RestartNumberingAtSection_result) = 0 ;
	virtual HRESULT __safecall Set_RestartNumberingAtSection(Word prop) = 0 ;
	virtual HRESULT __safecall Get_StartingNumber(int &Get_StartingNumber_result) = 0 ;
	virtual HRESULT __safecall Set_StartingNumber(int prop) = 0 ;
	virtual HRESULT __safecall Get_ShowFirstPageNumber(Word &Get_ShowFirstPageNumber_result) = 0 ;
	virtual HRESULT __safecall Set_ShowFirstPageNumber(Word prop) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_PageNumber &Item_result) = 0 ;
	virtual HRESULT __safecall Add(OleVariant &PageNumberAlignment, OleVariant &FirstPage, _di_PageNumber &Add_result) = 0 ;
	virtual HRESULT __safecall Get_DoubleQuote(Word &Get_DoubleQuote_result) = 0 ;
	virtual HRESULT __safecall Set_DoubleQuote(Word prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_NumberStyle() { Activex::TOleEnum r; HRESULT hr = Get_NumberStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum NumberStyle = {read=_scw_Get_NumberStyle, write=Set_NumberStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IncludeChapterNumber() { Word r; HRESULT hr = Get_IncludeChapterNumber(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IncludeChapterNumber = {read=_scw_Get_IncludeChapterNumber, write=Set_IncludeChapterNumber};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_HeadingLevelForChapter() { int r; HRESULT hr = Get_HeadingLevelForChapter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int HeadingLevelForChapter = {read=_scw_Get_HeadingLevelForChapter, write=Set_HeadingLevelForChapter};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_ChapterPageSeparator() { Activex::TOleEnum r; HRESULT hr = Get_ChapterPageSeparator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum ChapterPageSeparator = {read=_scw_Get_ChapterPageSeparator, write=Set_ChapterPageSeparator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_RestartNumberingAtSection() { Word r; HRESULT hr = Get_RestartNumberingAtSection(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word RestartNumberingAtSection = {read=_scw_Get_RestartNumberingAtSection, write=Set_RestartNumberingAtSection};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_StartingNumber() { int r; HRESULT hr = Get_StartingNumber(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int StartingNumber = {read=_scw_Get_StartingNumber, write=Set_StartingNumber};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowFirstPageNumber() { Word r; HRESULT hr = Get_ShowFirstPageNumber(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowFirstPageNumber = {read=_scw_Get_ShowFirstPageNumber, write=Set_ShowFirstPageNumber};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DoubleQuote() { Word r; HRESULT hr = Get_DoubleQuote(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DoubleQuote = {read=_scw_Get_DoubleQuote, write=Set_DoubleQuote};
};

__dispinterface PageNumbersDisp;
typedef System::DelphiInterface<PageNumbersDisp> _di_PageNumbersDisp;
__dispinterface INTERFACE_UUID("{00020986-0000-0000-C000-000000000046}") PageNumbersDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020987-0000-0000-C000-000000000046}") PageNumber  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_Alignment(Activex::TOleEnum &Get_Alignment_result) = 0 ;
	virtual HRESULT __safecall Set_Alignment(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Select(void) = 0 ;
	virtual HRESULT __safecall Copy(void) = 0 ;
	virtual HRESULT __safecall Cut(void) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Alignment() { Activex::TOleEnum r; HRESULT hr = Get_Alignment(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Alignment = {read=_scw_Get_Alignment, write=Set_Alignment};
};

__dispinterface PageNumberDisp;
typedef System::DelphiInterface<PageNumberDisp> _di_PageNumberDisp;
__dispinterface INTERFACE_UUID("{00020987-0000-0000-C000-000000000046}") PageNumberDisp  : public IDispatch 
{
	
};

__interface Subdocument;
typedef System::DelphiInterface<Subdocument> _di_Subdocument;
__interface INTERFACE_UUID("{00020988-0000-0000-C000-000000000046}") Subdocuments  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Expanded(Word &Get_Expanded_result) = 0 ;
	virtual HRESULT __safecall Set_Expanded(Word prop) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_Subdocument &Item_result) = 0 ;
	virtual HRESULT __safecall AddFromFile(OleVariant &Name, OleVariant &ConfirmConversions, OleVariant &ReadOnly, OleVariant &PasswordDocument, OleVariant &PasswordTemplate, OleVariant &Revert, OleVariant &WritePasswordDocument, OleVariant &WritePasswordTemplate, _di_Subdocument &AddFromFile_result) = 0 ;
	virtual HRESULT __safecall AddFromRange(const _di_Range Range, _di_Subdocument &AddFromRange_result) = 0 ;
	virtual HRESULT __safecall Merge(OleVariant &FirstSubdocument, OleVariant &LastSubdocument) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall Select(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Expanded() { Word r; HRESULT hr = Get_Expanded(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Expanded = {read=_scw_Get_Expanded, write=Set_Expanded};
};

__dispinterface SubdocumentsDisp;
typedef System::DelphiInterface<SubdocumentsDisp> _di_SubdocumentsDisp;
__dispinterface INTERFACE_UUID("{00020988-0000-0000-C000-000000000046}") SubdocumentsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020989-0000-0000-C000-000000000046}") Subdocument  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Locked(Word &Get_Locked_result) = 0 ;
	virtual HRESULT __safecall Set_Locked(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Get_Path(WideString &Get_Path_result) = 0 ;
	virtual HRESULT __safecall Get_HasFile(Word &Get_HasFile_result) = 0 ;
	virtual HRESULT __safecall Get_Level(int &Get_Level_result) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall Split(const _di_Range Range) = 0 ;
	virtual HRESULT __safecall Open(_di__Document &Open_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Locked() { Word r; HRESULT hr = Get_Locked(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Locked = {read=_scw_Get_Locked, write=Set_Locked};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Path() { WideString r; HRESULT hr = Get_Path(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Path = {read=_scw_Get_Path};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_HasFile() { Word r; HRESULT hr = Get_HasFile(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word HasFile = {read=_scw_Get_HasFile};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Level() { int r; HRESULT hr = Get_Level(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Level = {read=_scw_Get_Level};
};

__dispinterface SubdocumentDisp;
typedef System::DelphiInterface<SubdocumentDisp> _di_SubdocumentDisp;
__dispinterface INTERFACE_UUID("{00020989-0000-0000-C000-000000000046}") SubdocumentDisp  : public IDispatch 
{
	
};

__interface HeadingStyle;
typedef System::DelphiInterface<HeadingStyle> _di_HeadingStyle;
__interface INTERFACE_UUID("{0002098A-0000-0000-C000-000000000046}") HeadingStyles  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_HeadingStyle &Item_result) = 0 ;
	virtual HRESULT __safecall Add(OleVariant &Style, short Level, _di_HeadingStyle &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface HeadingStylesDisp;
typedef System::DelphiInterface<HeadingStylesDisp> _di_HeadingStylesDisp;
__dispinterface INTERFACE_UUID("{0002098A-0000-0000-C000-000000000046}") HeadingStylesDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002098B-0000-0000-C000-000000000046}") HeadingStyle  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Style(OleVariant &Get_Style_result) = 0 ;
	virtual HRESULT __safecall Set_Style(OleVariant &prop) = 0 ;
	virtual HRESULT __safecall Get_Level(short &Get_Level_result) = 0 ;
	virtual HRESULT __safecall Set_Level(short prop) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline short _scw_Get_Level() { short r; HRESULT hr = Get_Level(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property short Level = {read=_scw_Get_Level, write=Set_Level};
};

__dispinterface HeadingStyleDisp;
typedef System::DelphiInterface<HeadingStyleDisp> _di_HeadingStyleDisp;
__dispinterface INTERFACE_UUID("{0002098B-0000-0000-C000-000000000046}") HeadingStyleDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002098C-0000-0000-C000-000000000046}") StoryRanges  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Item(Activex::TOleEnum Index, _di_Range &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface StoryRangesDisp;
typedef System::DelphiInterface<StoryRangesDisp> _di_StoryRangesDisp;
__dispinterface INTERFACE_UUID("{0002098C-0000-0000-C000-000000000046}") StoryRangesDisp  : public IDispatch 
{
	
};

__interface ListLevel;
typedef System::DelphiInterface<ListLevel> _di_ListLevel;
__interface INTERFACE_UUID("{0002098D-0000-0000-C000-000000000046}") ListLevel  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_NumberFormat(WideString &Get_NumberFormat_result) = 0 ;
	virtual HRESULT __safecall Set_NumberFormat(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_TrailingCharacter(Activex::TOleEnum &Get_TrailingCharacter_result) = 0 ;
	virtual HRESULT __safecall Set_TrailingCharacter(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_NumberStyle(Activex::TOleEnum &Get_NumberStyle_result) = 0 ;
	virtual HRESULT __safecall Set_NumberStyle(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_NumberPosition(float &Get_NumberPosition_result) = 0 ;
	virtual HRESULT __safecall Set_NumberPosition(float prop) = 0 ;
	virtual HRESULT __safecall Get_Alignment(Activex::TOleEnum &Get_Alignment_result) = 0 ;
	virtual HRESULT __safecall Set_Alignment(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_TextPosition(float &Get_TextPosition_result) = 0 ;
	virtual HRESULT __safecall Set_TextPosition(float prop) = 0 ;
	virtual HRESULT __safecall Get_TabPosition(float &Get_TabPosition_result) = 0 ;
	virtual HRESULT __safecall Set_TabPosition(float prop) = 0 ;
	virtual HRESULT __safecall Get_ResetOnHigherOld(Word &Get_ResetOnHigherOld_result) = 0 ;
	virtual HRESULT __safecall Set_ResetOnHigherOld(Word prop) = 0 ;
	virtual HRESULT __safecall Get_StartAt(int &Get_StartAt_result) = 0 ;
	virtual HRESULT __safecall Set_StartAt(int prop) = 0 ;
	virtual HRESULT __safecall Get_LinkedStyle(WideString &Get_LinkedStyle_result) = 0 ;
	virtual HRESULT __safecall Set_LinkedStyle(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Font(_di__Font &Get_Font_result) = 0 ;
	virtual HRESULT __safecall Set_Font(const _di__Font prop) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_ResetOnHigher(int &Get_ResetOnHigher_result) = 0 ;
	virtual HRESULT __safecall Set_ResetOnHigher(int prop) = 0 ;
	virtual HRESULT __safecall Get_PictureBullet(_di_InlineShape &Get_PictureBullet_result) = 0 ;
	virtual HRESULT __safecall ApplyPictureBullet(const WideString FileName, _di_InlineShape &ApplyPictureBullet_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_NumberFormat() { WideString r; HRESULT hr = Get_NumberFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString NumberFormat = {read=_scw_Get_NumberFormat, write=Set_NumberFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_TrailingCharacter() { Activex::TOleEnum r; HRESULT hr = Get_TrailingCharacter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum TrailingCharacter = {read=_scw_Get_TrailingCharacter, write=Set_TrailingCharacter};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_NumberStyle() { Activex::TOleEnum r; HRESULT hr = Get_NumberStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum NumberStyle = {read=_scw_Get_NumberStyle, write=Set_NumberStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_NumberPosition() { float r; HRESULT hr = Get_NumberPosition(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float NumberPosition = {read=_scw_Get_NumberPosition, write=Set_NumberPosition};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Alignment() { Activex::TOleEnum r; HRESULT hr = Get_Alignment(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Alignment = {read=_scw_Get_Alignment, write=Set_Alignment};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_TextPosition() { float r; HRESULT hr = Get_TextPosition(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float TextPosition = {read=_scw_Get_TextPosition, write=Set_TextPosition};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_TabPosition() { float r; HRESULT hr = Get_TabPosition(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float TabPosition = {read=_scw_Get_TabPosition, write=Set_TabPosition};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ResetOnHigherOld() { Word r; HRESULT hr = Get_ResetOnHigherOld(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ResetOnHigherOld = {read=_scw_Get_ResetOnHigherOld, write=Set_ResetOnHigherOld};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_StartAt() { int r; HRESULT hr = Get_StartAt(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int StartAt = {read=_scw_Get_StartAt, write=Set_StartAt};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_LinkedStyle() { WideString r; HRESULT hr = Get_LinkedStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString LinkedStyle = {read=_scw_Get_LinkedStyle, write=Set_LinkedStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Font _scw_Get_Font() { _di__Font r; HRESULT hr = Get_Font(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Font Font = {read=_scw_Get_Font, write=Set_Font};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_ResetOnHigher() { int r; HRESULT hr = Get_ResetOnHigher(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int ResetOnHigher = {read=_scw_Get_ResetOnHigher, write=Set_ResetOnHigher};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_InlineShape _scw_Get_PictureBullet() { _di_InlineShape r; HRESULT hr = Get_PictureBullet(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_InlineShape PictureBullet = {read=_scw_Get_PictureBullet};
};

__dispinterface ListLevelDisp;
typedef System::DelphiInterface<ListLevelDisp> _di_ListLevelDisp;
__dispinterface INTERFACE_UUID("{0002098D-0000-0000-C000-000000000046}") ListLevelDisp  : public IDispatch 
{
	
};

__interface ListLevels;
typedef System::DelphiInterface<ListLevels> _di_ListLevels;
__interface INTERFACE_UUID("{0002098E-0000-0000-C000-000000000046}") ListLevels  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_ListLevel &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface ListLevelsDisp;
typedef System::DelphiInterface<ListLevelsDisp> _di_ListLevelsDisp;
__dispinterface INTERFACE_UUID("{0002098E-0000-0000-C000-000000000046}") ListLevelsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002098F-0000-0000-C000-000000000046}") ListTemplate  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_OutlineNumbered(Word &Get_OutlineNumbered_result) = 0 ;
	virtual HRESULT __safecall Set_OutlineNumbered(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Set_Name(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_ListLevels(_di_ListLevels &Get_ListLevels_result) = 0 ;
	virtual HRESULT __safecall Convert(OleVariant &Level, _di_ListTemplate &Convert_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_OutlineNumbered() { Word r; HRESULT hr = Get_OutlineNumbered(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word OutlineNumbered = {read=_scw_Get_OutlineNumbered, write=Set_OutlineNumbered};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name, write=Set_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ListLevels _scw_Get_ListLevels() { _di_ListLevels r; HRESULT hr = Get_ListLevels(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ListLevels ListLevels = {read=_scw_Get_ListLevels};
};

__dispinterface ListTemplateDisp;
typedef System::DelphiInterface<ListTemplateDisp> _di_ListTemplateDisp;
__dispinterface INTERFACE_UUID("{0002098F-0000-0000-C000-000000000046}") ListTemplateDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020990-0000-0000-C000-000000000046}") ListTemplates  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_ListTemplate &Item_result) = 0 ;
	virtual HRESULT __safecall Add(OleVariant &OutlineNumbered, OleVariant &Name, _di_ListTemplate &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface ListTemplatesDisp;
typedef System::DelphiInterface<ListTemplatesDisp> _di_ListTemplatesDisp;
__dispinterface INTERFACE_UUID("{00020990-0000-0000-C000-000000000046}") ListTemplatesDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020991-0000-0000-C000-000000000046}") ListParagraphs  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_Paragraph &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface ListParagraphsDisp;
typedef System::DelphiInterface<ListParagraphsDisp> _di_ListParagraphsDisp;
__dispinterface INTERFACE_UUID("{00020991-0000-0000-C000-000000000046}") ListParagraphsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020992-0000-0000-C000-000000000046}") List  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Get_ListParagraphs(_di_ListParagraphs &Get_ListParagraphs_result) = 0 ;
	virtual HRESULT __safecall Get_SingleListTemplate(Word &Get_SingleListTemplate_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall ConvertNumbersToText(OleVariant &NumberType) = 0 ;
	virtual HRESULT __safecall RemoveNumbers(OleVariant &NumberType) = 0 ;
	virtual HRESULT __safecall CountNumberedItems(OleVariant &NumberType, OleVariant &Level, int &CountNumberedItems_result) = 0 ;
	virtual HRESULT __safecall ApplyListTemplateOld(const _di_ListTemplate ListTemplate, OleVariant &ContinuePreviousList) = 0 ;
	virtual HRESULT __safecall CanContinuePreviousList(const _di_ListTemplate ListTemplate, Activex::TOleEnum &CanContinuePreviousList_result) = 0 ;
	virtual HRESULT __safecall ApplyListTemplate(const _di_ListTemplate ListTemplate, OleVariant &ContinuePreviousList, OleVariant &DefaultListBehavior) = 0 ;
	virtual HRESULT __safecall Get_StyleName(WideString &Get_StyleName_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ListParagraphs _scw_Get_ListParagraphs() { _di_ListParagraphs r; HRESULT hr = Get_ListParagraphs(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ListParagraphs ListParagraphs = {read=_scw_Get_ListParagraphs};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SingleListTemplate() { Word r; HRESULT hr = Get_SingleListTemplate(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SingleListTemplate = {read=_scw_Get_SingleListTemplate};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_StyleName() { WideString r; HRESULT hr = Get_StyleName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString StyleName = {read=_scw_Get_StyleName};
};

__dispinterface ListDisp;
typedef System::DelphiInterface<ListDisp> _di_ListDisp;
__dispinterface INTERFACE_UUID("{00020992-0000-0000-C000-000000000046}") ListDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020993-0000-0000-C000-000000000046}") Lists  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_List &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface ListsDisp;
typedef System::DelphiInterface<ListsDisp> _di_ListsDisp;
__dispinterface INTERFACE_UUID("{00020993-0000-0000-C000-000000000046}") ListsDisp  : public IDispatch 
{
	
};

__interface ListGallery;
typedef System::DelphiInterface<ListGallery> _di_ListGallery;
__interface INTERFACE_UUID("{00020994-0000-0000-C000-000000000046}") ListGallery  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_ListTemplates(_di_ListTemplates &Get_ListTemplates_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Modified(int Index, Word &Get_Modified_result) = 0 ;
	virtual HRESULT __safecall Reset(int Index) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ListTemplates _scw_Get_ListTemplates() { _di_ListTemplates r; HRESULT hr = Get_ListTemplates(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ListTemplates ListTemplates = {read=_scw_Get_ListTemplates};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Modified(int Index) { Word r; HRESULT hr = Get_Modified(Index, r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Modified[int Index] = {read=_scw_Get_Modified};
};

__dispinterface ListGalleryDisp;
typedef System::DelphiInterface<ListGalleryDisp> _di_ListGalleryDisp;
__dispinterface INTERFACE_UUID("{00020994-0000-0000-C000-000000000046}") ListGalleryDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020995-0000-0000-C000-000000000046}") ListGalleries  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Item(Activex::TOleEnum Index, _di_ListGallery &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface ListGalleriesDisp;
typedef System::DelphiInterface<ListGalleriesDisp> _di_ListGalleriesDisp;
__dispinterface INTERFACE_UUID("{00020995-0000-0000-C000-000000000046}") ListGalleriesDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020996-0000-0000-C000-000000000046}") KeyBindings  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Context(_di_IDispatch &Get_Context_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_KeyBinding &Item_result) = 0 ;
	virtual HRESULT __safecall Add(Activex::TOleEnum KeyCategory, const WideString Command, int KeyCode, OleVariant &KeyCode2, OleVariant &CommandParameter, _di_KeyBinding &Add_result) = 0 ;
	virtual HRESULT __safecall ClearAll(void) = 0 ;
	virtual HRESULT __safecall Key(int KeyCode, OleVariant &KeyCode2, _di_KeyBinding &Key_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Context() { _di_IDispatch r; HRESULT hr = Get_Context(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Context = {read=_scw_Get_Context};
};

__dispinterface KeyBindingsDisp;
typedef System::DelphiInterface<KeyBindingsDisp> _di_KeyBindingsDisp;
__dispinterface INTERFACE_UUID("{00020996-0000-0000-C000-000000000046}") KeyBindingsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020997-0000-0000-C000-000000000046}") KeysBoundTo  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_KeyCategory(Activex::TOleEnum &Get_KeyCategory_result) = 0 ;
	virtual HRESULT __safecall Get_Command(WideString &Get_Command_result) = 0 ;
	virtual HRESULT __safecall Get_CommandParameter(WideString &Get_CommandParameter_result) = 0 ;
	virtual HRESULT __safecall Get_Context(_di_IDispatch &Get_Context_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_KeyBinding &Item_result) = 0 ;
	virtual HRESULT __safecall Key(int KeyCode, OleVariant &KeyCode2, _di_KeyBinding &Key_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_KeyCategory() { Activex::TOleEnum r; HRESULT hr = Get_KeyCategory(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum KeyCategory = {read=_scw_Get_KeyCategory};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Command() { WideString r; HRESULT hr = Get_Command(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Command = {read=_scw_Get_Command};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_CommandParameter() { WideString r; HRESULT hr = Get_CommandParameter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString CommandParameter = {read=_scw_Get_CommandParameter};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Context() { _di_IDispatch r; HRESULT hr = Get_Context(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Context = {read=_scw_Get_Context};
};

__dispinterface KeysBoundToDisp;
typedef System::DelphiInterface<KeysBoundToDisp> _di_KeysBoundToDisp;
__dispinterface INTERFACE_UUID("{00020997-0000-0000-C000-000000000046}") KeysBoundToDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{00020998-0000-0000-C000-000000000046}") KeyBinding  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Command(WideString &Get_Command_result) = 0 ;
	virtual HRESULT __safecall Get_KeyString(WideString &Get_KeyString_result) = 0 ;
	virtual HRESULT __safecall Get_Protected_(Word &Get_Protected__result) = 0 ;
	virtual HRESULT __safecall Get_KeyCategory(Activex::TOleEnum &Get_KeyCategory_result) = 0 ;
	virtual HRESULT __safecall Get_KeyCode(int &Get_KeyCode_result) = 0 ;
	virtual HRESULT __safecall Get_KeyCode2(int &Get_KeyCode2_result) = 0 ;
	virtual HRESULT __safecall Get_CommandParameter(WideString &Get_CommandParameter_result) = 0 ;
	virtual HRESULT __safecall Get_Context(_di_IDispatch &Get_Context_result) = 0 ;
	virtual HRESULT __safecall Clear(void) = 0 ;
	virtual HRESULT __safecall Disable(void) = 0 ;
	virtual HRESULT __safecall Execute(void) = 0 ;
	virtual HRESULT __safecall Rebind(Activex::TOleEnum KeyCategory, const WideString Command, OleVariant &CommandParameter) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Command() { WideString r; HRESULT hr = Get_Command(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Command = {read=_scw_Get_Command};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_KeyString() { WideString r; HRESULT hr = Get_KeyString(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString KeyString = {read=_scw_Get_KeyString};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Protected_() { Word r; HRESULT hr = Get_Protected_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Protected_ = {read=_scw_Get_Protected_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_KeyCategory() { Activex::TOleEnum r; HRESULT hr = Get_KeyCategory(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum KeyCategory = {read=_scw_Get_KeyCategory};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_KeyCode() { int r; HRESULT hr = Get_KeyCode(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int KeyCode = {read=_scw_Get_KeyCode};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_KeyCode2() { int r; HRESULT hr = Get_KeyCode2(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int KeyCode2 = {read=_scw_Get_KeyCode2};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_CommandParameter() { WideString r; HRESULT hr = Get_CommandParameter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString CommandParameter = {read=_scw_Get_CommandParameter};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Context() { _di_IDispatch r; HRESULT hr = Get_Context(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Context = {read=_scw_Get_Context};
};

__dispinterface KeyBindingDisp;
typedef System::DelphiInterface<KeyBindingDisp> _di_KeyBindingDisp;
__dispinterface INTERFACE_UUID("{00020998-0000-0000-C000-000000000046}") KeyBindingDisp  : public IDispatch 
{
	
};

__interface FileConverter;
typedef System::DelphiInterface<FileConverter> _di_FileConverter;
__interface INTERFACE_UUID("{00020999-0000-0000-C000-000000000046}") FileConverter  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_FormatName(WideString &Get_FormatName_result) = 0 ;
	virtual HRESULT __safecall Get_ClassName(WideString &Get_ClassName_result) = 0 ;
	virtual HRESULT __safecall Get_SaveFormat(int &Get_SaveFormat_result) = 0 ;
	virtual HRESULT __safecall Get_OpenFormat(int &Get_OpenFormat_result) = 0 ;
	virtual HRESULT __safecall Get_CanSave(Word &Get_CanSave_result) = 0 ;
	virtual HRESULT __safecall Get_CanOpen(Word &Get_CanOpen_result) = 0 ;
	virtual HRESULT __safecall Get_Path(WideString &Get_Path_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Get_Extensions(WideString &Get_Extensions_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_FormatName() { WideString r; HRESULT hr = Get_FormatName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString FormatName = {read=_scw_Get_FormatName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ClassName() { WideString r; HRESULT hr = Get_ClassName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ClassName = {read=_scw_Get_ClassName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_SaveFormat() { int r; HRESULT hr = Get_SaveFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int SaveFormat = {read=_scw_Get_SaveFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_OpenFormat() { int r; HRESULT hr = Get_OpenFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int OpenFormat = {read=_scw_Get_OpenFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_CanSave() { Word r; HRESULT hr = Get_CanSave(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word CanSave = {read=_scw_Get_CanSave};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_CanOpen() { Word r; HRESULT hr = Get_CanOpen(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word CanOpen = {read=_scw_Get_CanOpen};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Path() { WideString r; HRESULT hr = Get_Path(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Path = {read=_scw_Get_Path};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Extensions() { WideString r; HRESULT hr = Get_Extensions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Extensions = {read=_scw_Get_Extensions};
};

__dispinterface FileConverterDisp;
typedef System::DelphiInterface<FileConverterDisp> _di_FileConverterDisp;
__dispinterface INTERFACE_UUID("{00020999-0000-0000-C000-000000000046}") FileConverterDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002099A-0000-0000-C000-000000000046}") FileConverters  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_ConvertMacWordChevrons(Activex::TOleEnum &Get_ConvertMacWordChevrons_result) = 0 ;
	virtual HRESULT __safecall Set_ConvertMacWordChevrons(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_FileConverter &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_ConvertMacWordChevrons() { Activex::TOleEnum r; HRESULT hr = Get_ConvertMacWordChevrons(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum ConvertMacWordChevrons = {read=_scw_Get_ConvertMacWordChevrons, write=Set_ConvertMacWordChevrons};
};

__dispinterface FileConvertersDisp;
typedef System::DelphiInterface<FileConvertersDisp> _di_FileConvertersDisp;
__dispinterface INTERFACE_UUID("{0002099A-0000-0000-C000-000000000046}") FileConvertersDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002099B-0000-0000-C000-000000000046}") SynonymInfo  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Word(WideString &Get_Word_result) = 0 ;
	virtual HRESULT __safecall Get_Found(Word &Get_Found_result) = 0 ;
	virtual HRESULT __safecall Get_MeaningCount(int &Get_MeaningCount_result) = 0 ;
	virtual HRESULT __safecall Get_MeaningList(OleVariant &Get_MeaningList_result) = 0 ;
	virtual HRESULT __safecall Get_PartOfSpeechList(OleVariant &Get_PartOfSpeechList_result) = 0 ;
	virtual HRESULT __safecall Get_SynonymList(OleVariant &Meaning, OleVariant &Get_SynonymList_result) = 0 ;
	virtual HRESULT __safecall Get_AntonymList(OleVariant &Get_AntonymList_result) = 0 ;
	virtual HRESULT __safecall Get_RelatedExpressionList(OleVariant &Get_RelatedExpressionList_result) = 0 ;
	virtual HRESULT __safecall Get_RelatedWordList(OleVariant &Get_RelatedWordList_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Word() { WideString r; HRESULT hr = Get_Word(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString _Word = {read=_scw_Get_Word};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Found() { Word r; HRESULT hr = Get_Found(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Found = {read=_scw_Get_Found};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_MeaningCount() { int r; HRESULT hr = Get_MeaningCount(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int MeaningCount = {read=_scw_Get_MeaningCount};
	#pragma option push -w-inl
	/* safecall wrapper */ inline OleVariant _scw_Get_MeaningList() { OleVariant r; HRESULT hr = Get_MeaningList(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property OleVariant MeaningList = {read=_scw_Get_MeaningList};
	#pragma option push -w-inl
	/* safecall wrapper */ inline OleVariant _scw_Get_PartOfSpeechList() { OleVariant r; HRESULT hr = Get_PartOfSpeechList(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property OleVariant PartOfSpeechList = {read=_scw_Get_PartOfSpeechList};
	#pragma option push -w-inl
	/* safecall wrapper */ inline OleVariant _scw_Get_SynonymList(OleVariant &Meaning) { OleVariant r; HRESULT hr = Get_SynonymList(Meaning, r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property OleVariant SynonymList[OleVariant Meaning] = {read=_scw_Get_SynonymList};
	#pragma option push -w-inl
	/* safecall wrapper */ inline OleVariant _scw_Get_AntonymList() { OleVariant r; HRESULT hr = Get_AntonymList(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property OleVariant AntonymList = {read=_scw_Get_AntonymList};
	#pragma option push -w-inl
	/* safecall wrapper */ inline OleVariant _scw_Get_RelatedExpressionList() { OleVariant r; HRESULT hr = Get_RelatedExpressionList(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property OleVariant RelatedExpressionList = {read=_scw_Get_RelatedExpressionList};
	#pragma option push -w-inl
	/* safecall wrapper */ inline OleVariant _scw_Get_RelatedWordList() { OleVariant r; HRESULT hr = Get_RelatedWordList(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property OleVariant RelatedWordList = {read=_scw_Get_RelatedWordList};
};

__dispinterface SynonymInfoDisp;
typedef System::DelphiInterface<SynonymInfoDisp> _di_SynonymInfoDisp;
__dispinterface INTERFACE_UUID("{0002099B-0000-0000-C000-000000000046}") SynonymInfoDisp  : public IDispatch 
{
	
};

__interface Hyperlink;
typedef System::DelphiInterface<Hyperlink> _di_Hyperlink;
__interface INTERFACE_UUID("{0002099C-0000-0000-C000-000000000046}") Hyperlinks  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_Hyperlink &Item_result) = 0 ;
	virtual HRESULT __safecall _Add(const _di_IDispatch Anchor, OleVariant &Address, OleVariant &SubAddress, _di_Hyperlink &_Add_result) = 0 ;
	virtual HRESULT __safecall Add(const _di_IDispatch Anchor, OleVariant &Address, OleVariant &SubAddress, OleVariant &ScreenTip, OleVariant &TextToDisplay, OleVariant &Target, _di_Hyperlink &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
};

__dispinterface HyperlinksDisp;
typedef System::DelphiInterface<HyperlinksDisp> _di_HyperlinksDisp;
__dispinterface INTERFACE_UUID("{0002099C-0000-0000-C000-000000000046}") HyperlinksDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{0002099D-0000-0000-C000-000000000046}") Hyperlink  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Get_AddressOld(WideString &Get_AddressOld_result) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Get_Shape(_di_Shape &Get_Shape_result) = 0 ;
	virtual HRESULT __safecall Get_SubAddressOld(WideString &Get_SubAddressOld_result) = 0 ;
	virtual HRESULT __safecall Get_ExtraInfoRequired(Word &Get_ExtraInfoRequired_result) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall Follow(OleVariant &NewWindow, OleVariant &AddHistory, OleVariant &ExtraInfo, OleVariant &Method, OleVariant &HeaderInfo) = 0 ;
	virtual HRESULT __safecall AddToFavorites(void) = 0 ;
	virtual HRESULT __safecall CreateNewDocument(const WideString FileName, Word EditNow, Word Overwrite) = 0 ;
	virtual HRESULT __safecall Get_Address(WideString &Get_Address_result) = 0 ;
	virtual HRESULT __safecall Set_Address(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_SubAddress(WideString &Get_SubAddress_result) = 0 ;
	virtual HRESULT __safecall Set_SubAddress(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_EmailSubject(WideString &Get_EmailSubject_result) = 0 ;
	virtual HRESULT __safecall Set_EmailSubject(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_ScreenTip(WideString &Get_ScreenTip_result) = 0 ;
	virtual HRESULT __safecall Set_ScreenTip(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_TextToDisplay(WideString &Get_TextToDisplay_result) = 0 ;
	virtual HRESULT __safecall Set_TextToDisplay(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Target(WideString &Get_Target_result) = 0 ;
	virtual HRESULT __safecall Set_Target(const WideString prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_AddressOld() { WideString r; HRESULT hr = Get_AddressOld(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString AddressOld = {read=_scw_Get_AddressOld};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shape _scw_Get_Shape() { _di_Shape r; HRESULT hr = Get_Shape(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shape Shape = {read=_scw_Get_Shape};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_SubAddressOld() { WideString r; HRESULT hr = Get_SubAddressOld(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString SubAddressOld = {read=_scw_Get_SubAddressOld};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ExtraInfoRequired() { Word r; HRESULT hr = Get_ExtraInfoRequired(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ExtraInfoRequired = {read=_scw_Get_ExtraInfoRequired};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Address() { WideString r; HRESULT hr = Get_Address(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Address = {read=_scw_Get_Address, write=Set_Address};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_SubAddress() { WideString r; HRESULT hr = Get_SubAddress(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString SubAddress = {read=_scw_Get_SubAddress, write=Set_SubAddress};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_EmailSubject() { WideString r; HRESULT hr = Get_EmailSubject(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString EmailSubject = {read=_scw_Get_EmailSubject, write=Set_EmailSubject};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ScreenTip() { WideString r; HRESULT hr = Get_ScreenTip(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ScreenTip = {read=_scw_Get_ScreenTip, write=Set_ScreenTip};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_TextToDisplay() { WideString r; HRESULT hr = Get_TextToDisplay(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString TextToDisplay = {read=_scw_Get_TextToDisplay, write=Set_TextToDisplay};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Target() { WideString r; HRESULT hr = Get_Target(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Target = {read=_scw_Get_Target, write=Set_Target};
};

__dispinterface HyperlinkDisp;
typedef System::DelphiInterface<HyperlinkDisp> _di_HyperlinkDisp;
__dispinterface INTERFACE_UUID("{0002099D-0000-0000-C000-000000000046}") HyperlinkDisp  : public IDispatch 
{
	
};

__interface FreeformBuilder;
typedef System::DelphiInterface<FreeformBuilder> _di_FreeformBuilder;
__interface INTERFACE_UUID("{0002099F-0000-0000-C000-000000000046}") Shapes  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_Shape &Item_result) = 0 ;
	virtual HRESULT __safecall AddCallout(Activex::TOleEnum Type_, float Left, float Top, float Width, float Height, OleVariant &Anchor, _di_Shape &AddCallout_result) = 0 ;
	virtual HRESULT __safecall AddConnector(Activex::TOleEnum Type_, float BeginX, float BeginY, float EndX, float EndY, _di_Shape &AddConnector_result) = 0 ;
	virtual HRESULT __safecall AddCurve(OleVariant &SafeArrayOfPoints, OleVariant &Anchor, _di_Shape &AddCurve_result) = 0 ;
	virtual HRESULT __safecall AddLabel(Activex::TOleEnum Orientation, float Left, float Top, float Width, float Height, OleVariant &Anchor, _di_Shape &AddLabel_result) = 0 ;
	virtual HRESULT __safecall AddLine(float BeginX, float BeginY, float EndX, float EndY, OleVariant &Anchor, _di_Shape &AddLine_result) = 0 ;
	virtual HRESULT __safecall AddPicture(const WideString FileName, OleVariant &LinkToFile, OleVariant &SaveWithDocument, OleVariant &Left, OleVariant &Top, OleVariant &Width, OleVariant &Height, OleVariant &Anchor, _di_Shape &AddPicture_result) = 0 ;
	virtual HRESULT __safecall AddPolyline(OleVariant &SafeArrayOfPoints, OleVariant &Anchor, _di_Shape &AddPolyline_result) = 0 ;
	virtual HRESULT __safecall AddShape(int Type_, float Left, float Top, float Width, float Height, OleVariant &Anchor, _di_Shape &AddShape_result) = 0 ;
	virtual HRESULT __safecall AddTextEffect(Activex::TOleEnum PresetTextEffect, const WideString Text, const WideString FontName, float FontSize, Activex::TOleEnum FontBold, Activex::TOleEnum FontItalic, float Left, float Top, OleVariant &Anchor, _di_Shape &AddTextEffect_result) = 0 ;
	virtual HRESULT __safecall AddTextbox(Activex::TOleEnum Orientation, float Left, float Top, float Width, float Height, OleVariant &Anchor, _di_Shape &AddTextbox_result) = 0 ;
	virtual HRESULT __safecall BuildFreeform(Activex::TOleEnum EditingType, float X1, float Y1, _di_FreeformBuilder &BuildFreeform_result) = 0 ;
	virtual HRESULT __safecall Range(OleVariant &Index, _di_ShapeRange &Range_result) = 0 ;
	virtual HRESULT __safecall SelectAll(void) = 0 ;
	virtual HRESULT __safecall AddOLEObject(OleVariant &ClassType, OleVariant &FileName, OleVariant &LinkToFile, OleVariant &DisplayAsIcon, OleVariant &IconFileName, OleVariant &IconIndex, OleVariant &IconLabel, OleVariant &Left, OleVariant &Top, OleVariant &Width, OleVariant &Height, OleVariant &Anchor, _di_Shape &AddOLEObject_result) = 0 ;
	virtual HRESULT __safecall AddOLEControl(OleVariant &ClassType, OleVariant &Left, OleVariant &Top, OleVariant &Width, OleVariant &Height, OleVariant &Anchor, _di_Shape &AddOLEControl_result) = 0 ;
	virtual HRESULT __safecall AddDiagram(Activex::TOleEnum Type_, float Left, float Top, float Width, float Height, OleVariant &Anchor, _di_Shape &AddDiagram_result) = 0 ;
	virtual HRESULT __safecall AddCanvas(float Left, float Top, float Width, float Height, OleVariant &Anchor, _di_Shape &AddCanvas_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
};

__dispinterface ShapesDisp;
typedef System::DelphiInterface<ShapesDisp> _di_ShapesDisp;
__dispinterface INTERFACE_UUID("{0002099F-0000-0000-C000-000000000046}") ShapesDisp  : public IDispatch 
{
	
};

__interface Adjustments;
typedef System::DelphiInterface<Adjustments> _di_Adjustments;
__interface CalloutFormat;
typedef System::DelphiInterface<CalloutFormat> _di_CalloutFormat;
__interface ConnectorFormat;
typedef System::DelphiInterface<ConnectorFormat> _di_ConnectorFormat;
__interface FillFormat;
typedef System::DelphiInterface<FillFormat> _di_FillFormat;
__interface GroupShapes;
typedef System::DelphiInterface<GroupShapes> _di_GroupShapes;
__interface LineFormat;
typedef System::DelphiInterface<LineFormat> _di_LineFormat;
__interface ShapeNodes;
typedef System::DelphiInterface<ShapeNodes> _di_ShapeNodes;
__interface PictureFormat;
typedef System::DelphiInterface<PictureFormat> _di_PictureFormat;
__interface ShadowFormat;
typedef System::DelphiInterface<ShadowFormat> _di_ShadowFormat;
__interface TextEffectFormat;
typedef System::DelphiInterface<TextEffectFormat> _di_TextEffectFormat;
__interface TextFrame;
typedef System::DelphiInterface<TextFrame> _di_TextFrame;
__interface ThreeDFormat;
typedef System::DelphiInterface<ThreeDFormat> _di_ThreeDFormat;
__interface WrapFormat;
typedef System::DelphiInterface<WrapFormat> _di_WrapFormat;
__interface DiagramNode;
typedef System::DelphiInterface<DiagramNode> _di_DiagramNode;
__interface CanvasShapes;
typedef System::DelphiInterface<CanvasShapes> _di_CanvasShapes;
__interface INTERFACE_UUID("{000209B5-0000-0000-C000-000000000046}") ShapeRange  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Adjustments(_di_Adjustments &Get_Adjustments_result) = 0 ;
	virtual HRESULT __safecall Get_AutoShapeType(Activex::TOleEnum &Get_AutoShapeType_result) = 0 ;
	virtual HRESULT __safecall Set_AutoShapeType(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Callout(_di_CalloutFormat &Get_Callout_result) = 0 ;
	virtual HRESULT __safecall Get_ConnectionSiteCount(int &Get_ConnectionSiteCount_result) = 0 ;
	virtual HRESULT __safecall Get_Connector(Activex::TOleEnum &Get_Connector_result) = 0 ;
	virtual HRESULT __safecall Get_ConnectorFormat(_di_ConnectorFormat &Get_ConnectorFormat_result) = 0 ;
	virtual HRESULT __safecall Get_Fill(_di_FillFormat &Get_Fill_result) = 0 ;
	virtual HRESULT __safecall Get_GroupItems(_di_GroupShapes &Get_GroupItems_result) = 0 ;
	virtual HRESULT __safecall Get_Height(float &Get_Height_result) = 0 ;
	virtual HRESULT __safecall Set_Height(float prop) = 0 ;
	virtual HRESULT __safecall Get_HorizontalFlip(Activex::TOleEnum &Get_HorizontalFlip_result) = 0 ;
	virtual HRESULT __safecall Get_Left(float &Get_Left_result) = 0 ;
	virtual HRESULT __safecall Set_Left(float prop) = 0 ;
	virtual HRESULT __safecall Get_Line(_di_LineFormat &Get_Line_result) = 0 ;
	virtual HRESULT __safecall Get_LockAspectRatio(Activex::TOleEnum &Get_LockAspectRatio_result) = 0 ;
	virtual HRESULT __safecall Set_LockAspectRatio(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Set_Name(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Nodes(_di_ShapeNodes &Get_Nodes_result) = 0 ;
	virtual HRESULT __safecall Get_Rotation(float &Get_Rotation_result) = 0 ;
	virtual HRESULT __safecall Set_Rotation(float prop) = 0 ;
	virtual HRESULT __safecall Get_PictureFormat(_di_PictureFormat &Get_PictureFormat_result) = 0 ;
	virtual HRESULT __safecall Get_Shadow(_di_ShadowFormat &Get_Shadow_result) = 0 ;
	virtual HRESULT __safecall Get_TextEffect(_di_TextEffectFormat &Get_TextEffect_result) = 0 ;
	virtual HRESULT __safecall Get_TextFrame(_di_TextFrame &Get_TextFrame_result) = 0 ;
	virtual HRESULT __safecall Get_ThreeD(_di_ThreeDFormat &Get_ThreeD_result) = 0 ;
	virtual HRESULT __safecall Get_Top(float &Get_Top_result) = 0 ;
	virtual HRESULT __safecall Set_Top(float prop) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Get_VerticalFlip(Activex::TOleEnum &Get_VerticalFlip_result) = 0 ;
	virtual HRESULT __safecall Get_Vertices(OleVariant &Get_Vertices_result) = 0 ;
	virtual HRESULT __safecall Get_Visible(Activex::TOleEnum &Get_Visible_result) = 0 ;
	virtual HRESULT __safecall Set_Visible(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Width(float &Get_Width_result) = 0 ;
	virtual HRESULT __safecall Set_Width(float prop) = 0 ;
	virtual HRESULT __safecall Get_ZOrderPosition(int &Get_ZOrderPosition_result) = 0 ;
	virtual HRESULT __safecall Get_Hyperlink(_di_Hyperlink &Get_Hyperlink_result) = 0 ;
	virtual HRESULT __safecall Get_RelativeHorizontalPosition(Activex::TOleEnum &Get_RelativeHorizontalPosition_result) = 0 ;
	virtual HRESULT __safecall Set_RelativeHorizontalPosition(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_RelativeVerticalPosition(Activex::TOleEnum &Get_RelativeVerticalPosition_result) = 0 ;
	virtual HRESULT __safecall Set_RelativeVerticalPosition(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_LockAnchor(int &Get_LockAnchor_result) = 0 ;
	virtual HRESULT __safecall Set_LockAnchor(int prop) = 0 ;
	virtual HRESULT __safecall Get_WrapFormat(_di_WrapFormat &Get_WrapFormat_result) = 0 ;
	virtual HRESULT __safecall Get_Anchor(_di_Range &Get_Anchor_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_Shape &Item_result) = 0 ;
	virtual HRESULT __safecall Align(Activex::TOleEnum Align, int RelativeTo) = 0 ;
	virtual HRESULT __safecall Apply(void) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall Distribute(Activex::TOleEnum Distribute, int RelativeTo) = 0 ;
	virtual HRESULT __safecall Duplicate(_di_ShapeRange &Duplicate_result) = 0 ;
	virtual HRESULT __safecall Flip(Activex::TOleEnum FlipCmd) = 0 ;
	virtual HRESULT __safecall IncrementLeft(float Increment) = 0 ;
	virtual HRESULT __safecall IncrementRotation(float Increment) = 0 ;
	virtual HRESULT __safecall IncrementTop(float Increment) = 0 ;
	virtual HRESULT __safecall Group(_di_Shape &Group_result) = 0 ;
	virtual HRESULT __safecall PickUp(void) = 0 ;
	virtual HRESULT __safecall Regroup(_di_Shape &Regroup_result) = 0 ;
	virtual HRESULT __safecall RerouteConnections(void) = 0 ;
	virtual HRESULT __safecall ScaleHeight(float Factor, Activex::TOleEnum RelativeToOriginalSize, Activex::TOleEnum Scale) = 0 ;
	virtual HRESULT __safecall ScaleWidth(float Factor, Activex::TOleEnum RelativeToOriginalSize, Activex::TOleEnum Scale) = 0 ;
	virtual HRESULT __safecall Select(OleVariant &Replace) = 0 ;
	virtual HRESULT __safecall SetShapesDefaultProperties(void) = 0 ;
	virtual HRESULT __safecall Ungroup(_di_ShapeRange &Ungroup_result) = 0 ;
	virtual HRESULT __safecall ZOrder(Activex::TOleEnum ZOrderCmd) = 0 ;
	virtual HRESULT __safecall ConvertToFrame(_di_Frame &ConvertToFrame_result) = 0 ;
	virtual HRESULT __safecall ConvertToInlineShape(_di_InlineShape &ConvertToInlineShape_result) = 0 ;
	virtual HRESULT __safecall Activate(void) = 0 ;
	virtual HRESULT __safecall Get_AlternativeText(WideString &Get_AlternativeText_result) = 0 ;
	virtual HRESULT __safecall Set_AlternativeText(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_HasDiagram(Activex::TOleEnum &Get_HasDiagram_result) = 0 ;
	virtual HRESULT __safecall Get_Diagram(Opofcxp::_di_IMsoDiagram &Get_Diagram_result) = 0 ;
	virtual HRESULT __safecall Get_HasDiagramNode(Activex::TOleEnum &Get_HasDiagramNode_result) = 0 ;
	virtual HRESULT __safecall Get_DiagramNode(_di_DiagramNode &Get_DiagramNode_result) = 0 ;
	virtual HRESULT __safecall Get_Child(Activex::TOleEnum &Get_Child_result) = 0 ;
	virtual HRESULT __safecall Get_ParentGroup(_di_Shape &Get_ParentGroup_result) = 0 ;
	virtual HRESULT __safecall Get_CanvasItems(_di_CanvasShapes &Get_CanvasItems_result) = 0 ;
	virtual HRESULT __safecall Get_ID(int &Get_ID_result) = 0 ;
	virtual HRESULT __safecall CanvasCropLeft(float Increment) = 0 ;
	virtual HRESULT __safecall CanvasCropTop(float Increment) = 0 ;
	virtual HRESULT __safecall CanvasCropRight(float Increment) = 0 ;
	virtual HRESULT __safecall CanvasCropBottom(float Increment) = 0 ;
	virtual HRESULT __safecall Set_RTF(const WideString Param1) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Adjustments _scw_Get_Adjustments() { _di_Adjustments r; HRESULT hr = Get_Adjustments(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Adjustments Adjustments = {read=_scw_Get_Adjustments};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_AutoShapeType() { Activex::TOleEnum r; HRESULT hr = Get_AutoShapeType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum AutoShapeType = {read=_scw_Get_AutoShapeType, write=Set_AutoShapeType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_CalloutFormat _scw_Get_Callout() { _di_CalloutFormat r; HRESULT hr = Get_Callout(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_CalloutFormat Callout = {read=_scw_Get_Callout};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_ConnectionSiteCount() { int r; HRESULT hr = Get_ConnectionSiteCount(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int ConnectionSiteCount = {read=_scw_Get_ConnectionSiteCount};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Connector() { Activex::TOleEnum r; HRESULT hr = Get_Connector(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Connector = {read=_scw_Get_Connector};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ConnectorFormat _scw_Get_ConnectorFormat() { _di_ConnectorFormat r; HRESULT hr = Get_ConnectorFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ConnectorFormat ConnectorFormat = {read=_scw_Get_ConnectorFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_FillFormat _scw_Get_Fill() { _di_FillFormat r; HRESULT hr = Get_Fill(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_FillFormat Fill = {read=_scw_Get_Fill};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_GroupShapes _scw_Get_GroupItems() { _di_GroupShapes r; HRESULT hr = Get_GroupItems(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_GroupShapes GroupItems = {read=_scw_Get_GroupItems};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Height() { float r; HRESULT hr = Get_Height(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Height = {read=_scw_Get_Height, write=Set_Height};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_HorizontalFlip() { Activex::TOleEnum r; HRESULT hr = Get_HorizontalFlip(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum HorizontalFlip = {read=_scw_Get_HorizontalFlip};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Left() { float r; HRESULT hr = Get_Left(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Left = {read=_scw_Get_Left, write=Set_Left};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_LineFormat _scw_Get_Line() { _di_LineFormat r; HRESULT hr = Get_Line(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_LineFormat Line = {read=_scw_Get_Line};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LockAspectRatio() { Activex::TOleEnum r; HRESULT hr = Get_LockAspectRatio(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LockAspectRatio = {read=_scw_Get_LockAspectRatio, write=Set_LockAspectRatio};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name, write=Set_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ShapeNodes _scw_Get_Nodes() { _di_ShapeNodes r; HRESULT hr = Get_Nodes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ShapeNodes Nodes = {read=_scw_Get_Nodes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Rotation() { float r; HRESULT hr = Get_Rotation(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Rotation = {read=_scw_Get_Rotation, write=Set_Rotation};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_PictureFormat _scw_Get_PictureFormat() { _di_PictureFormat r; HRESULT hr = Get_PictureFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_PictureFormat PictureFormat = {read=_scw_Get_PictureFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ShadowFormat _scw_Get_Shadow() { _di_ShadowFormat r; HRESULT hr = Get_Shadow(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ShadowFormat Shadow = {read=_scw_Get_Shadow};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_TextEffectFormat _scw_Get_TextEffect() { _di_TextEffectFormat r; HRESULT hr = Get_TextEffect(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_TextEffectFormat TextEffect = {read=_scw_Get_TextEffect};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_TextFrame _scw_Get_TextFrame() { _di_TextFrame r; HRESULT hr = Get_TextFrame(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_TextFrame TextFrame = {read=_scw_Get_TextFrame};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ThreeDFormat _scw_Get_ThreeD() { _di_ThreeDFormat r; HRESULT hr = Get_ThreeD(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ThreeDFormat ThreeD = {read=_scw_Get_ThreeD};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Top() { float r; HRESULT hr = Get_Top(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Top = {read=_scw_Get_Top, write=Set_Top};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_VerticalFlip() { Activex::TOleEnum r; HRESULT hr = Get_VerticalFlip(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum VerticalFlip = {read=_scw_Get_VerticalFlip};
	#pragma option push -w-inl
	/* safecall wrapper */ inline OleVariant _scw_Get_Vertices() { OleVariant r; HRESULT hr = Get_Vertices(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property OleVariant Vertices = {read=_scw_Get_Vertices};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Visible() { Activex::TOleEnum r; HRESULT hr = Get_Visible(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Visible = {read=_scw_Get_Visible, write=Set_Visible};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Width() { float r; HRESULT hr = Get_Width(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Width = {read=_scw_Get_Width, write=Set_Width};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_ZOrderPosition() { int r; HRESULT hr = Get_ZOrderPosition(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int ZOrderPosition = {read=_scw_Get_ZOrderPosition};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Hyperlink _scw_Get_Hyperlink() { _di_Hyperlink r; HRESULT hr = Get_Hyperlink(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Hyperlink Hyperlink = {read=_scw_Get_Hyperlink};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_RelativeHorizontalPosition() { Activex::TOleEnum r; HRESULT hr = Get_RelativeHorizontalPosition(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum RelativeHorizontalPosition = {read=_scw_Get_RelativeHorizontalPosition, write=Set_RelativeHorizontalPosition};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_RelativeVerticalPosition() { Activex::TOleEnum r; HRESULT hr = Get_RelativeVerticalPosition(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum RelativeVerticalPosition = {read=_scw_Get_RelativeVerticalPosition, write=Set_RelativeVerticalPosition};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_LockAnchor() { int r; HRESULT hr = Get_LockAnchor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int LockAnchor = {read=_scw_Get_LockAnchor, write=Set_LockAnchor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_WrapFormat _scw_Get_WrapFormat() { _di_WrapFormat r; HRESULT hr = Get_WrapFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_WrapFormat WrapFormat = {read=_scw_Get_WrapFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Anchor() { _di_Range r; HRESULT hr = Get_Anchor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Anchor = {read=_scw_Get_Anchor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_AlternativeText() { WideString r; HRESULT hr = Get_AlternativeText(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString AlternativeText = {read=_scw_Get_AlternativeText, write=Set_AlternativeText};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_HasDiagram() { Activex::TOleEnum r; HRESULT hr = Get_HasDiagram(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum HasDiagram = {read=_scw_Get_HasDiagram};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Opofcxp::_di_IMsoDiagram _scw_Get_Diagram() { Opofcxp::_di_IMsoDiagram r; HRESULT hr = Get_Diagram(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Opofcxp::_di_IMsoDiagram Diagram = {read=_scw_Get_Diagram};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_HasDiagramNode() { Activex::TOleEnum r; HRESULT hr = Get_HasDiagramNode(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum HasDiagramNode = {read=_scw_Get_HasDiagramNode};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_DiagramNode _scw_Get_DiagramNode() { _di_DiagramNode r; HRESULT hr = Get_DiagramNode(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_DiagramNode DiagramNode = {read=_scw_Get_DiagramNode};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Child() { Activex::TOleEnum r; HRESULT hr = Get_Child(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Child = {read=_scw_Get_Child};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shape _scw_Get_ParentGroup() { _di_Shape r; HRESULT hr = Get_ParentGroup(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shape ParentGroup = {read=_scw_Get_ParentGroup};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_CanvasShapes _scw_Get_CanvasItems() { _di_CanvasShapes r; HRESULT hr = Get_CanvasItems(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_CanvasShapes CanvasItems = {read=_scw_Get_CanvasItems};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_ID() { int r; HRESULT hr = Get_ID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int ID = {read=_scw_Get_ID};
	__property WideString RTF = {write=Set_RTF};
};

__dispinterface ShapeRangeDisp;
typedef System::DelphiInterface<ShapeRangeDisp> _di_ShapeRangeDisp;
__dispinterface INTERFACE_UUID("{000209B5-0000-0000-C000-000000000046}") ShapeRangeDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209B6-0000-0000-C000-000000000046}") GroupShapes  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_Shape &Item_result) = 0 ;
	virtual HRESULT __safecall Range(OleVariant &Index, _di_ShapeRange &Range_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
};

__dispinterface GroupShapesDisp;
typedef System::DelphiInterface<GroupShapesDisp> _di_GroupShapesDisp;
__dispinterface INTERFACE_UUID("{000209B6-0000-0000-C000-000000000046}") GroupShapesDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209A0-0000-0000-C000-000000000046}") Shape  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Adjustments(_di_Adjustments &Get_Adjustments_result) = 0 ;
	virtual HRESULT __safecall Get_AutoShapeType(Activex::TOleEnum &Get_AutoShapeType_result) = 0 ;
	virtual HRESULT __safecall Set_AutoShapeType(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Callout(_di_CalloutFormat &Get_Callout_result) = 0 ;
	virtual HRESULT __safecall Get_ConnectionSiteCount(int &Get_ConnectionSiteCount_result) = 0 ;
	virtual HRESULT __safecall Get_Connector(Activex::TOleEnum &Get_Connector_result) = 0 ;
	virtual HRESULT __safecall Get_ConnectorFormat(_di_ConnectorFormat &Get_ConnectorFormat_result) = 0 ;
	virtual HRESULT __safecall Get_Fill(_di_FillFormat &Get_Fill_result) = 0 ;
	virtual HRESULT __safecall Get_GroupItems(_di_GroupShapes &Get_GroupItems_result) = 0 ;
	virtual HRESULT __safecall Get_Height(float &Get_Height_result) = 0 ;
	virtual HRESULT __safecall Set_Height(float prop) = 0 ;
	virtual HRESULT __safecall Get_HorizontalFlip(Activex::TOleEnum &Get_HorizontalFlip_result) = 0 ;
	virtual HRESULT __safecall Get_Left(float &Get_Left_result) = 0 ;
	virtual HRESULT __safecall Set_Left(float prop) = 0 ;
	virtual HRESULT __safecall Get_Line(_di_LineFormat &Get_Line_result) = 0 ;
	virtual HRESULT __safecall Get_LockAspectRatio(Activex::TOleEnum &Get_LockAspectRatio_result) = 0 ;
	virtual HRESULT __safecall Set_LockAspectRatio(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Set_Name(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Nodes(_di_ShapeNodes &Get_Nodes_result) = 0 ;
	virtual HRESULT __safecall Get_Rotation(float &Get_Rotation_result) = 0 ;
	virtual HRESULT __safecall Set_Rotation(float prop) = 0 ;
	virtual HRESULT __safecall Get_PictureFormat(_di_PictureFormat &Get_PictureFormat_result) = 0 ;
	virtual HRESULT __safecall Get_Shadow(_di_ShadowFormat &Get_Shadow_result) = 0 ;
	virtual HRESULT __safecall Get_TextEffect(_di_TextEffectFormat &Get_TextEffect_result) = 0 ;
	virtual HRESULT __safecall Get_TextFrame(_di_TextFrame &Get_TextFrame_result) = 0 ;
	virtual HRESULT __safecall Get_ThreeD(_di_ThreeDFormat &Get_ThreeD_result) = 0 ;
	virtual HRESULT __safecall Get_Top(float &Get_Top_result) = 0 ;
	virtual HRESULT __safecall Set_Top(float prop) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Get_VerticalFlip(Activex::TOleEnum &Get_VerticalFlip_result) = 0 ;
	virtual HRESULT __safecall Get_Vertices(OleVariant &Get_Vertices_result) = 0 ;
	virtual HRESULT __safecall Get_Visible(Activex::TOleEnum &Get_Visible_result) = 0 ;
	virtual HRESULT __safecall Set_Visible(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Width(float &Get_Width_result) = 0 ;
	virtual HRESULT __safecall Set_Width(float prop) = 0 ;
	virtual HRESULT __safecall Get_ZOrderPosition(int &Get_ZOrderPosition_result) = 0 ;
	virtual HRESULT __safecall Get_Hyperlink(_di_Hyperlink &Get_Hyperlink_result) = 0 ;
	virtual HRESULT __safecall Get_RelativeHorizontalPosition(Activex::TOleEnum &Get_RelativeHorizontalPosition_result) = 0 ;
	virtual HRESULT __safecall Set_RelativeHorizontalPosition(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_RelativeVerticalPosition(Activex::TOleEnum &Get_RelativeVerticalPosition_result) = 0 ;
	virtual HRESULT __safecall Set_RelativeVerticalPosition(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_LockAnchor(int &Get_LockAnchor_result) = 0 ;
	virtual HRESULT __safecall Set_LockAnchor(int prop) = 0 ;
	virtual HRESULT __safecall Get_WrapFormat(_di_WrapFormat &Get_WrapFormat_result) = 0 ;
	virtual HRESULT __safecall Get_OLEFormat(_di_OLEFormat &Get_OLEFormat_result) = 0 ;
	virtual HRESULT __safecall Get_Anchor(_di_Range &Get_Anchor_result) = 0 ;
	virtual HRESULT __safecall Get_LinkFormat(_di_LinkFormat &Get_LinkFormat_result) = 0 ;
	virtual HRESULT __safecall Apply(void) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall Duplicate(_di_Shape &Duplicate_result) = 0 ;
	virtual HRESULT __safecall Flip(Activex::TOleEnum FlipCmd) = 0 ;
	virtual HRESULT __safecall IncrementLeft(float Increment) = 0 ;
	virtual HRESULT __safecall IncrementRotation(float Increment) = 0 ;
	virtual HRESULT __safecall IncrementTop(float Increment) = 0 ;
	virtual HRESULT __safecall PickUp(void) = 0 ;
	virtual HRESULT __safecall RerouteConnections(void) = 0 ;
	virtual HRESULT __safecall ScaleHeight(float Factor, Activex::TOleEnum RelativeToOriginalSize, Activex::TOleEnum Scale) = 0 ;
	virtual HRESULT __safecall ScaleWidth(float Factor, Activex::TOleEnum RelativeToOriginalSize, Activex::TOleEnum Scale) = 0 ;
	virtual HRESULT __safecall Select(OleVariant &Replace) = 0 ;
	virtual HRESULT __safecall SetShapesDefaultProperties(void) = 0 ;
	virtual HRESULT __safecall Ungroup(_di_ShapeRange &Ungroup_result) = 0 ;
	virtual HRESULT __safecall ZOrder(Activex::TOleEnum ZOrderCmd) = 0 ;
	virtual HRESULT __safecall ConvertToInlineShape(_di_InlineShape &ConvertToInlineShape_result) = 0 ;
	virtual HRESULT __safecall ConvertToFrame(_di_Frame &ConvertToFrame_result) = 0 ;
	virtual HRESULT __safecall Activate(void) = 0 ;
	virtual HRESULT __safecall Get_AlternativeText(WideString &Get_AlternativeText_result) = 0 ;
	virtual HRESULT __safecall Set_AlternativeText(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Script(Opofcxp::_di_Script &Get_Script_result) = 0 ;
	virtual HRESULT __safecall Get_HasDiagram(Activex::TOleEnum &Get_HasDiagram_result) = 0 ;
	virtual HRESULT __safecall Get_Diagram(Opofcxp::_di_IMsoDiagram &Get_Diagram_result) = 0 ;
	virtual HRESULT __safecall Get_HasDiagramNode(Activex::TOleEnum &Get_HasDiagramNode_result) = 0 ;
	virtual HRESULT __safecall Get_DiagramNode(_di_DiagramNode &Get_DiagramNode_result) = 0 ;
	virtual HRESULT __safecall Get_Child(Activex::TOleEnum &Get_Child_result) = 0 ;
	virtual HRESULT __safecall Get_ParentGroup(_di_Shape &Get_ParentGroup_result) = 0 ;
	virtual HRESULT __safecall Get_CanvasItems(_di_CanvasShapes &Get_CanvasItems_result) = 0 ;
	virtual HRESULT __safecall Get_ID(int &Get_ID_result) = 0 ;
	virtual HRESULT __safecall CanvasCropLeft(float Increment) = 0 ;
	virtual HRESULT __safecall CanvasCropTop(float Increment) = 0 ;
	virtual HRESULT __safecall CanvasCropRight(float Increment) = 0 ;
	virtual HRESULT __safecall CanvasCropBottom(float Increment) = 0 ;
	virtual HRESULT __safecall Set_RTF(const WideString Param1) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Adjustments _scw_Get_Adjustments() { _di_Adjustments r; HRESULT hr = Get_Adjustments(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Adjustments Adjustments = {read=_scw_Get_Adjustments};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_AutoShapeType() { Activex::TOleEnum r; HRESULT hr = Get_AutoShapeType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum AutoShapeType = {read=_scw_Get_AutoShapeType, write=Set_AutoShapeType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_CalloutFormat _scw_Get_Callout() { _di_CalloutFormat r; HRESULT hr = Get_Callout(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_CalloutFormat Callout = {read=_scw_Get_Callout};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_ConnectionSiteCount() { int r; HRESULT hr = Get_ConnectionSiteCount(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int ConnectionSiteCount = {read=_scw_Get_ConnectionSiteCount};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Connector() { Activex::TOleEnum r; HRESULT hr = Get_Connector(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Connector = {read=_scw_Get_Connector};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ConnectorFormat _scw_Get_ConnectorFormat() { _di_ConnectorFormat r; HRESULT hr = Get_ConnectorFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ConnectorFormat ConnectorFormat = {read=_scw_Get_ConnectorFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_FillFormat _scw_Get_Fill() { _di_FillFormat r; HRESULT hr = Get_Fill(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_FillFormat Fill = {read=_scw_Get_Fill};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_GroupShapes _scw_Get_GroupItems() { _di_GroupShapes r; HRESULT hr = Get_GroupItems(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_GroupShapes GroupItems = {read=_scw_Get_GroupItems};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Height() { float r; HRESULT hr = Get_Height(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Height = {read=_scw_Get_Height, write=Set_Height};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_HorizontalFlip() { Activex::TOleEnum r; HRESULT hr = Get_HorizontalFlip(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum HorizontalFlip = {read=_scw_Get_HorizontalFlip};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Left() { float r; HRESULT hr = Get_Left(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Left = {read=_scw_Get_Left, write=Set_Left};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_LineFormat _scw_Get_Line() { _di_LineFormat r; HRESULT hr = Get_Line(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_LineFormat Line = {read=_scw_Get_Line};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LockAspectRatio() { Activex::TOleEnum r; HRESULT hr = Get_LockAspectRatio(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LockAspectRatio = {read=_scw_Get_LockAspectRatio, write=Set_LockAspectRatio};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name, write=Set_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ShapeNodes _scw_Get_Nodes() { _di_ShapeNodes r; HRESULT hr = Get_Nodes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ShapeNodes Nodes = {read=_scw_Get_Nodes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Rotation() { float r; HRESULT hr = Get_Rotation(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Rotation = {read=_scw_Get_Rotation, write=Set_Rotation};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_PictureFormat _scw_Get_PictureFormat() { _di_PictureFormat r; HRESULT hr = Get_PictureFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_PictureFormat PictureFormat = {read=_scw_Get_PictureFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ShadowFormat _scw_Get_Shadow() { _di_ShadowFormat r; HRESULT hr = Get_Shadow(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ShadowFormat Shadow = {read=_scw_Get_Shadow};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_TextEffectFormat _scw_Get_TextEffect() { _di_TextEffectFormat r; HRESULT hr = Get_TextEffect(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_TextEffectFormat TextEffect = {read=_scw_Get_TextEffect};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_TextFrame _scw_Get_TextFrame() { _di_TextFrame r; HRESULT hr = Get_TextFrame(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_TextFrame TextFrame = {read=_scw_Get_TextFrame};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ThreeDFormat _scw_Get_ThreeD() { _di_ThreeDFormat r; HRESULT hr = Get_ThreeD(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ThreeDFormat ThreeD = {read=_scw_Get_ThreeD};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Top() { float r; HRESULT hr = Get_Top(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Top = {read=_scw_Get_Top, write=Set_Top};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_VerticalFlip() { Activex::TOleEnum r; HRESULT hr = Get_VerticalFlip(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum VerticalFlip = {read=_scw_Get_VerticalFlip};
	#pragma option push -w-inl
	/* safecall wrapper */ inline OleVariant _scw_Get_Vertices() { OleVariant r; HRESULT hr = Get_Vertices(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property OleVariant Vertices = {read=_scw_Get_Vertices};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Visible() { Activex::TOleEnum r; HRESULT hr = Get_Visible(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Visible = {read=_scw_Get_Visible, write=Set_Visible};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Width() { float r; HRESULT hr = Get_Width(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Width = {read=_scw_Get_Width, write=Set_Width};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_ZOrderPosition() { int r; HRESULT hr = Get_ZOrderPosition(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int ZOrderPosition = {read=_scw_Get_ZOrderPosition};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Hyperlink _scw_Get_Hyperlink() { _di_Hyperlink r; HRESULT hr = Get_Hyperlink(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Hyperlink Hyperlink = {read=_scw_Get_Hyperlink};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_RelativeHorizontalPosition() { Activex::TOleEnum r; HRESULT hr = Get_RelativeHorizontalPosition(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum RelativeHorizontalPosition = {read=_scw_Get_RelativeHorizontalPosition, write=Set_RelativeHorizontalPosition};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_RelativeVerticalPosition() { Activex::TOleEnum r; HRESULT hr = Get_RelativeVerticalPosition(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum RelativeVerticalPosition = {read=_scw_Get_RelativeVerticalPosition, write=Set_RelativeVerticalPosition};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_LockAnchor() { int r; HRESULT hr = Get_LockAnchor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int LockAnchor = {read=_scw_Get_LockAnchor, write=Set_LockAnchor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_WrapFormat _scw_Get_WrapFormat() { _di_WrapFormat r; HRESULT hr = Get_WrapFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_WrapFormat WrapFormat = {read=_scw_Get_WrapFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_OLEFormat _scw_Get_OLEFormat() { _di_OLEFormat r; HRESULT hr = Get_OLEFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_OLEFormat OLEFormat = {read=_scw_Get_OLEFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Anchor() { _di_Range r; HRESULT hr = Get_Anchor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Anchor = {read=_scw_Get_Anchor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_LinkFormat _scw_Get_LinkFormat() { _di_LinkFormat r; HRESULT hr = Get_LinkFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_LinkFormat LinkFormat = {read=_scw_Get_LinkFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_AlternativeText() { WideString r; HRESULT hr = Get_AlternativeText(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString AlternativeText = {read=_scw_Get_AlternativeText, write=Set_AlternativeText};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Opofcxp::_di_Script _scw_Get_Script() { Opofcxp::_di_Script r; HRESULT hr = Get_Script(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Opofcxp::_di_Script Script = {read=_scw_Get_Script};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_HasDiagram() { Activex::TOleEnum r; HRESULT hr = Get_HasDiagram(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum HasDiagram = {read=_scw_Get_HasDiagram};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Opofcxp::_di_IMsoDiagram _scw_Get_Diagram() { Opofcxp::_di_IMsoDiagram r; HRESULT hr = Get_Diagram(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Opofcxp::_di_IMsoDiagram Diagram = {read=_scw_Get_Diagram};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_HasDiagramNode() { Activex::TOleEnum r; HRESULT hr = Get_HasDiagramNode(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum HasDiagramNode = {read=_scw_Get_HasDiagramNode};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_DiagramNode _scw_Get_DiagramNode() { _di_DiagramNode r; HRESULT hr = Get_DiagramNode(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_DiagramNode DiagramNode = {read=_scw_Get_DiagramNode};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Child() { Activex::TOleEnum r; HRESULT hr = Get_Child(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Child = {read=_scw_Get_Child};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shape _scw_Get_ParentGroup() { _di_Shape r; HRESULT hr = Get_ParentGroup(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shape ParentGroup = {read=_scw_Get_ParentGroup};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_CanvasShapes _scw_Get_CanvasItems() { _di_CanvasShapes r; HRESULT hr = Get_CanvasItems(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_CanvasShapes CanvasItems = {read=_scw_Get_CanvasItems};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_ID() { int r; HRESULT hr = Get_ID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int ID = {read=_scw_Get_ID};
	__property WideString RTF = {write=Set_RTF};
};

__dispinterface ShapeDisp;
typedef System::DelphiInterface<ShapeDisp> _di_ShapeDisp;
__dispinterface INTERFACE_UUID("{000209A0-0000-0000-C000-000000000046}") ShapeDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209B2-0000-0000-C000-000000000046}") TextFrame  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_Shape &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_MarginBottom(float &Get_MarginBottom_result) = 0 ;
	virtual HRESULT __safecall Set_MarginBottom(float prop) = 0 ;
	virtual HRESULT __safecall Get_MarginLeft(float &Get_MarginLeft_result) = 0 ;
	virtual HRESULT __safecall Set_MarginLeft(float prop) = 0 ;
	virtual HRESULT __safecall Get_MarginRight(float &Get_MarginRight_result) = 0 ;
	virtual HRESULT __safecall Set_MarginRight(float prop) = 0 ;
	virtual HRESULT __safecall Get_MarginTop(float &Get_MarginTop_result) = 0 ;
	virtual HRESULT __safecall Set_MarginTop(float prop) = 0 ;
	virtual HRESULT __safecall Get_Orientation(Activex::TOleEnum &Get_Orientation_result) = 0 ;
	virtual HRESULT __safecall Set_Orientation(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_TextRange(_di_Range &Get_TextRange_result) = 0 ;
	virtual HRESULT __safecall Get_ContainingRange(_di_Range &Get_ContainingRange_result) = 0 ;
	virtual HRESULT __safecall Get_Next(_di_TextFrame &Get_Next_result) = 0 ;
	virtual HRESULT __safecall Set_Next(const _di_TextFrame prop) = 0 ;
	virtual HRESULT __safecall Get_Previous(_di_TextFrame &Get_Previous_result) = 0 ;
	virtual HRESULT __safecall Set_Previous(const _di_TextFrame prop) = 0 ;
	virtual HRESULT __safecall Get_Overflowing(Word &Get_Overflowing_result) = 0 ;
	virtual HRESULT __safecall Get_HasText(int &Get_HasText_result) = 0 ;
	virtual HRESULT __safecall BreakForwardLink(void) = 0 ;
	virtual HRESULT __safecall ValidLinkTarget(const _di_TextFrame TargetTextFrame, Word &ValidLinkTarget_result) = 0 ;
	virtual HRESULT __safecall Get_AutoSize(int &Get_AutoSize_result) = 0 ;
	virtual HRESULT __safecall Set_AutoSize(int prop) = 0 ;
	virtual HRESULT __safecall Get_WordWrap(int &Get_WordWrap_result) = 0 ;
	virtual HRESULT __safecall Set_WordWrap(int prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shape _scw_Get_Parent() { _di_Shape r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shape Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_MarginBottom() { float r; HRESULT hr = Get_MarginBottom(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float MarginBottom = {read=_scw_Get_MarginBottom, write=Set_MarginBottom};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_MarginLeft() { float r; HRESULT hr = Get_MarginLeft(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float MarginLeft = {read=_scw_Get_MarginLeft, write=Set_MarginLeft};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_MarginRight() { float r; HRESULT hr = Get_MarginRight(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float MarginRight = {read=_scw_Get_MarginRight, write=Set_MarginRight};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_MarginTop() { float r; HRESULT hr = Get_MarginTop(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float MarginTop = {read=_scw_Get_MarginTop, write=Set_MarginTop};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Orientation() { Activex::TOleEnum r; HRESULT hr = Get_Orientation(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Orientation = {read=_scw_Get_Orientation, write=Set_Orientation};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_TextRange() { _di_Range r; HRESULT hr = Get_TextRange(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range TextRange = {read=_scw_Get_TextRange};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_ContainingRange() { _di_Range r; HRESULT hr = Get_ContainingRange(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range ContainingRange = {read=_scw_Get_ContainingRange};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_TextFrame _scw_Get_Next() { _di_TextFrame r; HRESULT hr = Get_Next(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_TextFrame Next = {read=_scw_Get_Next, write=Set_Next};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_TextFrame _scw_Get_Previous() { _di_TextFrame r; HRESULT hr = Get_Previous(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_TextFrame Previous = {read=_scw_Get_Previous, write=Set_Previous};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Overflowing() { Word r; HRESULT hr = Get_Overflowing(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Overflowing = {read=_scw_Get_Overflowing};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_HasText() { int r; HRESULT hr = Get_HasText(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int HasText = {read=_scw_Get_HasText};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_AutoSize() { int r; HRESULT hr = Get_AutoSize(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int AutoSize = {read=_scw_Get_AutoSize, write=Set_AutoSize};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_WordWrap() { int r; HRESULT hr = Get_WordWrap(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int WordWrap = {read=_scw_Get_WordWrap, write=Set_WordWrap};
};

__dispinterface TextFrameDisp;
typedef System::DelphiInterface<TextFrameDisp> _di_TextFrameDisp;
__dispinterface INTERFACE_UUID("{000209B2-0000-0000-C000-000000000046}") TextFrameDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209A1-0000-0000-C000-000000000046}") _LetterContent  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Duplicate(_di__LetterContent &Get_Duplicate_result) = 0 ;
	virtual HRESULT __safecall Get_DateFormat(WideString &Get_DateFormat_result) = 0 ;
	virtual HRESULT __safecall Set_DateFormat(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_IncludeHeaderFooter(Word &Get_IncludeHeaderFooter_result) = 0 ;
	virtual HRESULT __safecall Set_IncludeHeaderFooter(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PageDesign(WideString &Get_PageDesign_result) = 0 ;
	virtual HRESULT __safecall Set_PageDesign(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_LetterStyle(Activex::TOleEnum &Get_LetterStyle_result) = 0 ;
	virtual HRESULT __safecall Set_LetterStyle(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Letterhead(Word &Get_Letterhead_result) = 0 ;
	virtual HRESULT __safecall Set_Letterhead(Word prop) = 0 ;
	virtual HRESULT __safecall Get_LetterheadLocation(Activex::TOleEnum &Get_LetterheadLocation_result) = 0 ;
	virtual HRESULT __safecall Set_LetterheadLocation(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_LetterheadSize(float &Get_LetterheadSize_result) = 0 ;
	virtual HRESULT __safecall Set_LetterheadSize(float prop) = 0 ;
	virtual HRESULT __safecall Get_RecipientName(WideString &Get_RecipientName_result) = 0 ;
	virtual HRESULT __safecall Set_RecipientName(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_RecipientAddress(WideString &Get_RecipientAddress_result) = 0 ;
	virtual HRESULT __safecall Set_RecipientAddress(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Salutation(WideString &Get_Salutation_result) = 0 ;
	virtual HRESULT __safecall Set_Salutation(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_SalutationType(Activex::TOleEnum &Get_SalutationType_result) = 0 ;
	virtual HRESULT __safecall Set_SalutationType(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_RecipientReference(WideString &Get_RecipientReference_result) = 0 ;
	virtual HRESULT __safecall Set_RecipientReference(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_MailingInstructions(WideString &Get_MailingInstructions_result) = 0 ;
	virtual HRESULT __safecall Set_MailingInstructions(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_AttentionLine(WideString &Get_AttentionLine_result) = 0 ;
	virtual HRESULT __safecall Set_AttentionLine(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Subject(WideString &Get_Subject_result) = 0 ;
	virtual HRESULT __safecall Set_Subject(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_EnclosureNumber(int &Get_EnclosureNumber_result) = 0 ;
	virtual HRESULT __safecall Set_EnclosureNumber(int prop) = 0 ;
	virtual HRESULT __safecall Get_CCList(WideString &Get_CCList_result) = 0 ;
	virtual HRESULT __safecall Set_CCList(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_ReturnAddress(WideString &Get_ReturnAddress_result) = 0 ;
	virtual HRESULT __safecall Set_ReturnAddress(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_SenderName(WideString &Get_SenderName_result) = 0 ;
	virtual HRESULT __safecall Set_SenderName(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Closing(WideString &Get_Closing_result) = 0 ;
	virtual HRESULT __safecall Set_Closing(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_SenderCompany(WideString &Get_SenderCompany_result) = 0 ;
	virtual HRESULT __safecall Set_SenderCompany(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_SenderJobTitle(WideString &Get_SenderJobTitle_result) = 0 ;
	virtual HRESULT __safecall Set_SenderJobTitle(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_SenderInitials(WideString &Get_SenderInitials_result) = 0 ;
	virtual HRESULT __safecall Set_SenderInitials(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_InfoBlock(Word &Get_InfoBlock_result) = 0 ;
	virtual HRESULT __safecall Set_InfoBlock(Word prop) = 0 ;
	virtual HRESULT __safecall Get_RecipientCode(WideString &Get_RecipientCode_result) = 0 ;
	virtual HRESULT __safecall Set_RecipientCode(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_RecipientGender(Activex::TOleEnum &Get_RecipientGender_result) = 0 ;
	virtual HRESULT __safecall Set_RecipientGender(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_ReturnAddressShortForm(WideString &Get_ReturnAddressShortForm_result) = 0 ;
	virtual HRESULT __safecall Set_ReturnAddressShortForm(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_SenderCity(WideString &Get_SenderCity_result) = 0 ;
	virtual HRESULT __safecall Set_SenderCity(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_SenderCode(WideString &Get_SenderCode_result) = 0 ;
	virtual HRESULT __safecall Set_SenderCode(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_SenderGender(Activex::TOleEnum &Get_SenderGender_result) = 0 ;
	virtual HRESULT __safecall Set_SenderGender(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_SenderReference(WideString &Get_SenderReference_result) = 0 ;
	virtual HRESULT __safecall Set_SenderReference(const WideString prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__LetterContent _scw_Get_Duplicate() { _di__LetterContent r; HRESULT hr = Get_Duplicate(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__LetterContent Duplicate = {read=_scw_Get_Duplicate};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_DateFormat() { WideString r; HRESULT hr = Get_DateFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString DateFormat = {read=_scw_Get_DateFormat, write=Set_DateFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IncludeHeaderFooter() { Word r; HRESULT hr = Get_IncludeHeaderFooter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IncludeHeaderFooter = {read=_scw_Get_IncludeHeaderFooter, write=Set_IncludeHeaderFooter};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_PageDesign() { WideString r; HRESULT hr = Get_PageDesign(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString PageDesign = {read=_scw_Get_PageDesign, write=Set_PageDesign};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LetterStyle() { Activex::TOleEnum r; HRESULT hr = Get_LetterStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LetterStyle = {read=_scw_Get_LetterStyle, write=Set_LetterStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Letterhead() { Word r; HRESULT hr = Get_Letterhead(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Letterhead = {read=_scw_Get_Letterhead, write=Set_Letterhead};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LetterheadLocation() { Activex::TOleEnum r; HRESULT hr = Get_LetterheadLocation(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LetterheadLocation = {read=_scw_Get_LetterheadLocation, write=Set_LetterheadLocation};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_LetterheadSize() { float r; HRESULT hr = Get_LetterheadSize(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float LetterheadSize = {read=_scw_Get_LetterheadSize, write=Set_LetterheadSize};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_RecipientName() { WideString r; HRESULT hr = Get_RecipientName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString RecipientName = {read=_scw_Get_RecipientName, write=Set_RecipientName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_RecipientAddress() { WideString r; HRESULT hr = Get_RecipientAddress(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString RecipientAddress = {read=_scw_Get_RecipientAddress, write=Set_RecipientAddress};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Salutation() { WideString r; HRESULT hr = Get_Salutation(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Salutation = {read=_scw_Get_Salutation, write=Set_Salutation};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_SalutationType() { Activex::TOleEnum r; HRESULT hr = Get_SalutationType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum SalutationType = {read=_scw_Get_SalutationType, write=Set_SalutationType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_RecipientReference() { WideString r; HRESULT hr = Get_RecipientReference(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString RecipientReference = {read=_scw_Get_RecipientReference, write=Set_RecipientReference};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_MailingInstructions() { WideString r; HRESULT hr = Get_MailingInstructions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString MailingInstructions = {read=_scw_Get_MailingInstructions, write=Set_MailingInstructions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_AttentionLine() { WideString r; HRESULT hr = Get_AttentionLine(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString AttentionLine = {read=_scw_Get_AttentionLine, write=Set_AttentionLine};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Subject() { WideString r; HRESULT hr = Get_Subject(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Subject = {read=_scw_Get_Subject, write=Set_Subject};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_EnclosureNumber() { int r; HRESULT hr = Get_EnclosureNumber(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int EnclosureNumber = {read=_scw_Get_EnclosureNumber, write=Set_EnclosureNumber};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_CCList() { WideString r; HRESULT hr = Get_CCList(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString CCList = {read=_scw_Get_CCList, write=Set_CCList};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ReturnAddress() { WideString r; HRESULT hr = Get_ReturnAddress(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ReturnAddress = {read=_scw_Get_ReturnAddress, write=Set_ReturnAddress};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_SenderName() { WideString r; HRESULT hr = Get_SenderName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString SenderName = {read=_scw_Get_SenderName, write=Set_SenderName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Closing() { WideString r; HRESULT hr = Get_Closing(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Closing = {read=_scw_Get_Closing, write=Set_Closing};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_SenderCompany() { WideString r; HRESULT hr = Get_SenderCompany(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString SenderCompany = {read=_scw_Get_SenderCompany, write=Set_SenderCompany};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_SenderJobTitle() { WideString r; HRESULT hr = Get_SenderJobTitle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString SenderJobTitle = {read=_scw_Get_SenderJobTitle, write=Set_SenderJobTitle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_SenderInitials() { WideString r; HRESULT hr = Get_SenderInitials(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString SenderInitials = {read=_scw_Get_SenderInitials, write=Set_SenderInitials};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_InfoBlock() { Word r; HRESULT hr = Get_InfoBlock(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word InfoBlock = {read=_scw_Get_InfoBlock, write=Set_InfoBlock};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_RecipientCode() { WideString r; HRESULT hr = Get_RecipientCode(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString RecipientCode = {read=_scw_Get_RecipientCode, write=Set_RecipientCode};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_RecipientGender() { Activex::TOleEnum r; HRESULT hr = Get_RecipientGender(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum RecipientGender = {read=_scw_Get_RecipientGender, write=Set_RecipientGender};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ReturnAddressShortForm() { WideString r; HRESULT hr = Get_ReturnAddressShortForm(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ReturnAddressShortForm = {read=_scw_Get_ReturnAddressShortForm, write=Set_ReturnAddressShortForm};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_SenderCity() { WideString r; HRESULT hr = Get_SenderCity(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString SenderCity = {read=_scw_Get_SenderCity, write=Set_SenderCity};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_SenderCode() { WideString r; HRESULT hr = Get_SenderCode(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString SenderCode = {read=_scw_Get_SenderCode, write=Set_SenderCode};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_SenderGender() { Activex::TOleEnum r; HRESULT hr = Get_SenderGender(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum SenderGender = {read=_scw_Get_SenderGender, write=Set_SenderGender};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_SenderReference() { WideString r; HRESULT hr = Get_SenderReference(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString SenderReference = {read=_scw_Get_SenderReference, write=Set_SenderReference};
};

__dispinterface _LetterContentDisp;
typedef System::DelphiInterface<_LetterContentDisp> _di__LetterContentDisp;
__dispinterface INTERFACE_UUID("{000209A1-0000-0000-C000-000000000046}") _LetterContentDisp  : public IDispatch 
{
	
};

__interface Zoom;
typedef System::DelphiInterface<Zoom> _di_Zoom;
__interface Reviewers;
typedef System::DelphiInterface<Reviewers> _di_Reviewers;
__interface INTERFACE_UUID("{000209A5-0000-0000-C000-000000000046}") View  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Set_Type_(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_FullScreen(Word &Get_FullScreen_result) = 0 ;
	virtual HRESULT __safecall Set_FullScreen(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Draft(Word &Get_Draft_result) = 0 ;
	virtual HRESULT __safecall Set_Draft(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowAll(Word &Get_ShowAll_result) = 0 ;
	virtual HRESULT __safecall Set_ShowAll(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowFieldCodes(Word &Get_ShowFieldCodes_result) = 0 ;
	virtual HRESULT __safecall Set_ShowFieldCodes(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MailMergeDataView(Word &Get_MailMergeDataView_result) = 0 ;
	virtual HRESULT __safecall Set_MailMergeDataView(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Magnifier(Word &Get_Magnifier_result) = 0 ;
	virtual HRESULT __safecall Set_Magnifier(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowFirstLineOnly(Word &Get_ShowFirstLineOnly_result) = 0 ;
	virtual HRESULT __safecall Set_ShowFirstLineOnly(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowFormat(Word &Get_ShowFormat_result) = 0 ;
	virtual HRESULT __safecall Set_ShowFormat(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Zoom(_di_Zoom &Get_Zoom_result) = 0 ;
	virtual HRESULT __safecall Get_ShowObjectAnchors(Word &Get_ShowObjectAnchors_result) = 0 ;
	virtual HRESULT __safecall Set_ShowObjectAnchors(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowTextBoundaries(Word &Get_ShowTextBoundaries_result) = 0 ;
	virtual HRESULT __safecall Set_ShowTextBoundaries(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowHighlight(Word &Get_ShowHighlight_result) = 0 ;
	virtual HRESULT __safecall Set_ShowHighlight(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowDrawings(Word &Get_ShowDrawings_result) = 0 ;
	virtual HRESULT __safecall Set_ShowDrawings(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowTabs(Word &Get_ShowTabs_result) = 0 ;
	virtual HRESULT __safecall Set_ShowTabs(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowSpaces(Word &Get_ShowSpaces_result) = 0 ;
	virtual HRESULT __safecall Set_ShowSpaces(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowParagraphs(Word &Get_ShowParagraphs_result) = 0 ;
	virtual HRESULT __safecall Set_ShowParagraphs(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowHyphens(Word &Get_ShowHyphens_result) = 0 ;
	virtual HRESULT __safecall Set_ShowHyphens(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowHiddenText(Word &Get_ShowHiddenText_result) = 0 ;
	virtual HRESULT __safecall Set_ShowHiddenText(Word prop) = 0 ;
	virtual HRESULT __safecall Get_WrapToWindow(Word &Get_WrapToWindow_result) = 0 ;
	virtual HRESULT __safecall Set_WrapToWindow(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowPicturePlaceHolders(Word &Get_ShowPicturePlaceHolders_result) = 0 ;
	virtual HRESULT __safecall Set_ShowPicturePlaceHolders(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowBookmarks(Word &Get_ShowBookmarks_result) = 0 ;
	virtual HRESULT __safecall Set_ShowBookmarks(Word prop) = 0 ;
	virtual HRESULT __safecall Get_FieldShading(Activex::TOleEnum &Get_FieldShading_result) = 0 ;
	virtual HRESULT __safecall Set_FieldShading(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_ShowAnimation(Word &Get_ShowAnimation_result) = 0 ;
	virtual HRESULT __safecall Set_ShowAnimation(Word prop) = 0 ;
	virtual HRESULT __safecall Get_TableGridlines(Word &Get_TableGridlines_result) = 0 ;
	virtual HRESULT __safecall Set_TableGridlines(Word prop) = 0 ;
	virtual HRESULT __safecall Get_EnlargeFontsLessThan(int &Get_EnlargeFontsLessThan_result) = 0 ;
	virtual HRESULT __safecall Set_EnlargeFontsLessThan(int prop) = 0 ;
	virtual HRESULT __safecall Get_ShowMainTextLayer(Word &Get_ShowMainTextLayer_result) = 0 ;
	virtual HRESULT __safecall Set_ShowMainTextLayer(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SeekView(Activex::TOleEnum &Get_SeekView_result) = 0 ;
	virtual HRESULT __safecall Set_SeekView(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_SplitSpecial(Activex::TOleEnum &Get_SplitSpecial_result) = 0 ;
	virtual HRESULT __safecall Set_SplitSpecial(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_BrowseToWindow(int &Get_BrowseToWindow_result) = 0 ;
	virtual HRESULT __safecall Set_BrowseToWindow(int prop) = 0 ;
	virtual HRESULT __safecall Get_ShowOptionalBreaks(Word &Get_ShowOptionalBreaks_result) = 0 ;
	virtual HRESULT __safecall Set_ShowOptionalBreaks(Word prop) = 0 ;
	virtual HRESULT __safecall CollapseOutline(OleVariant &Range) = 0 ;
	virtual HRESULT __safecall ExpandOutline(OleVariant &Range) = 0 ;
	virtual HRESULT __safecall ShowAllHeadings(void) = 0 ;
	virtual HRESULT __safecall ShowHeading(int Level) = 0 ;
	virtual HRESULT __safecall PreviousHeaderFooter(void) = 0 ;
	virtual HRESULT __safecall NextHeaderFooter(void) = 0 ;
	virtual HRESULT __safecall Get_DisplayPageBoundaries(Word &Get_DisplayPageBoundaries_result) = 0 ;
	virtual HRESULT __safecall Set_DisplayPageBoundaries(Word prop) = 0 ;
	virtual HRESULT __safecall Get_DisplaySmartTags(Word &Get_DisplaySmartTags_result) = 0 ;
	virtual HRESULT __safecall Set_DisplaySmartTags(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowRevisionsAndComments(Word &Get_ShowRevisionsAndComments_result) = 0 ;
	virtual HRESULT __safecall Set_ShowRevisionsAndComments(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowComments(Word &Get_ShowComments_result) = 0 ;
	virtual HRESULT __safecall Set_ShowComments(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowInsertionsAndDeletions(Word &Get_ShowInsertionsAndDeletions_result) = 0 ;
	virtual HRESULT __safecall Set_ShowInsertionsAndDeletions(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowFormatChanges(Word &Get_ShowFormatChanges_result) = 0 ;
	virtual HRESULT __safecall Set_ShowFormatChanges(Word prop) = 0 ;
	virtual HRESULT __safecall Get_RevisionsView(Activex::TOleEnum &Get_RevisionsView_result) = 0 ;
	virtual HRESULT __safecall Set_RevisionsView(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_RevisionsMode(Activex::TOleEnum &Get_RevisionsMode_result) = 0 ;
	virtual HRESULT __safecall Set_RevisionsMode(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_RevisionsBalloonWidth(float &Get_RevisionsBalloonWidth_result) = 0 ;
	virtual HRESULT __safecall Set_RevisionsBalloonWidth(float prop) = 0 ;
	virtual HRESULT __safecall Get_RevisionsBalloonWidthType(Activex::TOleEnum &Get_RevisionsBalloonWidthType_result) = 0 ;
	virtual HRESULT __safecall Set_RevisionsBalloonWidthType(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_RevisionsBalloonSide(Activex::TOleEnum &Get_RevisionsBalloonSide_result) = 0 ;
	virtual HRESULT __safecall Set_RevisionsBalloonSide(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Reviewers(_di_Reviewers &Get_Reviewers_result) = 0 ;
	virtual HRESULT __safecall Get_RevisionsBalloonShowConnectingLines(Word &Get_RevisionsBalloonShowConnectingLines_result) = 0 ;
	virtual HRESULT __safecall Set_RevisionsBalloonShowConnectingLines(Word prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_, write=Set_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_FullScreen() { Word r; HRESULT hr = Get_FullScreen(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word FullScreen = {read=_scw_Get_FullScreen, write=Set_FullScreen};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Draft() { Word r; HRESULT hr = Get_Draft(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Draft = {read=_scw_Get_Draft, write=Set_Draft};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowAll() { Word r; HRESULT hr = Get_ShowAll(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowAll = {read=_scw_Get_ShowAll, write=Set_ShowAll};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowFieldCodes() { Word r; HRESULT hr = Get_ShowFieldCodes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowFieldCodes = {read=_scw_Get_ShowFieldCodes, write=Set_ShowFieldCodes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MailMergeDataView() { Word r; HRESULT hr = Get_MailMergeDataView(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MailMergeDataView = {read=_scw_Get_MailMergeDataView, write=Set_MailMergeDataView};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Magnifier() { Word r; HRESULT hr = Get_Magnifier(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Magnifier = {read=_scw_Get_Magnifier, write=Set_Magnifier};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowFirstLineOnly() { Word r; HRESULT hr = Get_ShowFirstLineOnly(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowFirstLineOnly = {read=_scw_Get_ShowFirstLineOnly, write=Set_ShowFirstLineOnly};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowFormat() { Word r; HRESULT hr = Get_ShowFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowFormat = {read=_scw_Get_ShowFormat, write=Set_ShowFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Zoom _scw_Get_Zoom() { _di_Zoom r; HRESULT hr = Get_Zoom(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Zoom Zoom = {read=_scw_Get_Zoom};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowObjectAnchors() { Word r; HRESULT hr = Get_ShowObjectAnchors(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowObjectAnchors = {read=_scw_Get_ShowObjectAnchors, write=Set_ShowObjectAnchors};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowTextBoundaries() { Word r; HRESULT hr = Get_ShowTextBoundaries(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowTextBoundaries = {read=_scw_Get_ShowTextBoundaries, write=Set_ShowTextBoundaries};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowHighlight() { Word r; HRESULT hr = Get_ShowHighlight(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowHighlight = {read=_scw_Get_ShowHighlight, write=Set_ShowHighlight};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowDrawings() { Word r; HRESULT hr = Get_ShowDrawings(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowDrawings = {read=_scw_Get_ShowDrawings, write=Set_ShowDrawings};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowTabs() { Word r; HRESULT hr = Get_ShowTabs(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowTabs = {read=_scw_Get_ShowTabs, write=Set_ShowTabs};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowSpaces() { Word r; HRESULT hr = Get_ShowSpaces(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowSpaces = {read=_scw_Get_ShowSpaces, write=Set_ShowSpaces};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowParagraphs() { Word r; HRESULT hr = Get_ShowParagraphs(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowParagraphs = {read=_scw_Get_ShowParagraphs, write=Set_ShowParagraphs};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowHyphens() { Word r; HRESULT hr = Get_ShowHyphens(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowHyphens = {read=_scw_Get_ShowHyphens, write=Set_ShowHyphens};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowHiddenText() { Word r; HRESULT hr = Get_ShowHiddenText(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowHiddenText = {read=_scw_Get_ShowHiddenText, write=Set_ShowHiddenText};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_WrapToWindow() { Word r; HRESULT hr = Get_WrapToWindow(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word WrapToWindow = {read=_scw_Get_WrapToWindow, write=Set_WrapToWindow};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowPicturePlaceHolders() { Word r; HRESULT hr = Get_ShowPicturePlaceHolders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowPicturePlaceHolders = {read=_scw_Get_ShowPicturePlaceHolders, write=Set_ShowPicturePlaceHolders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowBookmarks() { Word r; HRESULT hr = Get_ShowBookmarks(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowBookmarks = {read=_scw_Get_ShowBookmarks, write=Set_ShowBookmarks};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_FieldShading() { Activex::TOleEnum r; HRESULT hr = Get_FieldShading(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum FieldShading = {read=_scw_Get_FieldShading, write=Set_FieldShading};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowAnimation() { Word r; HRESULT hr = Get_ShowAnimation(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowAnimation = {read=_scw_Get_ShowAnimation, write=Set_ShowAnimation};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_TableGridlines() { Word r; HRESULT hr = Get_TableGridlines(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word TableGridlines = {read=_scw_Get_TableGridlines, write=Set_TableGridlines};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_EnlargeFontsLessThan() { int r; HRESULT hr = Get_EnlargeFontsLessThan(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int EnlargeFontsLessThan = {read=_scw_Get_EnlargeFontsLessThan, write=Set_EnlargeFontsLessThan};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowMainTextLayer() { Word r; HRESULT hr = Get_ShowMainTextLayer(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowMainTextLayer = {read=_scw_Get_ShowMainTextLayer, write=Set_ShowMainTextLayer};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_SeekView() { Activex::TOleEnum r; HRESULT hr = Get_SeekView(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum SeekView = {read=_scw_Get_SeekView, write=Set_SeekView};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_SplitSpecial() { Activex::TOleEnum r; HRESULT hr = Get_SplitSpecial(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum SplitSpecial = {read=_scw_Get_SplitSpecial, write=Set_SplitSpecial};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_BrowseToWindow() { int r; HRESULT hr = Get_BrowseToWindow(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int BrowseToWindow = {read=_scw_Get_BrowseToWindow, write=Set_BrowseToWindow};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowOptionalBreaks() { Word r; HRESULT hr = Get_ShowOptionalBreaks(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowOptionalBreaks = {read=_scw_Get_ShowOptionalBreaks, write=Set_ShowOptionalBreaks};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisplayPageBoundaries() { Word r; HRESULT hr = Get_DisplayPageBoundaries(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisplayPageBoundaries = {read=_scw_Get_DisplayPageBoundaries, write=Set_DisplayPageBoundaries};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisplaySmartTags() { Word r; HRESULT hr = Get_DisplaySmartTags(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisplaySmartTags = {read=_scw_Get_DisplaySmartTags, write=Set_DisplaySmartTags};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowRevisionsAndComments() { Word r; HRESULT hr = Get_ShowRevisionsAndComments(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowRevisionsAndComments = {read=_scw_Get_ShowRevisionsAndComments, write=Set_ShowRevisionsAndComments};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowComments() { Word r; HRESULT hr = Get_ShowComments(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowComments = {read=_scw_Get_ShowComments, write=Set_ShowComments};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowInsertionsAndDeletions() { Word r; HRESULT hr = Get_ShowInsertionsAndDeletions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowInsertionsAndDeletions = {read=_scw_Get_ShowInsertionsAndDeletions, write=Set_ShowInsertionsAndDeletions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowFormatChanges() { Word r; HRESULT hr = Get_ShowFormatChanges(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowFormatChanges = {read=_scw_Get_ShowFormatChanges, write=Set_ShowFormatChanges};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_RevisionsView() { Activex::TOleEnum r; HRESULT hr = Get_RevisionsView(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum RevisionsView = {read=_scw_Get_RevisionsView, write=Set_RevisionsView};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_RevisionsMode() { Activex::TOleEnum r; HRESULT hr = Get_RevisionsMode(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum RevisionsMode = {read=_scw_Get_RevisionsMode, write=Set_RevisionsMode};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_RevisionsBalloonWidth() { float r; HRESULT hr = Get_RevisionsBalloonWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float RevisionsBalloonWidth = {read=_scw_Get_RevisionsBalloonWidth, write=Set_RevisionsBalloonWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_RevisionsBalloonWidthType() { Activex::TOleEnum r; HRESULT hr = Get_RevisionsBalloonWidthType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum RevisionsBalloonWidthType = {read=_scw_Get_RevisionsBalloonWidthType, write=Set_RevisionsBalloonWidthType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_RevisionsBalloonSide() { Activex::TOleEnum r; HRESULT hr = Get_RevisionsBalloonSide(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum RevisionsBalloonSide = {read=_scw_Get_RevisionsBalloonSide, write=Set_RevisionsBalloonSide};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Reviewers _scw_Get_Reviewers() { _di_Reviewers r; HRESULT hr = Get_Reviewers(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Reviewers Reviewers = {read=_scw_Get_Reviewers};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_RevisionsBalloonShowConnectingLines() { Word r; HRESULT hr = Get_RevisionsBalloonShowConnectingLines(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word RevisionsBalloonShowConnectingLines = {read=_scw_Get_RevisionsBalloonShowConnectingLines, write=Set_RevisionsBalloonShowConnectingLines};
};

__dispinterface ViewDisp;
typedef System::DelphiInterface<ViewDisp> _di_ViewDisp;
__dispinterface INTERFACE_UUID("{000209A5-0000-0000-C000-000000000046}") ViewDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209A6-0000-0000-C000-000000000046}") Zoom  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Percentage(int &Get_Percentage_result) = 0 ;
	virtual HRESULT __safecall Set_Percentage(int prop) = 0 ;
	virtual HRESULT __safecall Get_PageFit(Activex::TOleEnum &Get_PageFit_result) = 0 ;
	virtual HRESULT __safecall Set_PageFit(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_PageRows(int &Get_PageRows_result) = 0 ;
	virtual HRESULT __safecall Set_PageRows(int prop) = 0 ;
	virtual HRESULT __safecall Get_PageColumns(int &Get_PageColumns_result) = 0 ;
	virtual HRESULT __safecall Set_PageColumns(int prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Percentage() { int r; HRESULT hr = Get_Percentage(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Percentage = {read=_scw_Get_Percentage, write=Set_Percentage};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_PageFit() { Activex::TOleEnum r; HRESULT hr = Get_PageFit(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum PageFit = {read=_scw_Get_PageFit, write=Set_PageFit};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_PageRows() { int r; HRESULT hr = Get_PageRows(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int PageRows = {read=_scw_Get_PageRows, write=Set_PageRows};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_PageColumns() { int r; HRESULT hr = Get_PageColumns(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int PageColumns = {read=_scw_Get_PageColumns, write=Set_PageColumns};
};

__dispinterface ZoomDisp;
typedef System::DelphiInterface<ZoomDisp> _di_ZoomDisp;
__dispinterface INTERFACE_UUID("{000209A6-0000-0000-C000-000000000046}") ZoomDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209A7-0000-0000-C000-000000000046}") Zooms  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Item(Activex::TOleEnum Index, _di_Zoom &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface ZoomsDisp;
typedef System::DelphiInterface<ZoomsDisp> _di_ZoomsDisp;
__dispinterface INTERFACE_UUID("{000209A7-0000-0000-C000-000000000046}") ZoomsDisp  : public IDispatch 
{
	
};

__interface HorizontalLineFormat;
typedef System::DelphiInterface<HorizontalLineFormat> _di_HorizontalLineFormat;
__interface INTERFACE_UUID("{000209A8-0000-0000-C000-000000000046}") InlineShape  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Borders(_di_Borders &Get_Borders_result) = 0 ;
	virtual HRESULT __safecall Set_Borders(const _di_Borders prop) = 0 ;
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Get_LinkFormat(_di_LinkFormat &Get_LinkFormat_result) = 0 ;
	virtual HRESULT __safecall Get_Field(_di_Field &Get_Field_result) = 0 ;
	virtual HRESULT __safecall Get_OLEFormat(_di_OLEFormat &Get_OLEFormat_result) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Get_Hyperlink(_di_Hyperlink &Get_Hyperlink_result) = 0 ;
	virtual HRESULT __safecall Get_Height(float &Get_Height_result) = 0 ;
	virtual HRESULT __safecall Set_Height(float prop) = 0 ;
	virtual HRESULT __safecall Get_Width(float &Get_Width_result) = 0 ;
	virtual HRESULT __safecall Set_Width(float prop) = 0 ;
	virtual HRESULT __safecall Get_ScaleHeight(float &Get_ScaleHeight_result) = 0 ;
	virtual HRESULT __safecall Set_ScaleHeight(float prop) = 0 ;
	virtual HRESULT __safecall Get_ScaleWidth(float &Get_ScaleWidth_result) = 0 ;
	virtual HRESULT __safecall Set_ScaleWidth(float prop) = 0 ;
	virtual HRESULT __safecall Get_LockAspectRatio(Activex::TOleEnum &Get_LockAspectRatio_result) = 0 ;
	virtual HRESULT __safecall Set_LockAspectRatio(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Line(_di_LineFormat &Get_Line_result) = 0 ;
	virtual HRESULT __safecall Get_Fill(_di_FillFormat &Get_Fill_result) = 0 ;
	virtual HRESULT __safecall Get_PictureFormat(_di_PictureFormat &Get_PictureFormat_result) = 0 ;
	virtual HRESULT __safecall Set_PictureFormat(const _di_PictureFormat prop) = 0 ;
	virtual HRESULT __safecall Activate(void) = 0 ;
	virtual HRESULT __safecall Reset(void) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall Select(void) = 0 ;
	virtual HRESULT __safecall ConvertToShape(_di_Shape &ConvertToShape_result) = 0 ;
	virtual HRESULT __safecall Get_HorizontalLineFormat(_di_HorizontalLineFormat &Get_HorizontalLineFormat_result) = 0 ;
	virtual HRESULT __safecall Get_Script(Opofcxp::_di_Script &Get_Script_result) = 0 ;
	virtual HRESULT __safecall Get_OWSAnchor(int &Get_OWSAnchor_result) = 0 ;
	virtual HRESULT __safecall Get_TextEffect(_di_TextEffectFormat &Get_TextEffect_result) = 0 ;
	virtual HRESULT __safecall Set_TextEffect(const _di_TextEffectFormat prop) = 0 ;
	virtual HRESULT __safecall Get_AlternativeText(WideString &Get_AlternativeText_result) = 0 ;
	virtual HRESULT __safecall Set_AlternativeText(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_IsPictureBullet(Word &Get_IsPictureBullet_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Borders _scw_Get_Borders() { _di_Borders r; HRESULT hr = Get_Borders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Borders Borders = {read=_scw_Get_Borders, write=Set_Borders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_LinkFormat _scw_Get_LinkFormat() { _di_LinkFormat r; HRESULT hr = Get_LinkFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_LinkFormat LinkFormat = {read=_scw_Get_LinkFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Field _scw_Get_Field() { _di_Field r; HRESULT hr = Get_Field(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Field Field = {read=_scw_Get_Field};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_OLEFormat _scw_Get_OLEFormat() { _di_OLEFormat r; HRESULT hr = Get_OLEFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_OLEFormat OLEFormat = {read=_scw_Get_OLEFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Hyperlink _scw_Get_Hyperlink() { _di_Hyperlink r; HRESULT hr = Get_Hyperlink(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Hyperlink Hyperlink = {read=_scw_Get_Hyperlink};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Height() { float r; HRESULT hr = Get_Height(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Height = {read=_scw_Get_Height, write=Set_Height};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Width() { float r; HRESULT hr = Get_Width(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Width = {read=_scw_Get_Width, write=Set_Width};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_ScaleHeight() { float r; HRESULT hr = Get_ScaleHeight(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float ScaleHeight = {read=_scw_Get_ScaleHeight, write=Set_ScaleHeight};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_ScaleWidth() { float r; HRESULT hr = Get_ScaleWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float ScaleWidth = {read=_scw_Get_ScaleWidth, write=Set_ScaleWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LockAspectRatio() { Activex::TOleEnum r; HRESULT hr = Get_LockAspectRatio(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LockAspectRatio = {read=_scw_Get_LockAspectRatio, write=Set_LockAspectRatio};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_LineFormat _scw_Get_Line() { _di_LineFormat r; HRESULT hr = Get_Line(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_LineFormat Line = {read=_scw_Get_Line};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_FillFormat _scw_Get_Fill() { _di_FillFormat r; HRESULT hr = Get_Fill(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_FillFormat Fill = {read=_scw_Get_Fill};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_PictureFormat _scw_Get_PictureFormat() { _di_PictureFormat r; HRESULT hr = Get_PictureFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_PictureFormat PictureFormat = {read=_scw_Get_PictureFormat, write=Set_PictureFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_HorizontalLineFormat _scw_Get_HorizontalLineFormat() { _di_HorizontalLineFormat r; HRESULT hr = Get_HorizontalLineFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_HorizontalLineFormat HorizontalLineFormat = {read=_scw_Get_HorizontalLineFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Opofcxp::_di_Script _scw_Get_Script() { Opofcxp::_di_Script r; HRESULT hr = Get_Script(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Opofcxp::_di_Script Script = {read=_scw_Get_Script};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_OWSAnchor() { int r; HRESULT hr = Get_OWSAnchor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int OWSAnchor = {read=_scw_Get_OWSAnchor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_TextEffectFormat _scw_Get_TextEffect() { _di_TextEffectFormat r; HRESULT hr = Get_TextEffect(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_TextEffectFormat TextEffect = {read=_scw_Get_TextEffect, write=Set_TextEffect};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_AlternativeText() { WideString r; HRESULT hr = Get_AlternativeText(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString AlternativeText = {read=_scw_Get_AlternativeText, write=Set_AlternativeText};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IsPictureBullet() { Word r; HRESULT hr = Get_IsPictureBullet(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IsPictureBullet = {read=_scw_Get_IsPictureBullet};
};

__dispinterface InlineShapeDisp;
typedef System::DelphiInterface<InlineShapeDisp> _di_InlineShapeDisp;
__dispinterface INTERFACE_UUID("{000209A8-0000-0000-C000-000000000046}") InlineShapeDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209A9-0000-0000-C000-000000000046}") InlineShapes  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_InlineShape &Item_result) = 0 ;
	virtual HRESULT __safecall AddPicture(const WideString FileName, OleVariant &LinkToFile, OleVariant &SaveWithDocument, OleVariant &Range, _di_InlineShape &AddPicture_result) = 0 ;
	virtual HRESULT __safecall AddOLEObject(OleVariant &ClassType, OleVariant &FileName, OleVariant &LinkToFile, OleVariant &DisplayAsIcon, OleVariant &IconFileName, OleVariant &IconIndex, OleVariant &IconLabel, OleVariant &Range, _di_InlineShape &AddOLEObject_result) = 0 ;
	virtual HRESULT __safecall AddOLEControl(OleVariant &ClassType, OleVariant &Range, _di_InlineShape &AddOLEControl_result) = 0 ;
	virtual HRESULT __safecall New(const _di_Range Range, _di_InlineShape &New_result) = 0 ;
	virtual HRESULT __safecall AddHorizontalLine(const WideString FileName, OleVariant &Range, _di_InlineShape &AddHorizontalLine_result) = 0 ;
	virtual HRESULT __safecall AddHorizontalLineStandard(OleVariant &Range, _di_InlineShape &AddHorizontalLineStandard_result) = 0 ;
	virtual HRESULT __safecall AddPictureBullet(const WideString FileName, OleVariant &Range, _di_InlineShape &AddPictureBullet_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
};

__dispinterface InlineShapesDisp;
typedef System::DelphiInterface<InlineShapesDisp> _di_InlineShapesDisp;
__dispinterface INTERFACE_UUID("{000209A9-0000-0000-C000-000000000046}") InlineShapesDisp  : public IDispatch 
{
	
};

__interface SpellingSuggestion;
typedef System::DelphiInterface<SpellingSuggestion> _di_SpellingSuggestion;
__interface INTERFACE_UUID("{000209AA-0000-0000-C000-000000000046}") SpellingSuggestions  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_SpellingErrorType(Activex::TOleEnum &Get_SpellingErrorType_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_SpellingSuggestion &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_SpellingErrorType() { Activex::TOleEnum r; HRESULT hr = Get_SpellingErrorType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum SpellingErrorType = {read=_scw_Get_SpellingErrorType};
};

__dispinterface SpellingSuggestionsDisp;
typedef System::DelphiInterface<SpellingSuggestionsDisp> _di_SpellingSuggestionsDisp;
__dispinterface INTERFACE_UUID("{000209AA-0000-0000-C000-000000000046}") SpellingSuggestionsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209AB-0000-0000-C000-000000000046}") SpellingSuggestion  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
};

__dispinterface SpellingSuggestionDisp;
typedef System::DelphiInterface<SpellingSuggestionDisp> _di_SpellingSuggestionDisp;
__dispinterface INTERFACE_UUID("{000209AB-0000-0000-C000-000000000046}") SpellingSuggestionDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209AC-0000-0000-C000-000000000046}") Dictionaries  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Maximum(int &Get_Maximum_result) = 0 ;
	virtual HRESULT __safecall Get_ActiveCustomDictionary(_di_Dictionary &Get_ActiveCustomDictionary_result) = 0 ;
	virtual HRESULT __safecall Set_ActiveCustomDictionary(const _di_Dictionary prop) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_Dictionary &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const WideString FileName, _di_Dictionary &Add_result) = 0 ;
	virtual HRESULT __safecall ClearAll(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Maximum() { int r; HRESULT hr = Get_Maximum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Maximum = {read=_scw_Get_Maximum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Dictionary _scw_Get_ActiveCustomDictionary() { _di_Dictionary r; HRESULT hr = Get_ActiveCustomDictionary(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Dictionary ActiveCustomDictionary = {read=_scw_Get_ActiveCustomDictionary, write=Set_ActiveCustomDictionary};
};

__dispinterface DictionariesDisp;
typedef System::DelphiInterface<DictionariesDisp> _di_DictionariesDisp;
__dispinterface INTERFACE_UUID("{000209AC-0000-0000-C000-000000000046}") DictionariesDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209E0-0000-0000-C000-000000000046}") HangulHanjaConversionDictionaries  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Maximum(int &Get_Maximum_result) = 0 ;
	virtual HRESULT __safecall Get_ActiveCustomDictionary(_di_Dictionary &Get_ActiveCustomDictionary_result) = 0 ;
	virtual HRESULT __safecall Set_ActiveCustomDictionary(const _di_Dictionary prop) = 0 ;
	virtual HRESULT __safecall Get_BuiltinDictionary(_di_Dictionary &Get_BuiltinDictionary_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_Dictionary &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const WideString FileName, _di_Dictionary &Add_result) = 0 ;
	virtual HRESULT __safecall ClearAll(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Maximum() { int r; HRESULT hr = Get_Maximum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Maximum = {read=_scw_Get_Maximum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Dictionary _scw_Get_ActiveCustomDictionary() { _di_Dictionary r; HRESULT hr = Get_ActiveCustomDictionary(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Dictionary ActiveCustomDictionary = {read=_scw_Get_ActiveCustomDictionary, write=Set_ActiveCustomDictionary};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Dictionary _scw_Get_BuiltinDictionary() { _di_Dictionary r; HRESULT hr = Get_BuiltinDictionary(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Dictionary BuiltinDictionary = {read=_scw_Get_BuiltinDictionary};
};

__dispinterface HangulHanjaConversionDictionariesDisp;
typedef System::DelphiInterface<HangulHanjaConversionDictionariesDisp> _di_HangulHanjaConversionDictionariesDisp;
__dispinterface INTERFACE_UUID("{000209E0-0000-0000-C000-000000000046}") HangulHanjaConversionDictionariesDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209AD-0000-0000-C000-000000000046}") Dictionary  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Get_Path(WideString &Get_Path_result) = 0 ;
	virtual HRESULT __safecall Get_LanguageID(Activex::TOleEnum &Get_LanguageID_result) = 0 ;
	virtual HRESULT __safecall Set_LanguageID(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_ReadOnly(Word &Get_ReadOnly_result) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Get_LanguageSpecific(Word &Get_LanguageSpecific_result) = 0 ;
	virtual HRESULT __safecall Set_LanguageSpecific(Word prop) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Path() { WideString r; HRESULT hr = Get_Path(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Path = {read=_scw_Get_Path};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_LanguageID() { Activex::TOleEnum r; HRESULT hr = Get_LanguageID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum LanguageID = {read=_scw_Get_LanguageID, write=Set_LanguageID};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ReadOnly() { Word r; HRESULT hr = Get_ReadOnly(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ReadOnly = {read=_scw_Get_ReadOnly};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_LanguageSpecific() { Word r; HRESULT hr = Get_LanguageSpecific(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word LanguageSpecific = {read=_scw_Get_LanguageSpecific, write=Set_LanguageSpecific};
};

__dispinterface DictionaryDisp;
typedef System::DelphiInterface<DictionaryDisp> _di_DictionaryDisp;
__dispinterface INTERFACE_UUID("{000209AD-0000-0000-C000-000000000046}") DictionaryDisp  : public IDispatch 
{
	
};

__interface ReadabilityStatistic;
typedef System::DelphiInterface<ReadabilityStatistic> _di_ReadabilityStatistic;
__interface INTERFACE_UUID("{000209AE-0000-0000-C000-000000000046}") ReadabilityStatistics  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_ReadabilityStatistic &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface ReadabilityStatisticsDisp;
typedef System::DelphiInterface<ReadabilityStatisticsDisp> _di_ReadabilityStatisticsDisp;
__dispinterface INTERFACE_UUID("{000209AE-0000-0000-C000-000000000046}") ReadabilityStatisticsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209AF-0000-0000-C000-000000000046}") ReadabilityStatistic  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Get_Value(float &Get_Value_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Value() { float r; HRESULT hr = Get_Value(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Value = {read=_scw_Get_Value};
};

__dispinterface ReadabilityStatisticDisp;
typedef System::DelphiInterface<ReadabilityStatisticDisp> _di_ReadabilityStatisticDisp;
__dispinterface INTERFACE_UUID("{000209AF-0000-0000-C000-000000000046}") ReadabilityStatisticDisp  : public IDispatch 
{
	
};

__interface Version;
typedef System::DelphiInterface<Version> _di_Version;
__interface INTERFACE_UUID("{000209B3-0000-0000-C000-000000000046}") Versions  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_AutoVersion(Activex::TOleEnum &Get_AutoVersion_result) = 0 ;
	virtual HRESULT __safecall Set_AutoVersion(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_Version &Item_result) = 0 ;
	virtual HRESULT __safecall Save(OleVariant &Comment) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_AutoVersion() { Activex::TOleEnum r; HRESULT hr = Get_AutoVersion(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum AutoVersion = {read=_scw_Get_AutoVersion, write=Set_AutoVersion};
};

__dispinterface VersionsDisp;
typedef System::DelphiInterface<VersionsDisp> _di_VersionsDisp;
__dispinterface INTERFACE_UUID("{000209B3-0000-0000-C000-000000000046}") VersionsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209B4-0000-0000-C000-000000000046}") Version  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_SavedBy(WideString &Get_SavedBy_result) = 0 ;
	virtual HRESULT __safecall Get_Comment(WideString &Get_Comment_result) = 0 ;
	virtual HRESULT __safecall Get_Date(System::TDateTime &Get_Date_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall OpenOld(void) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall Open(_di__Document &Open_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_SavedBy() { WideString r; HRESULT hr = Get_SavedBy(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString SavedBy = {read=_scw_Get_SavedBy};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Comment() { WideString r; HRESULT hr = Get_Comment(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Comment = {read=_scw_Get_Comment};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::TDateTime _scw_Get_Date() { System::TDateTime r; HRESULT hr = Get_Date(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::TDateTime Date = {read=_scw_Get_Date};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
};

__dispinterface VersionDisp;
typedef System::DelphiInterface<VersionDisp> _di_VersionDisp;
__dispinterface INTERFACE_UUID("{000209B4-0000-0000-C000-000000000046}") VersionDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209B7-0000-0000-C000-000000000046}") Options  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_AllowAccentedUppercase(Word &Get_AllowAccentedUppercase_result) = 0 ;
	virtual HRESULT __safecall Set_AllowAccentedUppercase(Word prop) = 0 ;
	virtual HRESULT __safecall Get_WPHelp(Word &Get_WPHelp_result) = 0 ;
	virtual HRESULT __safecall Set_WPHelp(Word prop) = 0 ;
	virtual HRESULT __safecall Get_WPDocNavKeys(Word &Get_WPDocNavKeys_result) = 0 ;
	virtual HRESULT __safecall Set_WPDocNavKeys(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Pagination(Word &Get_Pagination_result) = 0 ;
	virtual HRESULT __safecall Set_Pagination(Word prop) = 0 ;
	virtual HRESULT __safecall Get_BlueScreen(Word &Get_BlueScreen_result) = 0 ;
	virtual HRESULT __safecall Set_BlueScreen(Word prop) = 0 ;
	virtual HRESULT __safecall Get_EnableSound(Word &Get_EnableSound_result) = 0 ;
	virtual HRESULT __safecall Set_EnableSound(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ConfirmConversions(Word &Get_ConfirmConversions_result) = 0 ;
	virtual HRESULT __safecall Set_ConfirmConversions(Word prop) = 0 ;
	virtual HRESULT __safecall Get_UpdateLinksAtOpen(Word &Get_UpdateLinksAtOpen_result) = 0 ;
	virtual HRESULT __safecall Set_UpdateLinksAtOpen(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SendMailAttach(Word &Get_SendMailAttach_result) = 0 ;
	virtual HRESULT __safecall Set_SendMailAttach(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MeasurementUnit(Activex::TOleEnum &Get_MeasurementUnit_result) = 0 ;
	virtual HRESULT __safecall Set_MeasurementUnit(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_ButtonFieldClicks(int &Get_ButtonFieldClicks_result) = 0 ;
	virtual HRESULT __safecall Set_ButtonFieldClicks(int prop) = 0 ;
	virtual HRESULT __safecall Get_ShortMenuNames(Word &Get_ShortMenuNames_result) = 0 ;
	virtual HRESULT __safecall Set_ShortMenuNames(Word prop) = 0 ;
	virtual HRESULT __safecall Get_RTFInClipboard(Word &Get_RTFInClipboard_result) = 0 ;
	virtual HRESULT __safecall Set_RTFInClipboard(Word prop) = 0 ;
	virtual HRESULT __safecall Get_UpdateFieldsAtPrint(Word &Get_UpdateFieldsAtPrint_result) = 0 ;
	virtual HRESULT __safecall Set_UpdateFieldsAtPrint(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PrintProperties(Word &Get_PrintProperties_result) = 0 ;
	virtual HRESULT __safecall Set_PrintProperties(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PrintFieldCodes(Word &Get_PrintFieldCodes_result) = 0 ;
	virtual HRESULT __safecall Set_PrintFieldCodes(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PrintComments(Word &Get_PrintComments_result) = 0 ;
	virtual HRESULT __safecall Set_PrintComments(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PrintHiddenText(Word &Get_PrintHiddenText_result) = 0 ;
	virtual HRESULT __safecall Set_PrintHiddenText(Word prop) = 0 ;
	virtual HRESULT __safecall Get_EnvelopeFeederInstalled(Word &Get_EnvelopeFeederInstalled_result) = 0 ;
	virtual HRESULT __safecall Get_UpdateLinksAtPrint(Word &Get_UpdateLinksAtPrint_result) = 0 ;
	virtual HRESULT __safecall Set_UpdateLinksAtPrint(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PrintBackground(Word &Get_PrintBackground_result) = 0 ;
	virtual HRESULT __safecall Set_PrintBackground(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PrintDrawingObjects(Word &Get_PrintDrawingObjects_result) = 0 ;
	virtual HRESULT __safecall Set_PrintDrawingObjects(Word prop) = 0 ;
	virtual HRESULT __safecall Get_DefaultTray(WideString &Get_DefaultTray_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultTray(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_DefaultTrayID(int &Get_DefaultTrayID_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultTrayID(int prop) = 0 ;
	virtual HRESULT __safecall Get_CreateBackup(Word &Get_CreateBackup_result) = 0 ;
	virtual HRESULT __safecall Set_CreateBackup(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AllowFastSave(Word &Get_AllowFastSave_result) = 0 ;
	virtual HRESULT __safecall Set_AllowFastSave(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SavePropertiesPrompt(Word &Get_SavePropertiesPrompt_result) = 0 ;
	virtual HRESULT __safecall Set_SavePropertiesPrompt(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SaveNormalPrompt(Word &Get_SaveNormalPrompt_result) = 0 ;
	virtual HRESULT __safecall Set_SaveNormalPrompt(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SaveInterval(int &Get_SaveInterval_result) = 0 ;
	virtual HRESULT __safecall Set_SaveInterval(int prop) = 0 ;
	virtual HRESULT __safecall Get_BackgroundSave(Word &Get_BackgroundSave_result) = 0 ;
	virtual HRESULT __safecall Set_BackgroundSave(Word prop) = 0 ;
	virtual HRESULT __safecall Get_InsertedTextMark(Activex::TOleEnum &Get_InsertedTextMark_result) = 0 ;
	virtual HRESULT __safecall Set_InsertedTextMark(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_DeletedTextMark(Activex::TOleEnum &Get_DeletedTextMark_result) = 0 ;
	virtual HRESULT __safecall Set_DeletedTextMark(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_RevisedLinesMark(Activex::TOleEnum &Get_RevisedLinesMark_result) = 0 ;
	virtual HRESULT __safecall Set_RevisedLinesMark(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_InsertedTextColor(Activex::TOleEnum &Get_InsertedTextColor_result) = 0 ;
	virtual HRESULT __safecall Set_InsertedTextColor(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_DeletedTextColor(Activex::TOleEnum &Get_DeletedTextColor_result) = 0 ;
	virtual HRESULT __safecall Set_DeletedTextColor(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_RevisedLinesColor(Activex::TOleEnum &Get_RevisedLinesColor_result) = 0 ;
	virtual HRESULT __safecall Set_RevisedLinesColor(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_DefaultFilePath(Activex::TOleEnum Path, WideString &Get_DefaultFilePath_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultFilePath(Activex::TOleEnum Path, const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Overtype(Word &Get_Overtype_result) = 0 ;
	virtual HRESULT __safecall Set_Overtype(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ReplaceSelection(Word &Get_ReplaceSelection_result) = 0 ;
	virtual HRESULT __safecall Set_ReplaceSelection(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AllowDragAndDrop(Word &Get_AllowDragAndDrop_result) = 0 ;
	virtual HRESULT __safecall Set_AllowDragAndDrop(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoWordSelection(Word &Get_AutoWordSelection_result) = 0 ;
	virtual HRESULT __safecall Set_AutoWordSelection(Word prop) = 0 ;
	virtual HRESULT __safecall Get_INSKeyForPaste(Word &Get_INSKeyForPaste_result) = 0 ;
	virtual HRESULT __safecall Set_INSKeyForPaste(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SmartCutPaste(Word &Get_SmartCutPaste_result) = 0 ;
	virtual HRESULT __safecall Set_SmartCutPaste(Word prop) = 0 ;
	virtual HRESULT __safecall Get_TabIndentKey(Word &Get_TabIndentKey_result) = 0 ;
	virtual HRESULT __safecall Set_TabIndentKey(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PictureEditor(WideString &Get_PictureEditor_result) = 0 ;
	virtual HRESULT __safecall Set_PictureEditor(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_AnimateScreenMovements(Word &Get_AnimateScreenMovements_result) = 0 ;
	virtual HRESULT __safecall Set_AnimateScreenMovements(Word prop) = 0 ;
	virtual HRESULT __safecall Get_VirusProtection(Word &Get_VirusProtection_result) = 0 ;
	virtual HRESULT __safecall Set_VirusProtection(Word prop) = 0 ;
	virtual HRESULT __safecall Get_RevisedPropertiesMark(Activex::TOleEnum &Get_RevisedPropertiesMark_result) = 0 ;
	virtual HRESULT __safecall Set_RevisedPropertiesMark(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_RevisedPropertiesColor(Activex::TOleEnum &Get_RevisedPropertiesColor_result) = 0 ;
	virtual HRESULT __safecall Set_RevisedPropertiesColor(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_SnapToGrid(Word &Get_SnapToGrid_result) = 0 ;
	virtual HRESULT __safecall Set_SnapToGrid(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SnapToShapes(Word &Get_SnapToShapes_result) = 0 ;
	virtual HRESULT __safecall Set_SnapToShapes(Word prop) = 0 ;
	virtual HRESULT __safecall Get_GridDistanceHorizontal(float &Get_GridDistanceHorizontal_result) = 0 ;
	virtual HRESULT __safecall Set_GridDistanceHorizontal(float prop) = 0 ;
	virtual HRESULT __safecall Get_GridDistanceVertical(float &Get_GridDistanceVertical_result) = 0 ;
	virtual HRESULT __safecall Set_GridDistanceVertical(float prop) = 0 ;
	virtual HRESULT __safecall Get_GridOriginHorizontal(float &Get_GridOriginHorizontal_result) = 0 ;
	virtual HRESULT __safecall Set_GridOriginHorizontal(float prop) = 0 ;
	virtual HRESULT __safecall Get_GridOriginVertical(float &Get_GridOriginVertical_result) = 0 ;
	virtual HRESULT __safecall Set_GridOriginVertical(float prop) = 0 ;
	virtual HRESULT __safecall Get_InlineConversion(Word &Get_InlineConversion_result) = 0 ;
	virtual HRESULT __safecall Set_InlineConversion(Word prop) = 0 ;
	virtual HRESULT __safecall Get_IMEAutomaticControl(Word &Get_IMEAutomaticControl_result) = 0 ;
	virtual HRESULT __safecall Set_IMEAutomaticControl(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatApplyHeadings(Word &Get_AutoFormatApplyHeadings_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatApplyHeadings(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatApplyLists(Word &Get_AutoFormatApplyLists_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatApplyLists(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatApplyBulletedLists(Word &Get_AutoFormatApplyBulletedLists_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatApplyBulletedLists(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatApplyOtherParas(Word &Get_AutoFormatApplyOtherParas_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatApplyOtherParas(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatReplaceQuotes(Word &Get_AutoFormatReplaceQuotes_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatReplaceQuotes(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatReplaceSymbols(Word &Get_AutoFormatReplaceSymbols_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatReplaceSymbols(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatReplaceOrdinals(Word &Get_AutoFormatReplaceOrdinals_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatReplaceOrdinals(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatReplaceFractions(Word &Get_AutoFormatReplaceFractions_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatReplaceFractions(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatReplacePlainTextEmphasis(Word &Get_AutoFormatReplacePlainTextEmphasis_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatReplacePlainTextEmphasis(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatPreserveStyles(Word &Get_AutoFormatPreserveStyles_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatPreserveStyles(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeApplyHeadings(Word &Get_AutoFormatAsYouTypeApplyHeadings_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeApplyHeadings(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeApplyBorders(Word &Get_AutoFormatAsYouTypeApplyBorders_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeApplyBorders(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeApplyBulletedLists(Word &Get_AutoFormatAsYouTypeApplyBulletedLists_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeApplyBulletedLists(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeApplyNumberedLists(Word &Get_AutoFormatAsYouTypeApplyNumberedLists_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeApplyNumberedLists(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeReplaceQuotes(Word &Get_AutoFormatAsYouTypeReplaceQuotes_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeReplaceQuotes(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeReplaceSymbols(Word &Get_AutoFormatAsYouTypeReplaceSymbols_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeReplaceSymbols(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeReplaceOrdinals(Word &Get_AutoFormatAsYouTypeReplaceOrdinals_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeReplaceOrdinals(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeReplaceFractions(Word &Get_AutoFormatAsYouTypeReplaceFractions_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeReplaceFractions(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeReplacePlainTextEmphasis(Word &Get_AutoFormatAsYouTypeReplacePlainTextEmphasis_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeReplacePlainTextEmphasis(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeFormatListItemBeginning(Word &Get_AutoFormatAsYouTypeFormatListItemBeginning_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeFormatListItemBeginning(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeDefineStyles(Word &Get_AutoFormatAsYouTypeDefineStyles_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeDefineStyles(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatPlainTextWordMail(Word &Get_AutoFormatPlainTextWordMail_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatPlainTextWordMail(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeReplaceHyperlinks(Word &Get_AutoFormatAsYouTypeReplaceHyperlinks_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeReplaceHyperlinks(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatReplaceHyperlinks(Word &Get_AutoFormatReplaceHyperlinks_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatReplaceHyperlinks(Word prop) = 0 ;
	virtual HRESULT __safecall Get_DefaultHighlightColorIndex(Activex::TOleEnum &Get_DefaultHighlightColorIndex_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultHighlightColorIndex(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_DefaultBorderLineStyle(Activex::TOleEnum &Get_DefaultBorderLineStyle_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultBorderLineStyle(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_CheckSpellingAsYouType(Word &Get_CheckSpellingAsYouType_result) = 0 ;
	virtual HRESULT __safecall Set_CheckSpellingAsYouType(Word prop) = 0 ;
	virtual HRESULT __safecall Get_CheckGrammarAsYouType(Word &Get_CheckGrammarAsYouType_result) = 0 ;
	virtual HRESULT __safecall Set_CheckGrammarAsYouType(Word prop) = 0 ;
	virtual HRESULT __safecall Get_IgnoreInternetAndFileAddresses(Word &Get_IgnoreInternetAndFileAddresses_result) = 0 ;
	virtual HRESULT __safecall Set_IgnoreInternetAndFileAddresses(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowReadabilityStatistics(Word &Get_ShowReadabilityStatistics_result) = 0 ;
	virtual HRESULT __safecall Set_ShowReadabilityStatistics(Word prop) = 0 ;
	virtual HRESULT __safecall Get_IgnoreUppercase(Word &Get_IgnoreUppercase_result) = 0 ;
	virtual HRESULT __safecall Set_IgnoreUppercase(Word prop) = 0 ;
	virtual HRESULT __safecall Get_IgnoreMixedDigits(Word &Get_IgnoreMixedDigits_result) = 0 ;
	virtual HRESULT __safecall Set_IgnoreMixedDigits(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SuggestFromMainDictionaryOnly(Word &Get_SuggestFromMainDictionaryOnly_result) = 0 ;
	virtual HRESULT __safecall Set_SuggestFromMainDictionaryOnly(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SuggestSpellingCorrections(Word &Get_SuggestSpellingCorrections_result) = 0 ;
	virtual HRESULT __safecall Set_SuggestSpellingCorrections(Word prop) = 0 ;
	virtual HRESULT __safecall Get_DefaultBorderLineWidth(Activex::TOleEnum &Get_DefaultBorderLineWidth_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultBorderLineWidth(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_CheckGrammarWithSpelling(Word &Get_CheckGrammarWithSpelling_result) = 0 ;
	virtual HRESULT __safecall Set_CheckGrammarWithSpelling(Word prop) = 0 ;
	virtual HRESULT __safecall Get_DefaultOpenFormat(Activex::TOleEnum &Get_DefaultOpenFormat_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultOpenFormat(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_PrintDraft(Word &Get_PrintDraft_result) = 0 ;
	virtual HRESULT __safecall Set_PrintDraft(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PrintReverse(Word &Get_PrintReverse_result) = 0 ;
	virtual HRESULT __safecall Set_PrintReverse(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MapPaperSize(Word &Get_MapPaperSize_result) = 0 ;
	virtual HRESULT __safecall Set_MapPaperSize(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeApplyTables(Word &Get_AutoFormatAsYouTypeApplyTables_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeApplyTables(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatApplyFirstIndents(Word &Get_AutoFormatApplyFirstIndents_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatApplyFirstIndents(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatMatchParentheses(Word &Get_AutoFormatMatchParentheses_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatMatchParentheses(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatReplaceFarEastDashes(Word &Get_AutoFormatReplaceFarEastDashes_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatReplaceFarEastDashes(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatDeleteAutoSpaces(Word &Get_AutoFormatDeleteAutoSpaces_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatDeleteAutoSpaces(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeApplyFirstIndents(Word &Get_AutoFormatAsYouTypeApplyFirstIndents_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeApplyFirstIndents(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeApplyDates(Word &Get_AutoFormatAsYouTypeApplyDates_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeApplyDates(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeApplyClosings(Word &Get_AutoFormatAsYouTypeApplyClosings_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeApplyClosings(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeMatchParentheses(Word &Get_AutoFormatAsYouTypeMatchParentheses_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeMatchParentheses(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeReplaceFarEastDashes(Word &Get_AutoFormatAsYouTypeReplaceFarEastDashes_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeReplaceFarEastDashes(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeDeleteAutoSpaces(Word &Get_AutoFormatAsYouTypeDeleteAutoSpaces_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeDeleteAutoSpaces(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeInsertClosings(Word &Get_AutoFormatAsYouTypeInsertClosings_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeInsertClosings(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeAutoLetterWizard(Word &Get_AutoFormatAsYouTypeAutoLetterWizard_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeAutoLetterWizard(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeInsertOvers(Word &Get_AutoFormatAsYouTypeInsertOvers_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeInsertOvers(Word prop) = 0 ;
	virtual HRESULT __safecall Get_DisplayGridLines(Word &Get_DisplayGridLines_result) = 0 ;
	virtual HRESULT __safecall Set_DisplayGridLines(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchFuzzyCase(Word &Get_MatchFuzzyCase_result) = 0 ;
	virtual HRESULT __safecall Set_MatchFuzzyCase(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchFuzzyByte(Word &Get_MatchFuzzyByte_result) = 0 ;
	virtual HRESULT __safecall Set_MatchFuzzyByte(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchFuzzyHiragana(Word &Get_MatchFuzzyHiragana_result) = 0 ;
	virtual HRESULT __safecall Set_MatchFuzzyHiragana(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchFuzzySmallKana(Word &Get_MatchFuzzySmallKana_result) = 0 ;
	virtual HRESULT __safecall Set_MatchFuzzySmallKana(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchFuzzyDash(Word &Get_MatchFuzzyDash_result) = 0 ;
	virtual HRESULT __safecall Set_MatchFuzzyDash(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchFuzzyIterationMark(Word &Get_MatchFuzzyIterationMark_result) = 0 ;
	virtual HRESULT __safecall Set_MatchFuzzyIterationMark(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchFuzzyKanji(Word &Get_MatchFuzzyKanji_result) = 0 ;
	virtual HRESULT __safecall Set_MatchFuzzyKanji(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchFuzzyOldKana(Word &Get_MatchFuzzyOldKana_result) = 0 ;
	virtual HRESULT __safecall Set_MatchFuzzyOldKana(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchFuzzyProlongedSoundMark(Word &Get_MatchFuzzyProlongedSoundMark_result) = 0 ;
	virtual HRESULT __safecall Set_MatchFuzzyProlongedSoundMark(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchFuzzyDZ(Word &Get_MatchFuzzyDZ_result) = 0 ;
	virtual HRESULT __safecall Set_MatchFuzzyDZ(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchFuzzyBV(Word &Get_MatchFuzzyBV_result) = 0 ;
	virtual HRESULT __safecall Set_MatchFuzzyBV(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchFuzzyTC(Word &Get_MatchFuzzyTC_result) = 0 ;
	virtual HRESULT __safecall Set_MatchFuzzyTC(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchFuzzyHF(Word &Get_MatchFuzzyHF_result) = 0 ;
	virtual HRESULT __safecall Set_MatchFuzzyHF(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchFuzzyZJ(Word &Get_MatchFuzzyZJ_result) = 0 ;
	virtual HRESULT __safecall Set_MatchFuzzyZJ(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchFuzzyAY(Word &Get_MatchFuzzyAY_result) = 0 ;
	virtual HRESULT __safecall Set_MatchFuzzyAY(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchFuzzyKiKu(Word &Get_MatchFuzzyKiKu_result) = 0 ;
	virtual HRESULT __safecall Set_MatchFuzzyKiKu(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchFuzzyPunctuation(Word &Get_MatchFuzzyPunctuation_result) = 0 ;
	virtual HRESULT __safecall Set_MatchFuzzyPunctuation(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MatchFuzzySpace(Word &Get_MatchFuzzySpace_result) = 0 ;
	virtual HRESULT __safecall Set_MatchFuzzySpace(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ApplyFarEastFontsToAscii(Word &Get_ApplyFarEastFontsToAscii_result) = 0 ;
	virtual HRESULT __safecall Set_ApplyFarEastFontsToAscii(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ConvertHighAnsiToFarEast(Word &Get_ConvertHighAnsiToFarEast_result) = 0 ;
	virtual HRESULT __safecall Set_ConvertHighAnsiToFarEast(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PrintOddPagesInAscendingOrder(Word &Get_PrintOddPagesInAscendingOrder_result) = 0 ;
	virtual HRESULT __safecall Set_PrintOddPagesInAscendingOrder(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PrintEvenPagesInAscendingOrder(Word &Get_PrintEvenPagesInAscendingOrder_result) = 0 ;
	virtual HRESULT __safecall Set_PrintEvenPagesInAscendingOrder(Word prop) = 0 ;
	virtual HRESULT __safecall Get_DefaultBorderColorIndex(Activex::TOleEnum &Get_DefaultBorderColorIndex_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultBorderColorIndex(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_EnableMisusedWordsDictionary(Word &Get_EnableMisusedWordsDictionary_result) = 0 ;
	virtual HRESULT __safecall Set_EnableMisusedWordsDictionary(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AllowCombinedAuxiliaryForms(Word &Get_AllowCombinedAuxiliaryForms_result) = 0 ;
	virtual HRESULT __safecall Set_AllowCombinedAuxiliaryForms(Word prop) = 0 ;
	virtual HRESULT __safecall Get_HangulHanjaFastConversion(Word &Get_HangulHanjaFastConversion_result) = 0 ;
	virtual HRESULT __safecall Set_HangulHanjaFastConversion(Word prop) = 0 ;
	virtual HRESULT __safecall Get_CheckHangulEndings(Word &Get_CheckHangulEndings_result) = 0 ;
	virtual HRESULT __safecall Set_CheckHangulEndings(Word prop) = 0 ;
	virtual HRESULT __safecall Get_EnableHangulHanjaRecentOrdering(Word &Get_EnableHangulHanjaRecentOrdering_result) = 0 ;
	virtual HRESULT __safecall Set_EnableHangulHanjaRecentOrdering(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MultipleWordConversionsMode(Activex::TOleEnum &Get_MultipleWordConversionsMode_result) = 0 ;
	virtual HRESULT __safecall Set_MultipleWordConversionsMode(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall SetWPHelpOptions(OleVariant &CommandKeyHelp, OleVariant &DocNavigationKeys, OleVariant &MouseSimulation, OleVariant &DemoGuidance, OleVariant &DemoSpeed, OleVariant &HelpType) = 0 ;
	virtual HRESULT __safecall Get_DefaultBorderColor(Activex::TOleEnum &Get_DefaultBorderColor_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultBorderColor(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_AllowPixelUnits(Word &Get_AllowPixelUnits_result) = 0 ;
	virtual HRESULT __safecall Set_AllowPixelUnits(Word prop) = 0 ;
	virtual HRESULT __safecall Get_UseCharacterUnit(Word &Get_UseCharacterUnit_result) = 0 ;
	virtual HRESULT __safecall Set_UseCharacterUnit(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AllowCompoundNounProcessing(Word &Get_AllowCompoundNounProcessing_result) = 0 ;
	virtual HRESULT __safecall Set_AllowCompoundNounProcessing(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoKeyboardSwitching(Word &Get_AutoKeyboardSwitching_result) = 0 ;
	virtual HRESULT __safecall Set_AutoKeyboardSwitching(Word prop) = 0 ;
	virtual HRESULT __safecall Get_DocumentViewDirection(Activex::TOleEnum &Get_DocumentViewDirection_result) = 0 ;
	virtual HRESULT __safecall Set_DocumentViewDirection(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_ArabicNumeral(Activex::TOleEnum &Get_ArabicNumeral_result) = 0 ;
	virtual HRESULT __safecall Set_ArabicNumeral(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_MonthNames(Activex::TOleEnum &Get_MonthNames_result) = 0 ;
	virtual HRESULT __safecall Set_MonthNames(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_CursorMovement(Activex::TOleEnum &Get_CursorMovement_result) = 0 ;
	virtual HRESULT __safecall Set_CursorMovement(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_VisualSelection(Activex::TOleEnum &Get_VisualSelection_result) = 0 ;
	virtual HRESULT __safecall Set_VisualSelection(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_ShowDiacritics(Word &Get_ShowDiacritics_result) = 0 ;
	virtual HRESULT __safecall Set_ShowDiacritics(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowControlCharacters(Word &Get_ShowControlCharacters_result) = 0 ;
	virtual HRESULT __safecall Set_ShowControlCharacters(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AddControlCharacters(Word &Get_AddControlCharacters_result) = 0 ;
	virtual HRESULT __safecall Set_AddControlCharacters(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AddBiDirectionalMarksWhenSavingTextFile(Word &Get_AddBiDirectionalMarksWhenSavingTextFile_result) = 0 ;
	virtual HRESULT __safecall Set_AddBiDirectionalMarksWhenSavingTextFile(Word prop) = 0 ;
	virtual HRESULT __safecall Get_StrictInitialAlefHamza(Word &Get_StrictInitialAlefHamza_result) = 0 ;
	virtual HRESULT __safecall Set_StrictInitialAlefHamza(Word prop) = 0 ;
	virtual HRESULT __safecall Get_StrictFinalYaa(Word &Get_StrictFinalYaa_result) = 0 ;
	virtual HRESULT __safecall Set_StrictFinalYaa(Word prop) = 0 ;
	virtual HRESULT __safecall Get_HebrewMode(Activex::TOleEnum &Get_HebrewMode_result) = 0 ;
	virtual HRESULT __safecall Set_HebrewMode(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_ArabicMode(Activex::TOleEnum &Get_ArabicMode_result) = 0 ;
	virtual HRESULT __safecall Set_ArabicMode(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_AllowClickAndTypeMouse(Word &Get_AllowClickAndTypeMouse_result) = 0 ;
	virtual HRESULT __safecall Set_AllowClickAndTypeMouse(Word prop) = 0 ;
	virtual HRESULT __safecall Get_UseGermanSpellingReform(Word &Get_UseGermanSpellingReform_result) = 0 ;
	virtual HRESULT __safecall Set_UseGermanSpellingReform(Word prop) = 0 ;
	virtual HRESULT __safecall Get_InterpretHighAnsi(Activex::TOleEnum &Get_InterpretHighAnsi_result) = 0 ;
	virtual HRESULT __safecall Set_InterpretHighAnsi(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_AddHebDoubleQuote(Word &Get_AddHebDoubleQuote_result) = 0 ;
	virtual HRESULT __safecall Set_AddHebDoubleQuote(Word prop) = 0 ;
	virtual HRESULT __safecall Get_UseDiffDiacColor(Word &Get_UseDiffDiacColor_result) = 0 ;
	virtual HRESULT __safecall Set_UseDiffDiacColor(Word prop) = 0 ;
	virtual HRESULT __safecall Get_DiacriticColorVal(Activex::TOleEnum &Get_DiacriticColorVal_result) = 0 ;
	virtual HRESULT __safecall Set_DiacriticColorVal(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_OptimizeForWord97byDefault(Word &Get_OptimizeForWord97byDefault_result) = 0 ;
	virtual HRESULT __safecall Set_OptimizeForWord97byDefault(Word prop) = 0 ;
	virtual HRESULT __safecall Get_LocalNetworkFile(Word &Get_LocalNetworkFile_result) = 0 ;
	virtual HRESULT __safecall Set_LocalNetworkFile(Word prop) = 0 ;
	virtual HRESULT __safecall Get_TypeNReplace(Word &Get_TypeNReplace_result) = 0 ;
	virtual HRESULT __safecall Set_TypeNReplace(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SequenceCheck(Word &Get_SequenceCheck_result) = 0 ;
	virtual HRESULT __safecall Set_SequenceCheck(Word prop) = 0 ;
	virtual HRESULT __safecall Get_BackgroundOpen(Word &Get_BackgroundOpen_result) = 0 ;
	virtual HRESULT __safecall Set_BackgroundOpen(Word prop) = 0 ;
	virtual HRESULT __safecall Get_DisableFeaturesbyDefault(Word &Get_DisableFeaturesbyDefault_result) = 0 ;
	virtual HRESULT __safecall Set_DisableFeaturesbyDefault(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PasteAdjustWordSpacing(Word &Get_PasteAdjustWordSpacing_result) = 0 ;
	virtual HRESULT __safecall Set_PasteAdjustWordSpacing(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PasteAdjustParagraphSpacing(Word &Get_PasteAdjustParagraphSpacing_result) = 0 ;
	virtual HRESULT __safecall Set_PasteAdjustParagraphSpacing(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PasteAdjustTableFormatting(Word &Get_PasteAdjustTableFormatting_result) = 0 ;
	virtual HRESULT __safecall Set_PasteAdjustTableFormatting(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PasteSmartStyleBehavior(Word &Get_PasteSmartStyleBehavior_result) = 0 ;
	virtual HRESULT __safecall Set_PasteSmartStyleBehavior(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PasteMergeFromPPT(Word &Get_PasteMergeFromPPT_result) = 0 ;
	virtual HRESULT __safecall Set_PasteMergeFromPPT(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PasteMergeFromXL(Word &Get_PasteMergeFromXL_result) = 0 ;
	virtual HRESULT __safecall Set_PasteMergeFromXL(Word prop) = 0 ;
	virtual HRESULT __safecall Get_CtrlClickHyperlinkToOpen(Word &Get_CtrlClickHyperlinkToOpen_result) = 0 ;
	virtual HRESULT __safecall Set_CtrlClickHyperlinkToOpen(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PictureWrapType(Activex::TOleEnum &Get_PictureWrapType_result) = 0 ;
	virtual HRESULT __safecall Set_PictureWrapType(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_DisableFeaturesIntroducedAfterbyDefault(Activex::TOleEnum &Get_DisableFeaturesIntroducedAfterbyDefault_result) = 0 ;
	virtual HRESULT __safecall Set_DisableFeaturesIntroducedAfterbyDefault(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_PasteSmartCutPaste(Word &Get_PasteSmartCutPaste_result) = 0 ;
	virtual HRESULT __safecall Set_PasteSmartCutPaste(Word prop) = 0 ;
	virtual HRESULT __safecall Get_DisplayPasteOptions(Word &Get_DisplayPasteOptions_result) = 0 ;
	virtual HRESULT __safecall Set_DisplayPasteOptions(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PromptUpdateStyle(Word &Get_PromptUpdateStyle_result) = 0 ;
	virtual HRESULT __safecall Set_PromptUpdateStyle(Word prop) = 0 ;
	virtual HRESULT __safecall Get_DefaultEPostageApp(WideString &Get_DefaultEPostageApp_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultEPostageApp(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_DefaultTextEncoding(Activex::TOleEnum &Get_DefaultTextEncoding_result) = 0 ;
	virtual HRESULT __safecall Set_DefaultTextEncoding(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_LabelSmartTags(Word &Get_LabelSmartTags_result) = 0 ;
	virtual HRESULT __safecall Set_LabelSmartTags(Word prop) = 0 ;
	virtual HRESULT __safecall Get_DisplaySmartTagButtons(Word &Get_DisplaySmartTagButtons_result) = 0 ;
	virtual HRESULT __safecall Set_DisplaySmartTagButtons(Word prop) = 0 ;
	virtual HRESULT __safecall Get_WarnBeforeSavingPrintingSendingMarkup(Word &Get_WarnBeforeSavingPrintingSendingMarkup_result) = 0 ;
	virtual HRESULT __safecall Set_WarnBeforeSavingPrintingSendingMarkup(Word prop) = 0 ;
	virtual HRESULT __safecall Get_StoreRSIDOnSave(Word &Get_StoreRSIDOnSave_result) = 0 ;
	virtual HRESULT __safecall Set_StoreRSIDOnSave(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ShowFormatError(Word &Get_ShowFormatError_result) = 0 ;
	virtual HRESULT __safecall Set_ShowFormatError(Word prop) = 0 ;
	virtual HRESULT __safecall Get_FormatScanning(Word &Get_FormatScanning_result) = 0 ;
	virtual HRESULT __safecall Set_FormatScanning(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PasteMergeLists(Word &Get_PasteMergeLists_result) = 0 ;
	virtual HRESULT __safecall Set_PasteMergeLists(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoCreateNewDrawings(Word &Get_AutoCreateNewDrawings_result) = 0 ;
	virtual HRESULT __safecall Set_AutoCreateNewDrawings(Word prop) = 0 ;
	virtual HRESULT __safecall Get_SmartParaSelection(Word &Get_SmartParaSelection_result) = 0 ;
	virtual HRESULT __safecall Set_SmartParaSelection(Word prop) = 0 ;
	virtual HRESULT __safecall Get_RevisionsBalloonPrintOrientation(Activex::TOleEnum &Get_RevisionsBalloonPrintOrientation_result) = 0 ;
	virtual HRESULT __safecall Set_RevisionsBalloonPrintOrientation(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_CommentsColor(Activex::TOleEnum &Get_CommentsColor_result) = 0 ;
	virtual HRESULT __safecall Set_CommentsColor(Activex::TOleEnum prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AllowAccentedUppercase() { Word r; HRESULT hr = Get_AllowAccentedUppercase(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AllowAccentedUppercase = {read=_scw_Get_AllowAccentedUppercase, write=Set_AllowAccentedUppercase};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_WPHelp() { Word r; HRESULT hr = Get_WPHelp(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word WPHelp = {read=_scw_Get_WPHelp, write=Set_WPHelp};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_WPDocNavKeys() { Word r; HRESULT hr = Get_WPDocNavKeys(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word WPDocNavKeys = {read=_scw_Get_WPDocNavKeys, write=Set_WPDocNavKeys};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Pagination() { Word r; HRESULT hr = Get_Pagination(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Pagination = {read=_scw_Get_Pagination, write=Set_Pagination};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_BlueScreen() { Word r; HRESULT hr = Get_BlueScreen(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word BlueScreen = {read=_scw_Get_BlueScreen, write=Set_BlueScreen};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_EnableSound() { Word r; HRESULT hr = Get_EnableSound(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word EnableSound = {read=_scw_Get_EnableSound, write=Set_EnableSound};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ConfirmConversions() { Word r; HRESULT hr = Get_ConfirmConversions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ConfirmConversions = {read=_scw_Get_ConfirmConversions, write=Set_ConfirmConversions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_UpdateLinksAtOpen() { Word r; HRESULT hr = Get_UpdateLinksAtOpen(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word UpdateLinksAtOpen = {read=_scw_Get_UpdateLinksAtOpen, write=Set_UpdateLinksAtOpen};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SendMailAttach() { Word r; HRESULT hr = Get_SendMailAttach(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SendMailAttach = {read=_scw_Get_SendMailAttach, write=Set_SendMailAttach};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_MeasurementUnit() { Activex::TOleEnum r; HRESULT hr = Get_MeasurementUnit(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum MeasurementUnit = {read=_scw_Get_MeasurementUnit, write=Set_MeasurementUnit};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_ButtonFieldClicks() { int r; HRESULT hr = Get_ButtonFieldClicks(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int ButtonFieldClicks = {read=_scw_Get_ButtonFieldClicks, write=Set_ButtonFieldClicks};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShortMenuNames() { Word r; HRESULT hr = Get_ShortMenuNames(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShortMenuNames = {read=_scw_Get_ShortMenuNames, write=Set_ShortMenuNames};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_RTFInClipboard() { Word r; HRESULT hr = Get_RTFInClipboard(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word RTFInClipboard = {read=_scw_Get_RTFInClipboard, write=Set_RTFInClipboard};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_UpdateFieldsAtPrint() { Word r; HRESULT hr = Get_UpdateFieldsAtPrint(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word UpdateFieldsAtPrint = {read=_scw_Get_UpdateFieldsAtPrint, write=Set_UpdateFieldsAtPrint};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PrintProperties() { Word r; HRESULT hr = Get_PrintProperties(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PrintProperties = {read=_scw_Get_PrintProperties, write=Set_PrintProperties};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PrintFieldCodes() { Word r; HRESULT hr = Get_PrintFieldCodes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PrintFieldCodes = {read=_scw_Get_PrintFieldCodes, write=Set_PrintFieldCodes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PrintComments() { Word r; HRESULT hr = Get_PrintComments(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PrintComments = {read=_scw_Get_PrintComments, write=Set_PrintComments};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PrintHiddenText() { Word r; HRESULT hr = Get_PrintHiddenText(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PrintHiddenText = {read=_scw_Get_PrintHiddenText, write=Set_PrintHiddenText};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_EnvelopeFeederInstalled() { Word r; HRESULT hr = Get_EnvelopeFeederInstalled(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word EnvelopeFeederInstalled = {read=_scw_Get_EnvelopeFeederInstalled};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_UpdateLinksAtPrint() { Word r; HRESULT hr = Get_UpdateLinksAtPrint(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word UpdateLinksAtPrint = {read=_scw_Get_UpdateLinksAtPrint, write=Set_UpdateLinksAtPrint};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PrintBackground() { Word r; HRESULT hr = Get_PrintBackground(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PrintBackground = {read=_scw_Get_PrintBackground, write=Set_PrintBackground};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PrintDrawingObjects() { Word r; HRESULT hr = Get_PrintDrawingObjects(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PrintDrawingObjects = {read=_scw_Get_PrintDrawingObjects, write=Set_PrintDrawingObjects};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_DefaultTray() { WideString r; HRESULT hr = Get_DefaultTray(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString DefaultTray = {read=_scw_Get_DefaultTray, write=Set_DefaultTray};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_DefaultTrayID() { int r; HRESULT hr = Get_DefaultTrayID(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int DefaultTrayID = {read=_scw_Get_DefaultTrayID, write=Set_DefaultTrayID};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_CreateBackup() { Word r; HRESULT hr = Get_CreateBackup(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word CreateBackup = {read=_scw_Get_CreateBackup, write=Set_CreateBackup};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AllowFastSave() { Word r; HRESULT hr = Get_AllowFastSave(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AllowFastSave = {read=_scw_Get_AllowFastSave, write=Set_AllowFastSave};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SavePropertiesPrompt() { Word r; HRESULT hr = Get_SavePropertiesPrompt(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SavePropertiesPrompt = {read=_scw_Get_SavePropertiesPrompt, write=Set_SavePropertiesPrompt};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SaveNormalPrompt() { Word r; HRESULT hr = Get_SaveNormalPrompt(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SaveNormalPrompt = {read=_scw_Get_SaveNormalPrompt, write=Set_SaveNormalPrompt};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_SaveInterval() { int r; HRESULT hr = Get_SaveInterval(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int SaveInterval = {read=_scw_Get_SaveInterval, write=Set_SaveInterval};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_BackgroundSave() { Word r; HRESULT hr = Get_BackgroundSave(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word BackgroundSave = {read=_scw_Get_BackgroundSave, write=Set_BackgroundSave};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_InsertedTextMark() { Activex::TOleEnum r; HRESULT hr = Get_InsertedTextMark(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum InsertedTextMark = {read=_scw_Get_InsertedTextMark, write=Set_InsertedTextMark};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_DeletedTextMark() { Activex::TOleEnum r; HRESULT hr = Get_DeletedTextMark(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum DeletedTextMark = {read=_scw_Get_DeletedTextMark, write=Set_DeletedTextMark};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_RevisedLinesMark() { Activex::TOleEnum r; HRESULT hr = Get_RevisedLinesMark(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum RevisedLinesMark = {read=_scw_Get_RevisedLinesMark, write=Set_RevisedLinesMark};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_InsertedTextColor() { Activex::TOleEnum r; HRESULT hr = Get_InsertedTextColor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum InsertedTextColor = {read=_scw_Get_InsertedTextColor, write=Set_InsertedTextColor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_DeletedTextColor() { Activex::TOleEnum r; HRESULT hr = Get_DeletedTextColor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum DeletedTextColor = {read=_scw_Get_DeletedTextColor, write=Set_DeletedTextColor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_RevisedLinesColor() { Activex::TOleEnum r; HRESULT hr = Get_RevisedLinesColor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum RevisedLinesColor = {read=_scw_Get_RevisedLinesColor, write=Set_RevisedLinesColor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_DefaultFilePath(Activex::TOleEnum Path) { WideString r; HRESULT hr = Get_DefaultFilePath(Path, r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString DefaultFilePath[Activex::TOleEnum Path] = {read=_scw_Get_DefaultFilePath, write=Set_DefaultFilePath};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Overtype() { Word r; HRESULT hr = Get_Overtype(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Overtype = {read=_scw_Get_Overtype, write=Set_Overtype};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ReplaceSelection() { Word r; HRESULT hr = Get_ReplaceSelection(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ReplaceSelection = {read=_scw_Get_ReplaceSelection, write=Set_ReplaceSelection};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AllowDragAndDrop() { Word r; HRESULT hr = Get_AllowDragAndDrop(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AllowDragAndDrop = {read=_scw_Get_AllowDragAndDrop, write=Set_AllowDragAndDrop};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoWordSelection() { Word r; HRESULT hr = Get_AutoWordSelection(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoWordSelection = {read=_scw_Get_AutoWordSelection, write=Set_AutoWordSelection};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_INSKeyForPaste() { Word r; HRESULT hr = Get_INSKeyForPaste(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word INSKeyForPaste = {read=_scw_Get_INSKeyForPaste, write=Set_INSKeyForPaste};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SmartCutPaste() { Word r; HRESULT hr = Get_SmartCutPaste(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SmartCutPaste = {read=_scw_Get_SmartCutPaste, write=Set_SmartCutPaste};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_TabIndentKey() { Word r; HRESULT hr = Get_TabIndentKey(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word TabIndentKey = {read=_scw_Get_TabIndentKey, write=Set_TabIndentKey};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_PictureEditor() { WideString r; HRESULT hr = Get_PictureEditor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString PictureEditor = {read=_scw_Get_PictureEditor, write=Set_PictureEditor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AnimateScreenMovements() { Word r; HRESULT hr = Get_AnimateScreenMovements(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AnimateScreenMovements = {read=_scw_Get_AnimateScreenMovements, write=Set_AnimateScreenMovements};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_VirusProtection() { Word r; HRESULT hr = Get_VirusProtection(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word VirusProtection = {read=_scw_Get_VirusProtection, write=Set_VirusProtection};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_RevisedPropertiesMark() { Activex::TOleEnum r; HRESULT hr = Get_RevisedPropertiesMark(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum RevisedPropertiesMark = {read=_scw_Get_RevisedPropertiesMark, write=Set_RevisedPropertiesMark};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_RevisedPropertiesColor() { Activex::TOleEnum r; HRESULT hr = Get_RevisedPropertiesColor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum RevisedPropertiesColor = {read=_scw_Get_RevisedPropertiesColor, write=Set_RevisedPropertiesColor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SnapToGrid() { Word r; HRESULT hr = Get_SnapToGrid(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SnapToGrid = {read=_scw_Get_SnapToGrid, write=Set_SnapToGrid};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SnapToShapes() { Word r; HRESULT hr = Get_SnapToShapes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SnapToShapes = {read=_scw_Get_SnapToShapes, write=Set_SnapToShapes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_GridDistanceHorizontal() { float r; HRESULT hr = Get_GridDistanceHorizontal(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float GridDistanceHorizontal = {read=_scw_Get_GridDistanceHorizontal, write=Set_GridDistanceHorizontal};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_GridDistanceVertical() { float r; HRESULT hr = Get_GridDistanceVertical(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float GridDistanceVertical = {read=_scw_Get_GridDistanceVertical, write=Set_GridDistanceVertical};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_GridOriginHorizontal() { float r; HRESULT hr = Get_GridOriginHorizontal(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float GridOriginHorizontal = {read=_scw_Get_GridOriginHorizontal, write=Set_GridOriginHorizontal};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_GridOriginVertical() { float r; HRESULT hr = Get_GridOriginVertical(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float GridOriginVertical = {read=_scw_Get_GridOriginVertical, write=Set_GridOriginVertical};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_InlineConversion() { Word r; HRESULT hr = Get_InlineConversion(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word InlineConversion = {read=_scw_Get_InlineConversion, write=Set_InlineConversion};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IMEAutomaticControl() { Word r; HRESULT hr = Get_IMEAutomaticControl(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IMEAutomaticControl = {read=_scw_Get_IMEAutomaticControl, write=Set_IMEAutomaticControl};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatApplyHeadings() { Word r; HRESULT hr = Get_AutoFormatApplyHeadings(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatApplyHeadings = {read=_scw_Get_AutoFormatApplyHeadings, write=Set_AutoFormatApplyHeadings};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatApplyLists() { Word r; HRESULT hr = Get_AutoFormatApplyLists(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatApplyLists = {read=_scw_Get_AutoFormatApplyLists, write=Set_AutoFormatApplyLists};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatApplyBulletedLists() { Word r; HRESULT hr = Get_AutoFormatApplyBulletedLists(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatApplyBulletedLists = {read=_scw_Get_AutoFormatApplyBulletedLists, write=Set_AutoFormatApplyBulletedLists};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatApplyOtherParas() { Word r; HRESULT hr = Get_AutoFormatApplyOtherParas(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatApplyOtherParas = {read=_scw_Get_AutoFormatApplyOtherParas, write=Set_AutoFormatApplyOtherParas};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatReplaceQuotes() { Word r; HRESULT hr = Get_AutoFormatReplaceQuotes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatReplaceQuotes = {read=_scw_Get_AutoFormatReplaceQuotes, write=Set_AutoFormatReplaceQuotes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatReplaceSymbols() { Word r; HRESULT hr = Get_AutoFormatReplaceSymbols(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatReplaceSymbols = {read=_scw_Get_AutoFormatReplaceSymbols, write=Set_AutoFormatReplaceSymbols};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatReplaceOrdinals() { Word r; HRESULT hr = Get_AutoFormatReplaceOrdinals(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatReplaceOrdinals = {read=_scw_Get_AutoFormatReplaceOrdinals, write=Set_AutoFormatReplaceOrdinals};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatReplaceFractions() { Word r; HRESULT hr = Get_AutoFormatReplaceFractions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatReplaceFractions = {read=_scw_Get_AutoFormatReplaceFractions, write=Set_AutoFormatReplaceFractions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatReplacePlainTextEmphasis() { Word r; HRESULT hr = Get_AutoFormatReplacePlainTextEmphasis(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatReplacePlainTextEmphasis = {read=_scw_Get_AutoFormatReplacePlainTextEmphasis, write=Set_AutoFormatReplacePlainTextEmphasis};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatPreserveStyles() { Word r; HRESULT hr = Get_AutoFormatPreserveStyles(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatPreserveStyles = {read=_scw_Get_AutoFormatPreserveStyles, write=Set_AutoFormatPreserveStyles};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeApplyHeadings() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeApplyHeadings(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeApplyHeadings = {read=_scw_Get_AutoFormatAsYouTypeApplyHeadings, write=Set_AutoFormatAsYouTypeApplyHeadings};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeApplyBorders() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeApplyBorders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeApplyBorders = {read=_scw_Get_AutoFormatAsYouTypeApplyBorders, write=Set_AutoFormatAsYouTypeApplyBorders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeApplyBulletedLists() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeApplyBulletedLists(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeApplyBulletedLists = {read=_scw_Get_AutoFormatAsYouTypeApplyBulletedLists, write=Set_AutoFormatAsYouTypeApplyBulletedLists};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeApplyNumberedLists() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeApplyNumberedLists(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeApplyNumberedLists = {read=_scw_Get_AutoFormatAsYouTypeApplyNumberedLists, write=Set_AutoFormatAsYouTypeApplyNumberedLists};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeReplaceQuotes() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeReplaceQuotes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeReplaceQuotes = {read=_scw_Get_AutoFormatAsYouTypeReplaceQuotes, write=Set_AutoFormatAsYouTypeReplaceQuotes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeReplaceSymbols() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeReplaceSymbols(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeReplaceSymbols = {read=_scw_Get_AutoFormatAsYouTypeReplaceSymbols, write=Set_AutoFormatAsYouTypeReplaceSymbols};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeReplaceOrdinals() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeReplaceOrdinals(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeReplaceOrdinals = {read=_scw_Get_AutoFormatAsYouTypeReplaceOrdinals, write=Set_AutoFormatAsYouTypeReplaceOrdinals};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeReplaceFractions() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeReplaceFractions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeReplaceFractions = {read=_scw_Get_AutoFormatAsYouTypeReplaceFractions, write=Set_AutoFormatAsYouTypeReplaceFractions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeReplacePlainTextEmphasis() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeReplacePlainTextEmphasis(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeReplacePlainTextEmphasis = {read=_scw_Get_AutoFormatAsYouTypeReplacePlainTextEmphasis, write=Set_AutoFormatAsYouTypeReplacePlainTextEmphasis};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeFormatListItemBeginning() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeFormatListItemBeginning(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeFormatListItemBeginning = {read=_scw_Get_AutoFormatAsYouTypeFormatListItemBeginning, write=Set_AutoFormatAsYouTypeFormatListItemBeginning};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeDefineStyles() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeDefineStyles(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeDefineStyles = {read=_scw_Get_AutoFormatAsYouTypeDefineStyles, write=Set_AutoFormatAsYouTypeDefineStyles};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatPlainTextWordMail() { Word r; HRESULT hr = Get_AutoFormatPlainTextWordMail(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatPlainTextWordMail = {read=_scw_Get_AutoFormatPlainTextWordMail, write=Set_AutoFormatPlainTextWordMail};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeReplaceHyperlinks() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeReplaceHyperlinks(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeReplaceHyperlinks = {read=_scw_Get_AutoFormatAsYouTypeReplaceHyperlinks, write=Set_AutoFormatAsYouTypeReplaceHyperlinks};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatReplaceHyperlinks() { Word r; HRESULT hr = Get_AutoFormatReplaceHyperlinks(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatReplaceHyperlinks = {read=_scw_Get_AutoFormatReplaceHyperlinks, write=Set_AutoFormatReplaceHyperlinks};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_DefaultHighlightColorIndex() { Activex::TOleEnum r; HRESULT hr = Get_DefaultHighlightColorIndex(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum DefaultHighlightColorIndex = {read=_scw_Get_DefaultHighlightColorIndex, write=Set_DefaultHighlightColorIndex};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_DefaultBorderLineStyle() { Activex::TOleEnum r; HRESULT hr = Get_DefaultBorderLineStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum DefaultBorderLineStyle = {read=_scw_Get_DefaultBorderLineStyle, write=Set_DefaultBorderLineStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_CheckSpellingAsYouType() { Word r; HRESULT hr = Get_CheckSpellingAsYouType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word CheckSpellingAsYouType = {read=_scw_Get_CheckSpellingAsYouType, write=Set_CheckSpellingAsYouType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_CheckGrammarAsYouType() { Word r; HRESULT hr = Get_CheckGrammarAsYouType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word CheckGrammarAsYouType = {read=_scw_Get_CheckGrammarAsYouType, write=Set_CheckGrammarAsYouType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IgnoreInternetAndFileAddresses() { Word r; HRESULT hr = Get_IgnoreInternetAndFileAddresses(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IgnoreInternetAndFileAddresses = {read=_scw_Get_IgnoreInternetAndFileAddresses, write=Set_IgnoreInternetAndFileAddresses};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowReadabilityStatistics() { Word r; HRESULT hr = Get_ShowReadabilityStatistics(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowReadabilityStatistics = {read=_scw_Get_ShowReadabilityStatistics, write=Set_ShowReadabilityStatistics};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IgnoreUppercase() { Word r; HRESULT hr = Get_IgnoreUppercase(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IgnoreUppercase = {read=_scw_Get_IgnoreUppercase, write=Set_IgnoreUppercase};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_IgnoreMixedDigits() { Word r; HRESULT hr = Get_IgnoreMixedDigits(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word IgnoreMixedDigits = {read=_scw_Get_IgnoreMixedDigits, write=Set_IgnoreMixedDigits};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SuggestFromMainDictionaryOnly() { Word r; HRESULT hr = Get_SuggestFromMainDictionaryOnly(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SuggestFromMainDictionaryOnly = {read=_scw_Get_SuggestFromMainDictionaryOnly, write=Set_SuggestFromMainDictionaryOnly};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SuggestSpellingCorrections() { Word r; HRESULT hr = Get_SuggestSpellingCorrections(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SuggestSpellingCorrections = {read=_scw_Get_SuggestSpellingCorrections, write=Set_SuggestSpellingCorrections};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_DefaultBorderLineWidth() { Activex::TOleEnum r; HRESULT hr = Get_DefaultBorderLineWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum DefaultBorderLineWidth = {read=_scw_Get_DefaultBorderLineWidth, write=Set_DefaultBorderLineWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_CheckGrammarWithSpelling() { Word r; HRESULT hr = Get_CheckGrammarWithSpelling(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word CheckGrammarWithSpelling = {read=_scw_Get_CheckGrammarWithSpelling, write=Set_CheckGrammarWithSpelling};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_DefaultOpenFormat() { Activex::TOleEnum r; HRESULT hr = Get_DefaultOpenFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum DefaultOpenFormat = {read=_scw_Get_DefaultOpenFormat, write=Set_DefaultOpenFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PrintDraft() { Word r; HRESULT hr = Get_PrintDraft(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PrintDraft = {read=_scw_Get_PrintDraft, write=Set_PrintDraft};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PrintReverse() { Word r; HRESULT hr = Get_PrintReverse(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PrintReverse = {read=_scw_Get_PrintReverse, write=Set_PrintReverse};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MapPaperSize() { Word r; HRESULT hr = Get_MapPaperSize(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MapPaperSize = {read=_scw_Get_MapPaperSize, write=Set_MapPaperSize};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeApplyTables() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeApplyTables(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeApplyTables = {read=_scw_Get_AutoFormatAsYouTypeApplyTables, write=Set_AutoFormatAsYouTypeApplyTables};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatApplyFirstIndents() { Word r; HRESULT hr = Get_AutoFormatApplyFirstIndents(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatApplyFirstIndents = {read=_scw_Get_AutoFormatApplyFirstIndents, write=Set_AutoFormatApplyFirstIndents};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatMatchParentheses() { Word r; HRESULT hr = Get_AutoFormatMatchParentheses(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatMatchParentheses = {read=_scw_Get_AutoFormatMatchParentheses, write=Set_AutoFormatMatchParentheses};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatReplaceFarEastDashes() { Word r; HRESULT hr = Get_AutoFormatReplaceFarEastDashes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatReplaceFarEastDashes = {read=_scw_Get_AutoFormatReplaceFarEastDashes, write=Set_AutoFormatReplaceFarEastDashes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatDeleteAutoSpaces() { Word r; HRESULT hr = Get_AutoFormatDeleteAutoSpaces(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatDeleteAutoSpaces = {read=_scw_Get_AutoFormatDeleteAutoSpaces, write=Set_AutoFormatDeleteAutoSpaces};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeApplyFirstIndents() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeApplyFirstIndents(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeApplyFirstIndents = {read=_scw_Get_AutoFormatAsYouTypeApplyFirstIndents, write=Set_AutoFormatAsYouTypeApplyFirstIndents};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeApplyDates() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeApplyDates(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeApplyDates = {read=_scw_Get_AutoFormatAsYouTypeApplyDates, write=Set_AutoFormatAsYouTypeApplyDates};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeApplyClosings() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeApplyClosings(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeApplyClosings = {read=_scw_Get_AutoFormatAsYouTypeApplyClosings, write=Set_AutoFormatAsYouTypeApplyClosings};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeMatchParentheses() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeMatchParentheses(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeMatchParentheses = {read=_scw_Get_AutoFormatAsYouTypeMatchParentheses, write=Set_AutoFormatAsYouTypeMatchParentheses};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeReplaceFarEastDashes() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeReplaceFarEastDashes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeReplaceFarEastDashes = {read=_scw_Get_AutoFormatAsYouTypeReplaceFarEastDashes, write=Set_AutoFormatAsYouTypeReplaceFarEastDashes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeDeleteAutoSpaces() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeDeleteAutoSpaces(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeDeleteAutoSpaces = {read=_scw_Get_AutoFormatAsYouTypeDeleteAutoSpaces, write=Set_AutoFormatAsYouTypeDeleteAutoSpaces};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeInsertClosings() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeInsertClosings(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeInsertClosings = {read=_scw_Get_AutoFormatAsYouTypeInsertClosings, write=Set_AutoFormatAsYouTypeInsertClosings};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeAutoLetterWizard() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeAutoLetterWizard(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeAutoLetterWizard = {read=_scw_Get_AutoFormatAsYouTypeAutoLetterWizard, write=Set_AutoFormatAsYouTypeAutoLetterWizard};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeInsertOvers() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeInsertOvers(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeInsertOvers = {read=_scw_Get_AutoFormatAsYouTypeInsertOvers, write=Set_AutoFormatAsYouTypeInsertOvers};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisplayGridLines() { Word r; HRESULT hr = Get_DisplayGridLines(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisplayGridLines = {read=_scw_Get_DisplayGridLines, write=Set_DisplayGridLines};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchFuzzyCase() { Word r; HRESULT hr = Get_MatchFuzzyCase(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchFuzzyCase = {read=_scw_Get_MatchFuzzyCase, write=Set_MatchFuzzyCase};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchFuzzyByte() { Word r; HRESULT hr = Get_MatchFuzzyByte(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchFuzzyByte = {read=_scw_Get_MatchFuzzyByte, write=Set_MatchFuzzyByte};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchFuzzyHiragana() { Word r; HRESULT hr = Get_MatchFuzzyHiragana(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchFuzzyHiragana = {read=_scw_Get_MatchFuzzyHiragana, write=Set_MatchFuzzyHiragana};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchFuzzySmallKana() { Word r; HRESULT hr = Get_MatchFuzzySmallKana(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchFuzzySmallKana = {read=_scw_Get_MatchFuzzySmallKana, write=Set_MatchFuzzySmallKana};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchFuzzyDash() { Word r; HRESULT hr = Get_MatchFuzzyDash(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchFuzzyDash = {read=_scw_Get_MatchFuzzyDash, write=Set_MatchFuzzyDash};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchFuzzyIterationMark() { Word r; HRESULT hr = Get_MatchFuzzyIterationMark(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchFuzzyIterationMark = {read=_scw_Get_MatchFuzzyIterationMark, write=Set_MatchFuzzyIterationMark};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchFuzzyKanji() { Word r; HRESULT hr = Get_MatchFuzzyKanji(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchFuzzyKanji = {read=_scw_Get_MatchFuzzyKanji, write=Set_MatchFuzzyKanji};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchFuzzyOldKana() { Word r; HRESULT hr = Get_MatchFuzzyOldKana(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchFuzzyOldKana = {read=_scw_Get_MatchFuzzyOldKana, write=Set_MatchFuzzyOldKana};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchFuzzyProlongedSoundMark() { Word r; HRESULT hr = Get_MatchFuzzyProlongedSoundMark(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchFuzzyProlongedSoundMark = {read=_scw_Get_MatchFuzzyProlongedSoundMark, write=Set_MatchFuzzyProlongedSoundMark};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchFuzzyDZ() { Word r; HRESULT hr = Get_MatchFuzzyDZ(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchFuzzyDZ = {read=_scw_Get_MatchFuzzyDZ, write=Set_MatchFuzzyDZ};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchFuzzyBV() { Word r; HRESULT hr = Get_MatchFuzzyBV(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchFuzzyBV = {read=_scw_Get_MatchFuzzyBV, write=Set_MatchFuzzyBV};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchFuzzyTC() { Word r; HRESULT hr = Get_MatchFuzzyTC(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchFuzzyTC = {read=_scw_Get_MatchFuzzyTC, write=Set_MatchFuzzyTC};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchFuzzyHF() { Word r; HRESULT hr = Get_MatchFuzzyHF(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchFuzzyHF = {read=_scw_Get_MatchFuzzyHF, write=Set_MatchFuzzyHF};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchFuzzyZJ() { Word r; HRESULT hr = Get_MatchFuzzyZJ(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchFuzzyZJ = {read=_scw_Get_MatchFuzzyZJ, write=Set_MatchFuzzyZJ};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchFuzzyAY() { Word r; HRESULT hr = Get_MatchFuzzyAY(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchFuzzyAY = {read=_scw_Get_MatchFuzzyAY, write=Set_MatchFuzzyAY};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchFuzzyKiKu() { Word r; HRESULT hr = Get_MatchFuzzyKiKu(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchFuzzyKiKu = {read=_scw_Get_MatchFuzzyKiKu, write=Set_MatchFuzzyKiKu};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchFuzzyPunctuation() { Word r; HRESULT hr = Get_MatchFuzzyPunctuation(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchFuzzyPunctuation = {read=_scw_Get_MatchFuzzyPunctuation, write=Set_MatchFuzzyPunctuation};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MatchFuzzySpace() { Word r; HRESULT hr = Get_MatchFuzzySpace(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MatchFuzzySpace = {read=_scw_Get_MatchFuzzySpace, write=Set_MatchFuzzySpace};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ApplyFarEastFontsToAscii() { Word r; HRESULT hr = Get_ApplyFarEastFontsToAscii(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ApplyFarEastFontsToAscii = {read=_scw_Get_ApplyFarEastFontsToAscii, write=Set_ApplyFarEastFontsToAscii};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ConvertHighAnsiToFarEast() { Word r; HRESULT hr = Get_ConvertHighAnsiToFarEast(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ConvertHighAnsiToFarEast = {read=_scw_Get_ConvertHighAnsiToFarEast, write=Set_ConvertHighAnsiToFarEast};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PrintOddPagesInAscendingOrder() { Word r; HRESULT hr = Get_PrintOddPagesInAscendingOrder(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PrintOddPagesInAscendingOrder = {read=_scw_Get_PrintOddPagesInAscendingOrder, write=Set_PrintOddPagesInAscendingOrder};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PrintEvenPagesInAscendingOrder() { Word r; HRESULT hr = Get_PrintEvenPagesInAscendingOrder(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PrintEvenPagesInAscendingOrder = {read=_scw_Get_PrintEvenPagesInAscendingOrder, write=Set_PrintEvenPagesInAscendingOrder};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_DefaultBorderColorIndex() { Activex::TOleEnum r; HRESULT hr = Get_DefaultBorderColorIndex(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum DefaultBorderColorIndex = {read=_scw_Get_DefaultBorderColorIndex, write=Set_DefaultBorderColorIndex};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_EnableMisusedWordsDictionary() { Word r; HRESULT hr = Get_EnableMisusedWordsDictionary(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word EnableMisusedWordsDictionary = {read=_scw_Get_EnableMisusedWordsDictionary, write=Set_EnableMisusedWordsDictionary};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AllowCombinedAuxiliaryForms() { Word r; HRESULT hr = Get_AllowCombinedAuxiliaryForms(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AllowCombinedAuxiliaryForms = {read=_scw_Get_AllowCombinedAuxiliaryForms, write=Set_AllowCombinedAuxiliaryForms};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_HangulHanjaFastConversion() { Word r; HRESULT hr = Get_HangulHanjaFastConversion(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word HangulHanjaFastConversion = {read=_scw_Get_HangulHanjaFastConversion, write=Set_HangulHanjaFastConversion};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_CheckHangulEndings() { Word r; HRESULT hr = Get_CheckHangulEndings(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word CheckHangulEndings = {read=_scw_Get_CheckHangulEndings, write=Set_CheckHangulEndings};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_EnableHangulHanjaRecentOrdering() { Word r; HRESULT hr = Get_EnableHangulHanjaRecentOrdering(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word EnableHangulHanjaRecentOrdering = {read=_scw_Get_EnableHangulHanjaRecentOrdering, write=Set_EnableHangulHanjaRecentOrdering};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_MultipleWordConversionsMode() { Activex::TOleEnum r; HRESULT hr = Get_MultipleWordConversionsMode(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum MultipleWordConversionsMode = {read=_scw_Get_MultipleWordConversionsMode, write=Set_MultipleWordConversionsMode};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_DefaultBorderColor() { Activex::TOleEnum r; HRESULT hr = Get_DefaultBorderColor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum DefaultBorderColor = {read=_scw_Get_DefaultBorderColor, write=Set_DefaultBorderColor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AllowPixelUnits() { Word r; HRESULT hr = Get_AllowPixelUnits(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AllowPixelUnits = {read=_scw_Get_AllowPixelUnits, write=Set_AllowPixelUnits};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_UseCharacterUnit() { Word r; HRESULT hr = Get_UseCharacterUnit(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word UseCharacterUnit = {read=_scw_Get_UseCharacterUnit, write=Set_UseCharacterUnit};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AllowCompoundNounProcessing() { Word r; HRESULT hr = Get_AllowCompoundNounProcessing(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AllowCompoundNounProcessing = {read=_scw_Get_AllowCompoundNounProcessing, write=Set_AllowCompoundNounProcessing};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoKeyboardSwitching() { Word r; HRESULT hr = Get_AutoKeyboardSwitching(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoKeyboardSwitching = {read=_scw_Get_AutoKeyboardSwitching, write=Set_AutoKeyboardSwitching};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_DocumentViewDirection() { Activex::TOleEnum r; HRESULT hr = Get_DocumentViewDirection(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum DocumentViewDirection = {read=_scw_Get_DocumentViewDirection, write=Set_DocumentViewDirection};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_ArabicNumeral() { Activex::TOleEnum r; HRESULT hr = Get_ArabicNumeral(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum ArabicNumeral = {read=_scw_Get_ArabicNumeral, write=Set_ArabicNumeral};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_MonthNames() { Activex::TOleEnum r; HRESULT hr = Get_MonthNames(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum MonthNames = {read=_scw_Get_MonthNames, write=Set_MonthNames};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_CursorMovement() { Activex::TOleEnum r; HRESULT hr = Get_CursorMovement(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum CursorMovement = {read=_scw_Get_CursorMovement, write=Set_CursorMovement};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_VisualSelection() { Activex::TOleEnum r; HRESULT hr = Get_VisualSelection(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum VisualSelection = {read=_scw_Get_VisualSelection, write=Set_VisualSelection};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowDiacritics() { Word r; HRESULT hr = Get_ShowDiacritics(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowDiacritics = {read=_scw_Get_ShowDiacritics, write=Set_ShowDiacritics};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowControlCharacters() { Word r; HRESULT hr = Get_ShowControlCharacters(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowControlCharacters = {read=_scw_Get_ShowControlCharacters, write=Set_ShowControlCharacters};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AddControlCharacters() { Word r; HRESULT hr = Get_AddControlCharacters(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AddControlCharacters = {read=_scw_Get_AddControlCharacters, write=Set_AddControlCharacters};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AddBiDirectionalMarksWhenSavingTextFile() { Word r; HRESULT hr = Get_AddBiDirectionalMarksWhenSavingTextFile(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AddBiDirectionalMarksWhenSavingTextFile = {read=_scw_Get_AddBiDirectionalMarksWhenSavingTextFile, write=Set_AddBiDirectionalMarksWhenSavingTextFile};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_StrictInitialAlefHamza() { Word r; HRESULT hr = Get_StrictInitialAlefHamza(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word StrictInitialAlefHamza = {read=_scw_Get_StrictInitialAlefHamza, write=Set_StrictInitialAlefHamza};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_StrictFinalYaa() { Word r; HRESULT hr = Get_StrictFinalYaa(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word StrictFinalYaa = {read=_scw_Get_StrictFinalYaa, write=Set_StrictFinalYaa};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_HebrewMode() { Activex::TOleEnum r; HRESULT hr = Get_HebrewMode(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum HebrewMode = {read=_scw_Get_HebrewMode, write=Set_HebrewMode};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_ArabicMode() { Activex::TOleEnum r; HRESULT hr = Get_ArabicMode(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum ArabicMode = {read=_scw_Get_ArabicMode, write=Set_ArabicMode};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AllowClickAndTypeMouse() { Word r; HRESULT hr = Get_AllowClickAndTypeMouse(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AllowClickAndTypeMouse = {read=_scw_Get_AllowClickAndTypeMouse, write=Set_AllowClickAndTypeMouse};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_UseGermanSpellingReform() { Word r; HRESULT hr = Get_UseGermanSpellingReform(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word UseGermanSpellingReform = {read=_scw_Get_UseGermanSpellingReform, write=Set_UseGermanSpellingReform};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_InterpretHighAnsi() { Activex::TOleEnum r; HRESULT hr = Get_InterpretHighAnsi(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum InterpretHighAnsi = {read=_scw_Get_InterpretHighAnsi, write=Set_InterpretHighAnsi};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AddHebDoubleQuote() { Word r; HRESULT hr = Get_AddHebDoubleQuote(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AddHebDoubleQuote = {read=_scw_Get_AddHebDoubleQuote, write=Set_AddHebDoubleQuote};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_UseDiffDiacColor() { Word r; HRESULT hr = Get_UseDiffDiacColor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word UseDiffDiacColor = {read=_scw_Get_UseDiffDiacColor, write=Set_UseDiffDiacColor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_DiacriticColorVal() { Activex::TOleEnum r; HRESULT hr = Get_DiacriticColorVal(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum DiacriticColorVal = {read=_scw_Get_DiacriticColorVal, write=Set_DiacriticColorVal};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_OptimizeForWord97byDefault() { Word r; HRESULT hr = Get_OptimizeForWord97byDefault(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word OptimizeForWord97byDefault = {read=_scw_Get_OptimizeForWord97byDefault, write=Set_OptimizeForWord97byDefault};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_LocalNetworkFile() { Word r; HRESULT hr = Get_LocalNetworkFile(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word LocalNetworkFile = {read=_scw_Get_LocalNetworkFile, write=Set_LocalNetworkFile};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_TypeNReplace() { Word r; HRESULT hr = Get_TypeNReplace(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word TypeNReplace = {read=_scw_Get_TypeNReplace, write=Set_TypeNReplace};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SequenceCheck() { Word r; HRESULT hr = Get_SequenceCheck(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SequenceCheck = {read=_scw_Get_SequenceCheck, write=Set_SequenceCheck};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_BackgroundOpen() { Word r; HRESULT hr = Get_BackgroundOpen(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word BackgroundOpen = {read=_scw_Get_BackgroundOpen, write=Set_BackgroundOpen};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisableFeaturesbyDefault() { Word r; HRESULT hr = Get_DisableFeaturesbyDefault(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisableFeaturesbyDefault = {read=_scw_Get_DisableFeaturesbyDefault, write=Set_DisableFeaturesbyDefault};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PasteAdjustWordSpacing() { Word r; HRESULT hr = Get_PasteAdjustWordSpacing(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PasteAdjustWordSpacing = {read=_scw_Get_PasteAdjustWordSpacing, write=Set_PasteAdjustWordSpacing};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PasteAdjustParagraphSpacing() { Word r; HRESULT hr = Get_PasteAdjustParagraphSpacing(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PasteAdjustParagraphSpacing = {read=_scw_Get_PasteAdjustParagraphSpacing, write=Set_PasteAdjustParagraphSpacing};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PasteAdjustTableFormatting() { Word r; HRESULT hr = Get_PasteAdjustTableFormatting(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PasteAdjustTableFormatting = {read=_scw_Get_PasteAdjustTableFormatting, write=Set_PasteAdjustTableFormatting};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PasteSmartStyleBehavior() { Word r; HRESULT hr = Get_PasteSmartStyleBehavior(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PasteSmartStyleBehavior = {read=_scw_Get_PasteSmartStyleBehavior, write=Set_PasteSmartStyleBehavior};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PasteMergeFromPPT() { Word r; HRESULT hr = Get_PasteMergeFromPPT(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PasteMergeFromPPT = {read=_scw_Get_PasteMergeFromPPT, write=Set_PasteMergeFromPPT};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PasteMergeFromXL() { Word r; HRESULT hr = Get_PasteMergeFromXL(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PasteMergeFromXL = {read=_scw_Get_PasteMergeFromXL, write=Set_PasteMergeFromXL};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_CtrlClickHyperlinkToOpen() { Word r; HRESULT hr = Get_CtrlClickHyperlinkToOpen(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word CtrlClickHyperlinkToOpen = {read=_scw_Get_CtrlClickHyperlinkToOpen, write=Set_CtrlClickHyperlinkToOpen};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_PictureWrapType() { Activex::TOleEnum r; HRESULT hr = Get_PictureWrapType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum PictureWrapType = {read=_scw_Get_PictureWrapType, write=Set_PictureWrapType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_DisableFeaturesIntroducedAfterbyDefault() { Activex::TOleEnum r; HRESULT hr = Get_DisableFeaturesIntroducedAfterbyDefault(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum DisableFeaturesIntroducedAfterbyDefault = {read=_scw_Get_DisableFeaturesIntroducedAfterbyDefault, write=Set_DisableFeaturesIntroducedAfterbyDefault};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PasteSmartCutPaste() { Word r; HRESULT hr = Get_PasteSmartCutPaste(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PasteSmartCutPaste = {read=_scw_Get_PasteSmartCutPaste, write=Set_PasteSmartCutPaste};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisplayPasteOptions() { Word r; HRESULT hr = Get_DisplayPasteOptions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisplayPasteOptions = {read=_scw_Get_DisplayPasteOptions, write=Set_DisplayPasteOptions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PromptUpdateStyle() { Word r; HRESULT hr = Get_PromptUpdateStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PromptUpdateStyle = {read=_scw_Get_PromptUpdateStyle, write=Set_PromptUpdateStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_DefaultEPostageApp() { WideString r; HRESULT hr = Get_DefaultEPostageApp(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString DefaultEPostageApp = {read=_scw_Get_DefaultEPostageApp, write=Set_DefaultEPostageApp};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_DefaultTextEncoding() { Activex::TOleEnum r; HRESULT hr = Get_DefaultTextEncoding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum DefaultTextEncoding = {read=_scw_Get_DefaultTextEncoding, write=Set_DefaultTextEncoding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_LabelSmartTags() { Word r; HRESULT hr = Get_LabelSmartTags(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word LabelSmartTags = {read=_scw_Get_LabelSmartTags, write=Set_LabelSmartTags};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_DisplaySmartTagButtons() { Word r; HRESULT hr = Get_DisplaySmartTagButtons(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word DisplaySmartTagButtons = {read=_scw_Get_DisplaySmartTagButtons, write=Set_DisplaySmartTagButtons};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_WarnBeforeSavingPrintingSendingMarkup() { Word r; HRESULT hr = Get_WarnBeforeSavingPrintingSendingMarkup(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word WarnBeforeSavingPrintingSendingMarkup = {read=_scw_Get_WarnBeforeSavingPrintingSendingMarkup, write=Set_WarnBeforeSavingPrintingSendingMarkup};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_StoreRSIDOnSave() { Word r; HRESULT hr = Get_StoreRSIDOnSave(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word StoreRSIDOnSave = {read=_scw_Get_StoreRSIDOnSave, write=Set_StoreRSIDOnSave};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_ShowFormatError() { Word r; HRESULT hr = Get_ShowFormatError(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word ShowFormatError = {read=_scw_Get_ShowFormatError, write=Set_ShowFormatError};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_FormatScanning() { Word r; HRESULT hr = Get_FormatScanning(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word FormatScanning = {read=_scw_Get_FormatScanning, write=Set_FormatScanning};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_PasteMergeLists() { Word r; HRESULT hr = Get_PasteMergeLists(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word PasteMergeLists = {read=_scw_Get_PasteMergeLists, write=Set_PasteMergeLists};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoCreateNewDrawings() { Word r; HRESULT hr = Get_AutoCreateNewDrawings(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoCreateNewDrawings = {read=_scw_Get_AutoCreateNewDrawings, write=Set_AutoCreateNewDrawings};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SmartParaSelection() { Word r; HRESULT hr = Get_SmartParaSelection(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SmartParaSelection = {read=_scw_Get_SmartParaSelection, write=Set_SmartParaSelection};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_RevisionsBalloonPrintOrientation() { Activex::TOleEnum r; HRESULT hr = Get_RevisionsBalloonPrintOrientation(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum RevisionsBalloonPrintOrientation = {read=_scw_Get_RevisionsBalloonPrintOrientation, write=Set_RevisionsBalloonPrintOrientation};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_CommentsColor() { Activex::TOleEnum r; HRESULT hr = Get_CommentsColor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum CommentsColor = {read=_scw_Get_CommentsColor, write=Set_CommentsColor};
};

__dispinterface OptionsDisp;
typedef System::DelphiInterface<OptionsDisp> _di_OptionsDisp;
__dispinterface INTERFACE_UUID("{000209B7-0000-0000-C000-000000000046}") OptionsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209BA-0000-0000-C000-000000000046}") MailMessage  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall CheckName(void) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall DisplayMoveDialog(void) = 0 ;
	virtual HRESULT __safecall DisplayProperties(void) = 0 ;
	virtual HRESULT __safecall DisplaySelectNamesDialog(void) = 0 ;
	virtual HRESULT __safecall Forward(void) = 0 ;
	virtual HRESULT __safecall GoToNext(void) = 0 ;
	virtual HRESULT __safecall GoToPrevious(void) = 0 ;
	virtual HRESULT __safecall Reply(void) = 0 ;
	virtual HRESULT __safecall ReplyAll(void) = 0 ;
	virtual HRESULT __safecall ToggleHeader(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface MailMessageDisp;
typedef System::DelphiInterface<MailMessageDisp> _di_MailMessageDisp;
__dispinterface INTERFACE_UUID("{000209BA-0000-0000-C000-000000000046}") MailMessageDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209BB-0000-0000-C000-000000000046}") ProofreadingErrors  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_Range &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_};
};

__dispinterface ProofreadingErrorsDisp;
typedef System::DelphiInterface<ProofreadingErrorsDisp> _di_ProofreadingErrorsDisp;
__dispinterface INTERFACE_UUID("{000209BB-0000-0000-C000-000000000046}") ProofreadingErrorsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209BD-0000-0000-C000-000000000046}") Mailer  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_BCCRecipients(OleVariant &Get_BCCRecipients_result) = 0 ;
	virtual HRESULT __safecall Set_BCCRecipients(OleVariant &prop) = 0 ;
	virtual HRESULT __safecall Get_CCRecipients(OleVariant &Get_CCRecipients_result) = 0 ;
	virtual HRESULT __safecall Set_CCRecipients(OleVariant &prop) = 0 ;
	virtual HRESULT __safecall Get_Recipients(OleVariant &Get_Recipients_result) = 0 ;
	virtual HRESULT __safecall Set_Recipients(OleVariant &prop) = 0 ;
	virtual HRESULT __safecall Get_Enclosures(OleVariant &Get_Enclosures_result) = 0 ;
	virtual HRESULT __safecall Set_Enclosures(OleVariant &prop) = 0 ;
	virtual HRESULT __safecall Get_Sender(WideString &Get_Sender_result) = 0 ;
	virtual HRESULT __safecall Get_SendDateTime(System::TDateTime &Get_SendDateTime_result) = 0 ;
	virtual HRESULT __safecall Get_Received(Word &Get_Received_result) = 0 ;
	virtual HRESULT __safecall Get_Subject(WideString &Get_Subject_result) = 0 ;
	virtual HRESULT __safecall Set_Subject(const WideString prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Sender() { WideString r; HRESULT hr = Get_Sender(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Sender = {read=_scw_Get_Sender};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::TDateTime _scw_Get_SendDateTime() { System::TDateTime r; HRESULT hr = Get_SendDateTime(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::TDateTime SendDateTime = {read=_scw_Get_SendDateTime};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Received() { Word r; HRESULT hr = Get_Received(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Received = {read=_scw_Get_Received};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Subject() { WideString r; HRESULT hr = Get_Subject(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Subject = {read=_scw_Get_Subject, write=Set_Subject};
};

__dispinterface MailerDisp;
typedef System::DelphiInterface<MailerDisp> _di_MailerDisp;
__dispinterface INTERFACE_UUID("{000209BD-0000-0000-C000-000000000046}") MailerDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209C3-0000-0000-C000-000000000046}") WrapFormat  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Set_Type_(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Side(Activex::TOleEnum &Get_Side_result) = 0 ;
	virtual HRESULT __safecall Set_Side(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_DistanceTop(float &Get_DistanceTop_result) = 0 ;
	virtual HRESULT __safecall Set_DistanceTop(float prop) = 0 ;
	virtual HRESULT __safecall Get_DistanceBottom(float &Get_DistanceBottom_result) = 0 ;
	virtual HRESULT __safecall Set_DistanceBottom(float prop) = 0 ;
	virtual HRESULT __safecall Get_DistanceLeft(float &Get_DistanceLeft_result) = 0 ;
	virtual HRESULT __safecall Set_DistanceLeft(float prop) = 0 ;
	virtual HRESULT __safecall Get_DistanceRight(float &Get_DistanceRight_result) = 0 ;
	virtual HRESULT __safecall Set_DistanceRight(float prop) = 0 ;
	virtual HRESULT __safecall Get_AllowOverlap(int &Get_AllowOverlap_result) = 0 ;
	virtual HRESULT __safecall Set_AllowOverlap(int prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_, write=Set_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Side() { Activex::TOleEnum r; HRESULT hr = Get_Side(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Side = {read=_scw_Get_Side, write=Set_Side};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_DistanceTop() { float r; HRESULT hr = Get_DistanceTop(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float DistanceTop = {read=_scw_Get_DistanceTop, write=Set_DistanceTop};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_DistanceBottom() { float r; HRESULT hr = Get_DistanceBottom(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float DistanceBottom = {read=_scw_Get_DistanceBottom, write=Set_DistanceBottom};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_DistanceLeft() { float r; HRESULT hr = Get_DistanceLeft(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float DistanceLeft = {read=_scw_Get_DistanceLeft, write=Set_DistanceLeft};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_DistanceRight() { float r; HRESULT hr = Get_DistanceRight(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float DistanceRight = {read=_scw_Get_DistanceRight, write=Set_DistanceRight};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_AllowOverlap() { int r; HRESULT hr = Get_AllowOverlap(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int AllowOverlap = {read=_scw_Get_AllowOverlap, write=Set_AllowOverlap};
};

__dispinterface WrapFormatDisp;
typedef System::DelphiInterface<WrapFormatDisp> _di_WrapFormatDisp;
__dispinterface INTERFACE_UUID("{000209C3-0000-0000-C000-000000000046}") WrapFormatDisp  : public IDispatch 
{
	
};

__interface HangulAndAlphabetException;
typedef System::DelphiInterface<HangulAndAlphabetException> _di_HangulAndAlphabetException;
__interface INTERFACE_UUID("{000209D1-0000-0000-C000-000000000046}") HangulAndAlphabetExceptions  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_HangulAndAlphabetException &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const WideString Name, _di_HangulAndAlphabetException &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface HangulAndAlphabetExceptionsDisp;
typedef System::DelphiInterface<HangulAndAlphabetExceptionsDisp> _di_HangulAndAlphabetExceptionsDisp;
__dispinterface INTERFACE_UUID("{000209D1-0000-0000-C000-000000000046}") HangulAndAlphabetExceptionsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209D2-0000-0000-C000-000000000046}") HangulAndAlphabetException  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
};

__dispinterface HangulAndAlphabetExceptionDisp;
typedef System::DelphiInterface<HangulAndAlphabetExceptionDisp> _di_HangulAndAlphabetExceptionDisp;
__dispinterface INTERFACE_UUID("{000209D2-0000-0000-C000-000000000046}") HangulAndAlphabetExceptionDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209C4-0000-0000-C000-000000000046}") Adjustments  : public IDispatch 
{
	
public:
	float operator[](int Index) { return Item[Index]; }
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Item(int Index, float &Get_Item_result) = 0 ;
	virtual HRESULT __safecall Set_Item(int Index, float prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Item(int Index) { float r; HRESULT hr = Get_Item(Index, r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Item[int Index] = {read=_scw_Get_Item, write=Set_Item/*, default*/};
};

__dispinterface AdjustmentsDisp;
typedef System::DelphiInterface<AdjustmentsDisp> _di_AdjustmentsDisp;
__dispinterface INTERFACE_UUID("{000209C4-0000-0000-C000-000000000046}") AdjustmentsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209C5-0000-0000-C000-000000000046}") CalloutFormat  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Accent(Activex::TOleEnum &Get_Accent_result) = 0 ;
	virtual HRESULT __safecall Set_Accent(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Angle(Activex::TOleEnum &Get_Angle_result) = 0 ;
	virtual HRESULT __safecall Set_Angle(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_AutoAttach(Activex::TOleEnum &Get_AutoAttach_result) = 0 ;
	virtual HRESULT __safecall Set_AutoAttach(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_AutoLength(Activex::TOleEnum &Get_AutoLength_result) = 0 ;
	virtual HRESULT __safecall Get_Border(Activex::TOleEnum &Get_Border_result) = 0 ;
	virtual HRESULT __safecall Set_Border(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Drop(float &Get_Drop_result) = 0 ;
	virtual HRESULT __safecall Get_DropType(Activex::TOleEnum &Get_DropType_result) = 0 ;
	virtual HRESULT __safecall Get_Gap(float &Get_Gap_result) = 0 ;
	virtual HRESULT __safecall Set_Gap(float prop) = 0 ;
	virtual HRESULT __safecall Get_Length(float &Get_Length_result) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Set_Type_(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall AutomaticLength(void) = 0 ;
	virtual HRESULT __safecall CustomDrop(float Drop) = 0 ;
	virtual HRESULT __safecall CustomLength(float Length) = 0 ;
	virtual HRESULT __safecall PresetDrop(Activex::TOleEnum DropType) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Accent() { Activex::TOleEnum r; HRESULT hr = Get_Accent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Accent = {read=_scw_Get_Accent, write=Set_Accent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Angle() { Activex::TOleEnum r; HRESULT hr = Get_Angle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Angle = {read=_scw_Get_Angle, write=Set_Angle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_AutoAttach() { Activex::TOleEnum r; HRESULT hr = Get_AutoAttach(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum AutoAttach = {read=_scw_Get_AutoAttach, write=Set_AutoAttach};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_AutoLength() { Activex::TOleEnum r; HRESULT hr = Get_AutoLength(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum AutoLength = {read=_scw_Get_AutoLength};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Border() { Activex::TOleEnum r; HRESULT hr = Get_Border(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Border = {read=_scw_Get_Border, write=Set_Border};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Drop() { float r; HRESULT hr = Get_Drop(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Drop = {read=_scw_Get_Drop};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_DropType() { Activex::TOleEnum r; HRESULT hr = Get_DropType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum DropType = {read=_scw_Get_DropType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Gap() { float r; HRESULT hr = Get_Gap(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Gap = {read=_scw_Get_Gap, write=Set_Gap};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Length() { float r; HRESULT hr = Get_Length(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Length = {read=_scw_Get_Length};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_, write=Set_Type_};
};

__dispinterface CalloutFormatDisp;
typedef System::DelphiInterface<CalloutFormatDisp> _di_CalloutFormatDisp;
__dispinterface INTERFACE_UUID("{000209C5-0000-0000-C000-000000000046}") CalloutFormatDisp  : public IDispatch 
{
	
};

__interface ColorFormat;
typedef System::DelphiInterface<ColorFormat> _di_ColorFormat;
__interface INTERFACE_UUID("{000209C6-0000-0000-C000-000000000046}") ColorFormat  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_RGB(int &Get_RGB_result) = 0 ;
	virtual HRESULT __safecall Set_RGB(int prop) = 0 ;
	virtual HRESULT __safecall Get_SchemeColor(int &Get_SchemeColor_result) = 0 ;
	virtual HRESULT __safecall Set_SchemeColor(int prop) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Set_Name(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_TintAndShade(float &Get_TintAndShade_result) = 0 ;
	virtual HRESULT __safecall Set_TintAndShade(float prop) = 0 ;
	virtual HRESULT __safecall Get_OverPrint(Activex::TOleEnum &Get_OverPrint_result) = 0 ;
	virtual HRESULT __safecall Set_OverPrint(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Ink(int Index, float &Get_Ink_result) = 0 ;
	virtual HRESULT __safecall Set_Ink(int Index, float prop) = 0 ;
	virtual HRESULT __safecall Get_Cyan(int &Get_Cyan_result) = 0 ;
	virtual HRESULT __safecall Set_Cyan(int prop) = 0 ;
	virtual HRESULT __safecall Get_Magenta(int &Get_Magenta_result) = 0 ;
	virtual HRESULT __safecall Set_Magenta(int prop) = 0 ;
	virtual HRESULT __safecall Get_Yellow(int &Get_Yellow_result) = 0 ;
	virtual HRESULT __safecall Set_Yellow(int prop) = 0 ;
	virtual HRESULT __safecall Get_Black(int &Get_Black_result) = 0 ;
	virtual HRESULT __safecall Set_Black(int prop) = 0 ;
	virtual HRESULT __safecall SetCMYK(int Cyan, int Magenta, int Yellow, int Black) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_RGB() { int r; HRESULT hr = Get_RGB(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int RGB = {read=_scw_Get_RGB, write=Set_RGB};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_SchemeColor() { int r; HRESULT hr = Get_SchemeColor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int SchemeColor = {read=_scw_Get_SchemeColor, write=Set_SchemeColor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name, write=Set_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_TintAndShade() { float r; HRESULT hr = Get_TintAndShade(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float TintAndShade = {read=_scw_Get_TintAndShade, write=Set_TintAndShade};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_OverPrint() { Activex::TOleEnum r; HRESULT hr = Get_OverPrint(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum OverPrint = {read=_scw_Get_OverPrint, write=Set_OverPrint};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Ink(int Index) { float r; HRESULT hr = Get_Ink(Index, r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Ink[int Index] = {read=_scw_Get_Ink, write=Set_Ink};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Cyan() { int r; HRESULT hr = Get_Cyan(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Cyan = {read=_scw_Get_Cyan, write=Set_Cyan};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Magenta() { int r; HRESULT hr = Get_Magenta(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Magenta = {read=_scw_Get_Magenta, write=Set_Magenta};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Yellow() { int r; HRESULT hr = Get_Yellow(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Yellow = {read=_scw_Get_Yellow, write=Set_Yellow};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Black() { int r; HRESULT hr = Get_Black(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Black = {read=_scw_Get_Black, write=Set_Black};
};

__dispinterface ColorFormatDisp;
typedef System::DelphiInterface<ColorFormatDisp> _di_ColorFormatDisp;
__dispinterface INTERFACE_UUID("{000209C6-0000-0000-C000-000000000046}") ColorFormatDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209C7-0000-0000-C000-000000000046}") ConnectorFormat  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_BeginConnected(Activex::TOleEnum &Get_BeginConnected_result) = 0 ;
	virtual HRESULT __safecall Get_BeginConnectedShape(_di_Shape &Get_BeginConnectedShape_result) = 0 ;
	virtual HRESULT __safecall Get_BeginConnectionSite(int &Get_BeginConnectionSite_result) = 0 ;
	virtual HRESULT __safecall Get_EndConnected(Activex::TOleEnum &Get_EndConnected_result) = 0 ;
	virtual HRESULT __safecall Get_EndConnectedShape(_di_Shape &Get_EndConnectedShape_result) = 0 ;
	virtual HRESULT __safecall Get_EndConnectionSite(int &Get_EndConnectionSite_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Set_Type_(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall BeginConnect(/* out */ _di_Shape &ConnectedShape, int ConnectionSite) = 0 ;
	virtual HRESULT __safecall BeginDisconnect(void) = 0 ;
	virtual HRESULT __safecall EndConnect(/* out */ _di_Shape &ConnectedShape, int ConnectionSite) = 0 ;
	virtual HRESULT __safecall EndDisconnect(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_BeginConnected() { Activex::TOleEnum r; HRESULT hr = Get_BeginConnected(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum BeginConnected = {read=_scw_Get_BeginConnected};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shape _scw_Get_BeginConnectedShape() { _di_Shape r; HRESULT hr = Get_BeginConnectedShape(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shape BeginConnectedShape = {read=_scw_Get_BeginConnectedShape};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_BeginConnectionSite() { int r; HRESULT hr = Get_BeginConnectionSite(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int BeginConnectionSite = {read=_scw_Get_BeginConnectionSite};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_EndConnected() { Activex::TOleEnum r; HRESULT hr = Get_EndConnected(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum EndConnected = {read=_scw_Get_EndConnected};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shape _scw_Get_EndConnectedShape() { _di_Shape r; HRESULT hr = Get_EndConnectedShape(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shape EndConnectedShape = {read=_scw_Get_EndConnectedShape};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_EndConnectionSite() { int r; HRESULT hr = Get_EndConnectionSite(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int EndConnectionSite = {read=_scw_Get_EndConnectionSite};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_, write=Set_Type_};
};

__dispinterface ConnectorFormatDisp;
typedef System::DelphiInterface<ConnectorFormatDisp> _di_ConnectorFormatDisp;
__dispinterface INTERFACE_UUID("{000209C7-0000-0000-C000-000000000046}") ConnectorFormatDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209C8-0000-0000-C000-000000000046}") FillFormat  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_BackColor(_di_ColorFormat &Get_BackColor_result) = 0 ;
	virtual HRESULT __safecall Get_ForeColor(_di_ColorFormat &Get_ForeColor_result) = 0 ;
	virtual HRESULT __safecall Get_GradientColorType(Activex::TOleEnum &Get_GradientColorType_result) = 0 ;
	virtual HRESULT __safecall Get_GradientDegree(float &Get_GradientDegree_result) = 0 ;
	virtual HRESULT __safecall Get_GradientStyle(Activex::TOleEnum &Get_GradientStyle_result) = 0 ;
	virtual HRESULT __safecall Get_GradientVariant(int &Get_GradientVariant_result) = 0 ;
	virtual HRESULT __safecall Get_Pattern(Activex::TOleEnum &Get_Pattern_result) = 0 ;
	virtual HRESULT __safecall Get_PresetGradientType(Activex::TOleEnum &Get_PresetGradientType_result) = 0 ;
	virtual HRESULT __safecall Get_PresetTexture(Activex::TOleEnum &Get_PresetTexture_result) = 0 ;
	virtual HRESULT __safecall Get_TextureName(WideString &Get_TextureName_result) = 0 ;
	virtual HRESULT __safecall Get_TextureType(Activex::TOleEnum &Get_TextureType_result) = 0 ;
	virtual HRESULT __safecall Get_Transparency(float &Get_Transparency_result) = 0 ;
	virtual HRESULT __safecall Set_Transparency(float prop) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Get_Visible(Activex::TOleEnum &Get_Visible_result) = 0 ;
	virtual HRESULT __safecall Set_Visible(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Background(void) = 0 ;
	virtual HRESULT __safecall OneColorGradient(Activex::TOleEnum Style, int Variant, float Degree) = 0 ;
	virtual HRESULT __safecall Patterned(Activex::TOleEnum Pattern) = 0 ;
	virtual HRESULT __safecall PresetGradient(Activex::TOleEnum Style, int Variant, Activex::TOleEnum PresetGradientType) = 0 ;
	virtual HRESULT __safecall PresetTextured(Activex::TOleEnum PresetTexture) = 0 ;
	virtual HRESULT __safecall Solid(void) = 0 ;
	virtual HRESULT __safecall TwoColorGradient(Activex::TOleEnum Style, int Variant) = 0 ;
	virtual HRESULT __safecall UserPicture(const WideString PictureFile) = 0 ;
	virtual HRESULT __safecall UserTextured(const WideString TextureFile) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ColorFormat _scw_Get_BackColor() { _di_ColorFormat r; HRESULT hr = Get_BackColor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ColorFormat BackColor = {read=_scw_Get_BackColor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ColorFormat _scw_Get_ForeColor() { _di_ColorFormat r; HRESULT hr = Get_ForeColor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ColorFormat ForeColor = {read=_scw_Get_ForeColor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_GradientColorType() { Activex::TOleEnum r; HRESULT hr = Get_GradientColorType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum GradientColorType = {read=_scw_Get_GradientColorType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_GradientDegree() { float r; HRESULT hr = Get_GradientDegree(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float GradientDegree = {read=_scw_Get_GradientDegree};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_GradientStyle() { Activex::TOleEnum r; HRESULT hr = Get_GradientStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum GradientStyle = {read=_scw_Get_GradientStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_GradientVariant() { int r; HRESULT hr = Get_GradientVariant(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int GradientVariant = {read=_scw_Get_GradientVariant};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Pattern() { Activex::TOleEnum r; HRESULT hr = Get_Pattern(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Pattern = {read=_scw_Get_Pattern};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_PresetGradientType() { Activex::TOleEnum r; HRESULT hr = Get_PresetGradientType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum PresetGradientType = {read=_scw_Get_PresetGradientType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_PresetTexture() { Activex::TOleEnum r; HRESULT hr = Get_PresetTexture(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum PresetTexture = {read=_scw_Get_PresetTexture};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_TextureName() { WideString r; HRESULT hr = Get_TextureName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString TextureName = {read=_scw_Get_TextureName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_TextureType() { Activex::TOleEnum r; HRESULT hr = Get_TextureType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum TextureType = {read=_scw_Get_TextureType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Transparency() { float r; HRESULT hr = Get_Transparency(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Transparency = {read=_scw_Get_Transparency, write=Set_Transparency};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Visible() { Activex::TOleEnum r; HRESULT hr = Get_Visible(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Visible = {read=_scw_Get_Visible, write=Set_Visible};
};

__dispinterface FillFormatDisp;
typedef System::DelphiInterface<FillFormatDisp> _di_FillFormatDisp;
__dispinterface INTERFACE_UUID("{000209C8-0000-0000-C000-000000000046}") FillFormatDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209C9-0000-0000-C000-000000000046}") FreeformBuilder  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall AddNodes(Activex::TOleEnum SegmentType, Activex::TOleEnum EditingType, float X1, float Y1, float X2, float Y2, float X3, float Y3) = 0 ;
	virtual HRESULT __safecall ConvertToShape(OleVariant &Anchor, _di_Shape &ConvertToShape_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface FreeformBuilderDisp;
typedef System::DelphiInterface<FreeformBuilderDisp> _di_FreeformBuilderDisp;
__dispinterface INTERFACE_UUID("{000209C9-0000-0000-C000-000000000046}") FreeformBuilderDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209CA-0000-0000-C000-000000000046}") LineFormat  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_BackColor(_di_ColorFormat &Get_BackColor_result) = 0 ;
	virtual HRESULT __safecall Get_BeginArrowheadLength(Activex::TOleEnum &Get_BeginArrowheadLength_result) = 0 ;
	virtual HRESULT __safecall Set_BeginArrowheadLength(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_BeginArrowheadStyle(Activex::TOleEnum &Get_BeginArrowheadStyle_result) = 0 ;
	virtual HRESULT __safecall Set_BeginArrowheadStyle(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_BeginArrowheadWidth(Activex::TOleEnum &Get_BeginArrowheadWidth_result) = 0 ;
	virtual HRESULT __safecall Set_BeginArrowheadWidth(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_DashStyle(Activex::TOleEnum &Get_DashStyle_result) = 0 ;
	virtual HRESULT __safecall Set_DashStyle(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_EndArrowheadLength(Activex::TOleEnum &Get_EndArrowheadLength_result) = 0 ;
	virtual HRESULT __safecall Set_EndArrowheadLength(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_EndArrowheadStyle(Activex::TOleEnum &Get_EndArrowheadStyle_result) = 0 ;
	virtual HRESULT __safecall Set_EndArrowheadStyle(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_EndArrowheadWidth(Activex::TOleEnum &Get_EndArrowheadWidth_result) = 0 ;
	virtual HRESULT __safecall Set_EndArrowheadWidth(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_ForeColor(_di_ColorFormat &Get_ForeColor_result) = 0 ;
	virtual HRESULT __safecall Get_Pattern(Activex::TOleEnum &Get_Pattern_result) = 0 ;
	virtual HRESULT __safecall Set_Pattern(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Style(Activex::TOleEnum &Get_Style_result) = 0 ;
	virtual HRESULT __safecall Set_Style(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Transparency(float &Get_Transparency_result) = 0 ;
	virtual HRESULT __safecall Set_Transparency(float prop) = 0 ;
	virtual HRESULT __safecall Get_Visible(Activex::TOleEnum &Get_Visible_result) = 0 ;
	virtual HRESULT __safecall Set_Visible(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Weight(float &Get_Weight_result) = 0 ;
	virtual HRESULT __safecall Set_Weight(float prop) = 0 ;
	virtual HRESULT __safecall Get_InsetPen(Activex::TOleEnum &Get_InsetPen_result) = 0 ;
	virtual HRESULT __safecall Set_InsetPen(Activex::TOleEnum prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ColorFormat _scw_Get_BackColor() { _di_ColorFormat r; HRESULT hr = Get_BackColor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ColorFormat BackColor = {read=_scw_Get_BackColor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_BeginArrowheadLength() { Activex::TOleEnum r; HRESULT hr = Get_BeginArrowheadLength(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum BeginArrowheadLength = {read=_scw_Get_BeginArrowheadLength, write=Set_BeginArrowheadLength};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_BeginArrowheadStyle() { Activex::TOleEnum r; HRESULT hr = Get_BeginArrowheadStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum BeginArrowheadStyle = {read=_scw_Get_BeginArrowheadStyle, write=Set_BeginArrowheadStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_BeginArrowheadWidth() { Activex::TOleEnum r; HRESULT hr = Get_BeginArrowheadWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum BeginArrowheadWidth = {read=_scw_Get_BeginArrowheadWidth, write=Set_BeginArrowheadWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_DashStyle() { Activex::TOleEnum r; HRESULT hr = Get_DashStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum DashStyle = {read=_scw_Get_DashStyle, write=Set_DashStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_EndArrowheadLength() { Activex::TOleEnum r; HRESULT hr = Get_EndArrowheadLength(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum EndArrowheadLength = {read=_scw_Get_EndArrowheadLength, write=Set_EndArrowheadLength};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_EndArrowheadStyle() { Activex::TOleEnum r; HRESULT hr = Get_EndArrowheadStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum EndArrowheadStyle = {read=_scw_Get_EndArrowheadStyle, write=Set_EndArrowheadStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_EndArrowheadWidth() { Activex::TOleEnum r; HRESULT hr = Get_EndArrowheadWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum EndArrowheadWidth = {read=_scw_Get_EndArrowheadWidth, write=Set_EndArrowheadWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ColorFormat _scw_Get_ForeColor() { _di_ColorFormat r; HRESULT hr = Get_ForeColor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ColorFormat ForeColor = {read=_scw_Get_ForeColor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Pattern() { Activex::TOleEnum r; HRESULT hr = Get_Pattern(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Pattern = {read=_scw_Get_Pattern, write=Set_Pattern};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Style() { Activex::TOleEnum r; HRESULT hr = Get_Style(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Style = {read=_scw_Get_Style, write=Set_Style};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Transparency() { float r; HRESULT hr = Get_Transparency(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Transparency = {read=_scw_Get_Transparency, write=Set_Transparency};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Visible() { Activex::TOleEnum r; HRESULT hr = Get_Visible(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Visible = {read=_scw_Get_Visible, write=Set_Visible};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Weight() { float r; HRESULT hr = Get_Weight(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Weight = {read=_scw_Get_Weight, write=Set_Weight};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_InsetPen() { Activex::TOleEnum r; HRESULT hr = Get_InsetPen(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum InsetPen = {read=_scw_Get_InsetPen, write=Set_InsetPen};
};

__dispinterface LineFormatDisp;
typedef System::DelphiInterface<LineFormatDisp> _di_LineFormatDisp;
__dispinterface INTERFACE_UUID("{000209CA-0000-0000-C000-000000000046}") LineFormatDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209CB-0000-0000-C000-000000000046}") PictureFormat  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Brightness(float &Get_Brightness_result) = 0 ;
	virtual HRESULT __safecall Set_Brightness(float prop) = 0 ;
	virtual HRESULT __safecall Get_ColorType(Activex::TOleEnum &Get_ColorType_result) = 0 ;
	virtual HRESULT __safecall Set_ColorType(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Contrast(float &Get_Contrast_result) = 0 ;
	virtual HRESULT __safecall Set_Contrast(float prop) = 0 ;
	virtual HRESULT __safecall Get_CropBottom(float &Get_CropBottom_result) = 0 ;
	virtual HRESULT __safecall Set_CropBottom(float prop) = 0 ;
	virtual HRESULT __safecall Get_CropLeft(float &Get_CropLeft_result) = 0 ;
	virtual HRESULT __safecall Set_CropLeft(float prop) = 0 ;
	virtual HRESULT __safecall Get_CropRight(float &Get_CropRight_result) = 0 ;
	virtual HRESULT __safecall Set_CropRight(float prop) = 0 ;
	virtual HRESULT __safecall Get_CropTop(float &Get_CropTop_result) = 0 ;
	virtual HRESULT __safecall Set_CropTop(float prop) = 0 ;
	virtual HRESULT __safecall Get_TransparencyColor(int &Get_TransparencyColor_result) = 0 ;
	virtual HRESULT __safecall Set_TransparencyColor(int prop) = 0 ;
	virtual HRESULT __safecall Get_TransparentBackground(Activex::TOleEnum &Get_TransparentBackground_result) = 0 ;
	virtual HRESULT __safecall Set_TransparentBackground(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall IncrementBrightness(float Increment) = 0 ;
	virtual HRESULT __safecall IncrementContrast(float Increment) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Brightness() { float r; HRESULT hr = Get_Brightness(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Brightness = {read=_scw_Get_Brightness, write=Set_Brightness};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_ColorType() { Activex::TOleEnum r; HRESULT hr = Get_ColorType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum ColorType = {read=_scw_Get_ColorType, write=Set_ColorType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Contrast() { float r; HRESULT hr = Get_Contrast(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Contrast = {read=_scw_Get_Contrast, write=Set_Contrast};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_CropBottom() { float r; HRESULT hr = Get_CropBottom(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float CropBottom = {read=_scw_Get_CropBottom, write=Set_CropBottom};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_CropLeft() { float r; HRESULT hr = Get_CropLeft(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float CropLeft = {read=_scw_Get_CropLeft, write=Set_CropLeft};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_CropRight() { float r; HRESULT hr = Get_CropRight(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float CropRight = {read=_scw_Get_CropRight, write=Set_CropRight};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_CropTop() { float r; HRESULT hr = Get_CropTop(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float CropTop = {read=_scw_Get_CropTop, write=Set_CropTop};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_TransparencyColor() { int r; HRESULT hr = Get_TransparencyColor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int TransparencyColor = {read=_scw_Get_TransparencyColor, write=Set_TransparencyColor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_TransparentBackground() { Activex::TOleEnum r; HRESULT hr = Get_TransparentBackground(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum TransparentBackground = {read=_scw_Get_TransparentBackground, write=Set_TransparentBackground};
};

__dispinterface PictureFormatDisp;
typedef System::DelphiInterface<PictureFormatDisp> _di_PictureFormatDisp;
__dispinterface INTERFACE_UUID("{000209CB-0000-0000-C000-000000000046}") PictureFormatDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209CC-0000-0000-C000-000000000046}") ShadowFormat  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_ForeColor(_di_ColorFormat &Get_ForeColor_result) = 0 ;
	virtual HRESULT __safecall Get_Obscured(Activex::TOleEnum &Get_Obscured_result) = 0 ;
	virtual HRESULT __safecall Set_Obscured(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_OffsetX(float &Get_OffsetX_result) = 0 ;
	virtual HRESULT __safecall Set_OffsetX(float prop) = 0 ;
	virtual HRESULT __safecall Get_OffsetY(float &Get_OffsetY_result) = 0 ;
	virtual HRESULT __safecall Set_OffsetY(float prop) = 0 ;
	virtual HRESULT __safecall Get_Transparency(float &Get_Transparency_result) = 0 ;
	virtual HRESULT __safecall Set_Transparency(float prop) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Set_Type_(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Visible(Activex::TOleEnum &Get_Visible_result) = 0 ;
	virtual HRESULT __safecall Set_Visible(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall IncrementOffsetX(float Increment) = 0 ;
	virtual HRESULT __safecall IncrementOffsetY(float Increment) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ColorFormat _scw_Get_ForeColor() { _di_ColorFormat r; HRESULT hr = Get_ForeColor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ColorFormat ForeColor = {read=_scw_Get_ForeColor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Obscured() { Activex::TOleEnum r; HRESULT hr = Get_Obscured(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Obscured = {read=_scw_Get_Obscured, write=Set_Obscured};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_OffsetX() { float r; HRESULT hr = Get_OffsetX(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float OffsetX = {read=_scw_Get_OffsetX, write=Set_OffsetX};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_OffsetY() { float r; HRESULT hr = Get_OffsetY(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float OffsetY = {read=_scw_Get_OffsetY, write=Set_OffsetY};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Transparency() { float r; HRESULT hr = Get_Transparency(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Transparency = {read=_scw_Get_Transparency, write=Set_Transparency};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_, write=Set_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Visible() { Activex::TOleEnum r; HRESULT hr = Get_Visible(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Visible = {read=_scw_Get_Visible, write=Set_Visible};
};

__dispinterface ShadowFormatDisp;
typedef System::DelphiInterface<ShadowFormatDisp> _di_ShadowFormatDisp;
__dispinterface INTERFACE_UUID("{000209CC-0000-0000-C000-000000000046}") ShadowFormatDisp  : public IDispatch 
{
	
};

__interface ShapeNode;
typedef System::DelphiInterface<ShapeNode> _di_ShapeNode;
__interface INTERFACE_UUID("{000209CD-0000-0000-C000-000000000046}") ShapeNode  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_EditingType(Activex::TOleEnum &Get_EditingType_result) = 0 ;
	virtual HRESULT __safecall Get_Points(OleVariant &Get_Points_result) = 0 ;
	virtual HRESULT __safecall Get_SegmentType(Activex::TOleEnum &Get_SegmentType_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_EditingType() { Activex::TOleEnum r; HRESULT hr = Get_EditingType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum EditingType = {read=_scw_Get_EditingType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline OleVariant _scw_Get_Points() { OleVariant r; HRESULT hr = Get_Points(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property OleVariant Points = {read=_scw_Get_Points};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_SegmentType() { Activex::TOleEnum r; HRESULT hr = Get_SegmentType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum SegmentType = {read=_scw_Get_SegmentType};
};

__dispinterface ShapeNodeDisp;
typedef System::DelphiInterface<ShapeNodeDisp> _di_ShapeNodeDisp;
__dispinterface INTERFACE_UUID("{000209CD-0000-0000-C000-000000000046}") ShapeNodeDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209CE-0000-0000-C000-000000000046}") ShapeNodes  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Delete(int Index) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_ShapeNode &Item_result) = 0 ;
	virtual HRESULT __safecall SetEditingType(int Index, Activex::TOleEnum EditingType) = 0 ;
	virtual HRESULT __safecall SetPosition(int Index, float X1, float Y1) = 0 ;
	virtual HRESULT __safecall SetSegmentType(int Index, Activex::TOleEnum SegmentType) = 0 ;
	virtual HRESULT __safecall Insert(int Index, Activex::TOleEnum SegmentType, Activex::TOleEnum EditingType, float X1, float Y1, float X2, float Y2, float X3, float Y3) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
};

__dispinterface ShapeNodesDisp;
typedef System::DelphiInterface<ShapeNodesDisp> _di_ShapeNodesDisp;
__dispinterface INTERFACE_UUID("{000209CE-0000-0000-C000-000000000046}") ShapeNodesDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209CF-0000-0000-C000-000000000046}") TextEffectFormat  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Alignment(Activex::TOleEnum &Get_Alignment_result) = 0 ;
	virtual HRESULT __safecall Set_Alignment(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_FontBold(Activex::TOleEnum &Get_FontBold_result) = 0 ;
	virtual HRESULT __safecall Set_FontBold(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_FontItalic(Activex::TOleEnum &Get_FontItalic_result) = 0 ;
	virtual HRESULT __safecall Set_FontItalic(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_FontName(WideString &Get_FontName_result) = 0 ;
	virtual HRESULT __safecall Set_FontName(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_FontSize(float &Get_FontSize_result) = 0 ;
	virtual HRESULT __safecall Set_FontSize(float prop) = 0 ;
	virtual HRESULT __safecall Get_KernedPairs(Activex::TOleEnum &Get_KernedPairs_result) = 0 ;
	virtual HRESULT __safecall Set_KernedPairs(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_NormalizedHeight(Activex::TOleEnum &Get_NormalizedHeight_result) = 0 ;
	virtual HRESULT __safecall Set_NormalizedHeight(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_PresetShape(Activex::TOleEnum &Get_PresetShape_result) = 0 ;
	virtual HRESULT __safecall Set_PresetShape(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_PresetTextEffect(Activex::TOleEnum &Get_PresetTextEffect_result) = 0 ;
	virtual HRESULT __safecall Set_PresetTextEffect(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_RotatedChars(Activex::TOleEnum &Get_RotatedChars_result) = 0 ;
	virtual HRESULT __safecall Set_RotatedChars(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Text(WideString &Get_Text_result) = 0 ;
	virtual HRESULT __safecall Set_Text(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Tracking(float &Get_Tracking_result) = 0 ;
	virtual HRESULT __safecall Set_Tracking(float prop) = 0 ;
	virtual HRESULT __safecall ToggleVerticalText(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Alignment() { Activex::TOleEnum r; HRESULT hr = Get_Alignment(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Alignment = {read=_scw_Get_Alignment, write=Set_Alignment};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_FontBold() { Activex::TOleEnum r; HRESULT hr = Get_FontBold(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum FontBold = {read=_scw_Get_FontBold, write=Set_FontBold};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_FontItalic() { Activex::TOleEnum r; HRESULT hr = Get_FontItalic(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum FontItalic = {read=_scw_Get_FontItalic, write=Set_FontItalic};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_FontName() { WideString r; HRESULT hr = Get_FontName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString FontName = {read=_scw_Get_FontName, write=Set_FontName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_FontSize() { float r; HRESULT hr = Get_FontSize(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float FontSize = {read=_scw_Get_FontSize, write=Set_FontSize};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_KernedPairs() { Activex::TOleEnum r; HRESULT hr = Get_KernedPairs(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum KernedPairs = {read=_scw_Get_KernedPairs, write=Set_KernedPairs};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_NormalizedHeight() { Activex::TOleEnum r; HRESULT hr = Get_NormalizedHeight(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum NormalizedHeight = {read=_scw_Get_NormalizedHeight, write=Set_NormalizedHeight};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_PresetShape() { Activex::TOleEnum r; HRESULT hr = Get_PresetShape(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum PresetShape = {read=_scw_Get_PresetShape, write=Set_PresetShape};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_PresetTextEffect() { Activex::TOleEnum r; HRESULT hr = Get_PresetTextEffect(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum PresetTextEffect = {read=_scw_Get_PresetTextEffect, write=Set_PresetTextEffect};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_RotatedChars() { Activex::TOleEnum r; HRESULT hr = Get_RotatedChars(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum RotatedChars = {read=_scw_Get_RotatedChars, write=Set_RotatedChars};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Text() { WideString r; HRESULT hr = Get_Text(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Text = {read=_scw_Get_Text, write=Set_Text};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Tracking() { float r; HRESULT hr = Get_Tracking(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Tracking = {read=_scw_Get_Tracking, write=Set_Tracking};
};

__dispinterface TextEffectFormatDisp;
typedef System::DelphiInterface<TextEffectFormatDisp> _di_TextEffectFormatDisp;
__dispinterface INTERFACE_UUID("{000209CF-0000-0000-C000-000000000046}") TextEffectFormatDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209D0-0000-0000-C000-000000000046}") ThreeDFormat  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Depth(float &Get_Depth_result) = 0 ;
	virtual HRESULT __safecall Set_Depth(float prop) = 0 ;
	virtual HRESULT __safecall Get_ExtrusionColor(_di_ColorFormat &Get_ExtrusionColor_result) = 0 ;
	virtual HRESULT __safecall Get_ExtrusionColorType(Activex::TOleEnum &Get_ExtrusionColorType_result) = 0 ;
	virtual HRESULT __safecall Set_ExtrusionColorType(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Perspective(Activex::TOleEnum &Get_Perspective_result) = 0 ;
	virtual HRESULT __safecall Set_Perspective(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_PresetExtrusionDirection(Activex::TOleEnum &Get_PresetExtrusionDirection_result) = 0 ;
	virtual HRESULT __safecall Get_PresetLightingDirection(Activex::TOleEnum &Get_PresetLightingDirection_result) = 0 ;
	virtual HRESULT __safecall Set_PresetLightingDirection(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_PresetLightingSoftness(Activex::TOleEnum &Get_PresetLightingSoftness_result) = 0 ;
	virtual HRESULT __safecall Set_PresetLightingSoftness(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_PresetMaterial(Activex::TOleEnum &Get_PresetMaterial_result) = 0 ;
	virtual HRESULT __safecall Set_PresetMaterial(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_PresetThreeDFormat(Activex::TOleEnum &Get_PresetThreeDFormat_result) = 0 ;
	virtual HRESULT __safecall Get_RotationX(float &Get_RotationX_result) = 0 ;
	virtual HRESULT __safecall Set_RotationX(float prop) = 0 ;
	virtual HRESULT __safecall Get_RotationY(float &Get_RotationY_result) = 0 ;
	virtual HRESULT __safecall Set_RotationY(float prop) = 0 ;
	virtual HRESULT __safecall Get_Visible(Activex::TOleEnum &Get_Visible_result) = 0 ;
	virtual HRESULT __safecall Set_Visible(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall IncrementRotationX(float Increment) = 0 ;
	virtual HRESULT __safecall IncrementRotationY(float Increment) = 0 ;
	virtual HRESULT __safecall ResetRotation(void) = 0 ;
	virtual HRESULT __safecall SetExtrusionDirection(Activex::TOleEnum PresetExtrusionDirection) = 0 ;
	virtual HRESULT __safecall SetThreeDFormat(Activex::TOleEnum PresetThreeDFormat) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Depth() { float r; HRESULT hr = Get_Depth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Depth = {read=_scw_Get_Depth, write=Set_Depth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_ColorFormat _scw_Get_ExtrusionColor() { _di_ColorFormat r; HRESULT hr = Get_ExtrusionColor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_ColorFormat ExtrusionColor = {read=_scw_Get_ExtrusionColor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_ExtrusionColorType() { Activex::TOleEnum r; HRESULT hr = Get_ExtrusionColorType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum ExtrusionColorType = {read=_scw_Get_ExtrusionColorType, write=Set_ExtrusionColorType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Perspective() { Activex::TOleEnum r; HRESULT hr = Get_Perspective(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Perspective = {read=_scw_Get_Perspective, write=Set_Perspective};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_PresetExtrusionDirection() { Activex::TOleEnum r; HRESULT hr = Get_PresetExtrusionDirection(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum PresetExtrusionDirection = {read=_scw_Get_PresetExtrusionDirection};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_PresetLightingDirection() { Activex::TOleEnum r; HRESULT hr = Get_PresetLightingDirection(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum PresetLightingDirection = {read=_scw_Get_PresetLightingDirection, write=Set_PresetLightingDirection};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_PresetLightingSoftness() { Activex::TOleEnum r; HRESULT hr = Get_PresetLightingSoftness(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum PresetLightingSoftness = {read=_scw_Get_PresetLightingSoftness, write=Set_PresetLightingSoftness};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_PresetMaterial() { Activex::TOleEnum r; HRESULT hr = Get_PresetMaterial(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum PresetMaterial = {read=_scw_Get_PresetMaterial, write=Set_PresetMaterial};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_PresetThreeDFormat() { Activex::TOleEnum r; HRESULT hr = Get_PresetThreeDFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum PresetThreeDFormat = {read=_scw_Get_PresetThreeDFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_RotationX() { float r; HRESULT hr = Get_RotationX(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float RotationX = {read=_scw_Get_RotationX, write=Set_RotationX};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_RotationY() { float r; HRESULT hr = Get_RotationY(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float RotationY = {read=_scw_Get_RotationY, write=Set_RotationY};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Visible() { Activex::TOleEnum r; HRESULT hr = Get_Visible(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Visible = {read=_scw_Get_Visible, write=Set_Visible};
};

__dispinterface ThreeDFormatDisp;
typedef System::DelphiInterface<ThreeDFormatDisp> _di_ThreeDFormatDisp;
__dispinterface INTERFACE_UUID("{000209D0-0000-0000-C000-000000000046}") ThreeDFormatDisp  : public IDispatch 
{
	
};

__dispinterface ApplicationEvents;
typedef System::DelphiInterface<ApplicationEvents> _di_ApplicationEvents;
__dispinterface INTERFACE_UUID("{000209F7-0000-0000-C000-000000000046}") ApplicationEvents  : public IDispatch 
{
	
};

__dispinterface ApplicationEvents2;
typedef System::DelphiInterface<ApplicationEvents2> _di_ApplicationEvents2;
__dispinterface INTERFACE_UUID("{000209FE-0000-0000-C000-000000000046}") ApplicationEvents2  : public IDispatch 
{
	
};

__dispinterface DocumentEvents;
typedef System::DelphiInterface<DocumentEvents> _di_DocumentEvents;
__dispinterface INTERFACE_UUID("{000209F6-0000-0000-C000-000000000046}") DocumentEvents  : public IDispatch 
{
	
};

__dispinterface OCXEvents;
typedef System::DelphiInterface<OCXEvents> _di_OCXEvents;
__dispinterface INTERFACE_UUID("{000209F3-0000-0000-C000-000000000046}") OCXEvents  : public IDispatch 
{
	
};

__interface IApplicationEvents;
typedef System::DelphiInterface<IApplicationEvents> _di_IApplicationEvents;
__interface INTERFACE_UUID("{000209F7-0001-0000-C000-000000000046}") IApplicationEvents  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Startup(void) = 0 ;
	virtual HRESULT __safecall Quit(void) = 0 ;
	virtual HRESULT __safecall DocumentChange(void) = 0 ;
};

__dispinterface IApplicationEventsDisp;
typedef System::DelphiInterface<IApplicationEventsDisp> _di_IApplicationEventsDisp;
__dispinterface INTERFACE_UUID("{000209F7-0001-0000-C000-000000000046}") IApplicationEventsDisp  : public IDispatch 
{
	
};

__interface IApplicationEvents2;
typedef System::DelphiInterface<IApplicationEvents2> _di_IApplicationEvents2;
__interface INTERFACE_UUID("{000209FE-0001-0000-C000-000000000046}") IApplicationEvents2  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Startup(void) = 0 ;
	virtual HRESULT __safecall Quit(void) = 0 ;
	virtual HRESULT __safecall DocumentChange(void) = 0 ;
	virtual HRESULT __safecall DocumentOpen(const _di__Document Doc) = 0 ;
	virtual HRESULT __safecall DocumentBeforeClose(const _di__Document Doc, Word &Cancel) = 0 ;
	virtual HRESULT __safecall DocumentBeforePrint(const _di__Document Doc, Word &Cancel) = 0 ;
	virtual HRESULT __safecall DocumentBeforeSave(const _di__Document Doc, Word &SaveAsUI, Word &Cancel) = 0 ;
	virtual HRESULT __safecall NewDocument(const _di__Document Doc) = 0 ;
	virtual HRESULT __safecall WindowActivate(const _di__Document Doc, const _di_Window Wn) = 0 ;
	virtual HRESULT __safecall WindowDeactivate(const _di__Document Doc, const _di_Window Wn) = 0 ;
	virtual HRESULT __safecall WindowSelectionChange(const _di_Selection Sel) = 0 ;
	virtual HRESULT __safecall WindowBeforeRightClick(const _di_Selection Sel, Word &Cancel) = 0 ;
	virtual HRESULT __safecall WindowBeforeDoubleClick(const _di_Selection Sel, Word &Cancel) = 0 ;
};

__dispinterface IApplicationEvents2Disp;
typedef System::DelphiInterface<IApplicationEvents2Disp> _di_IApplicationEvents2Disp;
__dispinterface INTERFACE_UUID("{000209FE-0001-0000-C000-000000000046}") IApplicationEvents2Disp  : public IDispatch 
{
	
};

__dispinterface ApplicationEvents3;
typedef System::DelphiInterface<ApplicationEvents3> _di_ApplicationEvents3;
__dispinterface INTERFACE_UUID("{00020A00-0000-0000-C000-000000000046}") ApplicationEvents3  : public IDispatch 
{
	
};

__interface EmailAuthor;
typedef System::DelphiInterface<EmailAuthor> _di_EmailAuthor;
__interface INTERFACE_UUID("{000209D7-0000-0000-C000-000000000046}") EmailAuthor  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Style(_di_Style &Get_Style_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Style _scw_Get_Style() { _di_Style r; HRESULT hr = Get_Style(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Style Style = {read=_scw_Get_Style};
};

__dispinterface EmailAuthorDisp;
typedef System::DelphiInterface<EmailAuthorDisp> _di_EmailAuthorDisp;
__dispinterface INTERFACE_UUID("{000209D7-0000-0000-C000-000000000046}") EmailAuthorDisp  : public IDispatch 
{
	
};

__interface EmailSignature;
typedef System::DelphiInterface<EmailSignature> _di_EmailSignature;
__interface INTERFACE_UUID("{000209DB-0000-0000-C000-000000000046}") EmailOptions  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_UseThemeStyle(Word &Get_UseThemeStyle_result) = 0 ;
	virtual HRESULT __safecall Set_UseThemeStyle(Word prop) = 0 ;
	virtual HRESULT __safecall Get_MarkCommentsWith(WideString &Get_MarkCommentsWith_result) = 0 ;
	virtual HRESULT __safecall Set_MarkCommentsWith(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_MarkComments(Word &Get_MarkComments_result) = 0 ;
	virtual HRESULT __safecall Set_MarkComments(Word prop) = 0 ;
	virtual HRESULT __safecall Get_EmailSignature(_di_EmailSignature &Get_EmailSignature_result) = 0 ;
	virtual HRESULT __safecall Get_ComposeStyle(_di_Style &Get_ComposeStyle_result) = 0 ;
	virtual HRESULT __safecall Get_ReplyStyle(_di_Style &Get_ReplyStyle_result) = 0 ;
	virtual HRESULT __safecall Get_ThemeName(WideString &Get_ThemeName_result) = 0 ;
	virtual HRESULT __safecall Set_ThemeName(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Dummy1(Word &Get_Dummy1_result) = 0 ;
	virtual HRESULT __safecall Get_Dummy2(Word &Get_Dummy2_result) = 0 ;
	virtual HRESULT __safecall Dummy3(void) = 0 ;
	virtual HRESULT __safecall Get_NewColorOnReply(Word &Get_NewColorOnReply_result) = 0 ;
	virtual HRESULT __safecall Set_NewColorOnReply(Word prop) = 0 ;
	virtual HRESULT __safecall Get_PlainTextStyle(_di_Style &Get_PlainTextStyle_result) = 0 ;
	virtual HRESULT __safecall Get_UseThemeStyleOnReply(Word &Get_UseThemeStyleOnReply_result) = 0 ;
	virtual HRESULT __safecall Set_UseThemeStyleOnReply(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeApplyHeadings(Word &Get_AutoFormatAsYouTypeApplyHeadings_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeApplyHeadings(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeApplyBorders(Word &Get_AutoFormatAsYouTypeApplyBorders_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeApplyBorders(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeApplyBulletedLists(Word &Get_AutoFormatAsYouTypeApplyBulletedLists_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeApplyBulletedLists(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeApplyNumberedLists(Word &Get_AutoFormatAsYouTypeApplyNumberedLists_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeApplyNumberedLists(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeReplaceQuotes(Word &Get_AutoFormatAsYouTypeReplaceQuotes_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeReplaceQuotes(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeReplaceSymbols(Word &Get_AutoFormatAsYouTypeReplaceSymbols_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeReplaceSymbols(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeReplaceOrdinals(Word &Get_AutoFormatAsYouTypeReplaceOrdinals_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeReplaceOrdinals(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeReplaceFractions(Word &Get_AutoFormatAsYouTypeReplaceFractions_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeReplaceFractions(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeReplacePlainTextEmphasis(Word &Get_AutoFormatAsYouTypeReplacePlainTextEmphasis_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeReplacePlainTextEmphasis(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeFormatListItemBeginning(Word &Get_AutoFormatAsYouTypeFormatListItemBeginning_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeFormatListItemBeginning(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeDefineStyles(Word &Get_AutoFormatAsYouTypeDefineStyles_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeDefineStyles(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeReplaceHyperlinks(Word &Get_AutoFormatAsYouTypeReplaceHyperlinks_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeReplaceHyperlinks(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeApplyTables(Word &Get_AutoFormatAsYouTypeApplyTables_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeApplyTables(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeApplyFirstIndents(Word &Get_AutoFormatAsYouTypeApplyFirstIndents_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeApplyFirstIndents(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeApplyDates(Word &Get_AutoFormatAsYouTypeApplyDates_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeApplyDates(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeApplyClosings(Word &Get_AutoFormatAsYouTypeApplyClosings_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeApplyClosings(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeMatchParentheses(Word &Get_AutoFormatAsYouTypeMatchParentheses_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeMatchParentheses(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeReplaceFarEastDashes(Word &Get_AutoFormatAsYouTypeReplaceFarEastDashes_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeReplaceFarEastDashes(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeDeleteAutoSpaces(Word &Get_AutoFormatAsYouTypeDeleteAutoSpaces_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeDeleteAutoSpaces(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeInsertClosings(Word &Get_AutoFormatAsYouTypeInsertClosings_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeInsertClosings(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeAutoLetterWizard(Word &Get_AutoFormatAsYouTypeAutoLetterWizard_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeAutoLetterWizard(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormatAsYouTypeInsertOvers(Word &Get_AutoFormatAsYouTypeInsertOvers_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormatAsYouTypeInsertOvers(Word prop) = 0 ;
	virtual HRESULT __safecall Get_RelyOnCSS(Word &Get_RelyOnCSS_result) = 0 ;
	virtual HRESULT __safecall Set_RelyOnCSS(Word prop) = 0 ;
	virtual HRESULT __safecall Get_HTMLFidelity(Activex::TOleEnum &Get_HTMLFidelity_result) = 0 ;
	virtual HRESULT __safecall Set_HTMLFidelity(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_EmbedSmartTag(Word &Get_EmbedSmartTag_result) = 0 ;
	virtual HRESULT __safecall Set_EmbedSmartTag(Word prop) = 0 ;
	virtual HRESULT __safecall Get_TabIndentKey(Word &Get_TabIndentKey_result) = 0 ;
	virtual HRESULT __safecall Set_TabIndentKey(Word prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_UseThemeStyle() { Word r; HRESULT hr = Get_UseThemeStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word UseThemeStyle = {read=_scw_Get_UseThemeStyle, write=Set_UseThemeStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_MarkCommentsWith() { WideString r; HRESULT hr = Get_MarkCommentsWith(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString MarkCommentsWith = {read=_scw_Get_MarkCommentsWith, write=Set_MarkCommentsWith};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_MarkComments() { Word r; HRESULT hr = Get_MarkComments(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word MarkComments = {read=_scw_Get_MarkComments, write=Set_MarkComments};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_EmailSignature _scw_Get_EmailSignature() { _di_EmailSignature r; HRESULT hr = Get_EmailSignature(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_EmailSignature EmailSignature = {read=_scw_Get_EmailSignature};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Style _scw_Get_ComposeStyle() { _di_Style r; HRESULT hr = Get_ComposeStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Style ComposeStyle = {read=_scw_Get_ComposeStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Style _scw_Get_ReplyStyle() { _di_Style r; HRESULT hr = Get_ReplyStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Style ReplyStyle = {read=_scw_Get_ReplyStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ThemeName() { WideString r; HRESULT hr = Get_ThemeName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ThemeName = {read=_scw_Get_ThemeName, write=Set_ThemeName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Dummy1() { Word r; HRESULT hr = Get_Dummy1(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Dummy1 = {read=_scw_Get_Dummy1};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Dummy2() { Word r; HRESULT hr = Get_Dummy2(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Dummy2 = {read=_scw_Get_Dummy2};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_NewColorOnReply() { Word r; HRESULT hr = Get_NewColorOnReply(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word NewColorOnReply = {read=_scw_Get_NewColorOnReply, write=Set_NewColorOnReply};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Style _scw_Get_PlainTextStyle() { _di_Style r; HRESULT hr = Get_PlainTextStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Style PlainTextStyle = {read=_scw_Get_PlainTextStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_UseThemeStyleOnReply() { Word r; HRESULT hr = Get_UseThemeStyleOnReply(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word UseThemeStyleOnReply = {read=_scw_Get_UseThemeStyleOnReply, write=Set_UseThemeStyleOnReply};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeApplyHeadings() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeApplyHeadings(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeApplyHeadings = {read=_scw_Get_AutoFormatAsYouTypeApplyHeadings, write=Set_AutoFormatAsYouTypeApplyHeadings};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeApplyBorders() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeApplyBorders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeApplyBorders = {read=_scw_Get_AutoFormatAsYouTypeApplyBorders, write=Set_AutoFormatAsYouTypeApplyBorders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeApplyBulletedLists() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeApplyBulletedLists(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeApplyBulletedLists = {read=_scw_Get_AutoFormatAsYouTypeApplyBulletedLists, write=Set_AutoFormatAsYouTypeApplyBulletedLists};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeApplyNumberedLists() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeApplyNumberedLists(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeApplyNumberedLists = {read=_scw_Get_AutoFormatAsYouTypeApplyNumberedLists, write=Set_AutoFormatAsYouTypeApplyNumberedLists};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeReplaceQuotes() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeReplaceQuotes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeReplaceQuotes = {read=_scw_Get_AutoFormatAsYouTypeReplaceQuotes, write=Set_AutoFormatAsYouTypeReplaceQuotes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeReplaceSymbols() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeReplaceSymbols(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeReplaceSymbols = {read=_scw_Get_AutoFormatAsYouTypeReplaceSymbols, write=Set_AutoFormatAsYouTypeReplaceSymbols};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeReplaceOrdinals() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeReplaceOrdinals(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeReplaceOrdinals = {read=_scw_Get_AutoFormatAsYouTypeReplaceOrdinals, write=Set_AutoFormatAsYouTypeReplaceOrdinals};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeReplaceFractions() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeReplaceFractions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeReplaceFractions = {read=_scw_Get_AutoFormatAsYouTypeReplaceFractions, write=Set_AutoFormatAsYouTypeReplaceFractions};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeReplacePlainTextEmphasis() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeReplacePlainTextEmphasis(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeReplacePlainTextEmphasis = {read=_scw_Get_AutoFormatAsYouTypeReplacePlainTextEmphasis, write=Set_AutoFormatAsYouTypeReplacePlainTextEmphasis};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeFormatListItemBeginning() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeFormatListItemBeginning(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeFormatListItemBeginning = {read=_scw_Get_AutoFormatAsYouTypeFormatListItemBeginning, write=Set_AutoFormatAsYouTypeFormatListItemBeginning};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeDefineStyles() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeDefineStyles(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeDefineStyles = {read=_scw_Get_AutoFormatAsYouTypeDefineStyles, write=Set_AutoFormatAsYouTypeDefineStyles};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeReplaceHyperlinks() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeReplaceHyperlinks(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeReplaceHyperlinks = {read=_scw_Get_AutoFormatAsYouTypeReplaceHyperlinks, write=Set_AutoFormatAsYouTypeReplaceHyperlinks};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeApplyTables() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeApplyTables(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeApplyTables = {read=_scw_Get_AutoFormatAsYouTypeApplyTables, write=Set_AutoFormatAsYouTypeApplyTables};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeApplyFirstIndents() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeApplyFirstIndents(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeApplyFirstIndents = {read=_scw_Get_AutoFormatAsYouTypeApplyFirstIndents, write=Set_AutoFormatAsYouTypeApplyFirstIndents};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeApplyDates() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeApplyDates(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeApplyDates = {read=_scw_Get_AutoFormatAsYouTypeApplyDates, write=Set_AutoFormatAsYouTypeApplyDates};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeApplyClosings() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeApplyClosings(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeApplyClosings = {read=_scw_Get_AutoFormatAsYouTypeApplyClosings, write=Set_AutoFormatAsYouTypeApplyClosings};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeMatchParentheses() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeMatchParentheses(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeMatchParentheses = {read=_scw_Get_AutoFormatAsYouTypeMatchParentheses, write=Set_AutoFormatAsYouTypeMatchParentheses};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeReplaceFarEastDashes() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeReplaceFarEastDashes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeReplaceFarEastDashes = {read=_scw_Get_AutoFormatAsYouTypeReplaceFarEastDashes, write=Set_AutoFormatAsYouTypeReplaceFarEastDashes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeDeleteAutoSpaces() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeDeleteAutoSpaces(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeDeleteAutoSpaces = {read=_scw_Get_AutoFormatAsYouTypeDeleteAutoSpaces, write=Set_AutoFormatAsYouTypeDeleteAutoSpaces};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeInsertClosings() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeInsertClosings(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeInsertClosings = {read=_scw_Get_AutoFormatAsYouTypeInsertClosings, write=Set_AutoFormatAsYouTypeInsertClosings};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeAutoLetterWizard() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeAutoLetterWizard(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeAutoLetterWizard = {read=_scw_Get_AutoFormatAsYouTypeAutoLetterWizard, write=Set_AutoFormatAsYouTypeAutoLetterWizard};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AutoFormatAsYouTypeInsertOvers() { Word r; HRESULT hr = Get_AutoFormatAsYouTypeInsertOvers(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AutoFormatAsYouTypeInsertOvers = {read=_scw_Get_AutoFormatAsYouTypeInsertOvers, write=Set_AutoFormatAsYouTypeInsertOvers};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_RelyOnCSS() { Word r; HRESULT hr = Get_RelyOnCSS(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word RelyOnCSS = {read=_scw_Get_RelyOnCSS, write=Set_RelyOnCSS};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_HTMLFidelity() { Activex::TOleEnum r; HRESULT hr = Get_HTMLFidelity(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum HTMLFidelity = {read=_scw_Get_HTMLFidelity, write=Set_HTMLFidelity};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_EmbedSmartTag() { Word r; HRESULT hr = Get_EmbedSmartTag(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word EmbedSmartTag = {read=_scw_Get_EmbedSmartTag, write=Set_EmbedSmartTag};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_TabIndentKey() { Word r; HRESULT hr = Get_TabIndentKey(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word TabIndentKey = {read=_scw_Get_TabIndentKey, write=Set_TabIndentKey};
};

__dispinterface EmailOptionsDisp;
typedef System::DelphiInterface<EmailOptionsDisp> _di_EmailOptionsDisp;
__dispinterface INTERFACE_UUID("{000209DB-0000-0000-C000-000000000046}") EmailOptionsDisp  : public IDispatch 
{
	
};

__interface EmailSignatureEntries;
typedef System::DelphiInterface<EmailSignatureEntries> _di_EmailSignatureEntries;
__interface INTERFACE_UUID("{000209DC-0000-0000-C000-000000000046}") EmailSignature  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_NewMessageSignature(WideString &Get_NewMessageSignature_result) = 0 ;
	virtual HRESULT __safecall Set_NewMessageSignature(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_ReplyMessageSignature(WideString &Get_ReplyMessageSignature_result) = 0 ;
	virtual HRESULT __safecall Set_ReplyMessageSignature(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_EmailSignatureEntries(_di_EmailSignatureEntries &Get_EmailSignatureEntries_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_NewMessageSignature() { WideString r; HRESULT hr = Get_NewMessageSignature(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString NewMessageSignature = {read=_scw_Get_NewMessageSignature, write=Set_NewMessageSignature};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_ReplyMessageSignature() { WideString r; HRESULT hr = Get_ReplyMessageSignature(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString ReplyMessageSignature = {read=_scw_Get_ReplyMessageSignature, write=Set_ReplyMessageSignature};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_EmailSignatureEntries _scw_Get_EmailSignatureEntries() { _di_EmailSignatureEntries r; HRESULT hr = Get_EmailSignatureEntries(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_EmailSignatureEntries EmailSignatureEntries = {read=_scw_Get_EmailSignatureEntries};
};

__dispinterface EmailSignatureDisp;
typedef System::DelphiInterface<EmailSignatureDisp> _di_EmailSignatureDisp;
__dispinterface INTERFACE_UUID("{000209DC-0000-0000-C000-000000000046}") EmailSignatureDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209DD-0000-0000-C000-000000000046}") Email  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_CurrentEmailAuthor(_di_EmailAuthor &Get_CurrentEmailAuthor_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_EmailAuthor _scw_Get_CurrentEmailAuthor() { _di_EmailAuthor r; HRESULT hr = Get_CurrentEmailAuthor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_EmailAuthor CurrentEmailAuthor = {read=_scw_Get_CurrentEmailAuthor};
};

__dispinterface EmailDisp;
typedef System::DelphiInterface<EmailDisp> _di_EmailDisp;
__dispinterface INTERFACE_UUID("{000209DD-0000-0000-C000-000000000046}") EmailDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209DE-0000-0000-C000-000000000046}") HorizontalLineFormat  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_PercentWidth(float &Get_PercentWidth_result) = 0 ;
	virtual HRESULT __safecall Set_PercentWidth(float prop) = 0 ;
	virtual HRESULT __safecall Get_NoShade(Word &Get_NoShade_result) = 0 ;
	virtual HRESULT __safecall Set_NoShade(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Alignment(Activex::TOleEnum &Get_Alignment_result) = 0 ;
	virtual HRESULT __safecall Set_Alignment(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_WidthType(Activex::TOleEnum &Get_WidthType_result) = 0 ;
	virtual HRESULT __safecall Set_WidthType(Activex::TOleEnum prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_PercentWidth() { float r; HRESULT hr = Get_PercentWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float PercentWidth = {read=_scw_Get_PercentWidth, write=Set_PercentWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_NoShade() { Word r; HRESULT hr = Get_NoShade(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word NoShade = {read=_scw_Get_NoShade, write=Set_NoShade};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Alignment() { Activex::TOleEnum r; HRESULT hr = Get_Alignment(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Alignment = {read=_scw_Get_Alignment, write=Set_Alignment};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_WidthType() { Activex::TOleEnum r; HRESULT hr = Get_WidthType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum WidthType = {read=_scw_Get_WidthType, write=Set_WidthType};
};

__dispinterface HorizontalLineFormatDisp;
typedef System::DelphiInterface<HorizontalLineFormatDisp> _di_HorizontalLineFormatDisp;
__dispinterface INTERFACE_UUID("{000209DE-0000-0000-C000-000000000046}") HorizontalLineFormatDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209E2-0000-0000-C000-000000000046}") Frameset  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_ParentFrameset(_di_Frameset &Get_ParentFrameset_result) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Get_WidthType(Activex::TOleEnum &Get_WidthType_result) = 0 ;
	virtual HRESULT __safecall Set_WidthType(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_HeightType(Activex::TOleEnum &Get_HeightType_result) = 0 ;
	virtual HRESULT __safecall Set_HeightType(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Width(int &Get_Width_result) = 0 ;
	virtual HRESULT __safecall Set_Width(int prop) = 0 ;
	virtual HRESULT __safecall Get_Height(int &Get_Height_result) = 0 ;
	virtual HRESULT __safecall Set_Height(int prop) = 0 ;
	virtual HRESULT __safecall Get_ChildFramesetCount(int &Get_ChildFramesetCount_result) = 0 ;
	virtual HRESULT __safecall Get_ChildFramesetItem(int Index, _di_Frameset &Get_ChildFramesetItem_result) = 0 ;
	virtual HRESULT __safecall Get_FramesetBorderWidth(float &Get_FramesetBorderWidth_result) = 0 ;
	virtual HRESULT __safecall Set_FramesetBorderWidth(float prop) = 0 ;
	virtual HRESULT __safecall Get_FramesetBorderColor(Activex::TOleEnum &Get_FramesetBorderColor_result) = 0 ;
	virtual HRESULT __safecall Set_FramesetBorderColor(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_FrameScrollbarType(Activex::TOleEnum &Get_FrameScrollbarType_result) = 0 ;
	virtual HRESULT __safecall Set_FrameScrollbarType(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_FrameResizable(Word &Get_FrameResizable_result) = 0 ;
	virtual HRESULT __safecall Set_FrameResizable(Word prop) = 0 ;
	virtual HRESULT __safecall Get_FrameName(WideString &Get_FrameName_result) = 0 ;
	virtual HRESULT __safecall Set_FrameName(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_FrameDisplayBorders(Word &Get_FrameDisplayBorders_result) = 0 ;
	virtual HRESULT __safecall Set_FrameDisplayBorders(Word prop) = 0 ;
	virtual HRESULT __safecall Get_FrameDefaultURL(WideString &Get_FrameDefaultURL_result) = 0 ;
	virtual HRESULT __safecall Set_FrameDefaultURL(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_FrameLinkToFile(Word &Get_FrameLinkToFile_result) = 0 ;
	virtual HRESULT __safecall Set_FrameLinkToFile(Word prop) = 0 ;
	virtual HRESULT __safecall AddNewFrame(Activex::TOleEnum Where, _di_Frameset &AddNewFrame_result) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Frameset _scw_Get_ParentFrameset() { _di_Frameset r; HRESULT hr = Get_ParentFrameset(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Frameset ParentFrameset = {read=_scw_Get_ParentFrameset};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_WidthType() { Activex::TOleEnum r; HRESULT hr = Get_WidthType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum WidthType = {read=_scw_Get_WidthType, write=Set_WidthType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_HeightType() { Activex::TOleEnum r; HRESULT hr = Get_HeightType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum HeightType = {read=_scw_Get_HeightType, write=Set_HeightType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Width() { int r; HRESULT hr = Get_Width(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Width = {read=_scw_Get_Width, write=Set_Width};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Height() { int r; HRESULT hr = Get_Height(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Height = {read=_scw_Get_Height, write=Set_Height};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_ChildFramesetCount() { int r; HRESULT hr = Get_ChildFramesetCount(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int ChildFramesetCount = {read=_scw_Get_ChildFramesetCount};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Frameset _scw_Get_ChildFramesetItem(int Index) { _di_Frameset r; HRESULT hr = Get_ChildFramesetItem(Index, r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Frameset ChildFramesetItem[int Index] = {read=_scw_Get_ChildFramesetItem};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_FramesetBorderWidth() { float r; HRESULT hr = Get_FramesetBorderWidth(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float FramesetBorderWidth = {read=_scw_Get_FramesetBorderWidth, write=Set_FramesetBorderWidth};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_FramesetBorderColor() { Activex::TOleEnum r; HRESULT hr = Get_FramesetBorderColor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum FramesetBorderColor = {read=_scw_Get_FramesetBorderColor, write=Set_FramesetBorderColor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_FrameScrollbarType() { Activex::TOleEnum r; HRESULT hr = Get_FrameScrollbarType(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum FrameScrollbarType = {read=_scw_Get_FrameScrollbarType, write=Set_FrameScrollbarType};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_FrameResizable() { Word r; HRESULT hr = Get_FrameResizable(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word FrameResizable = {read=_scw_Get_FrameResizable, write=Set_FrameResizable};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_FrameName() { WideString r; HRESULT hr = Get_FrameName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString FrameName = {read=_scw_Get_FrameName, write=Set_FrameName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_FrameDisplayBorders() { Word r; HRESULT hr = Get_FrameDisplayBorders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word FrameDisplayBorders = {read=_scw_Get_FrameDisplayBorders, write=Set_FrameDisplayBorders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_FrameDefaultURL() { WideString r; HRESULT hr = Get_FrameDefaultURL(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString FrameDefaultURL = {read=_scw_Get_FrameDefaultURL, write=Set_FrameDefaultURL};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_FrameLinkToFile() { Word r; HRESULT hr = Get_FrameLinkToFile(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word FrameLinkToFile = {read=_scw_Get_FrameLinkToFile, write=Set_FrameLinkToFile};
};

__dispinterface FramesetDisp;
typedef System::DelphiInterface<FramesetDisp> _di_FramesetDisp;
__dispinterface INTERFACE_UUID("{000209E2-0000-0000-C000-000000000046}") FramesetDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209E3-0000-0000-C000-000000000046}") DefaultWebOptions  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_OptimizeForBrowser(Word &Get_OptimizeForBrowser_result) = 0 ;
	virtual HRESULT __safecall Set_OptimizeForBrowser(Word prop) = 0 ;
	virtual HRESULT __safecall Get_BrowserLevel(Activex::TOleEnum &Get_BrowserLevel_result) = 0 ;
	virtual HRESULT __safecall Set_BrowserLevel(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_RelyOnCSS(Word &Get_RelyOnCSS_result) = 0 ;
	virtual HRESULT __safecall Set_RelyOnCSS(Word prop) = 0 ;
	virtual HRESULT __safecall Get_OrganizeInFolder(Word &Get_OrganizeInFolder_result) = 0 ;
	virtual HRESULT __safecall Set_OrganizeInFolder(Word prop) = 0 ;
	virtual HRESULT __safecall Get_UpdateLinksOnSave(Word &Get_UpdateLinksOnSave_result) = 0 ;
	virtual HRESULT __safecall Set_UpdateLinksOnSave(Word prop) = 0 ;
	virtual HRESULT __safecall Get_UseLongFileNames(Word &Get_UseLongFileNames_result) = 0 ;
	virtual HRESULT __safecall Set_UseLongFileNames(Word prop) = 0 ;
	virtual HRESULT __safecall Get_CheckIfOfficeIsHTMLEditor(Word &Get_CheckIfOfficeIsHTMLEditor_result) = 0 ;
	virtual HRESULT __safecall Set_CheckIfOfficeIsHTMLEditor(Word prop) = 0 ;
	virtual HRESULT __safecall Get_CheckIfWordIsDefaultHTMLEditor(Word &Get_CheckIfWordIsDefaultHTMLEditor_result) = 0 ;
	virtual HRESULT __safecall Set_CheckIfWordIsDefaultHTMLEditor(Word prop) = 0 ;
	virtual HRESULT __safecall Get_RelyOnVML(Word &Get_RelyOnVML_result) = 0 ;
	virtual HRESULT __safecall Set_RelyOnVML(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AllowPNG(Word &Get_AllowPNG_result) = 0 ;
	virtual HRESULT __safecall Set_AllowPNG(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ScreenSize(Activex::TOleEnum &Get_ScreenSize_result) = 0 ;
	virtual HRESULT __safecall Set_ScreenSize(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_PixelsPerInch(int &Get_PixelsPerInch_result) = 0 ;
	virtual HRESULT __safecall Set_PixelsPerInch(int prop) = 0 ;
	virtual HRESULT __safecall Get_Encoding(Activex::TOleEnum &Get_Encoding_result) = 0 ;
	virtual HRESULT __safecall Set_Encoding(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_AlwaysSaveInDefaultEncoding(Word &Get_AlwaysSaveInDefaultEncoding_result) = 0 ;
	virtual HRESULT __safecall Set_AlwaysSaveInDefaultEncoding(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Fonts(Opofcxp::_di_WebPageFonts &Get_Fonts_result) = 0 ;
	virtual HRESULT __safecall Get_FolderSuffix(WideString &Get_FolderSuffix_result) = 0 ;
	virtual HRESULT __safecall Get_TargetBrowser(Activex::TOleEnum &Get_TargetBrowser_result) = 0 ;
	virtual HRESULT __safecall Set_TargetBrowser(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_SaveNewWebPagesAsWebArchives(Word &Get_SaveNewWebPagesAsWebArchives_result) = 0 ;
	virtual HRESULT __safecall Set_SaveNewWebPagesAsWebArchives(Word prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_OptimizeForBrowser() { Word r; HRESULT hr = Get_OptimizeForBrowser(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word OptimizeForBrowser = {read=_scw_Get_OptimizeForBrowser, write=Set_OptimizeForBrowser};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_BrowserLevel() { Activex::TOleEnum r; HRESULT hr = Get_BrowserLevel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum BrowserLevel = {read=_scw_Get_BrowserLevel, write=Set_BrowserLevel};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_RelyOnCSS() { Word r; HRESULT hr = Get_RelyOnCSS(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word RelyOnCSS = {read=_scw_Get_RelyOnCSS, write=Set_RelyOnCSS};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_OrganizeInFolder() { Word r; HRESULT hr = Get_OrganizeInFolder(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word OrganizeInFolder = {read=_scw_Get_OrganizeInFolder, write=Set_OrganizeInFolder};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_UpdateLinksOnSave() { Word r; HRESULT hr = Get_UpdateLinksOnSave(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word UpdateLinksOnSave = {read=_scw_Get_UpdateLinksOnSave, write=Set_UpdateLinksOnSave};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_UseLongFileNames() { Word r; HRESULT hr = Get_UseLongFileNames(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word UseLongFileNames = {read=_scw_Get_UseLongFileNames, write=Set_UseLongFileNames};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_CheckIfOfficeIsHTMLEditor() { Word r; HRESULT hr = Get_CheckIfOfficeIsHTMLEditor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word CheckIfOfficeIsHTMLEditor = {read=_scw_Get_CheckIfOfficeIsHTMLEditor, write=Set_CheckIfOfficeIsHTMLEditor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_CheckIfWordIsDefaultHTMLEditor() { Word r; HRESULT hr = Get_CheckIfWordIsDefaultHTMLEditor(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word CheckIfWordIsDefaultHTMLEditor = {read=_scw_Get_CheckIfWordIsDefaultHTMLEditor, write=Set_CheckIfWordIsDefaultHTMLEditor};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_RelyOnVML() { Word r; HRESULT hr = Get_RelyOnVML(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word RelyOnVML = {read=_scw_Get_RelyOnVML, write=Set_RelyOnVML};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AllowPNG() { Word r; HRESULT hr = Get_AllowPNG(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AllowPNG = {read=_scw_Get_AllowPNG, write=Set_AllowPNG};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_ScreenSize() { Activex::TOleEnum r; HRESULT hr = Get_ScreenSize(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum ScreenSize = {read=_scw_Get_ScreenSize, write=Set_ScreenSize};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_PixelsPerInch() { int r; HRESULT hr = Get_PixelsPerInch(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int PixelsPerInch = {read=_scw_Get_PixelsPerInch, write=Set_PixelsPerInch};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Encoding() { Activex::TOleEnum r; HRESULT hr = Get_Encoding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Encoding = {read=_scw_Get_Encoding, write=Set_Encoding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AlwaysSaveInDefaultEncoding() { Word r; HRESULT hr = Get_AlwaysSaveInDefaultEncoding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AlwaysSaveInDefaultEncoding = {read=_scw_Get_AlwaysSaveInDefaultEncoding, write=Set_AlwaysSaveInDefaultEncoding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Opofcxp::_di_WebPageFonts _scw_Get_Fonts() { Opofcxp::_di_WebPageFonts r; HRESULT hr = Get_Fonts(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Opofcxp::_di_WebPageFonts Fonts = {read=_scw_Get_Fonts};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_FolderSuffix() { WideString r; HRESULT hr = Get_FolderSuffix(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString FolderSuffix = {read=_scw_Get_FolderSuffix};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_TargetBrowser() { Activex::TOleEnum r; HRESULT hr = Get_TargetBrowser(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum TargetBrowser = {read=_scw_Get_TargetBrowser, write=Set_TargetBrowser};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_SaveNewWebPagesAsWebArchives() { Word r; HRESULT hr = Get_SaveNewWebPagesAsWebArchives(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word SaveNewWebPagesAsWebArchives = {read=_scw_Get_SaveNewWebPagesAsWebArchives, write=Set_SaveNewWebPagesAsWebArchives};
};

__dispinterface DefaultWebOptionsDisp;
typedef System::DelphiInterface<DefaultWebOptionsDisp> _di_DefaultWebOptionsDisp;
__dispinterface INTERFACE_UUID("{000209E3-0000-0000-C000-000000000046}") DefaultWebOptionsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209E4-0000-0000-C000-000000000046}") WebOptions  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_OptimizeForBrowser(Word &Get_OptimizeForBrowser_result) = 0 ;
	virtual HRESULT __safecall Set_OptimizeForBrowser(Word prop) = 0 ;
	virtual HRESULT __safecall Get_BrowserLevel(Activex::TOleEnum &Get_BrowserLevel_result) = 0 ;
	virtual HRESULT __safecall Set_BrowserLevel(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_RelyOnCSS(Word &Get_RelyOnCSS_result) = 0 ;
	virtual HRESULT __safecall Set_RelyOnCSS(Word prop) = 0 ;
	virtual HRESULT __safecall Get_OrganizeInFolder(Word &Get_OrganizeInFolder_result) = 0 ;
	virtual HRESULT __safecall Set_OrganizeInFolder(Word prop) = 0 ;
	virtual HRESULT __safecall Get_UseLongFileNames(Word &Get_UseLongFileNames_result) = 0 ;
	virtual HRESULT __safecall Set_UseLongFileNames(Word prop) = 0 ;
	virtual HRESULT __safecall Get_RelyOnVML(Word &Get_RelyOnVML_result) = 0 ;
	virtual HRESULT __safecall Set_RelyOnVML(Word prop) = 0 ;
	virtual HRESULT __safecall Get_AllowPNG(Word &Get_AllowPNG_result) = 0 ;
	virtual HRESULT __safecall Set_AllowPNG(Word prop) = 0 ;
	virtual HRESULT __safecall Get_ScreenSize(Activex::TOleEnum &Get_ScreenSize_result) = 0 ;
	virtual HRESULT __safecall Set_ScreenSize(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_PixelsPerInch(int &Get_PixelsPerInch_result) = 0 ;
	virtual HRESULT __safecall Set_PixelsPerInch(int prop) = 0 ;
	virtual HRESULT __safecall Get_Encoding(Activex::TOleEnum &Get_Encoding_result) = 0 ;
	virtual HRESULT __safecall Set_Encoding(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_FolderSuffix(WideString &Get_FolderSuffix_result) = 0 ;
	virtual HRESULT __safecall UseDefaultFolderSuffix(void) = 0 ;
	virtual HRESULT __safecall Get_TargetBrowser(Activex::TOleEnum &Get_TargetBrowser_result) = 0 ;
	virtual HRESULT __safecall Set_TargetBrowser(Activex::TOleEnum prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_OptimizeForBrowser() { Word r; HRESULT hr = Get_OptimizeForBrowser(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word OptimizeForBrowser = {read=_scw_Get_OptimizeForBrowser, write=Set_OptimizeForBrowser};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_BrowserLevel() { Activex::TOleEnum r; HRESULT hr = Get_BrowserLevel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum BrowserLevel = {read=_scw_Get_BrowserLevel, write=Set_BrowserLevel};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_RelyOnCSS() { Word r; HRESULT hr = Get_RelyOnCSS(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word RelyOnCSS = {read=_scw_Get_RelyOnCSS, write=Set_RelyOnCSS};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_OrganizeInFolder() { Word r; HRESULT hr = Get_OrganizeInFolder(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word OrganizeInFolder = {read=_scw_Get_OrganizeInFolder, write=Set_OrganizeInFolder};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_UseLongFileNames() { Word r; HRESULT hr = Get_UseLongFileNames(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word UseLongFileNames = {read=_scw_Get_UseLongFileNames, write=Set_UseLongFileNames};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_RelyOnVML() { Word r; HRESULT hr = Get_RelyOnVML(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word RelyOnVML = {read=_scw_Get_RelyOnVML, write=Set_RelyOnVML};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AllowPNG() { Word r; HRESULT hr = Get_AllowPNG(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AllowPNG = {read=_scw_Get_AllowPNG, write=Set_AllowPNG};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_ScreenSize() { Activex::TOleEnum r; HRESULT hr = Get_ScreenSize(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum ScreenSize = {read=_scw_Get_ScreenSize, write=Set_ScreenSize};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_PixelsPerInch() { int r; HRESULT hr = Get_PixelsPerInch(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int PixelsPerInch = {read=_scw_Get_PixelsPerInch, write=Set_PixelsPerInch};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Encoding() { Activex::TOleEnum r; HRESULT hr = Get_Encoding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Encoding = {read=_scw_Get_Encoding, write=Set_Encoding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_FolderSuffix() { WideString r; HRESULT hr = Get_FolderSuffix(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString FolderSuffix = {read=_scw_Get_FolderSuffix};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_TargetBrowser() { Activex::TOleEnum r; HRESULT hr = Get_TargetBrowser(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum TargetBrowser = {read=_scw_Get_TargetBrowser, write=Set_TargetBrowser};
};

__dispinterface WebOptionsDisp;
typedef System::DelphiInterface<WebOptionsDisp> _di_WebOptionsDisp;
__dispinterface INTERFACE_UUID("{000209E4-0000-0000-C000-000000000046}") WebOptionsDisp  : public IDispatch 
{
	
};

__interface OtherCorrectionsException;
typedef System::DelphiInterface<OtherCorrectionsException> _di_OtherCorrectionsException;
__interface INTERFACE_UUID("{000209DF-0000-0000-C000-000000000046}") OtherCorrectionsExceptions  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_OtherCorrectionsException &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const WideString Name, _di_OtherCorrectionsException &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface OtherCorrectionsExceptionsDisp;
typedef System::DelphiInterface<OtherCorrectionsExceptionsDisp> _di_OtherCorrectionsExceptionsDisp;
__dispinterface INTERFACE_UUID("{000209DF-0000-0000-C000-000000000046}") OtherCorrectionsExceptionsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209E1-0000-0000-C000-000000000046}") OtherCorrectionsException  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
};

__dispinterface OtherCorrectionsExceptionDisp;
typedef System::DelphiInterface<OtherCorrectionsExceptionDisp> _di_OtherCorrectionsExceptionDisp;
__dispinterface INTERFACE_UUID("{000209E1-0000-0000-C000-000000000046}") OtherCorrectionsExceptionDisp  : public IDispatch 
{
	
};

__interface EmailSignatureEntry;
typedef System::DelphiInterface<EmailSignatureEntry> _di_EmailSignatureEntry;
__interface INTERFACE_UUID("{000209E5-0000-0000-C000-000000000046}") EmailSignatureEntries  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_EmailSignatureEntry &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const WideString Name, const _di_Range Range, _di_EmailSignatureEntry &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface EmailSignatureEntriesDisp;
typedef System::DelphiInterface<EmailSignatureEntriesDisp> _di_EmailSignatureEntriesDisp;
__dispinterface INTERFACE_UUID("{000209E5-0000-0000-C000-000000000046}") EmailSignatureEntriesDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209E6-0000-0000-C000-000000000046}") EmailSignatureEntry  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Set_Name(const WideString prop) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name, write=Set_Name};
};

__dispinterface EmailSignatureEntryDisp;
typedef System::DelphiInterface<EmailSignatureEntryDisp> _di_EmailSignatureEntryDisp;
__dispinterface INTERFACE_UUID("{000209E6-0000-0000-C000-000000000046}") EmailSignatureEntryDisp  : public IDispatch 
{
	
};

__interface HTMLDivision;
typedef System::DelphiInterface<HTMLDivision> _di_HTMLDivision;
__interface INTERFACE_UUID("{000209E7-0000-0000-C000-000000000046}") HTMLDivision  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Get_Borders(_di_Borders &Get_Borders_result) = 0 ;
	virtual HRESULT __safecall Get_LeftIndent(float &Get_LeftIndent_result) = 0 ;
	virtual HRESULT __safecall Set_LeftIndent(float prop) = 0 ;
	virtual HRESULT __safecall Get_RightIndent(float &Get_RightIndent_result) = 0 ;
	virtual HRESULT __safecall Set_RightIndent(float prop) = 0 ;
	virtual HRESULT __safecall Get_SpaceBefore(float &Get_SpaceBefore_result) = 0 ;
	virtual HRESULT __safecall Set_SpaceBefore(float prop) = 0 ;
	virtual HRESULT __safecall Get_SpaceAfter(float &Get_SpaceAfter_result) = 0 ;
	virtual HRESULT __safecall Set_SpaceAfter(float prop) = 0 ;
	virtual HRESULT __safecall Get_HTMLDivisions(_di_HTMLDivisions &Get_HTMLDivisions_result) = 0 ;
	virtual HRESULT __safecall HTMLDivisionParent(OleVariant &LevelsUp, _di_HTMLDivision &HTMLDivisionParent_result) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Borders _scw_Get_Borders() { _di_Borders r; HRESULT hr = Get_Borders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Borders Borders = {read=_scw_Get_Borders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_LeftIndent() { float r; HRESULT hr = Get_LeftIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float LeftIndent = {read=_scw_Get_LeftIndent, write=Set_LeftIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_RightIndent() { float r; HRESULT hr = Get_RightIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float RightIndent = {read=_scw_Get_RightIndent, write=Set_RightIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_SpaceBefore() { float r; HRESULT hr = Get_SpaceBefore(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float SpaceBefore = {read=_scw_Get_SpaceBefore, write=Set_SpaceBefore};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_SpaceAfter() { float r; HRESULT hr = Get_SpaceAfter(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float SpaceAfter = {read=_scw_Get_SpaceAfter, write=Set_SpaceAfter};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_HTMLDivisions _scw_Get_HTMLDivisions() { _di_HTMLDivisions r; HRESULT hr = Get_HTMLDivisions(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_HTMLDivisions HTMLDivisions = {read=_scw_Get_HTMLDivisions};
};

__dispinterface HTMLDivisionDisp;
typedef System::DelphiInterface<HTMLDivisionDisp> _di_HTMLDivisionDisp;
__dispinterface INTERFACE_UUID("{000209E7-0000-0000-C000-000000000046}") HTMLDivisionDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209E8-0000-0000-C000-000000000046}") HTMLDivisions  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_NestingLevel(int &Get_NestingLevel_result) = 0 ;
	virtual HRESULT __safecall Add(OleVariant &Range, _di_HTMLDivision &Add_result) = 0 ;
	virtual HRESULT __safecall Item(int Index, _di_HTMLDivision &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_NestingLevel() { int r; HRESULT hr = Get_NestingLevel(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int NestingLevel = {read=_scw_Get_NestingLevel};
};

__dispinterface HTMLDivisionsDisp;
typedef System::DelphiInterface<HTMLDivisionsDisp> _di_HTMLDivisionsDisp;
__dispinterface INTERFACE_UUID("{000209E8-0000-0000-C000-000000000046}") HTMLDivisionsDisp  : public IDispatch 
{
	
};

__interface DiagramNodeChildren;
typedef System::DelphiInterface<DiagramNodeChildren> _di_DiagramNodeChildren;
__interface Diagram;
typedef System::DelphiInterface<Diagram> _di_Diagram;
__interface INTERFACE_UUID("{000209E9-0000-0000-C000-000000000046}") DiagramNode  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Children(_di_DiagramNodeChildren &Get_Children_result) = 0 ;
	virtual HRESULT __safecall Get_Shape(_di_Shape &Get_Shape_result) = 0 ;
	virtual HRESULT __safecall Get_Root(_di_DiagramNode &Get_Root_result) = 0 ;
	virtual HRESULT __safecall Get_Diagram(_di_Diagram &Get_Diagram_result) = 0 ;
	virtual HRESULT __safecall Get_Layout(Activex::TOleEnum &Get_Layout_result) = 0 ;
	virtual HRESULT __safecall Set_Layout(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_TextShape(_di_Shape &Get_TextShape_result) = 0 ;
	virtual HRESULT __safecall AddNode(Activex::TOleEnum Pos, Activex::TOleEnum NodeType, _di_DiagramNode &AddNode_result) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	virtual HRESULT __safecall MoveNode(/* out */ _di_DiagramNode &TargetNode, Activex::TOleEnum Pos) = 0 ;
	virtual HRESULT __safecall ReplaceNode(/* out */ _di_DiagramNode &TargetNode) = 0 ;
	virtual HRESULT __safecall SwapNode(/* out */ _di_DiagramNode &TargetNode, Activex::TOleEnum Pos) = 0 ;
	virtual HRESULT __safecall CloneNode(Word copyChildren, /* out */ _di_DiagramNode &TargetNode, Activex::TOleEnum Pos, _di_DiagramNode &CloneNode_result) = 0 ;
	virtual HRESULT __safecall TransferChildren(/* out */ _di_DiagramNode &ReceivingNode) = 0 ;
	virtual HRESULT __safecall NextNode(_di_DiagramNode &NextNode_result) = 0 ;
	virtual HRESULT __safecall PrevNode(_di_DiagramNode &PrevNode_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_DiagramNodeChildren _scw_Get_Children() { _di_DiagramNodeChildren r; HRESULT hr = Get_Children(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_DiagramNodeChildren Children = {read=_scw_Get_Children};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shape _scw_Get_Shape() { _di_Shape r; HRESULT hr = Get_Shape(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shape Shape = {read=_scw_Get_Shape};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_DiagramNode _scw_Get_Root() { _di_DiagramNode r; HRESULT hr = Get_Root(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_DiagramNode Root = {read=_scw_Get_Root};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Diagram _scw_Get_Diagram() { _di_Diagram r; HRESULT hr = Get_Diagram(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Diagram Diagram = {read=_scw_Get_Diagram};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Layout() { Activex::TOleEnum r; HRESULT hr = Get_Layout(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Layout = {read=_scw_Get_Layout, write=Set_Layout};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shape _scw_Get_TextShape() { _di_Shape r; HRESULT hr = Get_TextShape(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shape TextShape = {read=_scw_Get_TextShape};
};

__dispinterface DiagramNodeDisp;
typedef System::DelphiInterface<DiagramNodeDisp> _di_DiagramNodeDisp;
__dispinterface INTERFACE_UUID("{000209E9-0000-0000-C000-000000000046}") DiagramNodeDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209EA-0000-0000-C000-000000000046}") DiagramNodeChildren  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_FirstChild(_di_DiagramNode &Get_FirstChild_result) = 0 ;
	virtual HRESULT __safecall Get_LastChild(_di_DiagramNode &Get_LastChild_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_DiagramNode &Item_result) = 0 ;
	virtual HRESULT __safecall AddNode(OleVariant &Index, Activex::TOleEnum NodeType, _di_DiagramNode &AddNode_result) = 0 ;
	virtual HRESULT __safecall SelectAll(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_DiagramNode _scw_Get_FirstChild() { _di_DiagramNode r; HRESULT hr = Get_FirstChild(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_DiagramNode FirstChild = {read=_scw_Get_FirstChild};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_DiagramNode _scw_Get_LastChild() { _di_DiagramNode r; HRESULT hr = Get_LastChild(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_DiagramNode LastChild = {read=_scw_Get_LastChild};
};

__dispinterface DiagramNodeChildrenDisp;
typedef System::DelphiInterface<DiagramNodeChildrenDisp> _di_DiagramNodeChildrenDisp;
__dispinterface INTERFACE_UUID("{000209EA-0000-0000-C000-000000000046}") DiagramNodeChildrenDisp  : public IDispatch 
{
	
};

__interface DiagramNodes;
typedef System::DelphiInterface<DiagramNodes> _di_DiagramNodes;
__interface INTERFACE_UUID("{000209EB-0000-0000-C000-000000000046}") DiagramNodes  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_DiagramNode &Item_result) = 0 ;
	virtual HRESULT __safecall SelectAll(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface DiagramNodesDisp;
typedef System::DelphiInterface<DiagramNodesDisp> _di_DiagramNodesDisp;
__dispinterface INTERFACE_UUID("{000209EB-0000-0000-C000-000000000046}") DiagramNodesDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209EC-0000-0000-C000-000000000046}") Diagram  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Nodes(_di_DiagramNodes &Get_Nodes_result) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Get_AutoLayout(Activex::TOleEnum &Get_AutoLayout_result) = 0 ;
	virtual HRESULT __safecall Set_AutoLayout(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Reverse(Activex::TOleEnum &Get_Reverse_result) = 0 ;
	virtual HRESULT __safecall Set_Reverse(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_AutoFormat(Activex::TOleEnum &Get_AutoFormat_result) = 0 ;
	virtual HRESULT __safecall Set_AutoFormat(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Convert(Activex::TOleEnum Type_) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_DiagramNodes _scw_Get_Nodes() { _di_DiagramNodes r; HRESULT hr = Get_Nodes(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_DiagramNodes Nodes = {read=_scw_Get_Nodes};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_AutoLayout() { Activex::TOleEnum r; HRESULT hr = Get_AutoLayout(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum AutoLayout = {read=_scw_Get_AutoLayout, write=Set_AutoLayout};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Reverse() { Activex::TOleEnum r; HRESULT hr = Get_Reverse(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Reverse = {read=_scw_Get_Reverse, write=Set_Reverse};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_AutoFormat() { Activex::TOleEnum r; HRESULT hr = Get_AutoFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum AutoFormat = {read=_scw_Get_AutoFormat, write=Set_AutoFormat};
};

__dispinterface DiagramDisp;
typedef System::DelphiInterface<DiagramDisp> _di_DiagramDisp;
__dispinterface INTERFACE_UUID("{000209EC-0000-0000-C000-000000000046}") DiagramDisp  : public IDispatch 
{
	
};

__interface CustomProperty;
typedef System::DelphiInterface<CustomProperty> _di_CustomProperty;
__interface INTERFACE_UUID("{B923FDE0-F08C-11D3-91B0-00105A0A19FD}") CustomProperty  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Get_Value(WideString &Get_Value_result) = 0 ;
	virtual HRESULT __safecall Set_Value(const WideString prop) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Value() { WideString r; HRESULT hr = Get_Value(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Value = {read=_scw_Get_Value, write=Set_Value};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface CustomPropertyDisp;
typedef System::DelphiInterface<CustomPropertyDisp> _di_CustomPropertyDisp;
__dispinterface INTERFACE_UUID("{B923FDE0-F08C-11D3-91B0-00105A0A19FD}") CustomPropertyDisp  : public IDispatch 
{
	
};

__interface CustomProperties;
typedef System::DelphiInterface<CustomProperties> _di_CustomProperties;
__interface INTERFACE_UUID("{B923FDE1-F08C-11D3-91B0-00105A0A19FD}") CustomProperties  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_CustomProperty &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const WideString Name, const WideString Value, _di_CustomProperty &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface CustomPropertiesDisp;
typedef System::DelphiInterface<CustomPropertiesDisp> _di_CustomPropertiesDisp;
__dispinterface INTERFACE_UUID("{B923FDE1-F08C-11D3-91B0-00105A0A19FD}") CustomPropertiesDisp  : public IDispatch 
{
	
};

__interface SmartTag;
typedef System::DelphiInterface<SmartTag> _di_SmartTag;
__interface INTERFACE_UUID("{000209ED-0000-0000-C000-000000000046}") SmartTag  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Get_XML(WideString &Get_XML_result) = 0 ;
	virtual HRESULT __safecall Get_Range(_di_Range &Get_Range_result) = 0 ;
	virtual HRESULT __safecall Get_DownloadURL(WideString &Get_DownloadURL_result) = 0 ;
	virtual HRESULT __safecall Get_Properties(_di_CustomProperties &Get_Properties_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Select(void) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_XML() { WideString r; HRESULT hr = Get_XML(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString XML = {read=_scw_Get_XML};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Range _scw_Get_Range() { _di_Range r; HRESULT hr = Get_Range(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Range Range = {read=_scw_Get_Range};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_DownloadURL() { WideString r; HRESULT hr = Get_DownloadURL(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString DownloadURL = {read=_scw_Get_DownloadURL};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_CustomProperties _scw_Get_Properties() { _di_CustomProperties r; HRESULT hr = Get_Properties(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_CustomProperties Properties = {read=_scw_Get_Properties};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface SmartTagDisp;
typedef System::DelphiInterface<SmartTagDisp> _di_SmartTagDisp;
__dispinterface INTERFACE_UUID("{000209ED-0000-0000-C000-000000000046}") SmartTagDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{000209EE-0000-0000-C000-000000000046}") SmartTags  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_SmartTag &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const WideString Name, OleVariant &Range, OleVariant &Properties, _di_SmartTag &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface SmartTagsDisp;
typedef System::DelphiInterface<SmartTagsDisp> _di_SmartTagsDisp;
__dispinterface INTERFACE_UUID("{000209EE-0000-0000-C000-000000000046}") SmartTagsDisp  : public IDispatch 
{
	
};

__interface StyleSheet;
typedef System::DelphiInterface<StyleSheet> _di_StyleSheet;
__interface INTERFACE_UUID("{000209EF-0000-0000-C000-000000000046}") StyleSheet  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_FullName(WideString &Get_FullName_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Get_Path(WideString &Get_Path_result) = 0 ;
	virtual HRESULT __safecall Get_Type_(Activex::TOleEnum &Get_Type__result) = 0 ;
	virtual HRESULT __safecall Set_Type_(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Title(WideString &Get_Title_result) = 0 ;
	virtual HRESULT __safecall Set_Title(const WideString prop) = 0 ;
	virtual HRESULT __safecall Move(Activex::TOleEnum Precedence) = 0 ;
	virtual HRESULT __safecall Delete(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_FullName() { WideString r; HRESULT hr = Get_FullName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString FullName = {read=_scw_Get_FullName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Path() { WideString r; HRESULT hr = Get_Path(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Path = {read=_scw_Get_Path};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Type_() { Activex::TOleEnum r; HRESULT hr = Get_Type_(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Type_ = {read=_scw_Get_Type_, write=Set_Type_};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Title() { WideString r; HRESULT hr = Get_Title(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Title = {read=_scw_Get_Title, write=Set_Title};
};

__dispinterface StyleSheetDisp;
typedef System::DelphiInterface<StyleSheetDisp> _di_StyleSheetDisp;
__dispinterface INTERFACE_UUID("{000209EF-0000-0000-C000-000000000046}") StyleSheetDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{07B7CC7E-E66C-11D3-9454-00105AA31A08}") StyleSheets  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_StyleSheet &Item_result) = 0 ;
	virtual HRESULT __safecall Add(const WideString FileName, Activex::TOleEnum LinkType, const WideString Title, Activex::TOleEnum Precedence, _di_StyleSheet &Add_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface StyleSheetsDisp;
typedef System::DelphiInterface<StyleSheetsDisp> _di_StyleSheetsDisp;
__dispinterface INTERFACE_UUID("{07B7CC7E-E66C-11D3-9454-00105AA31A08}") StyleSheetsDisp  : public IDispatch 
{
	
};

__interface MappedDataField;
typedef System::DelphiInterface<MappedDataField> _di_MappedDataField;
__interface INTERFACE_UUID("{5D311669-EA51-11D3-87CC-00105AA31A34}") MappedDataField  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Index(int &Get_Index_result) = 0 ;
	virtual HRESULT __safecall Get_DataFieldName(WideString &Get_DataFieldName_result) = 0 ;
	virtual HRESULT __safecall Get_Name(WideString &Get_Name_result) = 0 ;
	virtual HRESULT __safecall Get_Value(WideString &Get_Value_result) = 0 ;
	virtual HRESULT __safecall Get_DataFieldIndex(int &Get_DataFieldIndex_result) = 0 ;
	virtual HRESULT __safecall Set_DataFieldIndex(int prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Index() { int r; HRESULT hr = Get_Index(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Index = {read=_scw_Get_Index};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_DataFieldName() { WideString r; HRESULT hr = Get_DataFieldName(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString DataFieldName = {read=_scw_Get_DataFieldName};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Name() { WideString r; HRESULT hr = Get_Name(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Name = {read=_scw_Get_Name};
	#pragma option push -w-inl
	/* safecall wrapper */ inline WideString _scw_Get_Value() { WideString r; HRESULT hr = Get_Value(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property WideString Value = {read=_scw_Get_Value};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_DataFieldIndex() { int r; HRESULT hr = Get_DataFieldIndex(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int DataFieldIndex = {read=_scw_Get_DataFieldIndex, write=Set_DataFieldIndex};
};

__dispinterface MappedDataFieldDisp;
typedef System::DelphiInterface<MappedDataFieldDisp> _di_MappedDataFieldDisp;
__dispinterface INTERFACE_UUID("{5D311669-EA51-11D3-87CC-00105AA31A34}") MappedDataFieldDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{799A6814-EA41-11D3-87CC-00105AA31A34}") MappedDataFields  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Item(Activex::TOleEnum Index, _di_MappedDataField &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
};

__dispinterface MappedDataFieldsDisp;
typedef System::DelphiInterface<MappedDataFieldsDisp> _di_MappedDataFieldsDisp;
__dispinterface INTERFACE_UUID("{799A6814-EA41-11D3-87CC-00105AA31A34}") MappedDataFieldsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{396F9073-F9FD-11D3-8EA0-0050049A1A01}") CanvasShapes  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_Shape &Item_result) = 0 ;
	virtual HRESULT __safecall AddCallout(Activex::TOleEnum Type_, float Left, float Top, float Width, float Height, _di_Shape &AddCallout_result) = 0 ;
	virtual HRESULT __safecall AddConnector(Activex::TOleEnum Type_, float BeginX, float BeginY, float EndX, float EndY, _di_Shape &AddConnector_result) = 0 ;
	virtual HRESULT __safecall AddCurve(OleVariant &SafeArrayOfPoints, _di_Shape &AddCurve_result) = 0 ;
	virtual HRESULT __safecall AddLabel(Activex::TOleEnum Orientation, float Left, float Top, float Width, float Height, _di_Shape &AddLabel_result) = 0 ;
	virtual HRESULT __safecall AddLine(float BeginX, float BeginY, float EndX, float EndY, _di_Shape &AddLine_result) = 0 ;
	virtual HRESULT __safecall AddPicture(const WideString FileName, OleVariant &LinkToFile, OleVariant &SaveWithDocument, OleVariant &Left, OleVariant &Top, OleVariant &Width, OleVariant &Height, _di_Shape &AddPicture_result) = 0 ;
	virtual HRESULT __safecall AddPolyline(OleVariant &SafeArrayOfPoints, _di_Shape &AddPolyline_result) = 0 ;
	virtual HRESULT __safecall AddShape(int Type_, float Left, float Top, float Width, float Height, _di_Shape &AddShape_result) = 0 ;
	virtual HRESULT __safecall AddTextEffect(Activex::TOleEnum PresetTextEffect, const WideString Text, const WideString FontName, float FontSize, Activex::TOleEnum FontBold, Activex::TOleEnum FontItalic, float Left, float Top, _di_Shape &AddTextEffect_result) = 0 ;
	virtual HRESULT __safecall AddTextbox(Activex::TOleEnum Orientation, float Left, float Top, float Width, float Height, _di_Shape &AddTextbox_result) = 0 ;
	virtual HRESULT __safecall BuildFreeform(Activex::TOleEnum EditingType, float X1, float Y1, _di_FreeformBuilder &BuildFreeform_result) = 0 ;
	virtual HRESULT __safecall Range(OleVariant &Index, _di_ShapeRange &Range_result) = 0 ;
	virtual HRESULT __safecall SelectAll(void) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
};

__dispinterface CanvasShapesDisp;
typedef System::DelphiInterface<CanvasShapesDisp> _di_CanvasShapesDisp;
__dispinterface INTERFACE_UUID("{396F9073-F9FD-11D3-8EA0-0050049A1A01}") CanvasShapesDisp  : public IDispatch 
{
	
};

__interface ConditionalStyle;
typedef System::DelphiInterface<ConditionalStyle> _di_ConditionalStyle;
__interface INTERFACE_UUID("{B7564E97-0519-4C68-B400-3803E7C63242}") TableStyle  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_AllowPageBreaks(Word &Get_AllowPageBreaks_result) = 0 ;
	virtual HRESULT __safecall Set_AllowPageBreaks(Word prop) = 0 ;
	virtual HRESULT __safecall Get_Borders(_di_Borders &Get_Borders_result) = 0 ;
	virtual HRESULT __safecall Set_Borders(const _di_Borders prop) = 0 ;
	virtual HRESULT __safecall Get_BottomPadding(float &Get_BottomPadding_result) = 0 ;
	virtual HRESULT __safecall Set_BottomPadding(float prop) = 0 ;
	virtual HRESULT __safecall Get_LeftPadding(float &Get_LeftPadding_result) = 0 ;
	virtual HRESULT __safecall Set_LeftPadding(float prop) = 0 ;
	virtual HRESULT __safecall Get_TopPadding(float &Get_TopPadding_result) = 0 ;
	virtual HRESULT __safecall Set_TopPadding(float prop) = 0 ;
	virtual HRESULT __safecall Get_RightPadding(float &Get_RightPadding_result) = 0 ;
	virtual HRESULT __safecall Set_RightPadding(float prop) = 0 ;
	virtual HRESULT __safecall Get_Alignment(Activex::TOleEnum &Get_Alignment_result) = 0 ;
	virtual HRESULT __safecall Set_Alignment(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_Spacing(float &Get_Spacing_result) = 0 ;
	virtual HRESULT __safecall Set_Spacing(float prop) = 0 ;
	virtual HRESULT __safecall Condition(Activex::TOleEnum ConditionCode, _di_ConditionalStyle &Condition_result) = 0 ;
	virtual HRESULT __safecall Get_TableDirection(Activex::TOleEnum &Get_TableDirection_result) = 0 ;
	virtual HRESULT __safecall Set_TableDirection(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_AllowBreakAcrossPage(int &Get_AllowBreakAcrossPage_result) = 0 ;
	virtual HRESULT __safecall Set_AllowBreakAcrossPage(int prop) = 0 ;
	virtual HRESULT __safecall Get_LeftIndent(float &Get_LeftIndent_result) = 0 ;
	virtual HRESULT __safecall Set_LeftIndent(float prop) = 0 ;
	virtual HRESULT __safecall Get_Shading(_di_Shading &Get_Shading_result) = 0 ;
	virtual HRESULT __safecall Get_RowStripe(int &Get_RowStripe_result) = 0 ;
	virtual HRESULT __safecall Set_RowStripe(int prop) = 0 ;
	virtual HRESULT __safecall Get_ColumnStripe(int &Get_ColumnStripe_result) = 0 ;
	virtual HRESULT __safecall Set_ColumnStripe(int prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_AllowPageBreaks() { Word r; HRESULT hr = Get_AllowPageBreaks(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word AllowPageBreaks = {read=_scw_Get_AllowPageBreaks, write=Set_AllowPageBreaks};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Borders _scw_Get_Borders() { _di_Borders r; HRESULT hr = Get_Borders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Borders Borders = {read=_scw_Get_Borders, write=Set_Borders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_BottomPadding() { float r; HRESULT hr = Get_BottomPadding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float BottomPadding = {read=_scw_Get_BottomPadding, write=Set_BottomPadding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_LeftPadding() { float r; HRESULT hr = Get_LeftPadding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float LeftPadding = {read=_scw_Get_LeftPadding, write=Set_LeftPadding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_TopPadding() { float r; HRESULT hr = Get_TopPadding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float TopPadding = {read=_scw_Get_TopPadding, write=Set_TopPadding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_RightPadding() { float r; HRESULT hr = Get_RightPadding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float RightPadding = {read=_scw_Get_RightPadding, write=Set_RightPadding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Alignment() { Activex::TOleEnum r; HRESULT hr = Get_Alignment(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Alignment = {read=_scw_Get_Alignment, write=Set_Alignment};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_Spacing() { float r; HRESULT hr = Get_Spacing(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float Spacing = {read=_scw_Get_Spacing, write=Set_Spacing};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_TableDirection() { Activex::TOleEnum r; HRESULT hr = Get_TableDirection(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum TableDirection = {read=_scw_Get_TableDirection, write=Set_TableDirection};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_AllowBreakAcrossPage() { int r; HRESULT hr = Get_AllowBreakAcrossPage(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int AllowBreakAcrossPage = {read=_scw_Get_AllowBreakAcrossPage, write=Set_AllowBreakAcrossPage};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_LeftIndent() { float r; HRESULT hr = Get_LeftIndent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float LeftIndent = {read=_scw_Get_LeftIndent, write=Set_LeftIndent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shading _scw_Get_Shading() { _di_Shading r; HRESULT hr = Get_Shading(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shading Shading = {read=_scw_Get_Shading};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_RowStripe() { int r; HRESULT hr = Get_RowStripe(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int RowStripe = {read=_scw_Get_RowStripe, write=Set_RowStripe};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_ColumnStripe() { int r; HRESULT hr = Get_ColumnStripe(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int ColumnStripe = {read=_scw_Get_ColumnStripe, write=Set_ColumnStripe};
};

__dispinterface TableStyleDisp;
typedef System::DelphiInterface<TableStyleDisp> _di_TableStyleDisp;
__dispinterface INTERFACE_UUID("{B7564E97-0519-4C68-B400-3803E7C63242}") TableStyleDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{1498F56D-ED33-41F9-B37B-EF30E50B08AC}") ConditionalStyle  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Shading(_di_Shading &Get_Shading_result) = 0 ;
	virtual HRESULT __safecall Get_Borders(_di_Borders &Get_Borders_result) = 0 ;
	virtual HRESULT __safecall Set_Borders(const _di_Borders prop) = 0 ;
	virtual HRESULT __safecall Get_BottomPadding(float &Get_BottomPadding_result) = 0 ;
	virtual HRESULT __safecall Set_BottomPadding(float prop) = 0 ;
	virtual HRESULT __safecall Get_TopPadding(float &Get_TopPadding_result) = 0 ;
	virtual HRESULT __safecall Set_TopPadding(float prop) = 0 ;
	virtual HRESULT __safecall Get_LeftPadding(float &Get_LeftPadding_result) = 0 ;
	virtual HRESULT __safecall Set_LeftPadding(float prop) = 0 ;
	virtual HRESULT __safecall Get_RightPadding(float &Get_RightPadding_result) = 0 ;
	virtual HRESULT __safecall Set_RightPadding(float prop) = 0 ;
	virtual HRESULT __safecall Get_ParagraphFormat(_di__ParagraphFormat &Get_ParagraphFormat_result) = 0 ;
	virtual HRESULT __safecall Set_ParagraphFormat(const _di__ParagraphFormat prop) = 0 ;
	virtual HRESULT __safecall Get_Font(_di__Font &Get_Font_result) = 0 ;
	virtual HRESULT __safecall Set_Font(const _di__Font prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Shading _scw_Get_Shading() { _di_Shading r; HRESULT hr = Get_Shading(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Shading Shading = {read=_scw_Get_Shading};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_Borders _scw_Get_Borders() { _di_Borders r; HRESULT hr = Get_Borders(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_Borders Borders = {read=_scw_Get_Borders, write=Set_Borders};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_BottomPadding() { float r; HRESULT hr = Get_BottomPadding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float BottomPadding = {read=_scw_Get_BottomPadding, write=Set_BottomPadding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_TopPadding() { float r; HRESULT hr = Get_TopPadding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float TopPadding = {read=_scw_Get_TopPadding, write=Set_TopPadding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_LeftPadding() { float r; HRESULT hr = Get_LeftPadding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float LeftPadding = {read=_scw_Get_LeftPadding, write=Set_LeftPadding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline float _scw_Get_RightPadding() { float r; HRESULT hr = Get_RightPadding(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property float RightPadding = {read=_scw_Get_RightPadding, write=Set_RightPadding};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__ParagraphFormat _scw_Get_ParagraphFormat() { _di__ParagraphFormat r; HRESULT hr = Get_ParagraphFormat(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__ParagraphFormat ParagraphFormat = {read=_scw_Get_ParagraphFormat, write=Set_ParagraphFormat};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Font _scw_Get_Font() { _di__Font r; HRESULT hr = Get_Font(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Font Font = {read=_scw_Get_Font, write=Set_Font};
};

__dispinterface ConditionalStyleDisp;
typedef System::DelphiInterface<ConditionalStyleDisp> _di_ConditionalStyleDisp;
__dispinterface INTERFACE_UUID("{1498F56D-ED33-41F9-B37B-EF30E50B08AC}") ConditionalStyleDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{BEA85A24-D7DA-4F3D-B58C-ED90FB01D615}") FootnoteOptions  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Location(Activex::TOleEnum &Get_Location_result) = 0 ;
	virtual HRESULT __safecall Set_Location(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_NumberStyle(Activex::TOleEnum &Get_NumberStyle_result) = 0 ;
	virtual HRESULT __safecall Set_NumberStyle(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_StartingNumber(int &Get_StartingNumber_result) = 0 ;
	virtual HRESULT __safecall Set_StartingNumber(int prop) = 0 ;
	virtual HRESULT __safecall Get_NumberingRule(Activex::TOleEnum &Get_NumberingRule_result) = 0 ;
	virtual HRESULT __safecall Set_NumberingRule(Activex::TOleEnum prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Location() { Activex::TOleEnum r; HRESULT hr = Get_Location(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Location = {read=_scw_Get_Location, write=Set_Location};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_NumberStyle() { Activex::TOleEnum r; HRESULT hr = Get_NumberStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum NumberStyle = {read=_scw_Get_NumberStyle, write=Set_NumberStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_StartingNumber() { int r; HRESULT hr = Get_StartingNumber(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int StartingNumber = {read=_scw_Get_StartingNumber, write=Set_StartingNumber};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_NumberingRule() { Activex::TOleEnum r; HRESULT hr = Get_NumberingRule(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum NumberingRule = {read=_scw_Get_NumberingRule, write=Set_NumberingRule};
};

__dispinterface FootnoteOptionsDisp;
typedef System::DelphiInterface<FootnoteOptionsDisp> _di_FootnoteOptionsDisp;
__dispinterface INTERFACE_UUID("{BEA85A24-D7DA-4F3D-B58C-ED90FB01D615}") FootnoteOptionsDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{BF043168-F4DE-4E7C-B206-741A8B3EF71A}") EndnoteOptions  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Location(Activex::TOleEnum &Get_Location_result) = 0 ;
	virtual HRESULT __safecall Set_Location(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_NumberStyle(Activex::TOleEnum &Get_NumberStyle_result) = 0 ;
	virtual HRESULT __safecall Set_NumberStyle(Activex::TOleEnum prop) = 0 ;
	virtual HRESULT __safecall Get_StartingNumber(int &Get_StartingNumber_result) = 0 ;
	virtual HRESULT __safecall Set_StartingNumber(int prop) = 0 ;
	virtual HRESULT __safecall Get_NumberingRule(Activex::TOleEnum &Get_NumberingRule_result) = 0 ;
	virtual HRESULT __safecall Set_NumberingRule(Activex::TOleEnum prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_Location() { Activex::TOleEnum r; HRESULT hr = Get_Location(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum Location = {read=_scw_Get_Location, write=Set_Location};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_NumberStyle() { Activex::TOleEnum r; HRESULT hr = Get_NumberStyle(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum NumberStyle = {read=_scw_Get_NumberStyle, write=Set_NumberStyle};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_StartingNumber() { int r; HRESULT hr = Get_StartingNumber(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int StartingNumber = {read=_scw_Get_StartingNumber, write=Set_StartingNumber};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Activex::TOleEnum _scw_Get_NumberingRule() { Activex::TOleEnum r; HRESULT hr = Get_NumberingRule(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Activex::TOleEnum NumberingRule = {read=_scw_Get_NumberingRule, write=Set_NumberingRule};
};

__dispinterface EndnoteOptionsDisp;
typedef System::DelphiInterface<EndnoteOptionsDisp> _di_EndnoteOptionsDisp;
__dispinterface INTERFACE_UUID("{BF043168-F4DE-4E7C-B206-741A8B3EF71A}") EndnoteOptionsDisp  : public IDispatch 
{
	
};

__interface Reviewer;
typedef System::DelphiInterface<Reviewer> _di_Reviewer;
__interface INTERFACE_UUID("{12DCDC9A-5418-48A3-BBE6-EB57BAE275E8}") Reviewers  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Item(OleVariant &Index, _di_Reviewer &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
};

__dispinterface ReviewersDisp;
typedef System::DelphiInterface<ReviewersDisp> _di_ReviewersDisp;
__dispinterface INTERFACE_UUID("{12DCDC9A-5418-48A3-BBE6-EB57BAE275E8}") ReviewersDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{47CEF4AE-DC32-4220-8AA5-19CCC0E6633A}") Reviewer  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Visible(Word &Get_Visible_result) = 0 ;
	virtual HRESULT __safecall Set_Visible(Word prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Visible() { Word r; HRESULT hr = Get_Visible(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Visible = {read=_scw_Get_Visible, write=Set_Visible};
};

__dispinterface ReviewerDisp;
typedef System::DelphiInterface<ReviewerDisp> _di_ReviewerDisp;
__dispinterface INTERFACE_UUID("{47CEF4AE-DC32-4220-8AA5-19CCC0E6633A}") ReviewerDisp  : public IDispatch 
{
	
};

__interface TaskPane;
typedef System::DelphiInterface<TaskPane> _di_TaskPane;
__interface INTERFACE_UUID("{B9F1A4E2-0D0A-43B7-8495-139E7ACBD840}") TaskPane  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Get_Visible(Word &Get_Visible_result) = 0 ;
	virtual HRESULT __safecall Set_Visible(Word prop) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
	#pragma option push -w-inl
	/* safecall wrapper */ inline Word _scw_Get_Visible() { Word r; HRESULT hr = Get_Visible(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property Word Visible = {read=_scw_Get_Visible, write=Set_Visible};
};

__dispinterface TaskPaneDisp;
typedef System::DelphiInterface<TaskPaneDisp> _di_TaskPaneDisp;
__dispinterface INTERFACE_UUID("{B9F1A4E2-0D0A-43B7-8495-139E7ACBD840}") TaskPaneDisp  : public IDispatch 
{
	
};

__interface INTERFACE_UUID("{E6AAEC05-E543-4085-BA92-9BF7D2474F5C}") TaskPanes  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Get__NewEnum(System::_di_IInterface &Get__NewEnum_result) = 0 ;
	virtual HRESULT __safecall Get_Count(int &Get_Count_result) = 0 ;
	virtual HRESULT __safecall Get_Application(_di__Application &Get_Application_result) = 0 ;
	virtual HRESULT __safecall Get_Creator(int &Get_Creator_result) = 0 ;
	virtual HRESULT __safecall Get_Parent(_di_IDispatch &Get_Parent_result) = 0 ;
	virtual HRESULT __safecall Item(Activex::TOleEnum Index, _di_TaskPane &Item_result) = 0 ;
	#pragma option push -w-inl
	/* safecall wrapper */ inline System::_di_IInterface _scw_Get__NewEnum() { System::_di_IInterface r; HRESULT hr = Get__NewEnum(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property System::_di_IInterface _NewEnum = {read=_scw_Get__NewEnum};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Count() { int r; HRESULT hr = Get_Count(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Count = {read=_scw_Get_Count};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di__Application _scw_Get_Application() { _di__Application r; HRESULT hr = Get_Application(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di__Application Application_ = {read=_scw_Get_Application};
	#pragma option push -w-inl
	/* safecall wrapper */ inline int _scw_Get_Creator() { int r; HRESULT hr = Get_Creator(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property int Creator = {read=_scw_Get_Creator};
	#pragma option push -w-inl
	/* safecall wrapper */ inline _di_IDispatch _scw_Get_Parent() { _di_IDispatch r; HRESULT hr = Get_Parent(r); System::CheckSafecallResult(hr); return r; }
	#pragma option pop
	__property _di_IDispatch Parent = {read=_scw_Get_Parent};
};

__dispinterface TaskPanesDisp;
typedef System::DelphiInterface<TaskPanesDisp> _di_TaskPanesDisp;
__dispinterface INTERFACE_UUID("{E6AAEC05-E543-4085-BA92-9BF7D2474F5C}") TaskPanesDisp  : public IDispatch 
{
	
};

__interface IApplicationEvents3;
typedef System::DelphiInterface<IApplicationEvents3> _di_IApplicationEvents3;
__interface INTERFACE_UUID("{00020A00-0001-0000-C000-000000000046}") IApplicationEvents3  : public IDispatch 
{
	
public:
	virtual HRESULT __safecall Startup(void) = 0 ;
	virtual HRESULT __safecall Quit(void) = 0 ;
	virtual HRESULT __safecall DocumentChange(void) = 0 ;
	virtual HRESULT __safecall DocumentOpen(const _di__Document Doc) = 0 ;
	virtual HRESULT __safecall DocumentBeforeClose(const _di__Document Doc, Word &Cancel) = 0 ;
	virtual HRESULT __safecall DocumentBeforePrint(const _di__Document Doc, Word &Cancel) = 0 ;
	virtual HRESULT __safecall DocumentBeforeSave(const _di__Document Doc, Word &SaveAsUI, Word &Cancel) = 0 ;
	virtual HRESULT __safecall NewDocument(const _di__Document Doc) = 0 ;
	virtual HRESULT __safecall WindowActivate(const _di__Document Doc, const _di_Window Wn) = 0 ;
	virtual HRESULT __safecall WindowDeactivate(const _di__Document Doc, const _di_Window Wn) = 0 ;
	virtual HRESULT __safecall WindowSelectionChange(const _di_Selection Sel) = 0 ;
	virtual HRESULT __safecall WindowBeforeRightClick(const _di_Selection Sel, Word &Cancel) = 0 ;
	virtual HRESULT __safecall WindowBeforeDoubleClick(const _di_Selection Sel, Word &Cancel) = 0 ;
	virtual HRESULT __safecall EPostagePropertyDialog(const _di__Document Doc) = 0 ;
	virtual HRESULT __safecall EPostageInsert(const _di__Document Doc) = 0 ;
	virtual HRESULT __safecall MailMergeAfterMerge(const _di__Document Doc, const _di__Document DocResult) = 0 ;
	virtual HRESULT __safecall MailMergeAfterRecordMerge(const _di__Document Doc) = 0 ;
	virtual HRESULT __safecall MailMergeBeforeMerge(const _di__Document Doc, int StartRecord, int EndRecord, Word &Cancel) = 0 ;
	virtual HRESULT __safecall MailMergeBeforeRecordMerge(const _di__Document Doc, Word &Cancel) = 0 ;
	virtual HRESULT __safecall MailMergeDataSourceLoad(const _di__Document Doc) = 0 ;
	virtual HRESULT __safecall MailMergeDataSourceValidate(const _di__Document Doc, Word &Handled) = 0 ;
	virtual HRESULT __safecall MailMergeWizardSendToCustom(const _di__Document Doc) = 0 ;
	virtual HRESULT __safecall MailMergeWizardStateChange(const _di__Document Doc, int &FromState, int &ToState, Word &Handled) = 0 ;
	virtual HRESULT __safecall WindowSize(const _di__Document Doc, const _di_Window Wn) = 0 ;
};

__dispinterface IApplicationEvents3Disp;
typedef System::DelphiInterface<IApplicationEvents3Disp> _di_IApplicationEvents3Disp;
__dispinterface INTERFACE_UUID("{00020A00-0001-0000-C000-000000000046}") IApplicationEvents3Disp  : public IDispatch 
{
	
};

class DELPHICLASS CoWordDocument;
class PASCALIMPLEMENTATION CoWordDocument : public System::TObject 
{
	typedef System::TObject inherited;
	
public:
	/*         class method */ static _di__Document __fastcall Create(TMetaClass* vmt);
	/*         class method */ static _di__Document __fastcall CreateRemote(TMetaClass* vmt, const AnsiString MachineName);
public:
	#pragma option push -w-inl
	/* TObject.Create */ inline __fastcall CoWordDocument(void) : System::TObject() { }
	#pragma option pop
	#pragma option push -w-inl
	/* TObject.Destroy */ inline __fastcall virtual ~CoWordDocument(void) { }
	#pragma option pop
	
};


class DELPHICLASS CoWordFont;
class PASCALIMPLEMENTATION CoWordFont : public System::TObject 
{
	typedef System::TObject inherited;
	
public:
	/*         class method */ static _di__Font __fastcall Create(TMetaClass* vmt);
	/*         class method */ static _di__Font __fastcall CreateRemote(TMetaClass* vmt, const AnsiString MachineName);
public:
	#pragma option push -w-inl
	/* TObject.Create */ inline __fastcall CoWordFont(void) : System::TObject() { }
	#pragma option pop
	#pragma option push -w-inl
	/* TObject.Destroy */ inline __fastcall virtual ~CoWordFont(void) { }
	#pragma option pop
	
};


class DELPHICLASS CoWordParagraphFormat;
class PASCALIMPLEMENTATION CoWordParagraphFormat : public System::TObject 
{
	typedef System::TObject inherited;
	
public:
	/*         class method */ static _di__ParagraphFormat __fastcall Create(TMetaClass* vmt);
	/*         class method */ static _di__ParagraphFormat __fastcall CreateRemote(TMetaClass* vmt, const AnsiString MachineName);
public:
	#pragma option push -w-inl
	/* TObject.Create */ inline __fastcall CoWordParagraphFormat(void) : System::TObject() { }
	#pragma option pop
	#pragma option push -w-inl
	/* TObject.Destroy */ inline __fastcall virtual ~CoWordParagraphFormat(void) { }
	#pragma option pop
	
};


class DELPHICLASS CoWordOLEControl;
class PASCALIMPLEMENTATION CoWordOLEControl : public System::TObject 
{
	typedef System::TObject inherited;
	
public:
	/*         class method */ static _di__OLEControl __fastcall Create(TMetaClass* vmt);
	/*         class method */ static _di__OLEControl __fastcall CreateRemote(TMetaClass* vmt, const AnsiString MachineName);
public:
	#pragma option push -w-inl
	/* TObject.Create */ inline __fastcall CoWordOLEControl(void) : System::TObject() { }
	#pragma option pop
	#pragma option push -w-inl
	/* TObject.Destroy */ inline __fastcall virtual ~CoWordOLEControl(void) { }
	#pragma option pop
	
};


class DELPHICLASS CoWordLetterContent;
class PASCALIMPLEMENTATION CoWordLetterContent : public System::TObject 
{
	typedef System::TObject inherited;
	
public:
	/*         class method */ static _di__LetterContent __fastcall Create(TMetaClass* vmt);
	/*         class method */ static _di__LetterContent __fastcall CreateRemote(TMetaClass* vmt, const AnsiString MachineName);
public:
	#pragma option push -w-inl
	/* TObject.Create */ inline __fastcall CoWordLetterContent(void) : System::TObject() { }
	#pragma option pop
	#pragma option push -w-inl
	/* TObject.Destroy */ inline __fastcall virtual ~CoWordLetterContent(void) { }
	#pragma option pop
	
};


class DELPHICLASS CoWordApplication;
class PASCALIMPLEMENTATION CoWordApplication : public System::TObject 
{
	typedef System::TObject inherited;
	
public:
	/*         class method */ static _di__Application __fastcall Create(TMetaClass* vmt);
	/*         class method */ static _di__Application __fastcall CreateRemote(TMetaClass* vmt, const AnsiString MachineName);
public:
	#pragma option push -w-inl
	/* TObject.Create */ inline __fastcall CoWordApplication(void) : System::TObject() { }
	#pragma option pop
	#pragma option push -w-inl
	/* TObject.Destroy */ inline __fastcall virtual ~CoWordApplication(void) { }
	#pragma option pop
	
};


//-- var, const, procedure ---------------------------------------------------
static const Shortint WordMajorVersion = 0x8;
static const Shortint WordMinorVersion = 0x2;
extern PACKAGE GUID LIBID_Word;
extern PACKAGE GUID IID__Application;
extern PACKAGE GUID IID__Global;
extern PACKAGE GUID IID_FontNames;
extern PACKAGE GUID IID_Languages;
extern PACKAGE GUID IID_Language;
extern PACKAGE GUID IID_Documents;
extern PACKAGE GUID IID__Document;
extern PACKAGE GUID IID_Template;
extern PACKAGE GUID IID_Templates;
extern PACKAGE GUID IID_RoutingSlip;
extern PACKAGE GUID IID_Bookmark;
extern PACKAGE GUID IID_Bookmarks;
extern PACKAGE GUID IID_Variable;
extern PACKAGE GUID IID_Variables;
extern PACKAGE GUID IID_RecentFile;
extern PACKAGE GUID IID_RecentFiles;
extern PACKAGE GUID IID_Window;
extern PACKAGE GUID IID_Windows;
extern PACKAGE GUID IID_Pane;
extern PACKAGE GUID IID_Panes;
extern PACKAGE GUID IID_Range;
extern PACKAGE GUID IID_ListFormat;
extern PACKAGE GUID IID_Find;
extern PACKAGE GUID IID_Replacement;
extern PACKAGE GUID IID_Characters;
extern PACKAGE GUID IID_Words;
extern PACKAGE GUID IID_Sentences;
extern PACKAGE GUID IID_Sections;
extern PACKAGE GUID IID_Section;
extern PACKAGE GUID IID_Paragraphs;
extern PACKAGE GUID IID_Paragraph;
extern PACKAGE GUID IID_DropCap;
extern PACKAGE GUID IID_TabStops;
extern PACKAGE GUID IID_TabStop;
extern PACKAGE GUID IID__ParagraphFormat;
extern PACKAGE GUID IID__Font;
extern PACKAGE GUID IID_Table;
extern PACKAGE GUID IID_Row;
extern PACKAGE GUID IID_Column;
extern PACKAGE GUID IID_Cell;
extern PACKAGE GUID IID_Tables;
extern PACKAGE GUID IID_Rows;
extern PACKAGE GUID IID_Columns;
extern PACKAGE GUID IID_Cells;
extern PACKAGE GUID IID_AutoCorrect;
extern PACKAGE GUID IID_AutoCorrectEntries;
extern PACKAGE GUID IID_AutoCorrectEntry;
extern PACKAGE GUID IID_FirstLetterExceptions;
extern PACKAGE GUID IID_FirstLetterException;
extern PACKAGE GUID IID_TwoInitialCapsExceptions;
extern PACKAGE GUID IID_TwoInitialCapsException;
extern PACKAGE GUID IID_Footnotes;
extern PACKAGE GUID IID_Endnotes;
extern PACKAGE GUID IID_Comments;
extern PACKAGE GUID IID_Footnote;
extern PACKAGE GUID IID_Endnote;
extern PACKAGE GUID IID_Comment;
extern PACKAGE GUID IID_Borders;
extern PACKAGE GUID IID_Border;
extern PACKAGE GUID IID_Shading;
extern PACKAGE GUID IID_TextRetrievalMode;
extern PACKAGE GUID IID_AutoTextEntries;
extern PACKAGE GUID IID_AutoTextEntry;
extern PACKAGE GUID IID_System;
extern PACKAGE GUID IID_OLEFormat;
extern PACKAGE GUID IID_LinkFormat;
extern PACKAGE GUID IID__OLEControl;
extern PACKAGE GUID IID_Fields;
extern PACKAGE GUID IID_Field;
extern PACKAGE GUID IID_Browser;
extern PACKAGE GUID IID_Styles;
extern PACKAGE GUID IID_Style;
extern PACKAGE GUID IID_Frames;
extern PACKAGE GUID IID_Frame;
extern PACKAGE GUID IID_FormFields;
extern PACKAGE GUID IID_FormField;
extern PACKAGE GUID IID_TextInput;
extern PACKAGE GUID IID_CheckBox;
extern PACKAGE GUID IID_DropDown;
extern PACKAGE GUID IID_ListEntries;
extern PACKAGE GUID IID_ListEntry;
extern PACKAGE GUID IID_TablesOfFigures;
extern PACKAGE GUID IID_TableOfFigures;
extern PACKAGE GUID IID_MailMerge;
extern PACKAGE GUID IID_MailMergeFields;
extern PACKAGE GUID IID_MailMergeField;
extern PACKAGE GUID IID_MailMergeDataSource;
extern PACKAGE GUID IID_MailMergeFieldNames;
extern PACKAGE GUID IID_MailMergeFieldName;
extern PACKAGE GUID IID_MailMergeDataFields;
extern PACKAGE GUID IID_MailMergeDataField;
extern PACKAGE GUID IID_Envelope;
extern PACKAGE GUID IID_MailingLabel;
extern PACKAGE GUID IID_CustomLabels;
extern PACKAGE GUID IID_CustomLabel;
extern PACKAGE GUID IID_TablesOfContents;
extern PACKAGE GUID IID_TableOfContents;
extern PACKAGE GUID IID_TablesOfAuthorities;
extern PACKAGE GUID IID_TableOfAuthorities;
extern PACKAGE GUID IID_Dialogs;
extern PACKAGE GUID IID_Dialog;
extern PACKAGE GUID IID_PageSetup;
extern PACKAGE GUID IID_LineNumbering;
extern PACKAGE GUID IID_TextColumns;
extern PACKAGE GUID IID_TextColumn;
extern PACKAGE GUID IID_Selection;
extern PACKAGE GUID IID_TablesOfAuthoritiesCategories;
extern PACKAGE GUID IID_TableOfAuthoritiesCategory;
extern PACKAGE GUID IID_CaptionLabels;
extern PACKAGE GUID IID_CaptionLabel;
extern PACKAGE GUID IID_AutoCaptions;
extern PACKAGE GUID IID_AutoCaption;
extern PACKAGE GUID IID_Indexes;
extern PACKAGE GUID IID_Index;
extern PACKAGE GUID IID_AddIn;
extern PACKAGE GUID IID_AddIns;
extern PACKAGE GUID IID_Revisions;
extern PACKAGE GUID IID_Revision;
extern PACKAGE GUID IID_Task;
extern PACKAGE GUID IID_Tasks;
extern PACKAGE GUID IID_HeadersFooters;
extern PACKAGE GUID IID_HeaderFooter;
extern PACKAGE GUID IID_PageNumbers;
extern PACKAGE GUID IID_PageNumber;
extern PACKAGE GUID IID_Subdocuments;
extern PACKAGE GUID IID_Subdocument;
extern PACKAGE GUID IID_HeadingStyles;
extern PACKAGE GUID IID_HeadingStyle;
extern PACKAGE GUID IID_StoryRanges;
extern PACKAGE GUID IID_ListLevel;
extern PACKAGE GUID IID_ListLevels;
extern PACKAGE GUID IID_ListTemplate;
extern PACKAGE GUID IID_ListTemplates;
extern PACKAGE GUID IID_ListParagraphs;
extern PACKAGE GUID IID_List;
extern PACKAGE GUID IID_Lists;
extern PACKAGE GUID IID_ListGallery;
extern PACKAGE GUID IID_ListGalleries;
extern PACKAGE GUID IID_KeyBindings;
extern PACKAGE GUID IID_KeysBoundTo;
extern PACKAGE GUID IID_KeyBinding;
extern PACKAGE GUID IID_FileConverter;
extern PACKAGE GUID IID_FileConverters;
extern PACKAGE GUID IID_SynonymInfo;
extern PACKAGE GUID IID_Hyperlinks;
extern PACKAGE GUID IID_Hyperlink;
extern PACKAGE GUID IID_Shapes;
extern PACKAGE GUID IID_ShapeRange;
extern PACKAGE GUID IID_GroupShapes;
extern PACKAGE GUID IID_Shape;
extern PACKAGE GUID IID_TextFrame;
extern PACKAGE GUID IID__LetterContent;
extern PACKAGE GUID IID_View;
extern PACKAGE GUID IID_Zoom;
extern PACKAGE GUID IID_Zooms;
extern PACKAGE GUID IID_InlineShape;
extern PACKAGE GUID IID_InlineShapes;
extern PACKAGE GUID IID_SpellingSuggestions;
extern PACKAGE GUID IID_SpellingSuggestion;
extern PACKAGE GUID IID_Dictionaries;
extern PACKAGE GUID IID_HangulHanjaConversionDictionaries;
extern PACKAGE GUID IID_Dictionary;
extern PACKAGE GUID IID_ReadabilityStatistics;
extern PACKAGE GUID IID_ReadabilityStatistic;
extern PACKAGE GUID IID_Versions;
extern PACKAGE GUID IID_Version;
extern PACKAGE GUID IID_Options;
extern PACKAGE GUID IID_MailMessage;
extern PACKAGE GUID IID_ProofreadingErrors;
extern PACKAGE GUID IID_Mailer;
extern PACKAGE GUID IID_WrapFormat;
extern PACKAGE GUID IID_HangulAndAlphabetExceptions;
extern PACKAGE GUID IID_HangulAndAlphabetException;
extern PACKAGE GUID IID_Adjustments;
extern PACKAGE GUID IID_CalloutFormat;
extern PACKAGE GUID IID_ColorFormat;
extern PACKAGE GUID IID_ConnectorFormat;
extern PACKAGE GUID IID_FillFormat;
extern PACKAGE GUID IID_FreeformBuilder;
extern PACKAGE GUID IID_LineFormat;
extern PACKAGE GUID IID_PictureFormat;
extern PACKAGE GUID IID_ShadowFormat;
extern PACKAGE GUID IID_ShapeNode;
extern PACKAGE GUID IID_ShapeNodes;
extern PACKAGE GUID IID_TextEffectFormat;
extern PACKAGE GUID IID_ThreeDFormat;
extern PACKAGE GUID DIID_ApplicationEvents;
extern PACKAGE GUID CLASS_WordGlobal;
extern PACKAGE GUID DIID_ApplicationEvents2;
extern PACKAGE GUID DIID_DocumentEvents;
extern PACKAGE GUID CLASS_WordDocument;
extern PACKAGE GUID CLASS_WordFont;
extern PACKAGE GUID CLASS_WordParagraphFormat;
extern PACKAGE GUID DIID_OCXEvents;
extern PACKAGE GUID CLASS_WordOLEControl;
extern PACKAGE GUID CLASS_WordLetterContent;
extern PACKAGE GUID IID_IApplicationEvents;
extern PACKAGE GUID IID_IApplicationEvents2;
extern PACKAGE GUID DIID_ApplicationEvents3;
extern PACKAGE GUID IID_EmailAuthor;
extern PACKAGE GUID IID_EmailOptions;
extern PACKAGE GUID IID_EmailSignature;
extern PACKAGE GUID IID_Email;
extern PACKAGE GUID IID_HorizontalLineFormat;
extern PACKAGE GUID IID_Frameset;
extern PACKAGE GUID IID_DefaultWebOptions;
extern PACKAGE GUID IID_WebOptions;
extern PACKAGE GUID IID_OtherCorrectionsExceptions;
extern PACKAGE GUID IID_OtherCorrectionsException;
extern PACKAGE GUID IID_EmailSignatureEntries;
extern PACKAGE GUID IID_EmailSignatureEntry;
extern PACKAGE GUID IID_HTMLDivision;
extern PACKAGE GUID IID_HTMLDivisions;
extern PACKAGE GUID IID_DiagramNode;
extern PACKAGE GUID IID_DiagramNodeChildren;
extern PACKAGE GUID IID_DiagramNodes;
extern PACKAGE GUID IID_Diagram;
extern PACKAGE GUID IID_CustomProperty;
extern PACKAGE GUID IID_CustomProperties;
extern PACKAGE GUID IID_SmartTag;
extern PACKAGE GUID IID_SmartTags;
extern PACKAGE GUID IID_StyleSheet;
extern PACKAGE GUID IID_StyleSheets;
extern PACKAGE GUID IID_MappedDataField;
extern PACKAGE GUID IID_MappedDataFields;
extern PACKAGE GUID IID_CanvasShapes;
extern PACKAGE GUID IID_TableStyle;
extern PACKAGE GUID IID_ConditionalStyle;
extern PACKAGE GUID IID_FootnoteOptions;
extern PACKAGE GUID IID_EndnoteOptions;
extern PACKAGE GUID IID_Reviewers;
extern PACKAGE GUID IID_Reviewer;
extern PACKAGE GUID IID_TaskPane;
extern PACKAGE GUID IID_TaskPanes;
extern PACKAGE GUID IID_IApplicationEvents3;
extern PACKAGE GUID CLASS_WordApplication;
extern PACKAGE GUID CLASS_Application_;
static const Shortint wdNoMailSystem = 0x0;
static const Shortint wdMAPI = 0x1;
static const Shortint wdPowerTalk = 0x2;
static const Shortint wdMAPIandPowerTalk = 0x3;
static const Shortint wdNormalTemplate = 0x0;
static const Shortint wdGlobalTemplate = 0x1;
static const Shortint wdAttachedTemplate = 0x2;
static const Shortint wdContinueDisabled = 0x0;
static const Shortint wdResetList = 0x1;
static const Shortint wdContinueList = 0x2;
static const Shortint wdIMEModeNoControl = 0x0;
static const Shortint wdIMEModeOn = 0x1;
static const Shortint wdIMEModeOff = 0x2;
static const Shortint wdIMEModeHiragana = 0x4;
static const Shortint wdIMEModeKatakana = 0x5;
static const Shortint wdIMEModeKatakanaHalf = 0x6;
static const Shortint wdIMEModeAlphaFull = 0x7;
static const Shortint wdIMEModeAlpha = 0x8;
static const Shortint wdIMEModeHangulFull = 0x9;
static const Shortint wdIMEModeHangul = 0xa;
static const Shortint wdBaselineAlignTop = 0x0;
static const Shortint wdBaselineAlignCenter = 0x1;
static const Shortint wdBaselineAlignBaseline = 0x2;
static const Shortint wdBaselineAlignFarEast50 = 0x3;
static const Shortint wdBaselineAlignAuto = 0x4;
static const Shortint wdIndexFilterNone = 0x0;
static const Shortint wdIndexFilterAiueo = 0x1;
static const Shortint wdIndexFilterAkasatana = 0x2;
static const Shortint wdIndexFilterChosung = 0x3;
static const Shortint wdIndexFilterLow = 0x4;
static const Shortint wdIndexFilterMedium = 0x5;
static const Shortint wdIndexFilterFull = 0x6;
static const Shortint wdIndexSortByStroke = 0x0;
static const Shortint wdIndexSortBySyllable = 0x1;
static const Shortint wdJustificationModeExpand = 0x0;
static const Shortint wdJustificationModeCompress = 0x1;
static const Shortint wdJustificationModeCompressKana = 0x2;
static const Shortint wdFarEastLineBreakLevelNormal = 0x0;
static const Shortint wdFarEastLineBreakLevelStrict = 0x1;
static const Shortint wdFarEastLineBreakLevelCustom = 0x2;
static const Shortint wdHangulToHanja = 0x0;
static const Shortint wdHanjaToHangul = 0x1;
static const Shortint wdAuto = 0x0;
static const Shortint wdBlack = 0x1;
static const Shortint wdBlue = 0x2;
static const Shortint wdTurquoise = 0x3;
static const Shortint wdBrightGreen = 0x4;
static const Shortint wdPink = 0x5;
static const Shortint wdRed = 0x6;
static const Shortint wdYellow = 0x7;
static const Shortint wdWhite = 0x8;
static const Shortint wdDarkBlue = 0x9;
static const Shortint wdTeal = 0xa;
static const Shortint wdGreen = 0xb;
static const Shortint wdViolet = 0xc;
static const Shortint wdDarkRed = 0xd;
static const Shortint wdDarkYellow = 0xe;
static const Shortint wdGray50 = 0xf;
static const Shortint wdGray25 = 0x10;
static const unsigned wdByAuthor = 0xffffffff;
static const Shortint wdNoHighlight = 0x0;
static const Shortint wdTextureNone = 0x0;
static const Shortint wdTexture2Pt5Percent = 0x19;
static const Shortint wdTexture5Percent = 0x32;
static const Shortint wdTexture7Pt5Percent = 0x4b;
static const Shortint wdTexture10Percent = 0x64;
static const Shortint wdTexture12Pt5Percent = 0x7d;
static const Byte wdTexture15Percent = 0x96;
static const Byte wdTexture17Pt5Percent = 0xaf;
static const Byte wdTexture20Percent = 0xc8;
static const Byte wdTexture22Pt5Percent = 0xe1;
static const Byte wdTexture25Percent = 0xfa;
static const Word wdTexture27Pt5Percent = 0x113;
static const Word wdTexture30Percent = 0x12c;
static const Word wdTexture32Pt5Percent = 0x145;
static const Word wdTexture35Percent = 0x15e;
static const Word wdTexture37Pt5Percent = 0x177;
static const Word wdTexture40Percent = 0x190;
static const Word wdTexture42Pt5Percent = 0x1a9;
static const Word wdTexture45Percent = 0x1c2;
static const Word wdTexture47Pt5Percent = 0x1db;
static const Word wdTexture50Percent = 0x1f4;
static const Word wdTexture52Pt5Percent = 0x20d;
static const Word wdTexture55Percent = 0x226;
static const Word wdTexture57Pt5Percent = 0x23f;
static const Word wdTexture60Percent = 0x258;
static const Word wdTexture62Pt5Percent = 0x271;
static const Word wdTexture65Percent = 0x28a;
static const Word wdTexture67Pt5Percent = 0x2a3;
static const Word wdTexture70Percent = 0x2bc;
static const Word wdTexture72Pt5Percent = 0x2d5;
static const Word wdTexture75Percent = 0x2ee;
static const Word wdTexture77Pt5Percent = 0x307;
static const Word wdTexture80Percent = 0x320;
static const Word wdTexture82Pt5Percent = 0x339;
static const Word wdTexture85Percent = 0x352;
static const Word wdTexture87Pt5Percent = 0x36b;
static const Word wdTexture90Percent = 0x384;
static const Word wdTexture92Pt5Percent = 0x39d;
static const Word wdTexture95Percent = 0x3b6;
static const Word wdTexture97Pt5Percent = 0x3cf;
static const Word wdTextureSolid = 0x3e8;
static const unsigned wdTextureDarkHorizontal = 0xffffffff;
static const unsigned wdTextureDarkVertical = 0xfffffffe;
static const unsigned wdTextureDarkDiagonalDown = 0xfffffffd;
static const unsigned wdTextureDarkDiagonalUp = 0xfffffffc;
static const unsigned wdTextureDarkCross = 0xfffffffb;
static const unsigned wdTextureDarkDiagonalCross = 0xfffffffa;
static const unsigned wdTextureHorizontal = 0xfffffff9;
static const unsigned wdTextureVertical = 0xfffffff8;
static const unsigned wdTextureDiagonalDown = 0xfffffff7;
static const unsigned wdTextureDiagonalUp = 0xfffffff6;
static const unsigned wdTextureCross = 0xfffffff5;
static const unsigned wdTextureDiagonalCross = 0xfffffff4;
static const Shortint wdUnderlineNone = 0x0;
static const Shortint wdUnderlineSingle = 0x1;
static const Shortint wdUnderlineWords = 0x2;
static const Shortint wdUnderlineDouble = 0x3;
static const Shortint wdUnderlineDotted = 0x4;
static const Shortint wdUnderlineThick = 0x6;
static const Shortint wdUnderlineDash = 0x7;
static const Shortint wdUnderlineDotDash = 0x9;
static const Shortint wdUnderlineDotDotDash = 0xa;
static const Shortint wdUnderlineWavy = 0xb;
static const Shortint wdUnderlineWavyHeavy = 0x1b;
static const Shortint wdUnderlineDottedHeavy = 0x14;
static const Shortint wdUnderlineDashHeavy = 0x17;
static const Shortint wdUnderlineDotDashHeavy = 0x19;
static const Shortint wdUnderlineDotDotDashHeavy = 0x1a;
static const Shortint wdUnderlineDashLong = 0x27;
static const Shortint wdUnderlineDashLongHeavy = 0x37;
static const Shortint wdUnderlineWavyDouble = 0x2b;
static const Shortint wdEmphasisMarkNone = 0x0;
static const Shortint wdEmphasisMarkOverSolidCircle = 0x1;
static const Shortint wdEmphasisMarkOverComma = 0x2;
static const Shortint wdEmphasisMarkOverWhiteCircle = 0x3;
static const Shortint wdEmphasisMarkUnderSolidCircle = 0x4;
static const Shortint wdListSeparator = 0x11;
static const Shortint wdDecimalSeparator = 0x12;
static const Shortint wdThousandsSeparator = 0x13;
static const Shortint wdCurrencyCode = 0x14;
static const Shortint wd24HourClock = 0x15;
static const Shortint wdInternationalAM = 0x16;
static const Shortint wdInternationalPM = 0x17;
static const Shortint wdTimeSeparator = 0x18;
static const Shortint wdDateSeparator = 0x19;
static const Shortint wdProductLanguageID = 0x1a;
static const Shortint wdAutoExec = 0x0;
static const Shortint wdAutoNew = 0x1;
static const Shortint wdAutoOpen = 0x2;
static const Shortint wdAutoClose = 0x3;
static const Shortint wdAutoExit = 0x4;
static const Shortint wdCaptionPositionAbove = 0x0;
static const Shortint wdCaptionPositionBelow = 0x1;
static const Shortint wdUS = 0x1;
static const Shortint wdCanada = 0x2;
static const Shortint wdLatinAmerica = 0x3;
static const Shortint wdNetherlands = 0x1f;
static const Shortint wdFrance = 0x21;
static const Shortint wdSpain = 0x22;
static const Shortint wdItaly = 0x27;
static const Shortint wdUK = 0x2c;
static const Shortint wdDenmark = 0x2d;
static const Shortint wdSweden = 0x2e;
static const Shortint wdNorway = 0x2f;
static const Shortint wdGermany = 0x31;
static const Shortint wdPeru = 0x33;
static const Shortint wdMexico = 0x34;
static const Shortint wdArgentina = 0x36;
static const Shortint wdBrazil = 0x37;
static const Shortint wdChile = 0x38;
static const Shortint wdVenezuela = 0x3a;
static const Shortint wdJapan = 0x51;
static const Word wdTaiwan = 0x376;
static const Shortint wdChina = 0x56;
static const Shortint wdKorea = 0x52;
static const Word wdFinland = 0x166;
static const Word wdIceland = 0x162;
static const Shortint wdHeadingSeparatorNone = 0x0;
static const Shortint wdHeadingSeparatorBlankLine = 0x1;
static const Shortint wdHeadingSeparatorLetter = 0x2;
static const Shortint wdHeadingSeparatorLetterLow = 0x3;
static const Shortint wdHeadingSeparatorLetterFull = 0x4;
static const Shortint wdSeparatorHyphen = 0x0;
static const Shortint wdSeparatorPeriod = 0x1;
static const Shortint wdSeparatorColon = 0x2;
static const Shortint wdSeparatorEmDash = 0x3;
static const Shortint wdSeparatorEnDash = 0x4;
static const Shortint wdAlignPageNumberLeft = 0x0;
static const Shortint wdAlignPageNumberCenter = 0x1;
static const Shortint wdAlignPageNumberRight = 0x2;
static const Shortint wdAlignPageNumberInside = 0x3;
static const Shortint wdAlignPageNumberOutside = 0x4;
static const unsigned wdBorderTop = 0xffffffff;
static const unsigned wdBorderLeft = 0xfffffffe;
static const unsigned wdBorderBottom = 0xfffffffd;
static const unsigned wdBorderRight = 0xfffffffc;
static const unsigned wdBorderHorizontal = 0xfffffffb;
static const unsigned wdBorderVertical = 0xfffffffa;
static const unsigned wdBorderDiagonalDown = 0xfffffff9;
static const unsigned wdBorderDiagonalUp = 0xfffffff8;
static const Shortint emptyenum = 0x0;
static const unsigned wdFrameTop = 0xfff0bdc1;
static const unsigned wdFrameLeft = 0xfff0bdc2;
static const unsigned wdFrameBottom = 0xfff0bdc3;
static const unsigned wdFrameRight = 0xfff0bdc4;
static const unsigned wdFrameCenter = 0xfff0bdc5;
static const unsigned wdFrameInside = 0xfff0bdc6;
static const unsigned wdFrameOutside = 0xfff0bdc7;
static const Shortint wdAnimationNone = 0x0;
static const Shortint wdAnimationLasVegasLights = 0x1;
static const Shortint wdAnimationBlinkingBackground = 0x2;
static const Shortint wdAnimationSparkleText = 0x3;
static const Shortint wdAnimationMarchingBlackAnts = 0x4;
static const Shortint wdAnimationMarchingRedAnts = 0x5;
static const Shortint wdAnimationShimmer = 0x6;
static const unsigned wdNextCase = 0xffffffff;
static const Shortint wdLowerCase = 0x0;
static const Shortint wdUpperCase = 0x1;
static const Shortint wdTitleWord = 0x2;
static const Shortint wdTitleSentence = 0x4;
static const Shortint wdToggleCase = 0x5;
static const Shortint wdHalfWidth = 0x6;
static const Shortint wdFullWidth = 0x7;
static const Shortint wdKatakana = 0x8;
static const Shortint wdHiragana = 0x9;
static const Shortint emptyenum_ = 0x0;
static const Shortint wdSummaryModeHighlight = 0x0;
static const Shortint wdSummaryModeHideAllButSummary = 0x1;
static const Shortint wdSummaryModeInsert = 0x2;
static const Shortint wdSummaryModeCreateNew = 0x3;
static const unsigned wd10Sentences = 0xfffffffe;
static const unsigned wd20Sentences = 0xfffffffd;
static const unsigned wd100Words = 0xfffffffc;
static const unsigned wd500Words = 0xfffffffb;
static const unsigned wd10Percent = 0xfffffffa;
static const unsigned wd25Percent = 0xfffffff9;
static const unsigned wd50Percent = 0xfffffff8;
static const unsigned wd75Percent = 0xfffffff7;
static const Shortint wdStyleTypeParagraph = 0x1;
static const Shortint wdStyleTypeCharacter = 0x2;
static const Shortint wdStyleTypeTable = 0x3;
static const Shortint wdStyleTypeList = 0x4;
static const Shortint wdCharacter = 0x1;
static const Shortint wdWord = 0x2;
static const Shortint wdSentence = 0x3;
static const Shortint wdParagraph = 0x4;
static const Shortint wdLine = 0x5;
static const Shortint wdStory = 0x6;
static const Shortint wdScreen = 0x7;
static const Shortint wdSection = 0x8;
static const Shortint wdColumn = 0x9;
static const Shortint wdRow = 0xa;
static const Shortint wdWindow = 0xb;
static const Shortint wdCell = 0xc;
static const Shortint wdCharacterFormatting = 0xd;
static const Shortint wdParagraphFormatting = 0xe;
static const Shortint wdTable = 0xf;
static const Shortint wdItem = 0x10;
static const unsigned wdGoToBookmark = 0xffffffff;
static const Shortint wdGoToSection = 0x0;
static const Shortint wdGoToPage = 0x1;
static const Shortint wdGoToTable = 0x2;
static const Shortint wdGoToLine = 0x3;
static const Shortint wdGoToFootnote = 0x4;
static const Shortint wdGoToEndnote = 0x5;
static const Shortint wdGoToComment = 0x6;
static const Shortint wdGoToField = 0x7;
static const Shortint wdGoToGraphic = 0x8;
static const Shortint wdGoToObject = 0x9;
static const Shortint wdGoToEquation = 0xa;
static const Shortint wdGoToHeading = 0xb;
static const Shortint wdGoToPercent = 0xc;
static const Shortint wdGoToSpellingError = 0xd;
static const Shortint wdGoToGrammaticalError = 0xe;
static const Shortint wdGoToProofreadingError = 0xf;
static const Shortint wdGoToFirst = 0x1;
static const unsigned wdGoToLast = 0xffffffff;
static const Shortint wdGoToNext = 0x2;
static const Shortint wdGoToRelative = 0x2;
static const Shortint wdGoToPrevious = 0x3;
static const Shortint wdGoToAbsolute = 0x1;
static const Shortint wdCollapseStart = 0x1;
static const Shortint wdCollapseEnd = 0x0;
static const Shortint wdRowHeightAuto = 0x0;
static const Shortint wdRowHeightAtLeast = 0x1;
static const Shortint wdRowHeightExactly = 0x2;
static const Shortint wdFrameAuto = 0x0;
static const Shortint wdFrameAtLeast = 0x1;
static const Shortint wdFrameExact = 0x2;
static const Shortint wdInsertCellsShiftRight = 0x0;
static const Shortint wdInsertCellsShiftDown = 0x1;
static const Shortint wdInsertCellsEntireRow = 0x2;
static const Shortint wdInsertCellsEntireColumn = 0x3;
static const Shortint wdDeleteCellsShiftLeft = 0x0;
static const Shortint wdDeleteCellsShiftUp = 0x1;
static const Shortint wdDeleteCellsEntireRow = 0x2;
static const Shortint wdDeleteCellsEntireColumn = 0x3;
static const Shortint wdListApplyToWholeList = 0x0;
static const Shortint wdListApplyToThisPointForward = 0x1;
static const Shortint wdListApplyToSelection = 0x2;
static const Shortint wdAlertsNone = 0x0;
static const unsigned wdAlertsMessageBox = 0xfffffffe;
static const unsigned wdAlertsAll = 0xffffffff;
static const Shortint wdCursorWait = 0x0;
static const Shortint wdCursorIBeam = 0x1;
static const Shortint wdCursorNormal = 0x2;
static const Shortint wdCursorNorthwestArrow = 0x3;
static const Shortint wdCancelDisabled = 0x0;
static const Shortint wdCancelInterrupt = 0x1;
static const Shortint wdAdjustNone = 0x0;
static const Shortint wdAdjustProportional = 0x1;
static const Shortint wdAdjustFirstColumn = 0x2;
static const Shortint wdAdjustSameWidth = 0x3;
static const Shortint wdAlignParagraphLeft = 0x0;
static const Shortint wdAlignParagraphCenter = 0x1;
static const Shortint wdAlignParagraphRight = 0x2;
static const Shortint wdAlignParagraphJustify = 0x3;
static const Shortint wdAlignParagraphDistribute = 0x4;
static const Shortint wdAlignParagraphJustifyMed = 0x5;
static const Shortint wdAlignParagraphJustifyHi = 0x7;
static const Shortint wdAlignParagraphJustifyLow = 0x8;
static const Shortint wdAlignParagraphThaiJustify = 0x9;
static const Shortint emptyenum__ = 0x0;
static const Shortint wdListLevelAlignLeft = 0x0;
static const Shortint wdListLevelAlignCenter = 0x1;
static const Shortint wdListLevelAlignRight = 0x2;
static const Shortint wdAlignRowLeft = 0x0;
static const Shortint wdAlignRowCenter = 0x1;
static const Shortint wdAlignRowRight = 0x2;
static const Shortint wdAlignTabLeft = 0x0;
static const Shortint wdAlignTabCenter = 0x1;
static const Shortint wdAlignTabRight = 0x2;
static const Shortint wdAlignTabDecimal = 0x3;
static const Shortint wdAlignTabBar = 0x4;
static const Shortint wdAlignTabList = 0x6;
static const Shortint wdAlignVerticalTop = 0x0;
static const Shortint wdAlignVerticalCenter = 0x1;
static const Shortint wdAlignVerticalJustify = 0x2;
static const Shortint wdAlignVerticalBottom = 0x3;
static const Shortint wdCellAlignVerticalTop = 0x0;
static const Shortint wdCellAlignVerticalCenter = 0x1;
static const Shortint wdCellAlignVerticalBottom = 0x3;
static const Shortint wdTrailingTab = 0x0;
static const Shortint wdTrailingSpace = 0x1;
static const Shortint wdTrailingNone = 0x2;
static const Shortint wdBulletGallery = 0x1;
static const Shortint wdNumberGallery = 0x2;
static const Shortint wdOutlineNumberGallery = 0x3;
static const Shortint wdListNumberStyleArabic = 0x0;
static const Shortint wdListNumberStyleUppercaseRoman = 0x1;
static const Shortint wdListNumberStyleLowercaseRoman = 0x2;
static const Shortint wdListNumberStyleUppercaseLetter = 0x3;
static const Shortint wdListNumberStyleLowercaseLetter = 0x4;
static const Shortint wdListNumberStyleOrdinal = 0x5;
static const Shortint wdListNumberStyleCardinalText = 0x6;
static const Shortint wdListNumberStyleOrdinalText = 0x7;
static const Shortint wdListNumberStyleKanji = 0xa;
static const Shortint wdListNumberStyleKanjiDigit = 0xb;
static const Shortint wdListNumberStyleAiueoHalfWidth = 0xc;
static const Shortint wdListNumberStyleIrohaHalfWidth = 0xd;
static const Shortint wdListNumberStyleArabicFullWidth = 0xe;
static const Shortint wdListNumberStyleKanjiTraditional = 0x10;
static const Shortint wdListNumberStyleKanjiTraditional2 = 0x11;
static const Shortint wdListNumberStyleNumberInCircle = 0x12;
static const Shortint wdListNumberStyleAiueo = 0x14;
static const Shortint wdListNumberStyleIroha = 0x15;
static const Shortint wdListNumberStyleArabicLZ = 0x16;
static const Shortint wdListNumberStyleBullet = 0x17;
static const Shortint wdListNumberStyleGanada = 0x18;
static const Shortint wdListNumberStyleChosung = 0x19;
static const Shortint wdListNumberStyleGBNum1 = 0x1a;
static const Shortint wdListNumberStyleGBNum2 = 0x1b;
static const Shortint wdListNumberStyleGBNum3 = 0x1c;
static const Shortint wdListNumberStyleGBNum4 = 0x1d;
static const Shortint wdListNumberStyleZodiac1 = 0x1e;
static const Shortint wdListNumberStyleZodiac2 = 0x1f;
static const Shortint wdListNumberStyleZodiac3 = 0x20;
static const Shortint wdListNumberStyleTradChinNum1 = 0x21;
static const Shortint wdListNumberStyleTradChinNum2 = 0x22;
static const Shortint wdListNumberStyleTradChinNum3 = 0x23;
static const Shortint wdListNumberStyleTradChinNum4 = 0x24;
static const Shortint wdListNumberStyleSimpChinNum1 = 0x25;
static const Shortint wdListNumberStyleSimpChinNum2 = 0x26;
static const Shortint wdListNumberStyleSimpChinNum3 = 0x27;
static const Shortint wdListNumberStyleSimpChinNum4 = 0x28;
static const Shortint wdListNumberStyleHanjaRead = 0x29;
static const Shortint wdListNumberStyleHanjaReadDigit = 0x2a;
static const Shortint wdListNumberStyleHangul = 0x2b;
static const Shortint wdListNumberStyleHanja = 0x2c;
static const Shortint wdListNumberStyleHebrew1 = 0x2d;
static const Shortint wdListNumberStyleArabic1 = 0x2e;
static const Shortint wdListNumberStyleHebrew2 = 0x2f;
static const Shortint wdListNumberStyleArabic2 = 0x30;
static const Shortint wdListNumberStyleHindiLetter1 = 0x31;
static const Shortint wdListNumberStyleHindiLetter2 = 0x32;
static const Shortint wdListNumberStyleHindiArabic = 0x33;
static const Shortint wdListNumberStyleHindiCardinalText = 0x34;
static const Shortint wdListNumberStyleThaiLetter = 0x35;
static const Shortint wdListNumberStyleThaiArabic = 0x36;
static const Shortint wdListNumberStyleThaiCardinalText = 0x37;
static const Shortint wdListNumberStyleVietCardinalText = 0x38;
static const Shortint wdListNumberStyleLowercaseRussian = 0x3a;
static const Shortint wdListNumberStyleUppercaseRussian = 0x3b;
static const Byte wdListNumberStylePictureBullet = 0xf9;
static const Byte wdListNumberStyleLegal = 0xfd;
static const Byte wdListNumberStyleLegalLZ = 0xfe;
static const Byte wdListNumberStyleNone = 0xff;
static const Shortint emptyenum___ = 0x0;
static const Shortint wdNoteNumberStyleArabic = 0x0;
static const Shortint wdNoteNumberStyleUppercaseRoman = 0x1;
static const Shortint wdNoteNumberStyleLowercaseRoman = 0x2;
static const Shortint wdNoteNumberStyleUppercaseLetter = 0x3;
static const Shortint wdNoteNumberStyleLowercaseLetter = 0x4;
static const Shortint wdNoteNumberStyleSymbol = 0x9;
static const Shortint wdNoteNumberStyleArabicFullWidth = 0xe;
static const Shortint wdNoteNumberStyleKanji = 0xa;
static const Shortint wdNoteNumberStyleKanjiDigit = 0xb;
static const Shortint wdNoteNumberStyleKanjiTraditional = 0x10;
static const Shortint wdNoteNumberStyleNumberInCircle = 0x12;
static const Shortint wdNoteNumberStyleHanjaRead = 0x29;
static const Shortint wdNoteNumberStyleHanjaReadDigit = 0x2a;
static const Shortint wdNoteNumberStyleTradChinNum1 = 0x21;
static const Shortint wdNoteNumberStyleTradChinNum2 = 0x22;
static const Shortint wdNoteNumberStyleSimpChinNum1 = 0x25;
static const Shortint wdNoteNumberStyleSimpChinNum2 = 0x26;
static const Shortint wdNoteNumberStyleHebrewLetter1 = 0x2d;
static const Shortint wdNoteNumberStyleArabicLetter1 = 0x2e;
static const Shortint wdNoteNumberStyleHebrewLetter2 = 0x2f;
static const Shortint wdNoteNumberStyleArabicLetter2 = 0x30;
static const Shortint wdNoteNumberStyleHindiLetter1 = 0x31;
static const Shortint wdNoteNumberStyleHindiLetter2 = 0x32;
static const Shortint wdNoteNumberStyleHindiArabic = 0x33;
static const Shortint wdNoteNumberStyleHindiCardinalText = 0x34;
static const Shortint wdNoteNumberStyleThaiLetter = 0x35;
static const Shortint wdNoteNumberStyleThaiArabic = 0x36;
static const Shortint wdNoteNumberStyleThaiCardinalText = 0x37;
static const Shortint wdNoteNumberStyleVietCardinalText = 0x38;
static const Shortint emptyenum____ = 0x0;
static const Shortint wdCaptionNumberStyleArabic = 0x0;
static const Shortint wdCaptionNumberStyleUppercaseRoman = 0x1;
static const Shortint wdCaptionNumberStyleLowercaseRoman = 0x2;
static const Shortint wdCaptionNumberStyleUppercaseLetter = 0x3;
static const Shortint wdCaptionNumberStyleLowercaseLetter = 0x4;
static const Shortint wdCaptionNumberStyleArabicFullWidth = 0xe;
static const Shortint wdCaptionNumberStyleKanji = 0xa;
static const Shortint wdCaptionNumberStyleKanjiDigit = 0xb;
static const Shortint wdCaptionNumberStyleKanjiTraditional = 0x10;
static const Shortint wdCaptionNumberStyleNumberInCircle = 0x12;
static const Shortint wdCaptionNumberStyleGanada = 0x18;
static const Shortint wdCaptionNumberStyleChosung = 0x19;
static const Shortint wdCaptionNumberStyleZodiac1 = 0x1e;
static const Shortint wdCaptionNumberStyleZodiac2 = 0x1f;
static const Shortint wdCaptionNumberStyleHanjaRead = 0x29;
static const Shortint wdCaptionNumberStyleHanjaReadDigit = 0x2a;
static const Shortint wdCaptionNumberStyleTradChinNum2 = 0x22;
static const Shortint wdCaptionNumberStyleTradChinNum3 = 0x23;
static const Shortint wdCaptionNumberStyleSimpChinNum2 = 0x26;
static const Shortint wdCaptionNumberStyleSimpChinNum3 = 0x27;
static const Shortint wdCaptionNumberStyleHebrewLetter1 = 0x2d;
static const Shortint wdCaptionNumberStyleArabicLetter1 = 0x2e;
static const Shortint wdCaptionNumberStyleHebrewLetter2 = 0x2f;
static const Shortint wdCaptionNumberStyleArabicLetter2 = 0x30;
static const Shortint wdCaptionNumberStyleHindiLetter1 = 0x31;
static const Shortint wdCaptionNumberStyleHindiLetter2 = 0x32;
static const Shortint wdCaptionNumberStyleHindiArabic = 0x33;
static const Shortint wdCaptionNumberStyleHindiCardinalText = 0x34;
static const Shortint wdCaptionNumberStyleThaiLetter = 0x35;
static const Shortint wdCaptionNumberStyleThaiArabic = 0x36;
static const Shortint wdCaptionNumberStyleThaiCardinalText = 0x37;
static const Shortint wdCaptionNumberStyleVietCardinalText = 0x38;
static const Shortint emptyenum_____ = 0x0;
static const Shortint wdPageNumberStyleArabic = 0x0;
static const Shortint wdPageNumberStyleUppercaseRoman = 0x1;
static const Shortint wdPageNumberStyleLowercaseRoman = 0x2;
static const Shortint wdPageNumberStyleUppercaseLetter = 0x3;
static const Shortint wdPageNumberStyleLowercaseLetter = 0x4;
static const Shortint wdPageNumberStyleArabicFullWidth = 0xe;
static const Shortint wdPageNumberStyleKanji = 0xa;
static const Shortint wdPageNumberStyleKanjiDigit = 0xb;
static const Shortint wdPageNumberStyleKanjiTraditional = 0x10;
static const Shortint wdPageNumberStyleNumberInCircle = 0x12;
static const Shortint wdPageNumberStyleHanjaRead = 0x29;
static const Shortint wdPageNumberStyleHanjaReadDigit = 0x2a;
static const Shortint wdPageNumberStyleTradChinNum1 = 0x21;
static const Shortint wdPageNumberStyleTradChinNum2 = 0x22;
static const Shortint wdPageNumberStyleSimpChinNum1 = 0x25;
static const Shortint wdPageNumberStyleSimpChinNum2 = 0x26;
static const Shortint wdPageNumberStyleHebrewLetter1 = 0x2d;
static const Shortint wdPageNumberStyleArabicLetter1 = 0x2e;
static const Shortint wdPageNumberStyleHebrewLetter2 = 0x2f;
static const Shortint wdPageNumberStyleArabicLetter2 = 0x30;
static const Shortint wdPageNumberStyleHindiLetter1 = 0x31;
static const Shortint wdPageNumberStyleHindiLetter2 = 0x32;
static const Shortint wdPageNumberStyleHindiArabic = 0x33;
static const Shortint wdPageNumberStyleHindiCardinalText = 0x34;
static const Shortint wdPageNumberStyleThaiLetter = 0x35;
static const Shortint wdPageNumberStyleThaiArabic = 0x36;
static const Shortint wdPageNumberStyleThaiCardinalText = 0x37;
static const Shortint wdPageNumberStyleVietCardinalText = 0x38;
static const Shortint wdPageNumberStyleNumberInDash = 0x39;
static const Shortint emptyenum______ = 0x0;
static const Shortint wdStatisticWords = 0x0;
static const Shortint wdStatisticLines = 0x1;
static const Shortint wdStatisticPages = 0x2;
static const Shortint wdStatisticCharacters = 0x3;
static const Shortint wdStatisticParagraphs = 0x4;
static const Shortint wdStatisticCharactersWithSpaces = 0x5;
static const Shortint wdStatisticFarEastCharacters = 0x6;
static const Shortint emptyenum_______ = 0x0;
static const Shortint wdPropertyTitle = 0x1;
static const Shortint wdPropertySubject = 0x2;
static const Shortint wdPropertyAuthor = 0x3;
static const Shortint wdPropertyKeywords = 0x4;
static const Shortint wdPropertyComments = 0x5;
static const Shortint wdPropertyTemplate = 0x6;
static const Shortint wdPropertyLastAuthor = 0x7;
static const Shortint wdPropertyRevision = 0x8;
static const Shortint wdPropertyAppName = 0x9;
static const Shortint wdPropertyTimeLastPrinted = 0xa;
static const Shortint wdPropertyTimeCreated = 0xb;
static const Shortint wdPropertyTimeLastSaved = 0xc;
static const Shortint wdPropertyVBATotalEdit = 0xd;
static const Shortint wdPropertyPages = 0xe;
static const Shortint wdPropertyWords = 0xf;
static const Shortint wdPropertyCharacters = 0x10;
static const Shortint wdPropertySecurity = 0x11;
static const Shortint wdPropertyCategory = 0x12;
static const Shortint wdPropertyFormat = 0x13;
static const Shortint wdPropertyManager = 0x14;
static const Shortint wdPropertyCompany = 0x15;
static const Shortint wdPropertyBytes = 0x16;
static const Shortint wdPropertyLines = 0x17;
static const Shortint wdPropertyParas = 0x18;
static const Shortint wdPropertySlides = 0x19;
static const Shortint wdPropertyNotes = 0x1a;
static const Shortint wdPropertyHiddenSlides = 0x1b;
static const Shortint wdPropertyMMClips = 0x1c;
static const Shortint wdPropertyHyperlinkBase = 0x1d;
static const Shortint wdPropertyCharsWSpaces = 0x1e;
static const Shortint wdLineSpaceSingle = 0x0;
static const Shortint wdLineSpace1pt5 = 0x1;
static const Shortint wdLineSpaceDouble = 0x2;
static const Shortint wdLineSpaceAtLeast = 0x3;
static const Shortint wdLineSpaceExactly = 0x4;
static const Shortint wdLineSpaceMultiple = 0x5;
static const Shortint wdNumberParagraph = 0x1;
static const Shortint wdNumberListNum = 0x2;
static const Shortint wdNumberAllNumbers = 0x3;
static const Shortint wdListNoNumbering = 0x0;
static const Shortint wdListListNumOnly = 0x1;
static const Shortint wdListBullet = 0x2;
static const Shortint wdListSimpleNumbering = 0x3;
static const Shortint wdListOutlineNumbering = 0x4;
static const Shortint wdListMixedNumbering = 0x5;
static const Shortint wdListPictureBullet = 0x6;
static const Shortint wdMainTextStory = 0x1;
static const Shortint wdFootnotesStory = 0x2;
static const Shortint wdEndnotesStory = 0x3;
static const Shortint wdCommentsStory = 0x4;
static const Shortint wdTextFrameStory = 0x5;
static const Shortint wdEvenPagesHeaderStory = 0x6;
static const Shortint wdPrimaryHeaderStory = 0x7;
static const Shortint wdEvenPagesFooterStory = 0x8;
static const Shortint wdPrimaryFooterStory = 0x9;
static const Shortint wdFirstPageHeaderStory = 0xa;
static const Shortint wdFirstPageFooterStory = 0xb;
static const Shortint wdFormatDocument = 0x0;
static const Shortint wdFormatTemplate = 0x1;
static const Shortint wdFormatText = 0x2;
static const Shortint wdFormatTextLineBreaks = 0x3;
static const Shortint wdFormatDOSText = 0x4;
static const Shortint wdFormatDOSTextLineBreaks = 0x5;
static const Shortint wdFormatRTF = 0x6;
static const Shortint wdFormatUnicodeText = 0x7;
static const Shortint wdFormatEncodedText = 0x7;
static const Shortint wdFormatHTML = 0x8;
static const Shortint wdFormatWebArchive = 0x9;
static const Shortint wdFormatFilteredHTML = 0xa;
static const Shortint wdOpenFormatAuto = 0x0;
static const Shortint wdOpenFormatDocument = 0x1;
static const Shortint wdOpenFormatTemplate = 0x2;
static const Shortint wdOpenFormatRTF = 0x3;
static const Shortint wdOpenFormatText = 0x4;
static const Shortint wdOpenFormatUnicodeText = 0x5;
static const Shortint wdOpenFormatEncodedText = 0x5;
static const Shortint wdOpenFormatAllWord = 0x6;
static const Shortint wdOpenFormatWebPages = 0x7;
static const Shortint wdHeaderFooterPrimary = 0x1;
static const Shortint wdHeaderFooterFirstPage = 0x2;
static const Shortint wdHeaderFooterEvenPages = 0x3;
static const Shortint wdTOCTemplate = 0x0;
static const Shortint wdTOCClassic = 0x1;
static const Shortint wdTOCDistinctive = 0x2;
static const Shortint wdTOCFancy = 0x3;
static const Shortint wdTOCModern = 0x4;
static const Shortint wdTOCFormal = 0x5;
static const Shortint wdTOCSimple = 0x6;
static const Shortint wdTOFTemplate = 0x0;
static const Shortint wdTOFClassic = 0x1;
static const Shortint wdTOFDistinctive = 0x2;
static const Shortint wdTOFCentered = 0x3;
static const Shortint wdTOFFormal = 0x4;
static const Shortint wdTOFSimple = 0x5;
static const Shortint wdTOATemplate = 0x0;
static const Shortint wdTOAClassic = 0x1;
static const Shortint wdTOADistinctive = 0x2;
static const Shortint wdTOAFormal = 0x3;
static const Shortint wdTOASimple = 0x4;
static const Shortint wdLineStyleNone = 0x0;
static const Shortint wdLineStyleSingle = 0x1;
static const Shortint wdLineStyleDot = 0x2;
static const Shortint wdLineStyleDashSmallGap = 0x3;
static const Shortint wdLineStyleDashLargeGap = 0x4;
static const Shortint wdLineStyleDashDot = 0x5;
static const Shortint wdLineStyleDashDotDot = 0x6;
static const Shortint wdLineStyleDouble = 0x7;
static const Shortint wdLineStyleTriple = 0x8;
static const Shortint wdLineStyleThinThickSmallGap = 0x9;
static const Shortint wdLineStyleThickThinSmallGap = 0xa;
static const Shortint wdLineStyleThinThickThinSmallGap = 0xb;
static const Shortint wdLineStyleThinThickMedGap = 0xc;
static const Shortint wdLineStyleThickThinMedGap = 0xd;
static const Shortint wdLineStyleThinThickThinMedGap = 0xe;
static const Shortint wdLineStyleThinThickLargeGap = 0xf;
static const Shortint wdLineStyleThickThinLargeGap = 0x10;
static const Shortint wdLineStyleThinThickThinLargeGap = 0x11;
static const Shortint wdLineStyleSingleWavy = 0x12;
static const Shortint wdLineStyleDoubleWavy = 0x13;
static const Shortint wdLineStyleDashDotStroked = 0x14;
static const Shortint wdLineStyleEmboss3D = 0x15;
static const Shortint wdLineStyleEngrave3D = 0x16;
static const Shortint wdLineStyleOutset = 0x17;
static const Shortint wdLineStyleInset = 0x18;
static const Shortint wdLineWidth025pt = 0x2;
static const Shortint wdLineWidth050pt = 0x4;
static const Shortint wdLineWidth075pt = 0x6;
static const Shortint wdLineWidth100pt = 0x8;
static const Shortint wdLineWidth150pt = 0xc;
static const Shortint wdLineWidth225pt = 0x12;
static const Shortint wdLineWidth300pt = 0x18;
static const Shortint wdLineWidth450pt = 0x24;
static const Shortint wdLineWidth600pt = 0x30;
static const Shortint wdSectionBreakNextPage = 0x2;
static const Shortint wdSectionBreakContinuous = 0x3;
static const Shortint wdSectionBreakEvenPage = 0x4;
static const Shortint wdSectionBreakOddPage = 0x5;
static const Shortint wdLineBreak = 0x6;
static const Shortint wdPageBreak = 0x7;
static const Shortint wdColumnBreak = 0x8;
static const Shortint wdLineBreakClearLeft = 0x9;
static const Shortint wdLineBreakClearRight = 0xa;
static const Shortint wdTextWrappingBreak = 0xb;
static const Shortint wdTabLeaderSpaces = 0x0;
static const Shortint wdTabLeaderDots = 0x1;
static const Shortint wdTabLeaderDashes = 0x2;
static const Shortint wdTabLeaderLines = 0x3;
static const Shortint wdTabLeaderHeavy = 0x4;
static const Shortint wdTabLeaderMiddleDot = 0x5;
static const Shortint emptyenum________ = 0x0;
static const Shortint wdInches = 0x0;
static const Shortint wdCentimeters = 0x1;
static const Shortint wdMillimeters = 0x2;
static const Shortint wdPoints = 0x3;
static const Shortint wdPicas = 0x4;
static const Shortint emptyenum_________ = 0x0;
static const Shortint wdDropNone = 0x0;
static const Shortint wdDropNormal = 0x1;
static const Shortint wdDropMargin = 0x2;
static const Shortint wdRestartContinuous = 0x0;
static const Shortint wdRestartSection = 0x1;
static const Shortint wdRestartPage = 0x2;
static const Shortint wdBottomOfPage = 0x0;
static const Shortint wdBeneathText = 0x1;
static const Shortint wdEndOfSection = 0x0;
static const Shortint wdEndOfDocument = 0x1;
static const Shortint wdSortSeparateByTabs = 0x0;
static const Shortint wdSortSeparateByCommas = 0x1;
static const Shortint wdSortSeparateByDefaultTableSeparator = 0x2;
static const Shortint wdSeparateByParagraphs = 0x0;
static const Shortint wdSeparateByTabs = 0x1;
static const Shortint wdSeparateByCommas = 0x2;
static const Shortint wdSeparateByDefaultListSeparator = 0x3;
static const Shortint wdSortFieldAlphanumeric = 0x0;
static const Shortint wdSortFieldNumeric = 0x1;
static const Shortint wdSortFieldDate = 0x2;
static const Shortint wdSortFieldSyllable = 0x3;
static const Shortint wdSortFieldJapanJIS = 0x4;
static const Shortint wdSortFieldStroke = 0x5;
static const Shortint wdSortFieldKoreaKS = 0x6;
static const Shortint emptyenum__________ = 0x0;
static const Shortint wdSortOrderAscending = 0x0;
static const Shortint wdSortOrderDescending = 0x1;
static const Shortint wdTableFormatNone = 0x0;
static const Shortint wdTableFormatSimple1 = 0x1;
static const Shortint wdTableFormatSimple2 = 0x2;
static const Shortint wdTableFormatSimple3 = 0x3;
static const Shortint wdTableFormatClassic1 = 0x4;
static const Shortint wdTableFormatClassic2 = 0x5;
static const Shortint wdTableFormatClassic3 = 0x6;
static const Shortint wdTableFormatClassic4 = 0x7;
static const Shortint wdTableFormatColorful1 = 0x8;
static const Shortint wdTableFormatColorful2 = 0x9;
static const Shortint wdTableFormatColorful3 = 0xa;
static const Shortint wdTableFormatColumns1 = 0xb;
static const Shortint wdTableFormatColumns2 = 0xc;
static const Shortint wdTableFormatColumns3 = 0xd;
static const Shortint wdTableFormatColumns4 = 0xe;
static const Shortint wdTableFormatColumns5 = 0xf;
static const Shortint wdTableFormatGrid1 = 0x10;
static const Shortint wdTableFormatGrid2 = 0x11;
static const Shortint wdTableFormatGrid3 = 0x12;
static const Shortint wdTableFormatGrid4 = 0x13;
static const Shortint wdTableFormatGrid5 = 0x14;
static const Shortint wdTableFormatGrid6 = 0x15;
static const Shortint wdTableFormatGrid7 = 0x16;
static const Shortint wdTableFormatGrid8 = 0x17;
static const Shortint wdTableFormatList1 = 0x18;
static const Shortint wdTableFormatList2 = 0x19;
static const Shortint wdTableFormatList3 = 0x1a;
static const Shortint wdTableFormatList4 = 0x1b;
static const Shortint wdTableFormatList5 = 0x1c;
static const Shortint wdTableFormatList6 = 0x1d;
static const Shortint wdTableFormatList7 = 0x1e;
static const Shortint wdTableFormatList8 = 0x1f;
static const Shortint wdTableFormat3DEffects1 = 0x20;
static const Shortint wdTableFormat3DEffects2 = 0x21;
static const Shortint wdTableFormat3DEffects3 = 0x22;
static const Shortint wdTableFormatContemporary = 0x23;
static const Shortint wdTableFormatElegant = 0x24;
static const Shortint wdTableFormatProfessional = 0x25;
static const Shortint wdTableFormatSubtle1 = 0x26;
static const Shortint wdTableFormatSubtle2 = 0x27;
static const Shortint wdTableFormatWeb1 = 0x28;
static const Shortint wdTableFormatWeb2 = 0x29;
static const Shortint wdTableFormatWeb3 = 0x2a;
static const Shortint wdTableFormatApplyBorders = 0x1;
static const Shortint wdTableFormatApplyShading = 0x2;
static const Shortint wdTableFormatApplyFont = 0x4;
static const Shortint wdTableFormatApplyColor = 0x8;
static const Shortint wdTableFormatApplyAutoFit = 0x10;
static const Shortint wdTableFormatApplyHeadingRows = 0x20;
static const Shortint wdTableFormatApplyLastRow = 0x40;
static const Byte wdTableFormatApplyFirstColumn = 0x80;
static const Word wdTableFormatApplyLastColumn = 0x100;
static const Shortint wdLanguageNone = 0x0;
static const Word wdNoProofing = 0x400;
static const Word wdAfrikaans = 0x436;
static const Word wdAlbanian = 0x41c;
static const Word wdAmharic = 0x45e;
static const Word wdArabicAlgeria = 0x1401;
static const Word wdArabicBahrain = 0x3c01;
static const Word wdArabicEgypt = 0xc01;
static const Word wdArabicIraq = 0x801;
static const Word wdArabicJordan = 0x2c01;
static const Word wdArabicKuwait = 0x3401;
static const Word wdArabicLebanon = 0x3001;
static const Word wdArabicLibya = 0x1001;
static const Word wdArabicMorocco = 0x1801;
static const Word wdArabicOman = 0x2001;
static const Word wdArabicQatar = 0x4001;
static const Word wdArabic = 0x401;
static const Word wdArabicSyria = 0x2801;
static const Word wdArabicTunisia = 0x1c01;
static const Word wdArabicUAE = 0x3801;
static const Word wdArabicYemen = 0x2401;
static const Word wdArmenian = 0x42b;
static const Word wdAssamese = 0x44d;
static const Word wdAzeriCyrillic = 0x82c;
static const Word wdAzeriLatin = 0x42c;
static const Word wdBasque = 0x42d;
static const Word wdByelorussian = 0x423;
static const Word wdBengali = 0x445;
static const Word wdBulgarian = 0x402;
static const Word wdBurmese = 0x455;
static const Word wdCatalan = 0x403;
static const Word wdCherokee = 0x45c;
static const Word wdChineseHongKongSAR = 0xc04;
static const Word wdChineseMacaoSAR = 0x1404;
static const Word wdSimplifiedChinese = 0x804;
static const Word wdChineseSingapore = 0x1004;
static const Word wdTraditionalChinese = 0x404;
static const Word wdCroatian = 0x41a;
static const Word wdCzech = 0x405;
static const Word wdDanish = 0x406;
static const Word wdDivehi = 0x465;
static const Word wdBelgianDutch = 0x813;
static const Word wdDutch = 0x413;
static const Word wdDzongkhaBhutan = 0x851;
static const Word wdEdo = 0x466;
static const Word wdEnglishAUS = 0xc09;
static const Word wdEnglishBelize = 0x2809;
static const Word wdEnglishCanadian = 0x1009;
static const Word wdEnglishCaribbean = 0x2409;
static const Word wdEnglishIreland = 0x1809;
static const Word wdEnglishJamaica = 0x2009;
static const Word wdEnglishNewZealand = 0x1409;
static const Word wdEnglishPhilippines = 0x3409;
static const Word wdEnglishSouthAfrica = 0x1c09;
static const Word wdEnglishTrinidadTobago = 0x2c09;
static const Word wdEnglishUK = 0x809;
static const Word wdEnglishUS = 0x409;
static const Word wdEnglishZimbabwe = 0x3009;
static const Word wdEnglishIndonesia = 0x3809;
static const Word wdEstonian = 0x425;
static const Word wdFaeroese = 0x438;
static const Word wdFarsi = 0x429;
static const Word wdFilipino = 0x464;
static const Word wdFinnish = 0x40b;
static const Word wdFulfulde = 0x467;
static const Word wdBelgianFrench = 0x80c;
static const Word wdFrenchCameroon = 0x2c0c;
static const Word wdFrenchCanadian = 0xc0c;
static const Word wdFrenchCotedIvoire = 0x300c;
static const Word wdFrench = 0x40c;
static const Word wdFrenchLuxembourg = 0x140c;
static const Word wdFrenchMali = 0x340c;
static const Word wdFrenchMonaco = 0x180c;
static const Word wdFrenchReunion = 0x200c;
static const Word wdFrenchSenegal = 0x280c;
static const Word wdFrenchMorocco = 0x380c;
static const Word wdFrenchHaiti = 0x3c0c;
static const Word wdSwissFrench = 0x100c;
static const Word wdFrenchWestIndies = 0x1c0c;
static const Word wdFrenchZaire = 0x240c;
static const Word wdFrisianNetherlands = 0x462;
static const Word wdGaelicIreland = 0x83c;
static const Word wdGaelicScotland = 0x43c;
static const Word wdGalician = 0x456;
static const Word wdGeorgian = 0x437;
static const Word wdGermanAustria = 0xc07;
static const Word wdGerman = 0x407;
static const Word wdGermanLiechtenstein = 0x1407;
static const Word wdGermanLuxembourg = 0x1007;
static const Word wdSwissGerman = 0x807;
static const Word wdGreek = 0x408;
static const Word wdGuarani = 0x474;
static const Word wdGujarati = 0x447;
static const Word wdHausa = 0x468;
static const Word wdHawaiian = 0x475;
static const Word wdHebrew = 0x40d;
static const Word wdHindi = 0x439;
static const Word wdHungarian = 0x40e;
static const Word wdIbibio = 0x469;
static const Word wdIcelandic = 0x40f;
static const Word wdIgbo = 0x470;
static const Word wdIndonesian = 0x421;
static const Word wdInuktitut = 0x45d;
static const Word wdItalian = 0x410;
static const Word wdSwissItalian = 0x810;
static const Word wdJapanese = 0x411;
static const Word wdKannada = 0x44b;
static const Word wdKanuri = 0x471;
static const Word wdKashmiri = 0x460;
static const Word wdKazakh = 0x43f;
static const Word wdKhmer = 0x453;
static const Word wdKirghiz = 0x440;
static const Word wdKonkani = 0x457;
static const Word wdKorean = 0x412;
static const Word wdKyrgyz = 0x440;
static const Word wdLao = 0x454;
static const Word wdLatin = 0x476;
static const Word wdLatvian = 0x426;
static const Word wdLithuanian = 0x427;
static const Word wdMacedonian = 0x42f;
static const Word wdMalaysian = 0x43e;
static const Word wdMalayBruneiDarussalam = 0x83e;
static const Word wdMalayalam = 0x44c;
static const Word wdMaltese = 0x43a;
static const Word wdManipuri = 0x458;
static const Word wdMarathi = 0x44e;
static const Word wdMongolian = 0x450;
static const Word wdNepali = 0x461;
static const Word wdNorwegianBokmol = 0x414;
static const Word wdNorwegianNynorsk = 0x814;
static const Word wdOriya = 0x448;
static const Word wdOromo = 0x472;
static const Word wdPashto = 0x463;
static const Word wdPolish = 0x415;
static const Word wdBrazilianPortuguese = 0x416;
static const Word wdPortuguese = 0x816;
static const Word wdPunjabi = 0x446;
static const Word wdRhaetoRomanic = 0x417;
static const Word wdRomanianMoldova = 0x818;
static const Word wdRomanian = 0x418;
static const Word wdRussianMoldova = 0x819;
static const Word wdRussian = 0x419;
static const Word wdSamiLappish = 0x43b;
static const Word wdSanskrit = 0x44f;
static const Word wdSerbianCyrillic = 0xc1a;
static const Word wdSerbianLatin = 0x81a;
static const Word wdSinhalese = 0x45b;
static const Word wdSindhi = 0x459;
static const Word wdSindhiPakistan = 0x859;
static const Word wdSlovak = 0x41b;
static const Word wdSlovenian = 0x424;
static const Word wdSomali = 0x477;
static const Word wdSorbian = 0x42e;
static const Word wdSpanishArgentina = 0x2c0a;
static const Word wdSpanishBolivia = 0x400a;
static const Word wdSpanishChile = 0x340a;
static const Word wdSpanishColombia = 0x240a;
static const Word wdSpanishCostaRica = 0x140a;
static const Word wdSpanishDominicanRepublic = 0x1c0a;
static const Word wdSpanishEcuador = 0x300a;
static const Word wdSpanishElSalvador = 0x440a;
static const Word wdSpanishGuatemala = 0x100a;
static const Word wdSpanishHonduras = 0x480a;
static const Word wdMexicanSpanish = 0x80a;
static const Word wdSpanishNicaragua = 0x4c0a;
static const Word wdSpanishPanama = 0x180a;
static const Word wdSpanishParaguay = 0x3c0a;
static const Word wdSpanishPeru = 0x280a;
static const Word wdSpanishPuertoRico = 0x500a;
static const Word wdSpanishModernSort = 0xc0a;
static const Word wdSpanish = 0x40a;
static const Word wdSpanishUruguay = 0x380a;
static const Word wdSpanishVenezuela = 0x200a;
static const Word wdSesotho = 0x430;
static const Word wdSutu = 0x430;
static const Word wdSwahili = 0x441;
static const Word wdSwedishFinland = 0x81d;
static const Word wdSwedish = 0x41d;
static const Word wdSyriac = 0x45a;
static const Word wdTajik = 0x428;
static const Word wdTamazight = 0x45f;
static const Word wdTamazightLatin = 0x85f;
static const Word wdTamil = 0x449;
static const Word wdTatar = 0x444;
static const Word wdTelugu = 0x44a;
static const Word wdThai = 0x41e;
static const Word wdTibetan = 0x451;
static const Word wdTigrignaEthiopic = 0x473;
static const Word wdTigrignaEritrea = 0x873;
static const Word wdTsonga = 0x431;
static const Word wdTswana = 0x432;
static const Word wdTurkish = 0x41f;
static const Word wdTurkmen = 0x442;
static const Word wdUkrainian = 0x422;
static const Word wdUrdu = 0x420;
static const Word wdUzbekCyrillic = 0x843;
static const Word wdUzbekLatin = 0x443;
static const Word wdVenda = 0x433;
static const Word wdVietnamese = 0x42a;
static const Word wdWelsh = 0x452;
static const Word wdXhosa = 0x434;
static const Word wdYi = 0x478;
static const Word wdYiddish = 0x43d;
static const Word wdYoruba = 0x46a;
static const Word wdZulu = 0x435;
static const unsigned wdFieldEmpty = 0xffffffff;
static const Shortint wdFieldRef = 0x3;
static const Shortint wdFieldIndexEntry = 0x4;
static const Shortint wdFieldFootnoteRef = 0x5;
static const Shortint wdFieldSet = 0x6;
static const Shortint wdFieldIf = 0x7;
static const Shortint wdFieldIndex = 0x8;
static const Shortint wdFieldTOCEntry = 0x9;
static const Shortint wdFieldStyleRef = 0xa;
static const Shortint wdFieldRefDoc = 0xb;
static const Shortint wdFieldSequence = 0xc;
static const Shortint wdFieldTOC = 0xd;
static const Shortint wdFieldInfo = 0xe;
static const Shortint wdFieldTitle = 0xf;
static const Shortint wdFieldSubject = 0x10;
static const Shortint wdFieldAuthor = 0x11;
static const Shortint wdFieldKeyWord = 0x12;
static const Shortint wdFieldComments = 0x13;
static const Shortint wdFieldLastSavedBy = 0x14;
static const Shortint wdFieldCreateDate = 0x15;
static const Shortint wdFieldSaveDate = 0x16;
static const Shortint wdFieldPrintDate = 0x17;
static const Shortint wdFieldRevisionNum = 0x18;
static const Shortint wdFieldEditTime = 0x19;
static const Shortint wdFieldNumPages = 0x1a;
static const Shortint wdFieldNumWords = 0x1b;
static const Shortint wdFieldNumChars = 0x1c;
static const Shortint wdFieldFileName = 0x1d;
static const Shortint wdFieldTemplate = 0x1e;
static const Shortint wdFieldDate = 0x1f;
static const Shortint wdFieldTime = 0x20;
static const Shortint wdFieldPage = 0x21;
static const Shortint wdFieldExpression = 0x22;
static const Shortint wdFieldQuote = 0x23;
static const Shortint wdFieldInclude = 0x24;
static const Shortint wdFieldPageRef = 0x25;
static const Shortint wdFieldAsk = 0x26;
static const Shortint wdFieldFillIn = 0x27;
static const Shortint wdFieldData = 0x28;
static const Shortint wdFieldNext = 0x29;
static const Shortint wdFieldNextIf = 0x2a;
static const Shortint wdFieldSkipIf = 0x2b;
static const Shortint wdFieldMergeRec = 0x2c;
static const Shortint wdFieldDDE = 0x2d;
static const Shortint wdFieldDDEAuto = 0x2e;
static const Shortint wdFieldGlossary = 0x2f;
static const Shortint wdFieldPrint = 0x30;
static const Shortint wdFieldFormula = 0x31;
static const Shortint wdFieldGoToButton = 0x32;
static const Shortint wdFieldMacroButton = 0x33;
static const Shortint wdFieldAutoNumOutline = 0x34;
static const Shortint wdFieldAutoNumLegal = 0x35;
static const Shortint wdFieldAutoNum = 0x36;
static const Shortint wdFieldImport = 0x37;
static const Shortint wdFieldLink = 0x38;
static const Shortint wdFieldSymbol = 0x39;
static const Shortint wdFieldEmbed = 0x3a;
static const Shortint wdFieldMergeField = 0x3b;
static const Shortint wdFieldUserName = 0x3c;
static const Shortint wdFieldUserInitials = 0x3d;
static const Shortint wdFieldUserAddress = 0x3e;
static const Shortint wdFieldBarCode = 0x3f;
static const Shortint wdFieldDocVariable = 0x40;
static const Shortint wdFieldSection = 0x41;
static const Shortint wdFieldSectionPages = 0x42;
static const Shortint wdFieldIncludePicture = 0x43;
static const Shortint wdFieldIncludeText = 0x44;
static const Shortint wdFieldFileSize = 0x45;
static const Shortint wdFieldFormTextInput = 0x46;
static const Shortint wdFieldFormCheckBox = 0x47;
static const Shortint wdFieldNoteRef = 0x48;
static const Shortint wdFieldTOA = 0x49;
static const Shortint wdFieldTOAEntry = 0x4a;
static const Shortint wdFieldMergeSeq = 0x4b;
static const Shortint wdFieldPrivate = 0x4d;
static const Shortint wdFieldDatabase = 0x4e;
static const Shortint wdFieldAutoText = 0x4f;
static const Shortint wdFieldCompare = 0x50;
static const Shortint wdFieldAddin = 0x51;
static const Shortint wdFieldSubscriber = 0x52;
static const Shortint wdFieldFormDropDown = 0x53;
static const Shortint wdFieldAdvance = 0x54;
static const Shortint wdFieldDocProperty = 0x55;
static const Shortint wdFieldOCX = 0x57;
static const Shortint wdFieldHyperlink = 0x58;
static const Shortint wdFieldAutoTextList = 0x59;
static const Shortint wdFieldListNum = 0x5a;
static const Shortint wdFieldHTMLActiveX = 0x5b;
static const Shortint wdFieldBidiOutline = 0x5c;
static const Shortint wdFieldAddressBlock = 0x5d;
static const Shortint wdFieldGreetingLine = 0x5e;
static const Shortint wdFieldShape = 0x5f;
static const unsigned wdStyleNormal = 0xffffffff;
static const unsigned wdStyleEnvelopeAddress = 0xffffffdb;
static const unsigned wdStyleEnvelopeReturn = 0xffffffda;
static const unsigned wdStyleBodyText = 0xffffffbd;
static const unsigned wdStyleHeading1 = 0xfffffffe;
static const unsigned wdStyleHeading2 = 0xfffffffd;
static const unsigned wdStyleHeading3 = 0xfffffffc;
static const unsigned wdStyleHeading4 = 0xfffffffb;
static const unsigned wdStyleHeading5 = 0xfffffffa;
static const unsigned wdStyleHeading6 = 0xfffffff9;
static const unsigned wdStyleHeading7 = 0xfffffff8;
static const unsigned wdStyleHeading8 = 0xfffffff7;
static const unsigned wdStyleHeading9 = 0xfffffff6;
static const unsigned wdStyleIndex1 = 0xfffffff5;
static const unsigned wdStyleIndex2 = 0xfffffff4;
static const unsigned wdStyleIndex3 = 0xfffffff3;
static const unsigned wdStyleIndex4 = 0xfffffff2;
static const unsigned wdStyleIndex5 = 0xfffffff1;
static const unsigned wdStyleIndex6 = 0xfffffff0;
static const unsigned wdStyleIndex7 = 0xffffffef;
static const unsigned wdStyleIndex8 = 0xffffffee;
static const unsigned wdStyleIndex9 = 0xffffffed;
static const unsigned wdStyleTOC1 = 0xffffffec;
static const unsigned wdStyleTOC2 = 0xffffffeb;
static const unsigned wdStyleTOC3 = 0xffffffea;
static const unsigned wdStyleTOC4 = 0xffffffe9;
static const unsigned wdStyleTOC5 = 0xffffffe8;
static const unsigned wdStyleTOC6 = 0xffffffe7;
static const unsigned wdStyleTOC7 = 0xffffffe6;
static const unsigned wdStyleTOC8 = 0xffffffe5;
static const unsigned wdStyleTOC9 = 0xffffffe4;
static const unsigned wdStyleNormalIndent = 0xffffffe3;
static const unsigned wdStyleFootnoteText = 0xffffffe2;
static const unsigned wdStyleCommentText = 0xffffffe1;
static const unsigned wdStyleHeader = 0xffffffe0;
static const unsigned wdStyleFooter = 0xffffffdf;
static const unsigned wdStyleIndexHeading = 0xffffffde;
static const unsigned wdStyleCaption = 0xffffffdd;
static const unsigned wdStyleTableOfFigures = 0xffffffdc;
static const unsigned wdStyleFootnoteReference = 0xffffffd9;
static const unsigned wdStyleCommentReference = 0xffffffd8;
static const unsigned wdStyleLineNumber = 0xffffffd7;
static const unsigned wdStylePageNumber = 0xffffffd6;
static const unsigned wdStyleEndnoteReference = 0xffffffd5;
static const unsigned wdStyleEndnoteText = 0xffffffd4;
static const unsigned wdStyleTableOfAuthorities = 0xffffffd3;
static const unsigned wdStyleMacroText = 0xffffffd2;
static const unsigned wdStyleTOAHeading = 0xffffffd1;
static const unsigned wdStyleList = 0xffffffd0;
static const unsigned wdStyleListBullet = 0xffffffcf;
static const unsigned wdStyleListNumber = 0xffffffce;
static const unsigned wdStyleList2 = 0xffffffcd;
static const unsigned wdStyleList3 = 0xffffffcc;
static const unsigned wdStyleList4 = 0xffffffcb;
static const unsigned wdStyleList5 = 0xffffffca;
static const unsigned wdStyleListBullet2 = 0xffffffc9;
static const unsigned wdStyleListBullet3 = 0xffffffc8;
static const unsigned wdStyleListBullet4 = 0xffffffc7;
static const unsigned wdStyleListBullet5 = 0xffffffc6;
static const unsigned wdStyleListNumber2 = 0xffffffc5;
static const unsigned wdStyleListNumber3 = 0xffffffc4;
static const unsigned wdStyleListNumber4 = 0xffffffc3;
static const unsigned wdStyleListNumber5 = 0xffffffc2;
static const unsigned wdStyleTitle = 0xffffffc1;
static const unsigned wdStyleClosing = 0xffffffc0;
static const unsigned wdStyleSignature = 0xffffffbf;
static const unsigned wdStyleDefaultParagraphFont = 0xffffffbe;
static const unsigned wdStyleBodyTextIndent = 0xffffffbc;
static const unsigned wdStyleListContinue = 0xffffffbb;
static const unsigned wdStyleListContinue2 = 0xffffffba;
static const unsigned wdStyleListContinue3 = 0xffffffb9;
static const unsigned wdStyleListContinue4 = 0xffffffb8;
static const unsigned wdStyleListContinue5 = 0xffffffb7;
static const unsigned wdStyleMessageHeader = 0xffffffb6;
static const unsigned wdStyleSubtitle = 0xffffffb5;
static const unsigned wdStyleSalutation = 0xffffffb4;
static const unsigned wdStyleDate = 0xffffffb3;
static const unsigned wdStyleBodyTextFirstIndent = 0xffffffb2;
static const unsigned wdStyleBodyTextFirstIndent2 = 0xffffffb1;
static const unsigned wdStyleNoteHeading = 0xffffffb0;
static const unsigned wdStyleBodyText2 = 0xffffffaf;
static const unsigned wdStyleBodyText3 = 0xffffffae;
static const unsigned wdStyleBodyTextIndent2 = 0xffffffad;
static const unsigned wdStyleBodyTextIndent3 = 0xffffffac;
static const unsigned wdStyleBlockQuotation = 0xffffffab;
static const unsigned wdStyleHyperlink = 0xffffffaa;
static const unsigned wdStyleHyperlinkFollowed = 0xffffffa9;
static const unsigned wdStyleStrong = 0xffffffa8;
static const unsigned wdStyleEmphasis = 0xffffffa7;
static const unsigned wdStyleNavPane = 0xffffffa6;
static const unsigned wdStylePlainText = 0xffffffa5;
static const unsigned wdStyleHtmlNormal = 0xffffffa1;
static const unsigned wdStyleHtmlAcronym = 0xffffffa0;
static const unsigned wdStyleHtmlAddress = 0xffffff9f;
static const unsigned wdStyleHtmlCite = 0xffffff9e;
static const unsigned wdStyleHtmlCode = 0xffffff9d;
static const unsigned wdStyleHtmlDfn = 0xffffff9c;
static const unsigned wdStyleHtmlKbd = 0xffffff9b;
static const unsigned wdStyleHtmlPre = 0xffffff9a;
static const unsigned wdStyleHtmlSamp = 0xffffff99;
static const unsigned wdStyleHtmlTt = 0xffffff98;
static const unsigned wdStyleHtmlVar = 0xffffff97;
static const unsigned wdStyleNormalTable = 0xffffff96;
static const Byte wdDialogToolsOptionsTabView = 0xcc;
static const Byte wdDialogToolsOptionsTabGeneral = 0xcb;
static const Byte wdDialogToolsOptionsTabEdit = 0xe0;
static const Byte wdDialogToolsOptionsTabPrint = 0xd0;
static const Byte wdDialogToolsOptionsTabSave = 0xd1;
static const Byte wdDialogToolsOptionsTabProofread = 0xd3;
static const Word wdDialogToolsOptionsTabTrackChanges = 0x182;
static const Byte wdDialogToolsOptionsTabUserInfo = 0xd5;
static const Word wdDialogToolsOptionsTabCompatibility = 0x20d;
static const Word wdDialogToolsOptionsTabTypography = 0x2e3;
static const Byte wdDialogToolsOptionsTabFileLocations = 0xe1;
static const Word wdDialogToolsOptionsTabFuzzy = 0x316;
static const Word wdDialogToolsOptionsTabHangulHanjaConversion = 0x312;
static const Word wdDialogToolsOptionsTabBidi = 0x405;
static const Word wdDialogToolsOptionsTabSecurity = 0x551;
static const int wdDialogFilePageSetupTabMargins = 0x249f0;
static const int wdDialogFilePageSetupTabPaper = 0x249f1;
static const int wdDialogFilePageSetupTabLayout = 0x249f3;
static const int wdDialogFilePageSetupTabCharsLines = 0x249f4;
static const int wdDialogInsertSymbolTabSymbols = 0x30d40;
static const int wdDialogInsertSymbolTabSpecialCharacters = 0x30d41;
static const int wdDialogNoteOptionsTabAllFootnotes = 0x493e0;
static const int wdDialogNoteOptionsTabAllEndnotes = 0x493e1;
static const int wdDialogInsertIndexAndTablesTabIndex = 0x61a80;
static const int wdDialogInsertIndexAndTablesTabTableOfContents = 0x61a81;
static const int wdDialogInsertIndexAndTablesTabTableOfFigures = 0x61a82;
static const int wdDialogInsertIndexAndTablesTabTableOfAuthorities = 0x61a83;
static const int wdDialogOrganizerTabStyles = 0x7a120;
static const int wdDialogOrganizerTabAutoText = 0x7a121;
static const int wdDialogOrganizerTabCommandBars = 0x7a122;
static const int wdDialogOrganizerTabMacros = 0x7a123;
static const int wdDialogFormatFontTabFont = 0x927c0;
static const int wdDialogFormatFontTabCharacterSpacing = 0x927c1;
static const int wdDialogFormatFontTabAnimation = 0x927c2;
static const int wdDialogFormatBordersAndShadingTabBorders = 0xaae60;
static const int wdDialogFormatBordersAndShadingTabPageBorder = 0xaae61;
static const int wdDialogFormatBordersAndShadingTabShading = 0xaae62;
static const int wdDialogToolsEnvelopesAndLabelsTabEnvelopes = 0xc3500;
static const int wdDialogToolsEnvelopesAndLabelsTabLabels = 0xc3501;
static const int wdDialogFormatParagraphTabIndentsAndSpacing = 0xf4240;
static const int wdDialogFormatParagraphTabTextFlow = 0xf4241;
static const int wdDialogFormatParagraphTabTeisai = 0xf4242;
static const int wdDialogFormatDrawingObjectTabColorsAndLines = 0x124f80;
static const int wdDialogFormatDrawingObjectTabSize = 0x124f81;
static const int wdDialogFormatDrawingObjectTabPosition = 0x124f82;
static const int wdDialogFormatDrawingObjectTabWrapping = 0x124f83;
static const int wdDialogFormatDrawingObjectTabPicture = 0x124f84;
static const int wdDialogFormatDrawingObjectTabTextbox = 0x124f85;
static const int wdDialogFormatDrawingObjectTabWeb = 0x124f86;
static const int wdDialogFormatDrawingObjectTabHR = 0x124f87;
static const int wdDialogToolsAutoCorrectExceptionsTabFirstLetter = 0x155cc0;
static const int wdDialogToolsAutoCorrectExceptionsTabInitialCaps = 0x155cc1;
static const int wdDialogToolsAutoCorrectExceptionsTabHangulAndAlphabet = 0x155cc2;
static const int wdDialogToolsAutoCorrectExceptionsTabIac = 0x155cc3;
static const int wdDialogFormatBulletsAndNumberingTabBulleted = 0x16e360;
static const int wdDialogFormatBulletsAndNumberingTabNumbered = 0x16e361;
static const int wdDialogFormatBulletsAndNumberingTabOutlineNumbered = 0x16e362;
static const int wdDialogLetterWizardTabLetterFormat = 0x186a00;
static const int wdDialogLetterWizardTabRecipientInfo = 0x186a01;
static const int wdDialogLetterWizardTabOtherElements = 0x186a02;
static const int wdDialogLetterWizardTabSenderInfo = 0x186a03;
static const int wdDialogToolsAutoManagerTabAutoCorrect = 0x19f0a0;
static const int wdDialogToolsAutoManagerTabAutoFormatAsYouType = 0x19f0a1;
static const int wdDialogToolsAutoManagerTabAutoText = 0x19f0a2;
static const int wdDialogToolsAutoManagerTabAutoFormat = 0x19f0a3;
static const int wdDialogToolsAutoManagerTabSmartTags = 0x19f0a4;
static const int wdDialogTablePropertiesTabTable = 0x1b7740;
static const int wdDialogTablePropertiesTabRow = 0x1b7741;
static const int wdDialogTablePropertiesTabColumn = 0x1b7742;
static const int wdDialogTablePropertiesTabCell = 0x1b7743;
static const int wdDialogEmailOptionsTabSignature = 0x1cfde0;
static const int wdDialogEmailOptionsTabStationary = 0x1cfde1;
static const int wdDialogEmailOptionsTabQuoting = 0x1cfde2;
static const int wdDialogWebOptionsBrowsers = 0x1e8480;
static const int wdDialogWebOptionsGeneral = 0x1e8480;
static const int wdDialogWebOptionsFiles = 0x1e8481;
static const int wdDialogWebOptionsPictures = 0x1e8482;
static const int wdDialogWebOptionsEncoding = 0x1e8483;
static const int wdDialogWebOptionsFonts = 0x1e8484;
static const Word wdDialogToolsOptionsTabAcetate = 0x4f2;
static const int wdDialogFilePageSetupTabPaperSize = 0x249f1;
static const int wdDialogFilePageSetupTabPaperSource = 0x249f2;
static const Shortint wdDialogHelpAbout = 0x9;
static const Shortint wdDialogHelpWordPerfectHelp = 0xa;
static const Shortint wdDialogDocumentStatistics = 0x4e;
static const Shortint wdDialogFileNew = 0x4f;
static const Shortint wdDialogFileOpen = 0x50;
static const Shortint wdDialogMailMergeOpenDataSource = 0x51;
static const Shortint wdDialogMailMergeOpenHeaderSource = 0x52;
static const Shortint wdDialogFileSaveAs = 0x54;
static const Shortint wdDialogFileSummaryInfo = 0x56;
static const Shortint wdDialogToolsTemplates = 0x57;
static const Shortint wdDialogFilePrint = 0x58;
static const Shortint wdDialogFilePrintSetup = 0x61;
static const Shortint wdDialogFileFind = 0x63;
static const Shortint wdDialogFormatAddrFonts = 0x67;
static const Shortint wdDialogEditPasteSpecial = 0x6f;
static const Shortint wdDialogEditFind = 0x70;
static const Shortint wdDialogEditReplace = 0x75;
static const Shortint wdDialogEditStyle = 0x78;
static const Shortint wdDialogEditLinks = 0x7c;
static const Shortint wdDialogEditObject = 0x7d;
static const Byte wdDialogTableToText = 0x80;
static const Shortint wdDialogTextToTable = 0x7f;
static const Byte wdDialogTableInsertTable = 0x81;
static const Byte wdDialogTableInsertCells = 0x82;
static const Byte wdDialogTableInsertRow = 0x83;
static const Byte wdDialogTableDeleteCells = 0x85;
static const Byte wdDialogTableSplitCells = 0x89;
static const Byte wdDialogTableRowHeight = 0x8e;
static const Byte wdDialogTableColumnWidth = 0x8f;
static const Byte wdDialogToolsCustomize = 0x98;
static const Byte wdDialogInsertBreak = 0x9f;
static const Byte wdDialogInsertSymbol = 0xa2;
static const Byte wdDialogInsertPicture = 0xa3;
static const Byte wdDialogInsertFile = 0xa4;
static const Byte wdDialogInsertDateTime = 0xa5;
static const Byte wdDialogInsertField = 0xa6;
static const Byte wdDialogInsertMergeField = 0xa7;
static const Byte wdDialogInsertBookmark = 0xa8;
static const Byte wdDialogMarkIndexEntry = 0xa9;
static const Byte wdDialogInsertIndex = 0xaa;
static const Byte wdDialogInsertTableOfContents = 0xab;
static const Byte wdDialogInsertObject = 0xac;
static const Byte wdDialogToolsCreateEnvelope = 0xad;
static const Byte wdDialogFormatFont = 0xae;
static const Byte wdDialogFormatParagraph = 0xaf;
static const Byte wdDialogFormatSectionLayout = 0xb0;
static const Byte wdDialogFormatColumns = 0xb1;
static const Byte wdDialogFileDocumentLayout = 0xb2;
static const Byte wdDialogFilePageSetup = 0xb2;
static const Byte wdDialogFormatTabs = 0xb3;
static const Byte wdDialogFormatStyle = 0xb4;
static const Byte wdDialogFormatDefineStyleFont = 0xb5;
static const Byte wdDialogFormatDefineStylePara = 0xb6;
static const Byte wdDialogFormatDefineStyleTabs = 0xb7;
static const Byte wdDialogFormatDefineStyleFrame = 0xb8;
static const Byte wdDialogFormatDefineStyleBorders = 0xb9;
static const Byte wdDialogFormatDefineStyleLang = 0xba;
static const Byte wdDialogFormatPicture = 0xbb;
static const Byte wdDialogToolsLanguage = 0xbc;
static const Byte wdDialogFormatBordersAndShading = 0xbd;
static const Byte wdDialogFormatFrame = 0xbe;
static const Byte wdDialogToolsThesaurus = 0xc2;
static const Byte wdDialogToolsHyphenation = 0xc3;
static const Byte wdDialogToolsBulletsNumbers = 0xc4;
static const Byte wdDialogToolsHighlightChanges = 0xc5;
static const Byte wdDialogToolsRevisions = 0xc5;
static const Byte wdDialogToolsCompareDocuments = 0xc6;
static const Byte wdDialogTableSort = 0xc7;
static const Byte wdDialogToolsOptionsGeneral = 0xcb;
static const Byte wdDialogToolsOptionsView = 0xcc;
static const Byte wdDialogToolsAdvancedSettings = 0xce;
static const Byte wdDialogToolsOptionsPrint = 0xd0;
static const Byte wdDialogToolsOptionsSave = 0xd1;
static const Byte wdDialogToolsOptionsSpellingAndGrammar = 0xd3;
static const Byte wdDialogToolsOptionsUserInfo = 0xd5;
static const Byte wdDialogToolsMacroRecord = 0xd6;
static const Byte wdDialogToolsMacro = 0xd7;
static const Byte wdDialogWindowActivate = 0xdc;
static const Byte wdDialogFormatRetAddrFonts = 0xdd;
static const Byte wdDialogOrganizer = 0xde;
static const Byte wdDialogToolsOptionsEdit = 0xe0;
static const Byte wdDialogToolsOptionsFileLocations = 0xe1;
static const Byte wdDialogToolsWordCount = 0xe4;
static const Byte wdDialogControlRun = 0xeb;
static const Word wdDialogInsertPageNumbers = 0x126;
static const Word wdDialogFormatPageNumber = 0x12a;
static const Word wdDialogCopyFile = 0x12c;
static const Word wdDialogFormatChangeCase = 0x142;
static const Word wdDialogUpdateTOC = 0x14b;
static const Word wdDialogInsertDatabase = 0x155;
static const Word wdDialogTableFormula = 0x15c;
static const Word wdDialogFormFieldOptions = 0x161;
static const Word wdDialogInsertCaption = 0x165;
static const Word wdDialogInsertCaptionNumbering = 0x166;
static const Word wdDialogInsertAutoCaption = 0x167;
static const Word wdDialogFormFieldHelp = 0x169;
static const Word wdDialogInsertCrossReference = 0x16f;
static const Word wdDialogInsertFootnote = 0x172;
static const Word wdDialogNoteOptions = 0x175;
static const Word wdDialogToolsAutoCorrect = 0x17a;
static const Word wdDialogToolsOptionsTrackChanges = 0x182;
static const Word wdDialogConvertObject = 0x188;
static const Word wdDialogInsertAddCaption = 0x192;
static const Word wdDialogConnect = 0x1a4;
static const Word wdDialogToolsCustomizeKeyboard = 0x1b0;
static const Word wdDialogToolsCustomizeMenus = 0x1b1;
static const Word wdDialogToolsMergeDocuments = 0x1b3;
static const Word wdDialogMarkTableOfContentsEntry = 0x1ba;
static const Word wdDialogFileMacPageSetupGX = 0x1bc;
static const Word wdDialogFilePrintOneCopy = 0x1bd;
static const Word wdDialogEditFrame = 0x1ca;
static const Word wdDialogMarkCitation = 0x1cf;
static const Word wdDialogTableOfContentsOptions = 0x1d6;
static const Word wdDialogInsertTableOfAuthorities = 0x1d7;
static const Word wdDialogInsertTableOfFigures = 0x1d8;
static const Word wdDialogInsertIndexAndTables = 0x1d9;
static const Word wdDialogInsertFormField = 0x1e3;
static const Word wdDialogFormatDropCap = 0x1e8;
static const Word wdDialogToolsCreateLabels = 0x1e9;
static const Word wdDialogToolsProtectDocument = 0x1f7;
static const Word wdDialogFormatStyleGallery = 0x1f9;
static const Word wdDialogToolsAcceptRejectChanges = 0x1fa;
static const Word wdDialogHelpWordPerfectHelpOptions = 0x1ff;
static const Word wdDialogToolsUnprotectDocument = 0x209;
static const Word wdDialogToolsOptionsCompatibility = 0x20d;
static const Word wdDialogTableOfCaptionsOptions = 0x227;
static const Word wdDialogTableAutoFormat = 0x233;
static const Word wdDialogMailMergeFindRecord = 0x239;
static const Word wdDialogReviewAfmtRevisions = 0x23a;
static const Word wdDialogViewZoom = 0x241;
static const Word wdDialogToolsProtectSection = 0x242;
static const Word wdDialogFontSubstitution = 0x245;
static const Word wdDialogInsertSubdocument = 0x247;
static const Word wdDialogNewToolbar = 0x24a;
static const Word wdDialogToolsEnvelopesAndLabels = 0x25f;
static const Word wdDialogFormatCallout = 0x262;
static const Word wdDialogTableFormatCell = 0x264;
static const Word wdDialogToolsCustomizeMenuBar = 0x267;
static const Word wdDialogFileRoutingSlip = 0x270;
static const Word wdDialogEditTOACategory = 0x271;
static const Word wdDialogToolsManageFields = 0x277;
static const Word wdDialogDrawSnapToGrid = 0x279;
static const Word wdDialogDrawAlign = 0x27a;
static const Word wdDialogMailMergeCreateDataSource = 0x282;
static const Word wdDialogMailMergeCreateHeaderSource = 0x283;
static const Word wdDialogMailMerge = 0x2a4;
static const Word wdDialogMailMergeCheck = 0x2a5;
static const Word wdDialogMailMergeHelper = 0x2a8;
static const Word wdDialogMailMergeQueryOptions = 0x2a9;
static const Word wdDialogFileMacPageSetup = 0x2ad;
static const Word wdDialogListCommands = 0x2d3;
static const Word wdDialogEditCreatePublisher = 0x2dc;
static const Word wdDialogEditSubscribeTo = 0x2dd;
static const Word wdDialogEditPublishOptions = 0x2df;
static const Word wdDialogEditSubscribeOptions = 0x2e0;
static const Word wdDialogFileMacCustomPageSetupGX = 0x2e1;
static const Word wdDialogToolsOptionsTypography = 0x2e3;
static const Word wdDialogToolsAutoCorrectExceptions = 0x2fa;
static const Word wdDialogToolsOptionsAutoFormatAsYouType = 0x30a;
static const Word wdDialogMailMergeUseAddressBook = 0x30b;
static const Word wdDialogToolsHangulHanjaConversion = 0x310;
static const Word wdDialogToolsOptionsFuzzy = 0x316;
static const Word wdDialogEditGoToOld = 0x32b;
static const Word wdDialogInsertNumber = 0x32c;
static const Word wdDialogLetterWizard = 0x335;
static const Word wdDialogFormatBulletsAndNumbering = 0x338;
static const Word wdDialogToolsSpellingAndGrammar = 0x33c;
static const Word wdDialogToolsCreateDirectory = 0x341;
static const Word wdDialogTableWrapping = 0x356;
static const Word wdDialogFormatTheme = 0x357;
static const Word wdDialogTableProperties = 0x35d;
static const Word wdDialogEmailOptions = 0x35f;
static const Word wdDialogCreateAutoText = 0x368;
static const Word wdDialogToolsAutoSummarize = 0x36a;
static const Word wdDialogToolsGrammarSettings = 0x375;
static const Word wdDialogEditGoTo = 0x380;
static const Word wdDialogWebOptions = 0x382;
static const Word wdDialogInsertHyperlink = 0x39d;
static const Word wdDialogToolsAutoManager = 0x393;
static const Word wdDialogFileVersions = 0x3b1;
static const Word wdDialogToolsOptionsAutoFormat = 0x3bf;
static const Word wdDialogFormatDrawingObject = 0x3c0;
static const Word wdDialogToolsOptions = 0x3ce;
static const Word wdDialogFitText = 0x3d7;
static const Word wdDialogEditAutoText = 0x3d9;
static const Word wdDialogPhoneticGuide = 0x3da;
static const Word wdDialogToolsDictionary = 0x3dd;
static const Word wdDialogFileSaveVersion = 0x3ef;
static const Word wdDialogToolsOptionsBidi = 0x405;
static const Word wdDialogFrameSetProperties = 0x432;
static const Word wdDialogTableTableOptions = 0x438;
static const Word wdDialogTableCellOptions = 0x439;
static const Word wdDialogIMESetDefault = 0x446;
static const Word wdDialogTCSCTranslator = 0x484;
static const Word wdDialogHorizontalInVertical = 0x488;
static const Word wdDialogTwoLinesInOne = 0x489;
static const Word wdDialogFormatEncloseCharacters = 0x48a;
static const Word wdDialogConsistencyChecker = 0x461;
static const Word wdDialogToolsOptionsSmartTag = 0x573;
static const Word wdDialogFormatStylesCustom = 0x4e0;
static const Word wdDialogCSSLinks = 0x4ed;
static const Word wdDialogInsertWebComponent = 0x52c;
static const Word wdDialogToolsOptionsEditCopyPaste = 0x54c;
static const Word wdDialogToolsOptionsSecurity = 0x551;
static const Word wdDialogSearch = 0x553;
static const Word wdDialogShowRepairs = 0x565;
static const Word wdDialogMailMergeInsertAsk = 0xfcf;
static const Word wdDialogMailMergeInsertFillIn = 0xfd0;
static const Word wdDialogMailMergeInsertIf = 0xfd1;
static const Word wdDialogMailMergeInsertNextIf = 0xfd5;
static const Word wdDialogMailMergeInsertSet = 0xfd6;
static const Word wdDialogMailMergeInsertSkipIf = 0xfd7;
static const Word wdDialogMailMergeFieldMapping = 0x518;
static const Word wdDialogMailMergeInsertAddressBlock = 0x519;
static const Word wdDialogMailMergeInsertGreetingLine = 0x51a;
static const Word wdDialogMailMergeInsertFields = 0x51b;
static const Word wdDialogMailMergeRecipients = 0x51c;
static const Word wdDialogMailMergeFindRecipient = 0x52e;
static const Word wdDialogMailMergeSetDocumentType = 0x53b;
static const Shortint emptyenum___________ = 0x0;
static const Shortint wdFieldKindNone = 0x0;
static const Shortint wdFieldKindHot = 0x1;
static const Shortint wdFieldKindWarm = 0x2;
static const Shortint wdFieldKindCold = 0x3;
static const Shortint wdRegularText = 0x0;
static const Shortint wdNumberText = 0x1;
static const Shortint wdDateText = 0x2;
static const Shortint wdCurrentDateText = 0x3;
static const Shortint wdCurrentTimeText = 0x4;
static const Shortint wdCalculationText = 0x5;
static const Shortint wdNeverConvert = 0x0;
static const Shortint wdAlwaysConvert = 0x1;
static const Shortint wdAskToNotConvert = 0x2;
static const Shortint wdAskToConvert = 0x3;
static const unsigned wdNotAMergeDocument = 0xffffffff;
static const Shortint wdFormLetters = 0x0;
static const Shortint wdMailingLabels = 0x1;
static const Shortint wdEnvelopes = 0x2;
static const Shortint wdCatalog = 0x3;
static const Shortint wdEMail = 0x4;
static const Shortint wdFax = 0x5;
static const Shortint wdDirectory = 0x3;
static const Shortint wdNormalDocument = 0x0;
static const Shortint wdMainDocumentOnly = 0x1;
static const Shortint wdMainAndDataSource = 0x2;
static const Shortint wdMainAndHeader = 0x3;
static const Shortint wdMainAndSourceAndHeader = 0x4;
static const Shortint wdDataSource = 0x5;
static const Shortint wdSendToNewDocument = 0x0;
static const Shortint wdSendToPrinter = 0x1;
static const Shortint wdSendToEmail = 0x2;
static const Shortint wdSendToFax = 0x3;
static const unsigned wdNoActiveRecord = 0xffffffff;
static const unsigned wdNextRecord = 0xfffffffe;
static const unsigned wdPreviousRecord = 0xfffffffd;
static const unsigned wdFirstRecord = 0xfffffffc;
static const unsigned wdLastRecord = 0xfffffffb;
static const unsigned wdFirstDataSourceRecord = 0xfffffffa;
static const unsigned wdLastDataSourceRecord = 0xfffffff9;
static const unsigned wdNextDataSourceRecord = 0xfffffff8;
static const unsigned wdPreviousDataSourceRecord = 0xfffffff7;
static const Shortint wdDefaultFirstRecord = 0x1;
static const unsigned wdDefaultLastRecord = 0xfffffff0;
static const unsigned wdNoMergeInfo = 0xffffffff;
static const Shortint wdMergeInfoFromWord = 0x0;
static const Shortint wdMergeInfoFromAccessDDE = 0x1;
static const Shortint wdMergeInfoFromExcelDDE = 0x2;
static const Shortint wdMergeInfoFromMSQueryDDE = 0x3;
static const Shortint wdMergeInfoFromODBC = 0x4;
static const Shortint wdMergeInfoFromODSO = 0x5;
static const Shortint wdMergeIfEqual = 0x0;
static const Shortint wdMergeIfNotEqual = 0x1;
static const Shortint wdMergeIfLessThan = 0x2;
static const Shortint wdMergeIfGreaterThan = 0x3;
static const Shortint wdMergeIfLessThanOrEqual = 0x4;
static const Shortint wdMergeIfGreaterThanOrEqual = 0x5;
static const Shortint wdMergeIfIsBlank = 0x6;
static const Shortint wdMergeIfIsNotBlank = 0x7;
static const Shortint wdSortByName = 0x0;
static const Shortint wdSortByLocation = 0x1;
static const Shortint wdWindowStateNormal = 0x0;
static const Shortint wdWindowStateMaximize = 0x1;
static const Shortint wdWindowStateMinimize = 0x2;
static const Shortint wdLinkNone = 0x0;
static const Shortint wdLinkDataInDoc = 0x1;
static const Shortint wdLinkDataOnDisk = 0x2;
static const Shortint wdLinkTypeOLE = 0x0;
static const Shortint wdLinkTypePicture = 0x1;
static const Shortint wdLinkTypeText = 0x2;
static const Shortint wdLinkTypeReference = 0x3;
static const Shortint wdLinkTypeInclude = 0x4;
static const Shortint wdLinkTypeImport = 0x5;
static const Shortint wdLinkTypeDDE = 0x6;
static const Shortint wdLinkTypeDDEAuto = 0x7;
static const Shortint wdWindowDocument = 0x0;
static const Shortint wdWindowTemplate = 0x1;
static const Shortint wdNormalView = 0x1;
static const Shortint wdOutlineView = 0x2;
static const Shortint wdPrintView = 0x3;
static const Shortint wdPrintPreview = 0x4;
static const Shortint wdMasterView = 0x5;
static const Shortint wdWebView = 0x6;
static const Shortint wdSeekMainDocument = 0x0;
static const Shortint wdSeekPrimaryHeader = 0x1;
static const Shortint wdSeekFirstPageHeader = 0x2;
static const Shortint wdSeekEvenPagesHeader = 0x3;
static const Shortint wdSeekPrimaryFooter = 0x4;
static const Shortint wdSeekFirstPageFooter = 0x5;
static const Shortint wdSeekEvenPagesFooter = 0x6;
static const Shortint wdSeekFootnotes = 0x7;
static const Shortint wdSeekEndnotes = 0x8;
static const Shortint wdSeekCurrentPageHeader = 0x9;
static const Shortint wdSeekCurrentPageFooter = 0xa;
static const Shortint wdPaneNone = 0x0;
static const Shortint wdPanePrimaryHeader = 0x1;
static const Shortint wdPaneFirstPageHeader = 0x2;
static const Shortint wdPaneEvenPagesHeader = 0x3;
static const Shortint wdPanePrimaryFooter = 0x4;
static const Shortint wdPaneFirstPageFooter = 0x5;
static const Shortint wdPaneEvenPagesFooter = 0x6;
static const Shortint wdPaneFootnotes = 0x7;
static const Shortint wdPaneEndnotes = 0x8;
static const Shortint wdPaneFootnoteContinuationNotice = 0x9;
static const Shortint wdPaneFootnoteContinuationSeparator = 0xa;
static const Shortint wdPaneFootnoteSeparator = 0xb;
static const Shortint wdPaneEndnoteContinuationNotice = 0xc;
static const Shortint wdPaneEndnoteContinuationSeparator = 0xd;
static const Shortint wdPaneEndnoteSeparator = 0xe;
static const Shortint wdPaneComments = 0xf;
static const Shortint wdPaneCurrentPageHeader = 0x10;
static const Shortint wdPaneCurrentPageFooter = 0x11;
static const Shortint wdPaneRevisions = 0x12;
static const Shortint wdPageFitNone = 0x0;
static const Shortint wdPageFitFullPage = 0x1;
static const Shortint wdPageFitBestFit = 0x2;
static const Shortint wdPageFitTextFit = 0x3;
static const Shortint wdBrowsePage = 0x1;
static const Shortint wdBrowseSection = 0x2;
static const Shortint wdBrowseComment = 0x3;
static const Shortint wdBrowseFootnote = 0x4;
static const Shortint wdBrowseEndnote = 0x5;
static const Shortint wdBrowseField = 0x6;
static const Shortint wdBrowseTable = 0x7;
static const Shortint wdBrowseGraphic = 0x8;
static const Shortint wdBrowseHeading = 0x9;
static const Shortint wdBrowseEdit = 0xa;
static const Shortint wdBrowseFind = 0xb;
static const Shortint wdBrowseGoTo = 0xc;
static const Shortint wdPrinterDefaultBin = 0x0;
static const Shortint wdPrinterUpperBin = 0x1;
static const Shortint wdPrinterOnlyBin = 0x1;
static const Shortint wdPrinterLowerBin = 0x2;
static const Shortint wdPrinterMiddleBin = 0x3;
static const Shortint wdPrinterManualFeed = 0x4;
static const Shortint wdPrinterEnvelopeFeed = 0x5;
static const Shortint wdPrinterManualEnvelopeFeed = 0x6;
static const Shortint wdPrinterAutomaticSheetFeed = 0x7;
static const Shortint wdPrinterTractorFeed = 0x8;
static const Shortint wdPrinterSmallFormatBin = 0x9;
static const Shortint wdPrinterLargeFormatBin = 0xa;
static const Shortint wdPrinterLargeCapacityBin = 0xb;
static const Shortint wdPrinterPaperCassette = 0xe;
static const Shortint wdPrinterFormSource = 0xf;
static const Shortint wdOrientPortrait = 0x0;
static const Shortint wdOrientLandscape = 0x1;
static const Shortint wdNoSelection = 0x0;
static const Shortint wdSelectionIP = 0x1;
static const Shortint wdSelectionNormal = 0x2;
static const Shortint wdSelectionFrame = 0x3;
static const Shortint wdSelectionColumn = 0x4;
static const Shortint wdSelectionRow = 0x5;
static const Shortint wdSelectionBlock = 0x6;
static const Shortint wdSelectionInlineShape = 0x7;
static const Shortint wdSelectionShape = 0x8;
static const unsigned wdCaptionFigure = 0xffffffff;
static const unsigned wdCaptionTable = 0xfffffffe;
static const unsigned wdCaptionEquation = 0xfffffffd;
static const Shortint wdRefTypeNumberedItem = 0x0;
static const Shortint wdRefTypeHeading = 0x1;
static const Shortint wdRefTypeBookmark = 0x2;
static const Shortint wdRefTypeFootnote = 0x3;
static const Shortint wdRefTypeEndnote = 0x4;
static const unsigned wdContentText = 0xffffffff;
static const unsigned wdNumberRelativeContext = 0xfffffffe;
static const unsigned wdNumberNoContext = 0xfffffffd;
static const unsigned wdNumberFullContext = 0xfffffffc;
static const Shortint wdEntireCaption = 0x2;
static const Shortint wdOnlyLabelAndNumber = 0x3;
static const Shortint wdOnlyCaptionText = 0x4;
static const Shortint wdFootnoteNumber = 0x5;
static const Shortint wdEndnoteNumber = 0x6;
static const Shortint wdPageNumber = 0x7;
static const Shortint wdPosition = 0xf;
static const Shortint wdFootnoteNumberFormatted = 0x10;
static const Shortint wdEndnoteNumberFormatted = 0x11;
static const Shortint wdIndexTemplate = 0x0;
static const Shortint wdIndexClassic = 0x1;
static const Shortint wdIndexFancy = 0x2;
static const Shortint wdIndexModern = 0x3;
static const Shortint wdIndexBulleted = 0x4;
static const Shortint wdIndexFormal = 0x5;
static const Shortint wdIndexSimple = 0x6;
static const Shortint wdIndexIndent = 0x0;
static const Shortint wdIndexRunin = 0x1;
static const Shortint wdWrapNever = 0x0;
static const Shortint wdWrapAlways = 0x1;
static const Shortint wdWrapAsk = 0x2;
static const Shortint wdNoRevision = 0x0;
static const Shortint wdRevisionInsert = 0x1;
static const Shortint wdRevisionDelete = 0x2;
static const Shortint wdRevisionProperty = 0x3;
static const Shortint wdRevisionParagraphNumber = 0x4;
static const Shortint wdRevisionDisplayField = 0x5;
static const Shortint wdRevisionReconcile = 0x6;
static const Shortint wdRevisionConflict = 0x7;
static const Shortint wdRevisionStyle = 0x8;
static const Shortint wdRevisionReplace = 0x9;
static const Shortint wdRevisionParagraphProperty = 0xa;
static const Shortint wdRevisionTableProperty = 0xb;
static const Shortint wdRevisionSectionProperty = 0xc;
static const Shortint wdRevisionStyleDefinition = 0xd;
static const Shortint wdOneAfterAnother = 0x0;
static const Shortint wdAllAtOnce = 0x1;
static const Shortint wdNotYetRouted = 0x0;
static const Shortint wdRouteInProgress = 0x1;
static const Shortint wdRouteComplete = 0x2;
static const Shortint wdSectionContinuous = 0x0;
static const Shortint wdSectionNewColumn = 0x1;
static const Shortint wdSectionNewPage = 0x2;
static const Shortint wdSectionEvenPage = 0x3;
static const Shortint wdSectionOddPage = 0x4;
static const Shortint wdDoNotSaveChanges = 0x0;
static const unsigned wdSaveChanges = 0xffffffff;
static const unsigned wdPromptToSaveChanges = 0xfffffffe;
static const Shortint wdDocumentNotSpecified = 0x0;
static const Shortint wdDocumentLetter = 0x1;
static const Shortint wdDocumentEmail = 0x2;
static const Shortint wdTypeDocument = 0x0;
static const Shortint wdTypeTemplate = 0x1;
static const Shortint wdTypeFrameset = 0x2;
static const Shortint wdWordDocument = 0x0;
static const Shortint wdOriginalDocumentFormat = 0x1;
static const Shortint wdPromptUser = 0x2;
static const Shortint wdRelocateUp = 0x0;
static const Shortint wdRelocateDown = 0x1;
static const Shortint wdInsertedTextMarkNone = 0x0;
static const Shortint wdInsertedTextMarkBold = 0x1;
static const Shortint wdInsertedTextMarkItalic = 0x2;
static const Shortint wdInsertedTextMarkUnderline = 0x3;
static const Shortint wdInsertedTextMarkDoubleUnderline = 0x4;
static const Shortint wdInsertedTextMarkColorOnly = 0x5;
static const Shortint wdInsertedTextMarkStrikeThrough = 0x6;
static const Shortint wdRevisedLinesMarkNone = 0x0;
static const Shortint wdRevisedLinesMarkLeftBorder = 0x1;
static const Shortint wdRevisedLinesMarkRightBorder = 0x2;
static const Shortint wdRevisedLinesMarkOutsideBorder = 0x3;
static const Shortint wdDeletedTextMarkHidden = 0x0;
static const Shortint wdDeletedTextMarkStrikeThrough = 0x1;
static const Shortint wdDeletedTextMarkCaret = 0x2;
static const Shortint wdDeletedTextMarkPound = 0x3;
static const Shortint wdDeletedTextMarkNone = 0x4;
static const Shortint wdDeletedTextMarkBold = 0x5;
static const Shortint wdDeletedTextMarkItalic = 0x6;
static const Shortint wdDeletedTextMarkUnderline = 0x7;
static const Shortint wdDeletedTextMarkDoubleUnderline = 0x8;
static const Shortint wdDeletedTextMarkColorOnly = 0x9;
static const Shortint wdRevisedPropertiesMarkNone = 0x0;
static const Shortint wdRevisedPropertiesMarkBold = 0x1;
static const Shortint wdRevisedPropertiesMarkItalic = 0x2;
static const Shortint wdRevisedPropertiesMarkUnderline = 0x3;
static const Shortint wdRevisedPropertiesMarkDoubleUnderline = 0x4;
static const Shortint wdRevisedPropertiesMarkColorOnly = 0x5;
static const Shortint wdRevisedPropertiesMarkStrikeThrough = 0x6;
static const Shortint wdFieldShadingNever = 0x0;
static const Shortint wdFieldShadingAlways = 0x1;
static const Shortint wdFieldShadingWhenSelected = 0x2;
static const Shortint wdDocumentsPath = 0x0;
static const Shortint wdPicturesPath = 0x1;
static const Shortint wdUserTemplatesPath = 0x2;
static const Shortint wdWorkgroupTemplatesPath = 0x3;
static const Shortint wdUserOptionsPath = 0x4;
static const Shortint wdAutoRecoverPath = 0x5;
static const Shortint wdToolsPath = 0x6;
static const Shortint wdTutorialPath = 0x7;
static const Shortint wdStartupPath = 0x8;
static const Shortint wdProgramPath = 0x9;
static const Shortint wdGraphicsFiltersPath = 0xa;
static const Shortint wdTextConvertersPath = 0xb;
static const Shortint wdProofingToolsPath = 0xc;
static const Shortint wdTempFilePath = 0xd;
static const Shortint wdCurrentFolderPath = 0xe;
static const Shortint wdStyleGalleryPath = 0xf;
static const Shortint wdBorderArtPath = 0x13;
static const Shortint wdNoTabHangIndent = 0x1;
static const Shortint wdNoSpaceRaiseLower = 0x2;
static const Shortint wdPrintColBlack = 0x3;
static const Shortint wdWrapTrailSpaces = 0x4;
static const Shortint wdNoColumnBalance = 0x5;
static const Shortint wdConvMailMergeEsc = 0x6;
static const Shortint wdSuppressSpBfAfterPgBrk = 0x7;
static const Shortint wdSuppressTopSpacing = 0x8;
static const Shortint wdOrigWordTableRules = 0x9;
static const Shortint wdTransparentMetafiles = 0xa;
static const Shortint wdShowBreaksInFrames = 0xb;
static const Shortint wdSwapBordersFacingPages = 0xc;
static const Shortint wdLeaveBackslashAlone = 0xd;
static const Shortint wdExpandShiftReturn = 0xe;
static const Shortint wdDontULTrailSpace = 0xf;
static const Shortint wdDontBalanceSingleByteDoubleByteWidth = 0x10;
static const Shortint wdSuppressTopSpacingMac5 = 0x11;
static const Shortint wdSpacingInWholePoints = 0x12;
static const Shortint wdPrintBodyTextBeforeHeader = 0x13;
static const Shortint wdNoLeading = 0x14;
static const Shortint wdNoSpaceForUL = 0x15;
static const Shortint wdMWSmallCaps = 0x16;
static const Shortint wdNoExtraLineSpacing = 0x17;
static const Shortint wdTruncateFontHeight = 0x18;
static const Shortint wdSubFontBySize = 0x19;
static const Shortint wdUsePrinterMetrics = 0x1a;
static const Shortint wdWW6BorderRules = 0x1b;
static const Shortint wdExactOnTop = 0x1c;
static const Shortint wdSuppressBottomSpacing = 0x1d;
static const Shortint wdWPSpaceWidth = 0x1e;
static const Shortint wdWPJustification = 0x1f;
static const Shortint wdLineWrapLikeWord6 = 0x20;
static const Shortint wdShapeLayoutLikeWW8 = 0x21;
static const Shortint wdFootnoteLayoutLikeWW8 = 0x22;
static const Shortint wdDontUseHTMLParagraphAutoSpacing = 0x23;
static const Shortint wdDontAdjustLineHeightInTable = 0x24;
static const Shortint wdForgetLastTabAlignment = 0x25;
static const Shortint wdAutospaceLikeWW7 = 0x26;
static const Shortint wdAlignTablesRowByRow = 0x27;
static const Shortint wdLayoutRawTableWidth = 0x28;
static const Shortint wdLayoutTableRowsApart = 0x29;
static const Shortint wdUseWord97LineBreakingRules = 0x2a;
static const Shortint wdDontBreakWrappedTables = 0x2b;
static const Shortint wdDontSnapTextToGridInTableWithObjects = 0x2c;
static const Shortint wdSelectFieldWithFirstOrLastCharacter = 0x2d;
static const Shortint wdApplyBreakingRules = 0x2e;
static const Shortint wdDontWrapTextWithPunctuation = 0x2f;
static const Shortint wdDontUseAsianBreakRulesInGrid = 0x30;
static const Shortint wdPaper10x14 = 0x0;
static const Shortint wdPaper11x17 = 0x1;
static const Shortint wdPaperLetter = 0x2;
static const Shortint wdPaperLetterSmall = 0x3;
static const Shortint wdPaperLegal = 0x4;
static const Shortint wdPaperExecutive = 0x5;
static const Shortint wdPaperA3 = 0x6;
static const Shortint wdPaperA4 = 0x7;
static const Shortint wdPaperA4Small = 0x8;
static const Shortint wdPaperA5 = 0x9;
static const Shortint wdPaperB4 = 0xa;
static const Shortint wdPaperB5 = 0xb;
static const Shortint wdPaperCSheet = 0xc;
static const Shortint wdPaperDSheet = 0xd;
static const Shortint wdPaperESheet = 0xe;
static const Shortint wdPaperFanfoldLegalGerman = 0xf;
static const Shortint wdPaperFanfoldStdGerman = 0x10;
static const Shortint wdPaperFanfoldUS = 0x11;
static const Shortint wdPaperFolio = 0x12;
static const Shortint wdPaperLedger = 0x13;
static const Shortint wdPaperNote = 0x14;
static const Shortint wdPaperQuarto = 0x15;
static const Shortint wdPaperStatement = 0x16;
static const Shortint wdPaperTabloid = 0x17;
static const Shortint wdPaperEnvelope9 = 0x18;
static const Shortint wdPaperEnvelope10 = 0x19;
static const Shortint wdPaperEnvelope11 = 0x1a;
static const Shortint wdPaperEnvelope12 = 0x1b;
static const Shortint wdPaperEnvelope14 = 0x1c;
static const Shortint wdPaperEnvelopeB4 = 0x1d;
static const Shortint wdPaperEnvelopeB5 = 0x1e;
static const Shortint wdPaperEnvelopeB6 = 0x1f;
static const Shortint wdPaperEnvelopeC3 = 0x20;
static const Shortint wdPaperEnvelopeC4 = 0x21;
static const Shortint wdPaperEnvelopeC5 = 0x22;
static const Shortint wdPaperEnvelopeC6 = 0x23;
static const Shortint wdPaperEnvelopeC65 = 0x24;
static const Shortint wdPaperEnvelopeDL = 0x25;
static const Shortint wdPaperEnvelopeItaly = 0x26;
static const Shortint wdPaperEnvelopeMonarch = 0x27;
static const Shortint wdPaperEnvelopePersonal = 0x28;
static const Shortint wdPaperCustom = 0x29;
static const Shortint wdCustomLabelLetter = 0x0;
static const Shortint wdCustomLabelLetterLS = 0x1;
static const Shortint wdCustomLabelA4 = 0x2;
static const Shortint wdCustomLabelA4LS = 0x3;
static const Shortint wdCustomLabelA5 = 0x4;
static const Shortint wdCustomLabelA5LS = 0x5;
static const Shortint wdCustomLabelB5 = 0x6;
static const Shortint wdCustomLabelMini = 0x7;
static const Shortint wdCustomLabelFanfold = 0x8;
static const Shortint wdCustomLabelVertHalfSheet = 0x9;
static const Shortint wdCustomLabelVertHalfSheetLS = 0xa;
static const Shortint wdCustomLabelHigaki = 0xb;
static const Shortint wdCustomLabelHigakiLS = 0xc;
static const Shortint wdCustomLabelB4JIS = 0xd;
static const unsigned wdNoProtection = 0xffffffff;
static const Shortint wdAllowOnlyRevisions = 0x0;
static const Shortint wdAllowOnlyComments = 0x1;
static const Shortint wdAllowOnlyFormFields = 0x2;
static const Shortint wdAdjective = 0x0;
static const Shortint wdNoun = 0x1;
static const Shortint wdAdverb = 0x2;
static const Shortint wdVerb = 0x3;
static const Shortint wdPronoun = 0x4;
static const Shortint wdConjunction = 0x5;
static const Shortint wdPreposition = 0x6;
static const Shortint wdInterjection = 0x7;
static const Shortint wdIdiom = 0x8;
static const Shortint wdOther = 0x9;
static const Shortint wdSubscriberBestFormat = 0x0;
static const Shortint wdSubscriberRTF = 0x1;
static const Shortint wdSubscriberText = 0x2;
static const Shortint wdSubscriberPict = 0x4;
static const Shortint wdPublisher = 0x0;
static const Shortint wdSubscriber = 0x1;
static const Shortint wdCancelPublisher = 0x0;
static const Shortint wdSendPublisher = 0x1;
static const Shortint wdSelectPublisher = 0x2;
static const Shortint wdAutomaticUpdate = 0x3;
static const Shortint wdManualUpdate = 0x4;
static const Shortint wdChangeAttributes = 0x5;
static const Shortint wdUpdateSubscriber = 0x6;
static const Shortint wdOpenSource = 0x7;
static const Shortint wdRelativeHorizontalPositionMargin = 0x0;
static const Shortint wdRelativeHorizontalPositionPage = 0x1;
static const Shortint wdRelativeHorizontalPositionColumn = 0x2;
static const Shortint wdRelativeHorizontalPositionCharacter = 0x3;
static const Shortint wdRelativeVerticalPositionMargin = 0x0;
static const Shortint wdRelativeVerticalPositionPage = 0x1;
static const Shortint wdRelativeVerticalPositionParagraph = 0x2;
static const Shortint wdRelativeVerticalPositionLine = 0x3;
static const Shortint wdHelp = 0x0;
static const Shortint wdHelpAbout = 0x1;
static const Shortint wdHelpActiveWindow = 0x2;
static const Shortint wdHelpContents = 0x3;
static const Shortint wdHelpExamplesAndDemos = 0x4;
static const Shortint wdHelpIndex = 0x5;
static const Shortint wdHelpKeyboard = 0x6;
static const Shortint wdHelpPSSHelp = 0x7;
static const Shortint wdHelpQuickPreview = 0x8;
static const Shortint wdHelpSearch = 0x9;
static const Shortint wdHelpUsingHelp = 0xa;
static const Shortint wdHelpIchitaro = 0xb;
static const Shortint wdHelpPE2 = 0xc;
static const Shortint wdHelpHWP = 0xd;
static const Shortint emptyenum____________ = 0x0;
static const unsigned wdKeyCategoryNil = 0xffffffff;
static const Shortint wdKeyCategoryDisable = 0x0;
static const Shortint wdKeyCategoryCommand = 0x1;
static const Shortint wdKeyCategoryMacro = 0x2;
static const Shortint wdKeyCategoryFont = 0x3;
static const Shortint wdKeyCategoryAutoText = 0x4;
static const Shortint wdKeyCategoryStyle = 0x5;
static const Shortint wdKeyCategorySymbol = 0x6;
static const Shortint wdKeyCategoryPrefix = 0x7;
static const Byte wdNoKey = 0xff;
static const Word wdKeyShift = 0x100;
static const Word wdKeyControl = 0x200;
static const Word wdKeyCommand = 0x200;
static const Word wdKeyAlt = 0x400;
static const Word wdKeyOption = 0x400;
static const Shortint wdKeyA = 0x41;
static const Shortint wdKeyB = 0x42;
static const Shortint wdKeyC = 0x43;
static const Shortint wdKeyD = 0x44;
static const Shortint wdKeyE = 0x45;
static const Shortint wdKeyF = 0x46;
static const Shortint wdKeyG = 0x47;
static const Shortint wdKeyH = 0x48;
static const Shortint wdKeyI = 0x49;
static const Shortint wdKeyJ = 0x4a;
static const Shortint wdKeyK = 0x4b;
static const Shortint wdKeyL = 0x4c;
static const Shortint wdKeyM = 0x4d;
static const Shortint wdKeyN = 0x4e;
static const Shortint wdKeyO = 0x4f;
static const Shortint wdKeyP = 0x50;
static const Shortint wdKeyQ = 0x51;
static const Shortint wdKeyR = 0x52;
static const Shortint wdKeyS = 0x53;
static const Shortint wdKeyT = 0x54;
static const Shortint wdKeyU = 0x55;
static const Shortint wdKeyV = 0x56;
static const Shortint wdKeyW = 0x57;
static const Shortint wdKeyX = 0x58;
static const Shortint wdKeyY = 0x59;
static const Shortint wdKeyZ = 0x5a;
static const Shortint wdKey0 = 0x30;
static const Shortint wdKey1 = 0x31;
static const Shortint wdKey2 = 0x32;
static const Shortint wdKey3 = 0x33;
static const Shortint wdKey4 = 0x34;
static const Shortint wdKey5 = 0x35;
static const Shortint wdKey6 = 0x36;
static const Shortint wdKey7 = 0x37;
static const Shortint wdKey8 = 0x38;
static const Shortint wdKey9 = 0x39;
static const Shortint wdKeyBackspace = 0x8;
static const Shortint wdKeyTab = 0x9;
static const Shortint wdKeyNumeric5Special = 0xc;
static const Shortint wdKeyReturn = 0xd;
static const Shortint wdKeyPause = 0x13;
static const Shortint wdKeyEsc = 0x1b;
static const Shortint wdKeySpacebar = 0x20;
static const Shortint wdKeyPageUp = 0x21;
static const Shortint wdKeyPageDown = 0x22;
static const Shortint wdKeyEnd = 0x23;
static const Shortint wdKeyHome = 0x24;
static const Shortint wdKeyInsert = 0x2d;
static const Shortint wdKeyDelete = 0x2e;
static const Shortint wdKeyNumeric0 = 0x60;
static const Shortint wdKeyNumeric1 = 0x61;
static const Shortint wdKeyNumeric2 = 0x62;
static const Shortint wdKeyNumeric3 = 0x63;
static const Shortint wdKeyNumeric4 = 0x64;
static const Shortint wdKeyNumeric5 = 0x65;
static const Shortint wdKeyNumeric6 = 0x66;
static const Shortint wdKeyNumeric7 = 0x67;
static const Shortint wdKeyNumeric8 = 0x68;
static const Shortint wdKeyNumeric9 = 0x69;
static const Shortint wdKeyNumericMultiply = 0x6a;
static const Shortint wdKeyNumericAdd = 0x6b;
static const Shortint wdKeyNumericSubtract = 0x6d;
static const Shortint wdKeyNumericDecimal = 0x6e;
static const Shortint wdKeyNumericDivide = 0x6f;
static const Shortint wdKeyF1 = 0x70;
static const Shortint wdKeyF2 = 0x71;
static const Shortint wdKeyF3 = 0x72;
static const Shortint wdKeyF4 = 0x73;
static const Shortint wdKeyF5 = 0x74;
static const Shortint wdKeyF6 = 0x75;
static const Shortint wdKeyF7 = 0x76;
static const Shortint wdKeyF8 = 0x77;
static const Shortint wdKeyF9 = 0x78;
static const Shortint wdKeyF10 = 0x79;
static const Shortint wdKeyF11 = 0x7a;
static const Shortint wdKeyF12 = 0x7b;
static const Shortint wdKeyF13 = 0x7c;
static const Shortint wdKeyF14 = 0x7d;
static const Shortint wdKeyF15 = 0x7e;
static const Shortint wdKeyF16 = 0x7f;
static const Byte wdKeyScrollLock = 0x91;
static const Byte wdKeySemiColon = 0xba;
static const Byte wdKeyEquals = 0xbb;
static const Byte wdKeyComma = 0xbc;
static const Byte wdKeyHyphen = 0xbd;
static const Byte wdKeyPeriod = 0xbe;
static const Byte wdKeySlash = 0xbf;
static const Byte wdKeyBackSingleQuote = 0xc0;
static const Byte wdKeyOpenSquareBrace = 0xdb;
static const Byte wdKeyBackSlash = 0xdc;
static const Byte wdKeyCloseSquareBrace = 0xdd;
static const Byte wdKeySingleQuote = 0xde;
static const Shortint wdOLELink = 0x0;
static const Shortint wdOLEEmbed = 0x1;
static const Shortint wdOLEControl = 0x2;
static const Shortint wdOLEVerbPrimary = 0x0;
static const unsigned wdOLEVerbShow = 0xffffffff;
static const unsigned wdOLEVerbOpen = 0xfffffffe;
static const unsigned wdOLEVerbHide = 0xfffffffd;
static const unsigned wdOLEVerbUIActivate = 0xfffffffc;
static const unsigned wdOLEVerbInPlaceActivate = 0xfffffffb;
static const unsigned wdOLEVerbDiscardUndoState = 0xfffffffa;
static const Shortint wdInLine = 0x0;
static const Shortint wdFloatOverText = 0x1;
static const Shortint wdLeftPortrait = 0x0;
static const Shortint wdCenterPortrait = 0x1;
static const Shortint wdRightPortrait = 0x2;
static const Shortint wdLeftLandscape = 0x3;
static const Shortint wdCenterLandscape = 0x4;
static const Shortint wdRightLandscape = 0x5;
static const Shortint wdLeftClockwise = 0x6;
static const Shortint wdCenterClockwise = 0x7;
static const Shortint wdRightClockwise = 0x8;
static const Shortint wdFullBlock = 0x0;
static const Shortint wdModifiedBlock = 0x1;
static const Shortint wdSemiBlock = 0x2;
static const Shortint wdLetterTop = 0x0;
static const Shortint wdLetterBottom = 0x1;
static const Shortint wdLetterLeft = 0x2;
static const Shortint wdLetterRight = 0x3;
static const Shortint wdSalutationInformal = 0x0;
static const Shortint wdSalutationFormal = 0x1;
static const Shortint wdSalutationBusiness = 0x2;
static const Shortint wdSalutationOther = 0x3;
static const Shortint wdGenderFemale = 0x0;
static const Shortint wdGenderMale = 0x1;
static const Shortint wdGenderNeutral = 0x2;
static const Shortint wdGenderUnknown = 0x3;
static const Shortint wdMove = 0x0;
static const Shortint wdExtend = 0x1;
static const int wdUndefined = 0x98967f;
static const int wdToggle = 0x98967e;
static const int wdForward = 0x3fffffff;
static const unsigned wdBackward = 0xc0000001;
static const Shortint wdAutoPosition = 0x0;
static const Shortint wdFirst = 0x1;
static const int wdCreatorCode = 0x4d535744;
static const Shortint wdPasteOLEObject = 0x0;
static const Shortint wdPasteRTF = 0x1;
static const Shortint wdPasteText = 0x2;
static const Shortint wdPasteMetafilePicture = 0x3;
static const Shortint wdPasteBitmap = 0x4;
static const Shortint wdPasteDeviceIndependentBitmap = 0x5;
static const Shortint wdPasteHyperlink = 0x7;
static const Shortint wdPasteShape = 0x8;
static const Shortint wdPasteEnhancedMetafile = 0x9;
static const Shortint wdPasteHTML = 0xa;
static const Shortint wdPrintDocumentContent = 0x0;
static const Shortint wdPrintProperties = 0x1;
static const Shortint wdPrintComments = 0x2;
static const Shortint wdPrintMarkup = 0x2;
static const Shortint wdPrintStyles = 0x3;
static const Shortint wdPrintAutoTextEntries = 0x4;
static const Shortint wdPrintKeyAssignments = 0x5;
static const Shortint wdPrintEnvelope = 0x6;
static const Shortint wdPrintDocumentWithMarkup = 0x7;
static const Shortint wdPrintAllPages = 0x0;
static const Shortint wdPrintOddPagesOnly = 0x1;
static const Shortint wdPrintEvenPagesOnly = 0x2;
static const Shortint wdPrintAllDocument = 0x0;
static const Shortint wdPrintSelection = 0x1;
static const Shortint wdPrintCurrentPage = 0x2;
static const Shortint wdPrintFromTo = 0x3;
static const Shortint wdPrintRangeOfPages = 0x4;
static const Shortint wdSpelling = 0x0;
static const Shortint wdGrammar = 0x1;
static const Shortint wdThesaurus = 0x2;
static const Shortint wdHyphenation = 0x3;
static const Shortint wdSpellingComplete = 0x4;
static const Shortint wdSpellingCustom = 0x5;
static const Shortint wdSpellingLegal = 0x6;
static const Shortint wdSpellingMedical = 0x7;
static const Shortint wdHangulHanjaConversion = 0x8;
static const Shortint wdHangulHanjaConversionCustom = 0x9;
static const Shortint emptyenum_____________ = 0x0;
static const Shortint wdSpellword = 0x0;
static const Shortint wdWildcard = 0x1;
static const Shortint wdAnagram = 0x2;
static const Shortint wdSpellingCorrect = 0x0;
static const Shortint wdSpellingNotInDictionary = 0x1;
static const Shortint wdSpellingCapitalization = 0x2;
static const Shortint wdSpellingError = 0x0;
static const Shortint wdGrammaticalError = 0x1;
static const Shortint wdInlineShapeEmbeddedOLEObject = 0x1;
static const Shortint wdInlineShapeLinkedOLEObject = 0x2;
static const Shortint wdInlineShapePicture = 0x3;
static const Shortint wdInlineShapeLinkedPicture = 0x4;
static const Shortint wdInlineShapeOLEControlObject = 0x5;
static const Shortint wdInlineShapeHorizontalLine = 0x6;
static const Shortint wdInlineShapePictureHorizontalLine = 0x7;
static const Shortint wdInlineShapeLinkedPictureHorizontalLine = 0x8;
static const Shortint wdInlineShapePictureBullet = 0x9;
static const Shortint wdInlineShapeScriptAnchor = 0xa;
static const Shortint wdInlineShapeOWSAnchor = 0xb;
static const Shortint wdTiled = 0x0;
static const Shortint wdIcons = 0x1;
static const Shortint wdSelStartActive = 0x1;
static const Shortint wdSelAtEOL = 0x2;
static const Shortint wdSelOvertype = 0x4;
static const Shortint wdSelActive = 0x8;
static const Shortint wdSelReplace = 0x10;
static const Shortint wdAutoVersionOff = 0x0;
static const Shortint wdAutoVersionOnClose = 0x1;
static const Shortint wdOrganizerObjectStyles = 0x0;
static const Shortint wdOrganizerObjectAutoText = 0x1;
static const Shortint wdOrganizerObjectCommandBars = 0x2;
static const Shortint wdOrganizerObjectProjectItems = 0x3;
static const int wdMatchParagraphMark = 0x1000f;
static const Shortint wdMatchTabCharacter = 0x9;
static const Shortint wdMatchCommentMark = 0x5;
static const int wdMatchAnyCharacter = 0x1003f;
static const int wdMatchAnyDigit = 0x1001f;
static const int wdMatchAnyLetter = 0x1002f;
static const Shortint wdMatchCaretCharacter = 0xb;
static const Shortint wdMatchColumnBreak = 0xe;
static const Word wdMatchEmDash = 0x2014;
static const Word wdMatchEnDash = 0x2013;
static const int wdMatchEndnoteMark = 0x10013;
static const Shortint wdMatchField = 0x13;
static const int wdMatchFootnoteMark = 0x10012;
static const Shortint wdMatchGraphic = 0x1;
static const int wdMatchManualLineBreak = 0x1000f;
static const int wdMatchManualPageBreak = 0x1001c;
static const Shortint wdMatchNonbreakingHyphen = 0x1e;
static const Byte wdMatchNonbreakingSpace = 0xa0;
static const Shortint wdMatchOptionalHyphen = 0x1f;
static const int wdMatchSectionBreak = 0x1002c;
static const int wdMatchWhiteSpace = 0x10077;
static const Shortint wdFindStop = 0x0;
static const Shortint wdFindContinue = 0x1;
static const Shortint wdFindAsk = 0x2;
static const Shortint wdActiveEndAdjustedPageNumber = 0x1;
static const Shortint wdActiveEndSectionNumber = 0x2;
static const Shortint wdActiveEndPageNumber = 0x3;
static const Shortint wdNumberOfPagesInDocument = 0x4;
static const Shortint wdHorizontalPositionRelativeToPage = 0x5;
static const Shortint wdVerticalPositionRelativeToPage = 0x6;
static const Shortint wdHorizontalPositionRelativeToTextBoundary = 0x7;
static const Shortint wdVerticalPositionRelativeToTextBoundary = 0x8;
static const Shortint wdFirstCharacterColumnNumber = 0x9;
static const Shortint wdFirstCharacterLineNumber = 0xa;
static const Shortint wdFrameIsSelected = 0xb;
static const Shortint wdWithInTable = 0xc;
static const Shortint wdStartOfRangeRowNumber = 0xd;
static const Shortint wdEndOfRangeRowNumber = 0xe;
static const Shortint wdMaximumNumberOfRows = 0xf;
static const Shortint wdStartOfRangeColumnNumber = 0x10;
static const Shortint wdEndOfRangeColumnNumber = 0x11;
static const Shortint wdMaximumNumberOfColumns = 0x12;
static const Shortint wdZoomPercentage = 0x13;
static const Shortint wdSelectionMode = 0x14;
static const Shortint wdCapsLock = 0x15;
static const Shortint wdNumLock = 0x16;
static const Shortint wdOverType = 0x17;
static const Shortint wdRevisionMarking = 0x18;
static const Shortint wdInFootnoteEndnotePane = 0x19;
static const Shortint wdInCommentPane = 0x1a;
static const Shortint wdInHeaderFooter = 0x1c;
static const Shortint wdAtEndOfRowMarker = 0x1f;
static const Shortint wdReferenceOfType = 0x20;
static const Shortint wdHeaderFooterType = 0x21;
static const Shortint wdInMasterDocument = 0x22;
static const Shortint wdInFootnote = 0x23;
static const Shortint wdInEndnote = 0x24;
static const Shortint wdInWordMail = 0x25;
static const Shortint wdInClipboard = 0x26;
static const Shortint wdWrapSquare = 0x0;
static const Shortint wdWrapTight = 0x1;
static const Shortint wdWrapThrough = 0x2;
static const Shortint wdWrapNone = 0x3;
static const Shortint wdWrapTopBottom = 0x4;
static const Shortint wdWrapInline = 0x7;
static const Shortint wdWrapBoth = 0x0;
static const Shortint wdWrapLeft = 0x1;
static const Shortint wdWrapRight = 0x2;
static const Shortint wdWrapLargest = 0x3;
static const Shortint wdOutlineLevel1 = 0x1;
static const Shortint wdOutlineLevel2 = 0x2;
static const Shortint wdOutlineLevel3 = 0x3;
static const Shortint wdOutlineLevel4 = 0x4;
static const Shortint wdOutlineLevel5 = 0x5;
static const Shortint wdOutlineLevel6 = 0x6;
static const Shortint wdOutlineLevel7 = 0x7;
static const Shortint wdOutlineLevel8 = 0x8;
static const Shortint wdOutlineLevel9 = 0x9;
static const Shortint wdOutlineLevelBodyText = 0xa;
static const Shortint wdTextOrientationHorizontal = 0x0;
static const Shortint wdTextOrientationUpward = 0x2;
static const Shortint wdTextOrientationDownward = 0x3;
static const Shortint wdTextOrientationVerticalFarEast = 0x1;
static const Shortint wdTextOrientationHorizontalRotatedFarEast = 0x4;
static const Shortint emptyenum______________ = 0x0;
static const Shortint wdArtApples = 0x1;
static const Shortint wdArtMapleMuffins = 0x2;
static const Shortint wdArtCakeSlice = 0x3;
static const Shortint wdArtCandyCorn = 0x4;
static const Shortint wdArtIceCreamCones = 0x5;
static const Shortint wdArtChampagneBottle = 0x6;
static const Shortint wdArtPartyGlass = 0x7;
static const Shortint wdArtChristmasTree = 0x8;
static const Shortint wdArtTrees = 0x9;
static const Shortint wdArtPalmsColor = 0xa;
static const Shortint wdArtBalloons3Colors = 0xb;
static const Shortint wdArtBalloonsHotAir = 0xc;
static const Shortint wdArtPartyFavor = 0xd;
static const Shortint wdArtConfettiStreamers = 0xe;
static const Shortint wdArtHearts = 0xf;
static const Shortint wdArtHeartBalloon = 0x10;
static const Shortint wdArtStars3D = 0x11;
static const Shortint wdArtStarsShadowed = 0x12;
static const Shortint wdArtStars = 0x13;
static const Shortint wdArtSun = 0x14;
static const Shortint wdArtEarth2 = 0x15;
static const Shortint wdArtEarth1 = 0x16;
static const Shortint wdArtPeopleHats = 0x17;
static const Shortint wdArtSombrero = 0x18;
static const Shortint wdArtPencils = 0x19;
static const Shortint wdArtPackages = 0x1a;
static const Shortint wdArtClocks = 0x1b;
static const Shortint wdArtFirecrackers = 0x1c;
static const Shortint wdArtRings = 0x1d;
static const Shortint wdArtMapPins = 0x1e;
static const Shortint wdArtConfetti = 0x1f;
static const Shortint wdArtCreaturesButterfly = 0x20;
static const Shortint wdArtCreaturesLadyBug = 0x21;
static const Shortint wdArtCreaturesFish = 0x22;
static const Shortint wdArtBirdsFlight = 0x23;
static const Shortint wdArtScaredCat = 0x24;
static const Shortint wdArtBats = 0x25;
static const Shortint wdArtFlowersRoses = 0x26;
static const Shortint wdArtFlowersRedRose = 0x27;
static const Shortint wdArtPoinsettias = 0x28;
static const Shortint wdArtHolly = 0x29;
static const Shortint wdArtFlowersTiny = 0x2a;
static const Shortint wdArtFlowersPansy = 0x2b;
static const Shortint wdArtFlowersModern2 = 0x2c;
static const Shortint wdArtFlowersModern1 = 0x2d;
static const Shortint wdArtWhiteFlowers = 0x2e;
static const Shortint wdArtVine = 0x2f;
static const Shortint wdArtFlowersDaisies = 0x30;
static const Shortint wdArtFlowersBlockPrint = 0x31;
static const Shortint wdArtDecoArchColor = 0x32;
static const Shortint wdArtFans = 0x33;
static const Shortint wdArtFilm = 0x34;
static const Shortint wdArtLightning1 = 0x35;
static const Shortint wdArtCompass = 0x36;
static const Shortint wdArtDoubleD = 0x37;
static const Shortint wdArtClassicalWave = 0x38;
static const Shortint wdArtShadowedSquares = 0x39;
static const Shortint wdArtTwistedLines1 = 0x3a;
static const Shortint wdArtWaveline = 0x3b;
static const Shortint wdArtQuadrants = 0x3c;
static const Shortint wdArtCheckedBarColor = 0x3d;
static const Shortint wdArtSwirligig = 0x3e;
static const Shortint wdArtPushPinNote1 = 0x3f;
static const Shortint wdArtPushPinNote2 = 0x40;
static const Shortint wdArtPumpkin1 = 0x41;
static const Shortint wdArtEggsBlack = 0x42;
static const Shortint wdArtCup = 0x43;
static const Shortint wdArtHeartGray = 0x44;
static const Shortint wdArtGingerbreadMan = 0x45;
static const Shortint wdArtBabyPacifier = 0x46;
static const Shortint wdArtBabyRattle = 0x47;
static const Shortint wdArtCabins = 0x48;
static const Shortint wdArtHouseFunky = 0x49;
static const Shortint wdArtStarsBlack = 0x4a;
static const Shortint wdArtSnowflakes = 0x4b;
static const Shortint wdArtSnowflakeFancy = 0x4c;
static const Shortint wdArtSkyrocket = 0x4d;
static const Shortint wdArtSeattle = 0x4e;
static const Shortint wdArtMusicNotes = 0x4f;
static const Shortint wdArtPalmsBlack = 0x50;
static const Shortint wdArtMapleLeaf = 0x51;
static const Shortint wdArtPaperClips = 0x52;
static const Shortint wdArtShorebirdTracks = 0x53;
static const Shortint wdArtPeople = 0x54;
static const Shortint wdArtPeopleWaving = 0x55;
static const Shortint wdArtEclipsingSquares2 = 0x56;
static const Shortint wdArtHypnotic = 0x57;
static const Shortint wdArtDiamondsGray = 0x58;
static const Shortint wdArtDecoArch = 0x59;
static const Shortint wdArtDecoBlocks = 0x5a;
static const Shortint wdArtCirclesLines = 0x5b;
static const Shortint wdArtPapyrus = 0x5c;
static const Shortint wdArtWoodwork = 0x5d;
static const Shortint wdArtWeavingBraid = 0x5e;
static const Shortint wdArtWeavingRibbon = 0x5f;
static const Shortint wdArtWeavingAngles = 0x60;
static const Shortint wdArtArchedScallops = 0x61;
static const Shortint wdArtSafari = 0x62;
static const Shortint wdArtCelticKnotwork = 0x63;
static const Shortint wdArtCrazyMaze = 0x64;
static const Shortint wdArtEclipsingSquares1 = 0x65;
static const Shortint wdArtBirds = 0x66;
static const Shortint wdArtFlowersTeacup = 0x67;
static const Shortint wdArtNorthwest = 0x68;
static const Shortint wdArtSouthwest = 0x69;
static const Shortint wdArtTribal6 = 0x6a;
static const Shortint wdArtTribal4 = 0x6b;
static const Shortint wdArtTribal3 = 0x6c;
static const Shortint wdArtTribal2 = 0x6d;
static const Shortint wdArtTribal5 = 0x6e;
static const Shortint wdArtXIllusions = 0x6f;
static const Shortint wdArtZanyTriangles = 0x70;
static const Shortint wdArtPyramids = 0x71;
static const Shortint wdArtPyramidsAbove = 0x72;
static const Shortint wdArtConfettiGrays = 0x73;
static const Shortint wdArtConfettiOutline = 0x74;
static const Shortint wdArtConfettiWhite = 0x75;
static const Shortint wdArtMosaic = 0x76;
static const Shortint wdArtLightning2 = 0x77;
static const Shortint wdArtHeebieJeebies = 0x78;
static const Shortint wdArtLightBulb = 0x79;
static const Shortint wdArtGradient = 0x7a;
static const Shortint wdArtTriangleParty = 0x7b;
static const Shortint wdArtTwistedLines2 = 0x7c;
static const Shortint wdArtMoons = 0x7d;
static const Shortint wdArtOvals = 0x7e;
static const Shortint wdArtDoubleDiamonds = 0x7f;
static const Byte wdArtChainLink = 0x80;
static const Byte wdArtTriangles = 0x81;
static const Byte wdArtTribal1 = 0x82;
static const Byte wdArtMarqueeToothed = 0x83;
static const Byte wdArtSharksTeeth = 0x84;
static const Byte wdArtSawtooth = 0x85;
static const Byte wdArtSawtoothGray = 0x86;
static const Byte wdArtPostageStamp = 0x87;
static const Byte wdArtWeavingStrips = 0x88;
static const Byte wdArtZigZag = 0x89;
static const Byte wdArtCrossStitch = 0x8a;
static const Byte wdArtGems = 0x8b;
static const Byte wdArtCirclesRectangles = 0x8c;
static const Byte wdArtCornerTriangles = 0x8d;
static const Byte wdArtCreaturesInsects = 0x8e;
static const Byte wdArtZigZagStitch = 0x8f;
static const Byte wdArtCheckered = 0x90;
static const Byte wdArtCheckedBarBlack = 0x91;
static const Byte wdArtMarquee = 0x92;
static const Byte wdArtBasicWhiteDots = 0x93;
static const Byte wdArtBasicWideMidline = 0x94;
static const Byte wdArtBasicWideOutline = 0x95;
static const Byte wdArtBasicWideInline = 0x96;
static const Byte wdArtBasicThinLines = 0x97;
static const Byte wdArtBasicWhiteDashes = 0x98;
static const Byte wdArtBasicWhiteSquares = 0x99;
static const Byte wdArtBasicBlackSquares = 0x9a;
static const Byte wdArtBasicBlackDashes = 0x9b;
static const Byte wdArtBasicBlackDots = 0x9c;
static const Byte wdArtStarsTop = 0x9d;
static const Byte wdArtCertificateBanner = 0x9e;
static const Byte wdArtHandmade1 = 0x9f;
static const Byte wdArtHandmade2 = 0xa0;
static const Byte wdArtTornPaper = 0xa1;
static const Byte wdArtTornPaperBlack = 0xa2;
static const Byte wdArtCouponCutoutDashes = 0xa3;
static const Byte wdArtCouponCutoutDots = 0xa4;
static const Shortint wdBorderDistanceFromText = 0x0;
static const Shortint wdBorderDistanceFromPageEdge = 0x1;
static const Shortint wdReplaceNone = 0x0;
static const Shortint wdReplaceOne = 0x1;
static const Shortint wdReplaceAll = 0x2;
static const Byte wdFontBiasDontCare = 0xff;
static const Shortint wdFontBiasDefault = 0x0;
static const Shortint wdFontBiasFareast = 0x1;
static const Shortint wdBrowserLevelV4 = 0x0;
static const Shortint wdBrowserLevelMicrosoftInternetExplorer5 = 0x1;
static const Shortint wdBrowserLevelMicrosoftInternetExplorer6 = 0x2;
static const Shortint wdEnclosureCircle = 0x0;
static const Shortint wdEnclosureSquare = 0x1;
static const Shortint wdEnclosureTriangle = 0x2;
static const Shortint wdEnclosureDiamond = 0x3;
static const Shortint wdEncloseStyleNone = 0x0;
static const Shortint wdEncloseStyleSmall = 0x1;
static const Shortint wdEncloseStyleLarge = 0x2;
static const Shortint wdHighAnsiIsFarEast = 0x0;
static const Shortint wdHighAnsiIsHighAnsi = 0x1;
static const Shortint wdAutoDetectHighAnsiFarEast = 0x2;
static const Shortint wdLayoutModeDefault = 0x0;
static const Shortint wdLayoutModeGrid = 0x1;
static const Shortint wdLayoutModeLineGrid = 0x2;
static const Shortint wdLayoutModeGenko = 0x3;
static const Shortint wdEmailMessage = 0x0;
static const Shortint wdDocument = 0x1;
static const Shortint wdWebPage = 0x2;
static const Shortint wdPriorityNormal = 0x1;
static const Shortint wdPriorityLow = 0x2;
static const Shortint wdPriorityHigh = 0x3;
static const Shortint wdDocumentViewRtl = 0x0;
static const Shortint wdDocumentViewLtr = 0x1;
static const Shortint wdNumeralArabic = 0x0;
static const Shortint wdNumeralHindi = 0x1;
static const Shortint wdNumeralContext = 0x2;
static const Shortint wdNumeralSystem = 0x3;
static const Shortint wdMonthNamesArabic = 0x0;
static const Shortint wdMonthNamesEnglish = 0x1;
static const Shortint wdMonthNamesFrench = 0x2;
static const Shortint wdCursorMovementLogical = 0x0;
static const Shortint wdCursorMovementVisual = 0x1;
static const Shortint wdVisualSelectionBlock = 0x0;
static const Shortint wdVisualSelectionContinuous = 0x1;
static const Shortint wdTableDirectionRtl = 0x0;
static const Shortint wdTableDirectionLtr = 0x1;
static const Shortint wdFlowLtr = 0x0;
static const Shortint wdFlowRtl = 0x1;
static const Shortint wdDiacriticColorBidi = 0x0;
static const Shortint wdDiacriticColorLatin = 0x1;
static const Shortint wdGutterPosLeft = 0x0;
static const Shortint wdGutterPosTop = 0x1;
static const Shortint wdGutterPosRight = 0x2;
static const unsigned wdGutterStyleLatin = 0xfffffff6;
static const Shortint wdGutterStyleBidi = 0x2;
static const Shortint wdSectionDirectionRtl = 0x0;
static const Shortint wdSectionDirectionLtr = 0x1;
static const Shortint wdDateLanguageBidi = 0xa;
static const Word wdDateLanguageLatin = 0x409;
static const Shortint wdCalendarTypeBidi = 0x63;
static const Shortint wdCalendarTypeGregorian = 0x64;
static const Shortint wdCalendarWestern = 0x0;
static const Shortint wdCalendarArabic = 0x1;
static const Shortint wdCalendarHebrew = 0x2;
static const Shortint wdCalendarChina = 0x3;
static const Shortint wdCalendarJapan = 0x4;
static const Shortint wdCalendarThai = 0x5;
static const Shortint wdCalendarKorean = 0x6;
static const Shortint wdCalendarSakaEra = 0x7;
static const Shortint wdReadingOrderRtl = 0x0;
static const Shortint wdReadingOrderLtr = 0x1;
static const Shortint wdFullScript = 0x0;
static const Shortint wdPartialScript = 0x1;
static const Shortint wdMixedScript = 0x2;
static const Shortint wdMixedAuthorizedScript = 0x3;
static const Shortint wdNone = 0x0;
static const Shortint wdInitialAlef = 0x1;
static const Shortint wdFinalYaa = 0x2;
static const Shortint wdBoth = 0x3;
static const unsigned wdColorAutomatic = 0xff000000;
static const Shortint wdColorBlack = 0x0;
static const int wdColorBlue = 0xff0000;
static const int wdColorTurquoise = 0xffff00;
static const Word wdColorBrightGreen = 0xff00;
static const int wdColorPink = 0xff00ff;
static const Byte wdColorRed = 0xff;
static const Word wdColorYellow = 0xffff;
static const int wdColorWhite = 0xffffff;
static const int wdColorDarkBlue = 0x800000;
static const int wdColorTeal = 0x808000;
static const Word wdColorGreen = 0x8000;
static const int wdColorViolet = 0x800080;
static const Byte wdColorDarkRed = 0x80;
static const Word wdColorDarkYellow = 0x8080;
static const Word wdColorBrown = 0x3399;
static const Word wdColorOliveGreen = 0x3333;
static const Word wdColorDarkGreen = 0x3300;
static const int wdColorDarkTeal = 0x663300;
static const int wdColorIndigo = 0x993333;
static const Word wdColorOrange = 0x66ff;
static const int wdColorBlueGray = 0x996666;
static const Word wdColorLightOrange = 0x99ff;
static const Word wdColorLime = 0xcc99;
static const int wdColorSeaGreen = 0x669933;
static const int wdColorAqua = 0xcccc33;
static const int wdColorLightBlue = 0xff6633;
static const Word wdColorGold = 0xccff;
static const int wdColorSkyBlue = 0xffcc00;
static const int wdColorPlum = 0x663399;
static const int wdColorRose = 0xcc99ff;
static const int wdColorTan = 0x99ccff;
static const int wdColorLightYellow = 0x99ffff;
static const int wdColorLightGreen = 0xccffcc;
static const int wdColorLightTurquoise = 0xffffcc;
static const int wdColorPaleBlue = 0xffcc99;
static const int wdColorLavender = 0xff99cc;
static const int wdColorGray05 = 0xf3f3f3;
static const int wdColorGray10 = 0xe6e6e6;
static const int wdColorGray125 = 0xe0e0e0;
static const int wdColorGray15 = 0xd9d9d9;
static const int wdColorGray20 = 0xcccccc;
static const int wdColorGray25 = 0xc0c0c0;
static const int wdColorGray30 = 0xb3b3b3;
static const int wdColorGray35 = 0xa6a6a6;
static const int wdColorGray375 = 0xa0a0a0;
static const int wdColorGray40 = 0x999999;
static const int wdColorGray45 = 0x8c8c8c;
static const int wdColorGray50 = 0x808080;
static const int wdColorGray55 = 0x737373;
static const int wdColorGray60 = 0x666666;
static const int wdColorGray625 = 0x606060;
static const int wdColorGray65 = 0x595959;
static const int wdColorGray70 = 0x4c4c4c;
static const int wdColorGray75 = 0x404040;
static const int wdColorGray80 = 0x333333;
static const int wdColorGray85 = 0x262626;
static const int wdColorGray875 = 0x202020;
static const int wdColorGray90 = 0x191919;
static const int wdColorGray95 = 0xc0c0c;
static const unsigned wdShapeTop = 0xfff0bdc1;
static const unsigned wdShapeLeft = 0xfff0bdc2;
static const unsigned wdShapeBottom = 0xfff0bdc3;
static const unsigned wdShapeRight = 0xfff0bdc4;
static const unsigned wdShapeCenter = 0xfff0bdc5;
static const unsigned wdShapeInside = 0xfff0bdc6;
static const unsigned wdShapeOutside = 0xfff0bdc7;
static const unsigned wdTableTop = 0xfff0bdc1;
static const unsigned wdTableLeft = 0xfff0bdc2;
static const unsigned wdTableBottom = 0xfff0bdc3;
static const unsigned wdTableRight = 0xfff0bdc4;
static const unsigned wdTableCenter = 0xfff0bdc5;
static const unsigned wdTableInside = 0xfff0bdc6;
static const unsigned wdTableOutside = 0xfff0bdc7;
static const Shortint wdWord8ListBehavior = 0x0;
static const Shortint wdWord9ListBehavior = 0x1;
static const Shortint wdWord10ListBehavior = 0x2;
static const Shortint wdWord8TableBehavior = 0x0;
static const Shortint wdWord9TableBehavior = 0x1;
static const Shortint wdAutoFitFixed = 0x0;
static const Shortint wdAutoFitContent = 0x1;
static const Shortint wdAutoFitWindow = 0x2;
static const Shortint wdPreferredWidthAuto = 0x1;
static const Shortint wdPreferredWidthPercent = 0x2;
static const Shortint wdPreferredWidthPoints = 0x3;
static const Word wdLineBreakJapanese = 0x411;
static const Word wdLineBreakKorean = 0x412;
static const Word wdLineBreakSimplifiedChinese = 0x804;
static const Word wdLineBreakTraditionalChinese = 0x404;
static const Shortint wdPageView = 0x3;
static const Shortint wdOnlineView = 0x6;
static const Shortint wdFramesetTypeFrameset = 0x0;
static const Shortint wdFramesetTypeFrame = 0x1;
static const Shortint wdFramesetSizeTypePercent = 0x0;
static const Shortint wdFramesetSizeTypeFixed = 0x1;
static const Shortint wdFramesetSizeTypeRelative = 0x2;
static const Shortint wdFramesetNewFrameAbove = 0x0;
static const Shortint wdFramesetNewFrameBelow = 0x1;
static const Shortint wdFramesetNewFrameRight = 0x2;
static const Shortint wdFramesetNewFrameLeft = 0x3;
static const Shortint wdScrollbarTypeAuto = 0x0;
static const Shortint wdScrollbarTypeYes = 0x1;
static const Shortint wdScrollbarTypeNo = 0x2;
static const Shortint wdTwoLinesInOneNone = 0x0;
static const Shortint wdTwoLinesInOneNoBrackets = 0x1;
static const Shortint wdTwoLinesInOneParentheses = 0x2;
static const Shortint wdTwoLinesInOneSquareBrackets = 0x3;
static const Shortint wdTwoLinesInOneAngleBrackets = 0x4;
static const Shortint wdTwoLinesInOneCurlyBrackets = 0x5;
static const Shortint wdHorizontalInVerticalNone = 0x0;
static const Shortint wdHorizontalInVerticalFitInLine = 0x1;
static const Shortint wdHorizontalInVerticalResizeLine = 0x2;
static const Shortint wdHorizontalLineAlignLeft = 0x0;
static const Shortint wdHorizontalLineAlignCenter = 0x1;
static const Shortint wdHorizontalLineAlignRight = 0x2;
static const unsigned wdHorizontalLinePercentWidth = 0xffffffff;
static const unsigned wdHorizontalLineFixedWidth = 0xfffffffe;
static const Shortint wdPhoneticGuideAlignmentCenter = 0x0;
static const Shortint wdPhoneticGuideAlignmentZeroOneZero = 0x1;
static const Shortint wdPhoneticGuideAlignmentOneTwoOne = 0x2;
static const Shortint wdPhoneticGuideAlignmentLeft = 0x3;
static const Shortint wdPhoneticGuideAlignmentRight = 0x4;
static const Shortint wdPhoneticGuideAlignmentRightVertical = 0x5;
static const Shortint wdNewBlankDocument = 0x0;
static const Shortint wdNewWebPage = 0x1;
static const Shortint wdNewEmailMessage = 0x2;
static const Shortint wdNewFrameset = 0x3;
static const Shortint wdKanaKatakana = 0x8;
static const Shortint wdKanaHiragana = 0x9;
static const Shortint wdWidthHalfWidth = 0x6;
static const Shortint wdWidthFullWidth = 0x7;
static const Shortint wdListNumberStyleBidi1 = 0x31;
static const Shortint wdListNumberStyleBidi2 = 0x32;
static const Shortint wdCaptionNumberStyleBidiLetter1 = 0x31;
static const Shortint wdCaptionNumberStyleBidiLetter2 = 0x32;
static const Shortint wdNoteNumberStyleBidiLetter1 = 0x31;
static const Shortint wdNoteNumberStyleBidiLetter2 = 0x32;
static const Shortint wdPageNumberStyleBidiLetter1 = 0x31;
static const Shortint wdPageNumberStyleBidiLetter2 = 0x32;
static const Shortint wdTCSCConverterDirectionSCTC = 0x0;
static const Shortint wdTCSCConverterDirectionTCSC = 0x1;
static const Shortint wdTCSCConverterDirectionAuto = 0x2;
static const Shortint wd70 = 0x0;
static const Shortint wd70FE = 0x1;
static const Shortint wd80 = 0x2;
static const Shortint wdWrapMergeInline = 0x0;
static const Shortint wdWrapMergeSquare = 0x1;
static const Shortint wdWrapMergeTight = 0x2;
static const Shortint wdWrapMergeBehind = 0x3;
static const Shortint wdWrapMergeFront = 0x4;
static const Shortint wdWrapMergeThrough = 0x5;
static const Shortint wdWrapMergeTopBottom = 0x6;
static const Shortint wdPasteDefault = 0x0;
static const Shortint wdSingleCellText = 0x5;
static const Shortint wdSingleCellTable = 0x6;
static const Shortint wdListContinueNumbering = 0x7;
static const Shortint wdListRestartNumbering = 0x8;
static const Shortint wdTableInsertAsRows = 0xb;
static const Shortint wdTableAppendTable = 0xa;
static const Shortint wdTableOriginalFormatting = 0xc;
static const Shortint wdChartPicture = 0xd;
static const Shortint wdChart = 0xe;
static const Shortint wdChartLinked = 0xf;
static const Shortint wdFormatOriginalFormatting = 0x10;
static const Shortint wdFormatSurroundingFormattingWithEmphasis = 0x14;
static const Shortint wdFormatPlainText = 0x16;
static const Shortint wdTableOverwriteCells = 0x17;
static const Shortint wdListCombineWithExistingList = 0x18;
static const Shortint wdListDontMerge = 0x19;
static const Shortint wdCRLF = 0x0;
static const Shortint wdCROnly = 0x1;
static const Shortint wdLFOnly = 0x2;
static const Shortint wdLFCR = 0x3;
static const Shortint wdLSPS = 0x4;
static const Shortint wdStyleSheetLinkTypeLinked = 0x0;
static const Shortint wdStyleSheetLinkTypeImported = 0x1;
static const unsigned wdStyleSheetPrecedenceHigher = 0xffffffff;
static const unsigned wdStyleSheetPrecedenceLower = 0xfffffffe;
static const Shortint wdStyleSheetPrecedenceHighest = 0x1;
static const Shortint wdStyleSheetPrecedenceLowest = 0x0;
static const Shortint wdEmailHTMLFidelityLow = 0x1;
static const Shortint wdEmailHTMLFidelityMedium = 0x2;
static const Shortint wdEmailHTMLFidelityHigh = 0x3;
static const Shortint wdMailFormatPlainText = 0x0;
static const Shortint wdMailFormatHTML = 0x1;
static const Shortint wdUniqueIdentifier = 0x1;
static const Shortint wdCourtesyTitle = 0x2;
static const Shortint wdFirstName = 0x3;
static const Shortint wdMiddleName = 0x4;
static const Shortint wdLastName = 0x5;
static const Shortint wdSuffix = 0x6;
static const Shortint wdNickname = 0x7;
static const Shortint wdJobTitle = 0x8;
static const Shortint wdCompany = 0x9;
static const Shortint wdAddress1 = 0xa;
static const Shortint wdAddress2 = 0xb;
static const Shortint wdCity = 0xc;
static const Shortint wdState = 0xd;
static const Shortint wdPostalCode = 0xe;
static const Shortint wdCountryRegion = 0xf;
static const Shortint wdBusinessPhone = 0x10;
static const Shortint wdBusinessFax = 0x11;
static const Shortint wdHomePhone = 0x12;
static const Shortint wdHomeFax = 0x13;
static const Shortint wdEmailAddress = 0x14;
static const Shortint wdWebPageURL = 0x15;
static const Shortint wdSpouseCourtesyTitle = 0x16;
static const Shortint wdSpouseFirstName = 0x17;
static const Shortint wdSpouseMiddleName = 0x18;
static const Shortint wdSpouseLastName = 0x19;
static const Shortint wdSpouseNickname = 0x1a;
static const Shortint wdRubyFirstName = 0x1b;
static const Shortint wdRubyLastName = 0x1c;
static const Shortint wdAddress3 = 0x1d;
static const Shortint wdDepartment = 0x1e;
static const Shortint wdFirstRow = 0x0;
static const Shortint wdLastRow = 0x1;
static const Shortint wdOddRowBanding = 0x2;
static const Shortint wdEvenRowBanding = 0x3;
static const Shortint wdFirstColumn = 0x4;
static const Shortint wdLastColumn = 0x5;
static const Shortint wdOddColumnBanding = 0x6;
static const Shortint wdEvenColumnBanding = 0x7;
static const Shortint wdNECell = 0x8;
static const Shortint wdNWCell = 0x9;
static const Shortint wdSECell = 0xa;
static const Shortint wdSWCell = 0xb;
static const Shortint wdCompareTargetSelected = 0x0;
static const Shortint wdCompareTargetCurrent = 0x1;
static const Shortint wdCompareTargetNew = 0x2;
static const Shortint wdMergeTargetSelected = 0x0;
static const Shortint wdMergeTargetCurrent = 0x1;
static const Shortint wdMergeTargetNew = 0x2;
static const Shortint wdFormattingFromCurrent = 0x0;
static const Shortint wdFormattingFromSelected = 0x1;
static const Shortint wdFormattingFromPrompt = 0x2;
static const Shortint wdRevisionsViewFinal = 0x0;
static const Shortint wdRevisionsViewOriginal = 0x1;
static const Shortint wdBalloonRevisions = 0x0;
static const Shortint wdInLineRevisions = 0x1;
static const Shortint wdBalloonWidthPercent = 0x0;
static const Shortint wdBalloonWidthPoints = 0x1;
static const Shortint wdBalloonPrintOrientationAuto = 0x0;
static const Shortint wdBalloonPrintOrientationPreserve = 0x1;
static const Shortint wdBalloonPrintOrientationForceLandscape = 0x2;
static const Shortint wdLeftMargin = 0x0;
static const Shortint wdRightMargin = 0x1;
static const Shortint wdTaskPaneFormatting = 0x0;
static const Shortint wdTaskPaneRevealFormatting = 0x1;
static const Shortint wdTaskPaneMailMerge = 0x2;
static const Shortint wdTaskPaneTranslate = 0x3;
static const Shortint wdTaskPaneSearch = 0x4;
static const Shortint wdShowFilterStylesAvailable = 0x0;
static const Shortint wdShowFilterStylesInUse = 0x1;
static const Shortint wdShowFilterStylesAll = 0x2;
static const Shortint wdShowFilterFormattingInUse = 0x3;
static const Shortint wdShowFilterFormattingAvailable = 0x4;
static const Shortint wdMergeSubTypeOther = 0x0;
static const Shortint wdMergeSubTypeAccess = 0x1;
static const Shortint wdMergeSubTypeOAL = 0x2;
static const Shortint wdMergeSubTypeOLEDBWord = 0x3;
static const Shortint wdMergeSubTypeWorks = 0x4;
static const Shortint wdMergeSubTypeOLEDBText = 0x5;
static const Shortint wdMergeSubTypeOutlook = 0x6;
static const Shortint wdMergeSubTypeWord = 0x7;
static const Shortint wdMergeSubTypeWord2000 = 0x8;
static const Shortint wdLeftToRight = 0x0;
static const Shortint wdRightToLeft = 0x1;
static const Word wdChineseHongKong = 0xc04;
static const Word wdChineseMacao = 0x1404;
static const Word wdEnglishTrinidad = 0x2c09;

}	/* namespace Opwrdxp */
using namespace Opwrdxp;
#pragma option pop	// -w-
#pragma option pop	// -Vx

#pragma delphiheader end.
//-- end unit ----------------------------------------------------------------
#endif	// OpWrdXP
