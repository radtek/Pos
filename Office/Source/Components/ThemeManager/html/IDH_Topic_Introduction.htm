<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 //EN">
<HTML>
<HEAD>
<META NAME="GENERATOR" Content="Time2HELP 1.0; Standard Template">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html;CHARSET=utf8">
<TITLE>Introduction</TITLE>
<Style>Body, TD {font-family: "Verdana"; font-size: 10pt};
PRE {font-family: "Courier New"; font-size: 10pt; margin-top: 0; margin-bottom: 0}
TR.odd {background-color: #F8F8F8};
TR.even {background-color: #EEEEEE};
Table.list {background-color: #FFFFFF};
TD {vertical-align : top};
TD.stripelight {background-image: url(images/StripeLight.gif);};
TD.stripedark {background-image: url(images/StripeDark.gif);};
</Style>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<BASEFONT NAME="Verdana" Size="2"><Style Type="text/css"> p.initial:first-letter {font-size:36pt; font-weight:bold} </Style><!--TABLE BORDER="0" WIDTH="100%" BGCOLOR="#FFFF00"><TR><TD-->
<TABLE BORDER="0" WIDTH="100%" BGCOLOR="#D2D0BD" cellspacing=0><TR><TD class="stripelight"><Font Size="6"><B>Introduction</B></Font></TD></TR></Table><HR><P Class="initial"><B>Windows XP Theme Manager</B> is a suite of three classes which enable access to Windows XP theme support from Delphi and Borland C++ Builder applications.</P><P Align="Center"><Img Src="images/Explorer1.gif"/></P><P><A HREF="IDH_Class_TThemeServices.htm">TThemeServices</A> is a wrapper around the themes APIs and allows an application or control to use theme functions without worrying about managing theme data and listen to theme changes in the system. It has a very small memory footprint and does not appear on the component palette. For your convenience there is a global function, which implicitely creates and returns a theme services class (like Printer in the printer unit), which is also used by the Theme Manager class. The same approach is used in Delphi 7, where this class is now inherent part of the VCL.</P><P><A HREF="IDH_Class_TThemeManager.htm">TThemeManager</A> is a component that takes important measures to allow VCL applications to work with Windows XP themes and modifies some controls to match the general theme look. It does not need to modify any VCL units nor to change code in an application. It is indeed a drop-and-forget component.</P><P><A HREF="IDH_Class_TThemeManagerDB.htm">TThemeManagerDB</A> is the third class in the bundle and is an enhanced TThemeManager class which takes care for DB controls. It is located in an own unit because it has to import database units which are not of general interest in all applications.</P><H2>Overview:</H2><UL><LI>A XML manifest resource is <B>not</B> automatically included in the application. In order to avoid problems by controls, which use the themes units, you must either add a manifest file (YourAppName.exe.manifest) to the application folder or compile your application with the WinXP.res resource file. You will find both, the resource file as well as a manifest file (which can be used for any application, just rename it accordingly) in the Theme Explorer folder. The resource file contains two manifest entries under the IDs 1 and 123. The first one is used for applications, while the latter is necessary for control panel applets.</LI><LI>The themes DLL is dynamically loaded to avoid breaking applications on older Windows systems.</LI><LI>The entire theme management is done by the TThemeServices class. This includes awareness for theme changes as well as opening and closing theme data.</LI><LI>A, as I think, more logical identification for the many theme parts and states is used, which makes usage much more intuitive.</LI><LI>Various VCL controls are subclassed by TThemeManager, either to provide a bug fix or to fix the painting in general. The theme manager is aware of control additions and removals and does the subclassing transparently. The list of subclassed controls includes:<UL><LI><B>TListView</B>, The bug in report mode without images in the header had to be fixed.</LI><LI><B>TAnimate</B>, The background of the (transparent) animation window must be fixed (see also topic <A HREF="IDH_Topic_Issues.htm">Known issues</A>).</LI><LI><B>TButtonControl</B>, This includes TButton, TBitBtn, T(Custom)CheckBox and TRadioButton. TBitBtn must be fully drawn by the manager, while check boxes, radio buttons and TButtons must be made transparent.</LI><LI><B>TCustomGroupBox</B>, Necessary to subclass because it must be fully drawn by the manager (transparency, rounded border, themed caption).</LI><LI><B>TTabSheet</B>, The tab sheet background must be painted using the parent's background instead of the own one (simulation of transparency). Additionally, its non-client area must be painted in a theme fashion if the border size is &gt; 0.</LI><LI><B>TTrackBar</B>, Also the trackbar must be made transparent.</LI><LI><B>TStatusBar</B>, The status bar has a gradient background which is drawn by the Theme Manager. Additionally, it needs repaints on resize to avoid size grip smearing and wrong text output.</LI><LI><B>TSpeedButton</B>, This control, which is very similar to TButton and TBitBtn is not a normal Windows control, so it has fully to be painted by the theme manager.</LI><LI><B>TCustomPanel</B>, If a panel has the same color as its parent control, then it is painted transparently too.</LI><LI><B>TCustomFrame</B>, Frames are always painted transparently because this serves their purpose much better.</LI><LI><B>TDBLookupComboBox</B>, The lookup combobox needs a themed border and drop down button.</LI><LI><B>TCustomStaticText</B>, The static text control is a normal window control and its background must be made transparent.</LI><LI><B>TWinControl</B>, If a window control is not already in one of the other list then it is separately subclassed to have its border painted in themed fashion (e.g. to fix wrong borders of TScrollBox and TRichEdit). Additionally, TScrollBox's background is painted transparently here.</LI></UL></LI><LI>Three additional fixes are required, which don't need subclassing:<UL><LI><B>TLabel</B> should be transparent to show correct background.</LI><LI><B>TToolBar</B> should be transparent as well to show correct background.</LI><LI><B>TToolButton</B> uses csCaptureMouse in its control style which prevents proper working on Windows XP. Hence this style must be removed (see also topic <A HREF="IDH_Topic_Issues.htm">Known issues</A>).</LI></UL></LI></UL><P><HR>
<TABLE BORDER="0" WIDTH="100%" BGCOLOR="#404040" cellspacing=0><TR><TD class="stripelight">
<Font Color=Black><Large>Copyright © 1999, 2002 <B>Mike Lischke</B></Large</Font>
</TD></TR></Table>
<Small><A HREF="http://www.lischke-online.de">http://www.lischke-online.de</A></Small>