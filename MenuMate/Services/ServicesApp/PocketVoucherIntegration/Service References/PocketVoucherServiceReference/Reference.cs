//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PocketVoucherIntegration.PocketVoucherServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RedeemResult", Namespace="http://schemas.datacontract.org/2004/07/PocketVouchers.Services.Voucher.Redemptio" +
        "n")]
    public enum RedeemResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefined = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoucherCodeFormatInvalid = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoucherAmountTooSmall = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoucherAmountTooLarge = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransactionAmountTooSmall = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransactionAmountTooLarge = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MerchantIdFormatInvalid = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MerchantReferenceFormatInvalid = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TerminalIdFormatInvalid = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MerchantIdUserNameMismatch = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MerchantIdUnknown = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MerchantDeactivated = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MerchantIdTerminalIdCombinationUnknown = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TerminalDeactivated = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsumerDeactivated = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoucherBatchDeactivated = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoucherProviderDeactivated = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MerchantTimezonePeriodNotConfigured = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MerchantTransactionLimitExceeded = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoucherUnknown = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoucherNotAllocatedToConsumer = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoucherRedemptionOperationNotSupportedForVoucherType = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MerchantNotAMemberOfAnActiveMerchantGroupThatCanRedeemThisVoucher = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoucherRedemptionNotStarted = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoucherRedemptionFinished = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoucherExpired = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoucherRedemptionNotEnabledForDayOfWeek = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoucherInsufficientBalance = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoucherInsufficientBalanceAvailable = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RedemptionCodeBatchExhausted = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RedemptionMessageFormatInvalid = 32,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://pocketvouchers.com/services2010/08", ConfigurationName="PocketVoucherServiceReference.IRedemptionServiceV1")]
    public interface IRedemptionServiceV1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pocketvouchers.com/services2010/08/IRedemptionServiceV1/Redeem", ReplyAction="http://pocketvouchers.com/services2010/08/IRedemptionServiceV1/RedeemResponse")]
        PocketVoucherIntegration.PocketVoucherServiceReference.RedeemResult Redeem(out string redemptionReference, out string messageText, string voucherCode, string merchantId, string merchantReference, string terminalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pocketvouchers.com/services2010/08/IRedemptionServiceV1/RedeemWithTransact" +
            "ionAmount", ReplyAction="http://pocketvouchers.com/services2010/08/IRedemptionServiceV1/RedeemWithTransact" +
            "ionAmountResponse")]
        PocketVoucherIntegration.PocketVoucherServiceReference.RedeemResult RedeemWithTransactionAmount(out string redemptionReference, out string messageText, string voucherCode, decimal transactionAmount, string merchantId, string merchantReference, string terminalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pocketvouchers.com/services2010/08/IRedemptionServiceV1/RedeemWithVoucherA" +
            "mount", ReplyAction="http://pocketvouchers.com/services2010/08/IRedemptionServiceV1/RedeemWithVoucherA" +
            "mountResponse")]
        PocketVoucherIntegration.PocketVoucherServiceReference.RedeemResult RedeemWithVoucherAmount(out string redemptionReference, out string messageText, string voucherCode, decimal voucherAmount, string merchantId, string merchantReference, string terminalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pocketvouchers.com/services2010/08/IRedemptionServiceV1/RedeemWithVoucherA" +
            "mountTransactionAmount", ReplyAction="http://pocketvouchers.com/services2010/08/IRedemptionServiceV1/RedeemWithVoucherA" +
            "mountTransactionAmountResponse")]
        PocketVoucherIntegration.PocketVoucherServiceReference.RedeemResult RedeemWithVoucherAmountTransactionAmount(out string redemptionReference, out string messageText, string voucherCode, decimal voucherAmount, decimal transactionAmount, string merchantId, string merchantReference, string terminalId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRedemptionServiceV1Channel : PocketVoucherIntegration.PocketVoucherServiceReference.IRedemptionServiceV1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RedemptionServiceV1Client : System.ServiceModel.ClientBase<PocketVoucherIntegration.PocketVoucherServiceReference.IRedemptionServiceV1>, PocketVoucherIntegration.PocketVoucherServiceReference.IRedemptionServiceV1 {
        
        public RedemptionServiceV1Client() {
        }
        
        public RedemptionServiceV1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RedemptionServiceV1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RedemptionServiceV1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RedemptionServiceV1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PocketVoucherIntegration.PocketVoucherServiceReference.RedeemResult Redeem(out string redemptionReference, out string messageText, string voucherCode, string merchantId, string merchantReference, string terminalId) {
            return base.Channel.Redeem(out redemptionReference, out messageText, voucherCode, merchantId, merchantReference, terminalId);
        }
        
        public PocketVoucherIntegration.PocketVoucherServiceReference.RedeemResult RedeemWithTransactionAmount(out string redemptionReference, out string messageText, string voucherCode, decimal transactionAmount, string merchantId, string merchantReference, string terminalId) {
            return base.Channel.RedeemWithTransactionAmount(out redemptionReference, out messageText, voucherCode, transactionAmount, merchantId, merchantReference, terminalId);
        }
        
        public PocketVoucherIntegration.PocketVoucherServiceReference.RedeemResult RedeemWithVoucherAmount(out string redemptionReference, out string messageText, string voucherCode, decimal voucherAmount, string merchantId, string merchantReference, string terminalId) {
            return base.Channel.RedeemWithVoucherAmount(out redemptionReference, out messageText, voucherCode, voucherAmount, merchantId, merchantReference, terminalId);
        }
        
        public PocketVoucherIntegration.PocketVoucherServiceReference.RedeemResult RedeemWithVoucherAmountTransactionAmount(out string redemptionReference, out string messageText, string voucherCode, decimal voucherAmount, decimal transactionAmount, string merchantId, string merchantReference, string terminalId) {
            return base.Channel.RedeemWithVoucherAmountTransactionAmount(out redemptionReference, out messageText, voucherCode, voucherAmount, transactionAmount, merchantId, merchantReference, terminalId);
        }
    }
}
