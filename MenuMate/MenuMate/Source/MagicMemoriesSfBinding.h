// ************************************************************************ //
// The types declared in this file were generated from data read from the
// WSDL File described below:
// WSDL     : E:\MagicMemoriesWAPI.wsdl
//  >Import : E:\MagicMemoriesWAPI.wsdl>0
//  >Import : E:\MagicMemoriesWAPI.wsdl>1
//  >Import : E:\MagicMemoriesWAPI.wsdl>2
// Encoding : UTF-8
// Codegen  : [wfVerbose-, wfGenerateWarnings-, wfMapArraysToClasses+, wfUseSettersAndGetters+]
// Version  : 1.0
// (17/7/2012 12:07:51 PM - - $Rev: 25127 $)
// ************************************************************************ //

#ifndef __h_magic_memories_sf_binding__
#define __h_magic_memories_sf_binding__

#include <winsock2.h>
#include <System.hpp>
#include <InvokeRegistry.hpp>
#include <XSBuiltIns.hpp>
#include <SOAPHTTPClient.hpp>

#if !defined(SOAP_REMOTABLE_CLASS)
#define SOAP_REMOTABLE_CLASS __declspec(delphiclass)
#endif
#if !defined(IS_OPTN)
#define IS_OPTN 0x0001
#endif
#if !defined(IS_UNBD)
#define IS_UNBD 0x0002
#endif
#if !defined(IS_NLBL)
#define IS_NLBL 0x0004
#endif
#if !defined(IS_REF)
#define IS_REF 0x0080
#endif

namespace SfIntegration {

// ************************************************************************ //
// The following types, referred to in the WSDL document are not being represented
// in this file. They are either aliases[@] of other types represented or were referred
// to but never[!] declared in the document. The types from the latter category
// typically map to predefined/known XML or Embarcadero types; however, they could also 
// indicate incorrect WSDL documents that failed to declare or import a schema type.
// ************************************************************************ //
// !:string          - "http://www.w3.org/2001/XMLSchema"[Gbl]
// !:double          - "http://www.w3.org/2001/XMLSchema"[Gbl]
// !:dateTime        - "http://www.w3.org/2001/XMLSchema"[Gbl]
// !:boolean         - "http://www.w3.org/2001/XMLSchema"[Gbl]
// !:date            - "http://www.w3.org/2001/XMLSchema"[Gbl]
// !:int             - "http://www.w3.org/2001/XMLSchema"[Gbl]
// !:base64Binary    - "http://www.w3.org/2001/XMLSchema"[Gbl]
// !:anyType         - "http://www.w3.org/2001/XMLSchema"[Gbl]
// !:time            - "http://www.w3.org/2001/XMLSchema"[Gbl]

class SOAP_REMOTABLE_CLASS SearchRecord;
class SOAP_REMOTABLE_CLASS DeletedRecord;
class SOAP_REMOTABLE_CLASS GetServerTimestampResult;
class SOAP_REMOTABLE_CLASS SetPasswordResult;
class SOAP_REMOTABLE_CLASS ResetPasswordResult;
class SOAP_REMOTABLE_CLASS GetUserInfoResult;
class SOAP_REMOTABLE_CLASS LoginResult;
class SOAP_REMOTABLE_CLASS LeadConvert;
class SOAP_REMOTABLE_CLASS ChildRelationship;
class SOAP_REMOTABLE_CLASS RecordTypeInfo;
class SOAP_REMOTABLE_CLASS DescribeGlobalSObjectResult;
class SOAP_REMOTABLE_CLASS PicklistEntry;
class SOAP_REMOTABLE_CLASS DescribeDataCategoryGroupResult;
class SOAP_REMOTABLE_CLASS DataCategoryGroupSobjectTypePair;
class SOAP_REMOTABLE_CLASS DescribeSoftphoneLayoutInfoField;
class SOAP_REMOTABLE_CLASS DescribeSoftphoneScreenPopOption;
class SOAP_REMOTABLE_CLASS DescribeSoftphoneLayoutItem;
class SOAP_REMOTABLE_CLASS DescribeLayoutButton;
class SOAP_REMOTABLE_CLASS DescribeLayoutComponent;
class SOAP_REMOTABLE_CLASS RelatedListColumn;
class SOAP_REMOTABLE_CLASS RelatedListSort;
class SOAP_REMOTABLE_CLASS Email;
class SOAP_REMOTABLE_CLASS DescribeTab;
class SOAP_REMOTABLE_CLASS PackageVersion;
class SOAP_REMOTABLE_CLASS SessionHeader;
class SOAP_REMOTABLE_CLASS LoginScopeHeader;
class SOAP_REMOTABLE_CLASS QueryOptions;
class SOAP_REMOTABLE_CLASS DebuggingHeader;
class SOAP_REMOTABLE_CLASS DebuggingInfo;
class SOAP_REMOTABLE_CLASS AllowFieldTruncationHeader;
class SOAP_REMOTABLE_CLASS DisableFeedTrackingHeader;
class SOAP_REMOTABLE_CLASS StreamingEnabledHeader;
class SOAP_REMOTABLE_CLASS AllOrNoneHeader;
class SOAP_REMOTABLE_CLASS MruHeader;
class SOAP_REMOTABLE_CLASS EmailHeader;
class SOAP_REMOTABLE_CLASS AssignmentRuleHeader;
class SOAP_REMOTABLE_CLASS UserTerritoryDeleteHeader;
class SOAP_REMOTABLE_CLASS LocaleOptions;
class SOAP_REMOTABLE_CLASS ApiFault;
class SOAP_REMOTABLE_CLASS ApiQueryFault;
class SOAP_REMOTABLE_CLASS LoginFault;
class SOAP_REMOTABLE_CLASS InvalidQueryLocatorFault;
class SOAP_REMOTABLE_CLASS InvalidNewPasswordFault;
class SOAP_REMOTABLE_CLASS InvalidIdFault;
class SOAP_REMOTABLE_CLASS UnexpectedErrorFault;
class SOAP_REMOTABLE_CLASS InvalidFieldFault;
class SOAP_REMOTABLE_CLASS InvalidSObjectFault;
class SOAP_REMOTABLE_CLASS MalformedQueryFault;
class SOAP_REMOTABLE_CLASS MalformedSearchFault;
class SOAP_REMOTABLE_CLASS fault;
class SOAP_REMOTABLE_CLASS LoginFault2;
class SOAP_REMOTABLE_CLASS InvalidQueryLocatorFault2;
class SOAP_REMOTABLE_CLASS InvalidNewPasswordFault2;
class SOAP_REMOTABLE_CLASS InvalidIdFault2;
class SOAP_REMOTABLE_CLASS UnexpectedErrorFault2;
class SOAP_REMOTABLE_CLASS InvalidFieldFault2;
class SOAP_REMOTABLE_CLASS InvalidSObjectFault2;
class SOAP_REMOTABLE_CLASS MalformedQueryFault2;
class SOAP_REMOTABLE_CLASS MalformedSearchFault2;
class SOAP_REMOTABLE_CLASS SendEmailError;
class SOAP_REMOTABLE_CLASS Error;
class SOAP_REMOTABLE_CLASS sObject;
class SOAP_REMOTABLE_CLASS WebLink;
class SOAP_REMOTABLE_CLASS Vote;
class SOAP_REMOTABLE_CLASS UserRecordAccess;
class SOAP_REMOTABLE_CLASS UserProfileFeed;
class SOAP_REMOTABLE_CLASS UserPreference;
class SOAP_REMOTABLE_CLASS UserFeed;
class SOAP_REMOTABLE_CLASS TraceFlag;
class SOAP_REMOTABLE_CLASS Time__c_;
class SOAP_REMOTABLE_CLASS TaskStatus;
class SOAP_REMOTABLE_CLASS TaskPriority;
class SOAP_REMOTABLE_CLASS TaskFeed;
class SOAP_REMOTABLE_CLASS StaticResource;
class SOAP_REMOTABLE_CLASS Staff__c_;
class SOAP_REMOTABLE_CLASS Staff_Title__c_;
class SOAP_REMOTABLE_CLASS SolutionStatus;
class SOAP_REMOTABLE_CLASS SolutionHistory;
class SOAP_REMOTABLE_CLASS SolutionFeed;
class SOAP_REMOTABLE_CLASS SiteHistory;
class SOAP_REMOTABLE_CLASS SiteFeed;
class SOAP_REMOTABLE_CLASS SiteDomain;
class SOAP_REMOTABLE_CLASS Site;
class SOAP_REMOTABLE_CLASS SetupEntityAccess;
class SOAP_REMOTABLE_CLASS SelfServiceUser;
class SOAP_REMOTABLE_CLASS ReportFeed;
class SOAP_REMOTABLE_CLASS Report;
class SOAP_REMOTABLE_CLASS QueueSobject;
class SOAP_REMOTABLE_CLASS PushTopic;
class SOAP_REMOTABLE_CLASS Product2Feed;
class SOAP_REMOTABLE_CLASS ProcessInstanceWorkitem;
class SOAP_REMOTABLE_CLASS ProcessInstanceStep;
class SOAP_REMOTABLE_CLASS ProcessInstanceHistory;
class SOAP_REMOTABLE_CLASS ProcessInstance;
class SOAP_REMOTABLE_CLASS PermissionSetAssignment;
class SOAP_REMOTABLE_CLASS UserLicense;
class SOAP_REMOTABLE_CLASS Period;
class SOAP_REMOTABLE_CLASS PartnerRole;
class SOAP_REMOTABLE_CLASS Partner;
class SOAP_REMOTABLE_CLASS PLU_Stock__c;
class SOAP_REMOTABLE_CLASS Organization;
class SOAP_REMOTABLE_CLASS OrgWideEmailAddress;
class SOAP_REMOTABLE_CLASS OpportunityStage;
class SOAP_REMOTABLE_CLASS OpportunityShare;
class SOAP_REMOTABLE_CLASS OpportunityPartner;
class SOAP_REMOTABLE_CLASS PricebookEntry;
class SOAP_REMOTABLE_CLASS OpportunityLineItem;
class SOAP_REMOTABLE_CLASS OpportunityHistory;
class SOAP_REMOTABLE_CLASS OpportunityFieldHistory;
class SOAP_REMOTABLE_CLASS OpportunityFeed;
class SOAP_REMOTABLE_CLASS OpportunityContactRole;
class SOAP_REMOTABLE_CLASS OpportunityCompetitor;
class SOAP_REMOTABLE_CLASS Pricebook2;
class SOAP_REMOTABLE_CLASS OpenActivity;
class SOAP_REMOTABLE_CLASS ObjectPermissions;
class SOAP_REMOTABLE_CLASS NoteAndAttachment;
class SOAP_REMOTABLE_CLASS Note;
class SOAP_REMOTABLE_CLASS NewsFeed;
class SOAP_REMOTABLE_CLASS UserRole;
class SOAP_REMOTABLE_CLASS Profile;
class SOAP_REMOTABLE_CLASS Monthly_Variables__c;
class SOAP_REMOTABLE_CLASS MailmergeTemplate;
class SOAP_REMOTABLE_CLASS LoginHistory;
class SOAP_REMOTABLE_CLASS Transaction__c_;
class SOAP_REMOTABLE_CLASS Product__c_;
class SOAP_REMOTABLE_CLASS Line_Item__c_;
class SOAP_REMOTABLE_CLASS LeadStatus;
class SOAP_REMOTABLE_CLASS LeadShare;
class SOAP_REMOTABLE_CLASS LeadHistory;
class SOAP_REMOTABLE_CLASS LeadFeed;
class SOAP_REMOTABLE_CLASS Lead;
class SOAP_REMOTABLE_CLASS RecordType;
class SOAP_REMOTABLE_CLASS KPI__c_;
class SOAP_REMOTABLE_CLASS KPI_Value__c_;
class SOAP_REMOTABLE_CLASS IdeaComment;
class SOAP_REMOTABLE_CLASS Idea;
class SOAP_REMOTABLE_CLASS IDEWorkspace;
class SOAP_REMOTABLE_CLASS IDEPerspective;
class SOAP_REMOTABLE_CLASS Holiday;
class SOAP_REMOTABLE_CLASS GroupMember;
class SOAP_REMOTABLE_CLASS Group;
class SOAP_REMOTABLE_CLASS ForecastingQuota;
class SOAP_REMOTABLE_CLASS ForecastShare;
class SOAP_REMOTABLE_CLASS FiscalYearSettings;
class SOAP_REMOTABLE_CLASS PermissionSet;
class SOAP_REMOTABLE_CLASS FieldPermissions;
class SOAP_REMOTABLE_CLASS FeedTrackedChange;
class SOAP_REMOTABLE_CLASS FeedLike;
class SOAP_REMOTABLE_CLASS FeedItem;
class SOAP_REMOTABLE_CLASS FeedComment;
class SOAP_REMOTABLE_CLASS EventFeed;
class SOAP_REMOTABLE_CLASS EventAttendee;
class SOAP_REMOTABLE_CLASS Event;
class SOAP_REMOTABLE_CLASS EntitySubscription;
class SOAP_REMOTABLE_CLASS EmailTemplate;
class SOAP_REMOTABLE_CLASS Task;
class SOAP_REMOTABLE_CLASS EmailStatus;
class SOAP_REMOTABLE_CLASS EmailServicesFunction;
class SOAP_REMOTABLE_CLASS EmailServicesAddress;
class SOAP_REMOTABLE_CLASS DocumentAttachmentMap;
class SOAP_REMOTABLE_CLASS Document;
class SOAP_REMOTABLE_CLASS Payment_Type__c_;
class SOAP_REMOTABLE_CLASS Deposit__c_;
class SOAP_REMOTABLE_CLASS Deposit_Detail__c_;
class SOAP_REMOTABLE_CLASS Site__c_;
class SOAP_REMOTABLE_CLASS Day__c_;
class SOAP_REMOTABLE_CLASS DashboardFeed;
class SOAP_REMOTABLE_CLASS DashboardComponentFeed;
class SOAP_REMOTABLE_CLASS DashboardComponent;
class SOAP_REMOTABLE_CLASS Folder;
class SOAP_REMOTABLE_CLASS Dashboard;
class SOAP_REMOTABLE_CLASS CronTrigger;
class SOAP_REMOTABLE_CLASS ContractStatus;
class SOAP_REMOTABLE_CLASS ContractHistory;
class SOAP_REMOTABLE_CLASS ContractFeed;
class SOAP_REMOTABLE_CLASS ContractContactRole;
class SOAP_REMOTABLE_CLASS ContentVersionHistory;
class SOAP_REMOTABLE_CLASS ContentDocumentLink;
class SOAP_REMOTABLE_CLASS ContentDocumentHistory;
class SOAP_REMOTABLE_CLASS ContentDocumentFeed;
class SOAP_REMOTABLE_CLASS ContentVersion;
class SOAP_REMOTABLE_CLASS ContentDocument;
class SOAP_REMOTABLE_CLASS ContactShare;
class SOAP_REMOTABLE_CLASS ContactHistory;
class SOAP_REMOTABLE_CLASS ContactFeed;
class SOAP_REMOTABLE_CLASS Community;
class SOAP_REMOTABLE_CLASS CollaborationInvitation;
class SOAP_REMOTABLE_CLASS CollaborationGroupMemberRequest;
class SOAP_REMOTABLE_CLASS CollaborationGroupMember;
class SOAP_REMOTABLE_CLASS CollaborationGroupFeed;
class SOAP_REMOTABLE_CLASS CollaborationGroup;
class SOAP_REMOTABLE_CLASS ChatterActivity;
class SOAP_REMOTABLE_CLASS CategoryNode;
class SOAP_REMOTABLE_CLASS CategoryData;
class SOAP_REMOTABLE_CLASS CaseTeamTemplateRecord;
class SOAP_REMOTABLE_CLASS CaseTeamTemplateMember;
class SOAP_REMOTABLE_CLASS CaseTeamTemplate;
class SOAP_REMOTABLE_CLASS CaseTeamRole;
class SOAP_REMOTABLE_CLASS CaseTeamMember;
class SOAP_REMOTABLE_CLASS CaseStatus;
class SOAP_REMOTABLE_CLASS Solution;
class SOAP_REMOTABLE_CLASS CaseSolution;
class SOAP_REMOTABLE_CLASS CaseShare;
class SOAP_REMOTABLE_CLASS CaseHistory;
class SOAP_REMOTABLE_CLASS CaseFeed;
class SOAP_REMOTABLE_CLASS CaseContactRole;
class SOAP_REMOTABLE_CLASS CaseComment;
class SOAP_REMOTABLE_CLASS Case;
class SOAP_REMOTABLE_CLASS CallCenter;
class SOAP_REMOTABLE_CLASS BusinessProcess;
class SOAP_REMOTABLE_CLASS BusinessHours;
class SOAP_REMOTABLE_CLASS BrandTemplate;
class SOAP_REMOTABLE_CLASS Attachment;
class SOAP_REMOTABLE_CLASS AssignmentRule;
class SOAP_REMOTABLE_CLASS AssetFeed;
class SOAP_REMOTABLE_CLASS Product2;
class SOAP_REMOTABLE_CLASS Asset;
class SOAP_REMOTABLE_CLASS Contract;
class SOAP_REMOTABLE_CLASS Approval;
class SOAP_REMOTABLE_CLASS ApexTrigger;
class SOAP_REMOTABLE_CLASS AsyncApexJob;
class SOAP_REMOTABLE_CLASS ApexTestResult;
class SOAP_REMOTABLE_CLASS ApexTestQueueItem;
class SOAP_REMOTABLE_CLASS ApexPage;
class SOAP_REMOTABLE_CLASS ApexLog;
class SOAP_REMOTABLE_CLASS ApexExecutionOverlayAction;
class SOAP_REMOTABLE_CLASS ApexComponent;
class SOAP_REMOTABLE_CLASS ApexClass;
class SOAP_REMOTABLE_CLASS AdditionalNumber;
class SOAP_REMOTABLE_CLASS ActivityHistory;
class SOAP_REMOTABLE_CLASS AccountShare;
class SOAP_REMOTABLE_CLASS Opportunity;
class SOAP_REMOTABLE_CLASS AccountPartner;
class SOAP_REMOTABLE_CLASS AccountHistory;
class SOAP_REMOTABLE_CLASS Name_;
class SOAP_REMOTABLE_CLASS AccountFeed;
class SOAP_REMOTABLE_CLASS Contact;
class SOAP_REMOTABLE_CLASS AccountContactRole;
class SOAP_REMOTABLE_CLASS User;
class SOAP_REMOTABLE_CLASS Account;
class SOAP_REMOTABLE_CLASS AggregateResult;
class SOAP_REMOTABLE_CLASS QueryResult;
class SOAP_REMOTABLE_CLASS SearchResult;
class SOAP_REMOTABLE_CLASS MassEmailMessage;
class SOAP_REMOTABLE_CLASS ProcessRequest;
class SOAP_REMOTABLE_CLASS ProcessWorkitemRequest;
class SOAP_REMOTABLE_CLASS ProcessSubmitRequest;
class SOAP_REMOTABLE_CLASS MergeRequest;
class SOAP_REMOTABLE_CLASS GetUpdatedResult;
class SOAP_REMOTABLE_CLASS GetDeletedResult;
class SOAP_REMOTABLE_CLASS LeadConvertResult;
class SOAP_REMOTABLE_CLASS EmptyRecycleBinResult;
class SOAP_REMOTABLE_CLASS UndeleteResult;
class SOAP_REMOTABLE_CLASS DeleteResult;
class SOAP_REMOTABLE_CLASS ProcessResult;
class SOAP_REMOTABLE_CLASS MergeResult;
class SOAP_REMOTABLE_CLASS UpsertResult;
class SOAP_REMOTABLE_CLASS SaveResult;
class SOAP_REMOTABLE_CLASS InvalidateSessionsResult;
class SOAP_REMOTABLE_CLASS DescribeSObjectResult;
class SOAP_REMOTABLE_CLASS PicklistForRecordType;
class SOAP_REMOTABLE_CLASS Field;
class SOAP_REMOTABLE_CLASS DescribeGlobalResult;
class SOAP_REMOTABLE_CLASS DataCategory;
class SOAP_REMOTABLE_CLASS DescribeDataCategoryGroupStructureResult;
class SOAP_REMOTABLE_CLASS DescribeSoftphoneLayoutResult;
class SOAP_REMOTABLE_CLASS DescribeSoftphoneLayoutCallType;
class SOAP_REMOTABLE_CLASS DescribeSoftphoneLayoutSection;
class SOAP_REMOTABLE_CLASS DescribeLayoutResult;
class SOAP_REMOTABLE_CLASS DescribeLayout;
class SOAP_REMOTABLE_CLASS RecordTypeMapping;
class SOAP_REMOTABLE_CLASS DescribeLayoutButtonSection;
class SOAP_REMOTABLE_CLASS DescribeLayoutSection;
class SOAP_REMOTABLE_CLASS RelatedList;
class SOAP_REMOTABLE_CLASS DescribeLayoutRow;
class SOAP_REMOTABLE_CLASS DescribeLayoutItem;
class SOAP_REMOTABLE_CLASS SingleEmailMessage;
class SOAP_REMOTABLE_CLASS SendEmailResult;
class SOAP_REMOTABLE_CLASS DescribeTabSetResult;
class SOAP_REMOTABLE_CLASS PackageVersionHeader;
class SOAP_REMOTABLE_CLASS EmailFileAttachment;

enum class StatusCode   /* "urn:enterprise.soap.sforce.com"[GblSmpl] */
{
  ALL_OR_NONE_OPERATION_ROLLED_BACK, 
  ALREADY_IN_PROCESS, 
  ASSIGNEE_TYPE_REQUIRED, 
  BAD_CUSTOM_ENTITY_PARENT_DOMAIN, 
  BCC_NOT_ALLOWED_IF_BCC_COMPLIANCE_ENABLED, 
  CANNOT_CASCADE_PRODUCT_ACTIVE, 
  CANNOT_CHANGE_FIELD_TYPE_OF_APEX_REFERENCED_FIELD, 
  CANNOT_CREATE_ANOTHER_MANAGED_PACKAGE, 
  CANNOT_DEACTIVATE_DIVISION, 
  CANNOT_DELETE_LAST_DATED_CONVERSION_RATE, 
  CANNOT_DELETE_MANAGED_OBJECT, 
  CANNOT_DISABLE_LAST_ADMIN, 
  CANNOT_ENABLE_IP_RESTRICT_REQUESTS, 
  CANNOT_INSERT_UPDATE_ACTIVATE_ENTITY, 
  CANNOT_MODIFY_MANAGED_OBJECT, 
  CANNOT_RENAME_APEX_REFERENCED_FIELD, 
  CANNOT_RENAME_APEX_REFERENCED_OBJECT, 
  CANNOT_REPARENT_RECORD, 
  CANNOT_UPDATE_CONVERTED_LEAD, 
  CANT_DISABLE_CORP_CURRENCY, 
  CANT_UNSET_CORP_CURRENCY, 
  CHILD_SHARE_FAILS_PARENT, 
  CIRCULAR_DEPENDENCY, 
  COMMUNITY_NOT_ACCESSIBLE, 
  CUSTOM_CLOB_FIELD_LIMIT_EXCEEDED, 
  CUSTOM_ENTITY_OR_FIELD_LIMIT, 
  CUSTOM_FIELD_INDEX_LIMIT_EXCEEDED, 
  CUSTOM_INDEX_EXISTS, 
  CUSTOM_LINK_LIMIT_EXCEEDED, 
  CUSTOM_TAB_LIMIT_EXCEEDED, 
  DELETE_FAILED, 
  DELETE_OPERATION_TOO_LARGE, 
  DELETE_REQUIRED_ON_CASCADE, 
  DEPENDENCY_EXISTS, 
  DUPLICATE_CASE_SOLUTION, 
  DUPLICATE_COMM_NICKNAME, 
  DUPLICATE_CUSTOM_ENTITY_DEFINITION, 
  DUPLICATE_CUSTOM_TAB_MOTIF, 
  DUPLICATE_DEVELOPER_NAME, 
  DUPLICATE_EXTERNAL_ID, 
  DUPLICATE_MASTER_LABEL, 
  DUPLICATE_SENDER_DISPLAY_NAME, 
  DUPLICATE_USERNAME, 
  DUPLICATE_VALUE, 
  EMAIL_NOT_PROCESSED_DUE_TO_PRIOR_ERROR, 
  EMPTY_SCONTROL_FILE_NAME, 
  ENTITY_FAILED_IFLASTMODIFIED_ON_UPDATE, 
  ENTITY_IS_ARCHIVED, 
  ENTITY_IS_DELETED, 
  ENTITY_IS_LOCKED, 
  ERROR_IN_MAILER, 
  EXTERNAL_OBJECT_AUTHENTICATION_EXCEPTION, 
  EXTERNAL_OBJECT_CONNECTION_EXCEPTION, 
  EXTERNAL_OBJECT_EXCEPTION, 
  EXTERNAL_OBJECT_UNSUPPORTED_EXCEPTION, 
  FAILED_ACTIVATION, 
  FIELD_CUSTOM_VALIDATION_EXCEPTION, 
  FIELD_FILTER_VALIDATION_EXCEPTION, 
  FIELD_INTEGRITY_EXCEPTION, 
  FILTERED_LOOKUP_LIMIT_EXCEEDED, 
  HTML_FILE_UPLOAD_NOT_ALLOWED, 
  IMAGE_TOO_LARGE, 
  INACTIVE_OWNER_OR_USER, 
  INSUFFICIENT_ACCESS_ON_CROSS_REFERENCE_ENTITY, 
  INSUFFICIENT_ACCESS_OR_READONLY, 
  INVALID_ACCESS_LEVEL, 
  INVALID_ARGUMENT_TYPE, 
  INVALID_ASSIGNEE_TYPE, 
  INVALID_ASSIGNMENT_RULE, 
  INVALID_BATCH_OPERATION, 
  INVALID_CONTENT_TYPE, 
  INVALID_CREDIT_CARD_INFO, 
  INVALID_CROSS_REFERENCE_KEY, 
  INVALID_CROSS_REFERENCE_TYPE_FOR_FIELD, 
  INVALID_CURRENCY_CONV_RATE, 
  INVALID_CURRENCY_CORP_RATE, 
  INVALID_CURRENCY_ISO, 
  INVALID_DATA_CATEGORY_GROUP_REFERENCE, 
  INVALID_DATA_URI, 
  INVALID_EMAIL_ADDRESS, 
  INVALID_EMPTY_KEY_OWNER, 
  INVALID_FIELD, 
  INVALID_FIELD_FOR_INSERT_UPDATE, 
  INVALID_FIELD_WHEN_USING_TEMPLATE, 
  INVALID_FILTER_ACTION, 
  INVALID_GOOGLE_DOCS_URL, 
  INVALID_ID_FIELD, 
  INVALID_INET_ADDRESS, 
  INVALID_LINEITEM_CLONE_STATE, 
  INVALID_MASTER_OR_TRANSLATED_SOLUTION, 
  INVALID_MESSAGE_ID_REFERENCE, 
  INVALID_OPERATION, 
  INVALID_OPERATOR, 
  INVALID_OR_NULL_FOR_RESTRICTED_PICKLIST, 
  INVALID_PACKAGE_VERSION, 
  INVALID_PARTNER_NETWORK_STATUS, 
  INVALID_PERSON_ACCOUNT_OPERATION, 
  INVALID_QUERY_LOCATOR, 
  INVALID_READ_ONLY_USER_DML, 
  INVALID_SAVE_AS_ACTIVITY_FLAG, 
  INVALID_SESSION_ID, 
  INVALID_SETUP_OWNER, 
  INVALID_STATUS, 
  INVALID_TYPE, 
  INVALID_TYPE_FOR_OPERATION, 
  INVALID_TYPE_ON_FIELD_IN_RECORD, 
  IP_RANGE_LIMIT_EXCEEDED, 
  LICENSE_LIMIT_EXCEEDED, 
  LIGHT_PORTAL_USER_EXCEPTION, 
  LIMIT_EXCEEDED, 
  MALFORMED_ID, 
  MANAGER_NOT_DEFINED, 
  MASSMAIL_RETRY_LIMIT_EXCEEDED, 
  MASS_MAIL_LIMIT_EXCEEDED, 
  MAXIMUM_CCEMAILS_EXCEEDED, 
  MAXIMUM_DASHBOARD_COMPONENTS_EXCEEDED, 
  MAXIMUM_HIERARCHY_LEVELS_REACHED, 
  MAXIMUM_SIZE_OF_ATTACHMENT, 
  MAXIMUM_SIZE_OF_DOCUMENT, 
  MAX_ACTIONS_PER_RULE_EXCEEDED, 
  MAX_ACTIVE_RULES_EXCEEDED, 
  MAX_APPROVAL_STEPS_EXCEEDED, 
  MAX_FORMULAS_PER_RULE_EXCEEDED, 
  MAX_RULES_EXCEEDED, 
  MAX_RULE_ENTRIES_EXCEEDED, 
  MAX_TASK_DESCRIPTION_EXCEEEDED, 
  MAX_TM_RULES_EXCEEDED, 
  MAX_TM_RULE_ITEMS_EXCEEDED, 
  MERGE_FAILED, 
  MISSING_ARGUMENT, 
  MIXED_DML_OPERATION, 
  NONUNIQUE_SHIPPING_ADDRESS, 
  NO_APPLICABLE_PROCESS, 
  NO_ATTACHMENT_PERMISSION, 
  NO_INACTIVE_DIVISION_MEMBERS, 
  NO_MASS_MAIL_PERMISSION, 
  NUMBER_OUTSIDE_VALID_RANGE, 
  NUM_HISTORY_FIELDS_BY_SOBJECT_EXCEEDED, 
  OPTED_OUT_OF_MASS_MAIL, 
  OP_WITH_INVALID_USER_TYPE_EXCEPTION, 
  PACKAGE_LICENSE_REQUIRED, 
  PORTAL_NO_ACCESS, 
  PORTAL_USER_ALREADY_EXISTS_FOR_CONTACT, 
  PRIVATE_CONTACT_ON_ASSET, 
  QUERY_TIMEOUT, 
  RECORD_IN_USE_BY_WORKFLOW, 
  REQUEST_RUNNING_TOO_LONG, 
  REQUIRED_FEATURE_MISSING, 
  REQUIRED_FIELD_MISSING, 
  SELF_REFERENCE_FROM_TRIGGER, 
  SHARE_NEEDED_FOR_CHILD_OWNER, 
  SINGLE_EMAIL_LIMIT_EXCEEDED, 
  STANDARD_PRICE_NOT_DEFINED, 
  STORAGE_LIMIT_EXCEEDED, 
  STRING_TOO_LONG, 
  TABSET_LIMIT_EXCEEDED, 
  TEMPLATE_NOT_ACTIVE, 
  TERRITORY_REALIGN_IN_PROGRESS, 
  TEXT_DATA_OUTSIDE_SUPPORTED_CHARSET, 
  TOO_MANY_APEX_REQUESTS, 
  TOO_MANY_ENUM_VALUE, 
  TRANSFER_REQUIRES_READ, 
  UNABLE_TO_LOCK_ROW, 
  UNAVAILABLE_RECORDTYPE_EXCEPTION, 
  UNDELETE_FAILED, 
  UNKNOWN_EXCEPTION, 
  UNSPECIFIED_EMAIL_ADDRESS, 
  UNSUPPORTED_APEX_TRIGGER_OPERATON, 
  UNVERIFIED_SENDER_ADDRESS, 
  USER_OWNS_PORTAL_ACCOUNT_EXCEPTION, 
  USER_WITH_APEX_SHARES_EXCEPTION, 
  WEBLINK_SIZE_LIMIT_EXCEEDED, 
  WRONG_CONTROLLER_TYPE
};

class StatusCode_TypeInfoHolder : public TObject {
  StatusCode __instanceType;
public:
__published:
  __property StatusCode __propType = { read=__instanceType };
};

enum class soapType   /* "urn:enterprise.soap.sforce.com"[GblSmpl] */
{
  tns_ID, 
  xsd_base64Binary, 
  xsd_boolean, 
  xsd_double, 
  xsd_int, 
  xsd_string, 
  xsd_date, 
  xsd_dateTime, 
  xsd_time, 
  xsd_anyType
};

class soapType_TypeInfoHolder : public TObject {
  soapType __instanceType;
public:
__published:
  __property soapType __propType = { read=__instanceType };
};

enum class fieldType   /* "urn:enterprise.soap.sforce.com"[GblSmpl] */
{
  string, 
  picklist, 
  multipicklist, 
  combobox, 
  reference, 
  base64, 
  boolean, 
  currency, 
  textarea, 
  int_, 
  double_, 
  percent, 
  phone, 
  id, 
  date, 
  datetime, 
  time, 
  url, 
  email, 
  encryptedstring, 
  datacategorygroupreference, 
  location, 
  anyType
};

class fieldType_TypeInfoHolder : public TObject {
  fieldType __instanceType;
public:
__published:
  __property fieldType __propType = { read=__instanceType };
};

enum class layoutComponentType   /* "urn:enterprise.soap.sforce.com"[GblSmpl] */
{
  Field, 
  Separator, 
  SControl, 
  EmptySpace
};

class layoutComponentType_TypeInfoHolder : public TObject {
  layoutComponentType __instanceType;
public:
__published:
  __property layoutComponentType __propType = { read=__instanceType };
};

enum class EmailPriority   /* "urn:enterprise.soap.sforce.com"[GblSmpl] */
{
  Highest, 
  High, 
  Normal, 
  Low, 
  Lowest
};

class EmailPriority_TypeInfoHolder : public TObject {
  EmailPriority __instanceType;
public:
__published:
  __property EmailPriority __propType = { read=__instanceType };
};

enum class DebugLevel   /* "urn:enterprise.soap.sforce.com"[GblSmpl] */
{
  None, 
  DebugOnly, 
  Db
};

class DebugLevel_TypeInfoHolder : public TObject {
  DebugLevel __instanceType;
public:
__published:
  __property DebugLevel __propType = { read=__instanceType };
};

enum class ExceptionCode   /* "urn:fault.enterprise.soap.sforce.com"[GblSmpl] */
{
  APEX_TRIGGER_COUPLING_LIMIT, 
  API_CURRENTLY_DISABLED, 
  API_DISABLED_FOR_ORG, 
  ARGUMENT_OBJECT_PARSE_ERROR, 
  CANNOT_DELETE_OWNER, 
  CANT_ADD_STANDADRD_PORTAL_USER_TO_TERRITORY, 
  CANT_ADD_STANDARD_PORTAL_USER_TO_TERRITORY, 
  CIRCULAR_OBJECT_GRAPH, 
  CLIENT_NOT_ACCESSIBLE_FOR_USER, 
  CLIENT_REQUIRE_UPDATE_FOR_USER, 
  CUSTOM_METADATA_LIMIT_EXCEEDED, 
  DATACLOUD_API_CLIENT_EXCEPTION, 
  DATACLOUD_API_SERVER_BUSY_EXCEPTION, 
  DATACLOUD_API_SERVER_EXCEPTION, 
  DATACLOUD_API_UNAVAILABLE, 
  DUPLICATE_ARGUMENT_VALUE, 
  DUPLICATE_VALUE, 
  EMAIL_BATCH_SIZE_LIMIT_EXCEEDED, 
  EMAIL_TO_CASE_INVALID_ROUTING, 
  EMAIL_TO_CASE_LIMIT_EXCEEDED, 
  EMAIL_TO_CASE_NOT_ENABLED, 
  EXCEEDED_ID_LIMIT, 
  EXCEEDED_LEAD_CONVERT_LIMIT, 
  EXCEEDED_MAX_SIZE_REQUEST, 
  EXCEEDED_MAX_TYPES_LIMIT, 
  EXCEEDED_QUOTA, 
  FEDERATED_SEARCH_ERROR, 
  FEED_NOT_ENABLED_FOR_OBJECT, 
  FUNCTIONALITY_NOT_ENABLED, 
  FUNCTIONALITY_TEMPORARILY_UNAVAILABLE, 
  ILLEGAL_QUERY_PARAMETER_VALUE, 
  INACTIVE_OWNER_OR_USER, 
  INACTIVE_PORTAL, 
  INSUFFICIENT_ACCESS, 
  INVALID_ASSIGNMENT_RULE, 
  INVALID_BATCH_SIZE, 
  INVALID_CLIENT, 
  INVALID_CROSS_REFERENCE_KEY, 
  INVALID_FIELD, 
  INVALID_FILTER_LANGUAGE, 
  INVALID_FILTER_VALUE, 
  INVALID_ID_FIELD, 
  INVALID_INPUT_COMBINATION, 
  INVALID_LOCALE_LANGUAGE, 
  INVALID_LOCATOR, 
  INVALID_LOGIN, 
  INVALID_MULTIPART_REQUEST, 
  INVALID_NEW_PASSWORD, 
  INVALID_OPERATION, 
  INVALID_OPERATION_WITH_EXPIRED_PASSWORD, 
  INVALID_PAGING_OPTION, 
  INVALID_QUERY_FILTER_OPERATOR, 
  INVALID_QUERY_LOCATOR, 
  INVALID_QUERY_SCOPE, 
  INVALID_REPLICATION_DATE, 
  INVALID_SEARCH, 
  INVALID_SEARCH_SCOPE, 
  INVALID_SESSION_ID, 
  INVALID_SOAP_HEADER, 
  INVALID_SORT_OPTION, 
  INVALID_SSO_GATEWAY_URL, 
  INVALID_TYPE, 
  INVALID_TYPE_FOR_OPERATION, 
  JIGSAW_IMPORT_LIMIT_EXCEEDED, 
  JIGSAW_REQUEST_NOT_SUPPORTED, 
  JSON_PARSER_ERROR, 
  LICENSING_UNKNOWN_ERROR, 
  LIMIT_EXCEEDED, 
  LOGIN_CHALLENGE_ISSUED, 
  LOGIN_CHALLENGE_PENDING, 
  LOGIN_DURING_RESTRICTED_DOMAIN, 
  LOGIN_DURING_RESTRICTED_TIME, 
  LOGIN_MUST_USE_SECURITY_TOKEN, 
  MALFORMED_ID, 
  MALFORMED_QUERY, 
  MALFORMED_SEARCH, 
  MISSING_ARGUMENT, 
  NOT_MODIFIED, 
  NO_SOFTPHONE_LAYOUT, 
  NUMBER_OUTSIDE_VALID_RANGE, 
  OPERATION_TOO_LARGE, 
  ORG_IN_MAINTENANCE, 
  ORG_IS_DOT_ORG, 
  ORG_LOCKED, 
  ORG_NOT_OWNED_BY_INSTANCE, 
  PASSWORD_LOCKOUT, 
  PORTAL_NO_ACCESS, 
  POST_BODY_PARSE_ERROR, 
  QUERY_TIMEOUT, 
  QUERY_TOO_COMPLICATED, 
  REQUEST_LIMIT_EXCEEDED, 
  REQUEST_RUNNING_TOO_LONG, 
  SERVER_UNAVAILABLE, 
  SOCIALCRM_FEEDSERVICE_API_CLIENT_EXCEPTION, 
  SOCIALCRM_FEEDSERVICE_API_SERVER_EXCEPTION, 
  SOCIALCRM_FEEDSERVICE_API_UNAVAILABLE, 
  SSO_SERVICE_DOWN, 
  TOO_MANY_APEX_REQUESTS, 
  TOO_MANY_RECIPIENTS, 
  TRIAL_EXPIRED, 
  UNKNOWN_ATTACHMENT_EXCEPTION, 
  UNKNOWN_EXCEPTION, 
  UNSUPPORTED_API_VERSION, 
  UNSUPPORTED_ATTACHMENT_ENCODING, 
  UNSUPPORTED_CLIENT, 
  UNSUPPORTED_MEDIA_TYPE, 
  XML_PARSER_ERROR
};

class ExceptionCode_TypeInfoHolder : public TObject {
  ExceptionCode __instanceType;
public:
__published:
  __property ExceptionCode __propType = { read=__instanceType };
};

typedef UnicodeString ID; /* "urn:enterprise.soap.sforce.com"[GblSmpl] */
typedef UnicodeString QueryLocator; /* "urn:enterprise.soap.sforce.com"[GblSmpl] */


// ************************************************************************ //
// XML       : SearchRecord, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class SearchRecord : public TRemotable {
private:
  sObject*        Frecord;
  sObject* __fastcall Getrecord()
  {  return Frecord;  }
  void __fastcall Setrecord(sObject* _prop_val)
  {  Frecord = _prop_val;  }

public:
  __fastcall ~SearchRecord();
__published:
  __property sObject*       record = { read=Frecord, write=Setrecord };
};




// ************************************************************************ //
// XML       : DeletedRecord, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DeletedRecord : public TRemotable {
private:
  TXSDateTime*    FdeletedDate;
  ID              Fid;
  TXSDateTime* __fastcall GetdeletedDate()
  {  return FdeletedDate;  }
  void __fastcall SetdeletedDate(TXSDateTime* _prop_val)
  {  FdeletedDate = _prop_val;  }
  ID __fastcall Getid()
  {  return Fid;  }
  void __fastcall Setid(ID _prop_val)
  {  Fid = _prop_val;  }

public:
  __fastcall ~DeletedRecord();
__published:
  __property TXSDateTime* deletedDate = { read=FdeletedDate, write=SetdeletedDate };
  __property ID                 id = { read=Fid, write=Setid };
};




// ************************************************************************ //
// XML       : GetServerTimestampResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class GetServerTimestampResult : public TRemotable {
private:
  TXSDateTime*    Ftimestamp;
  TXSDateTime* __fastcall Gettimestamp()
  {  return Ftimestamp;  }
  void __fastcall Settimestamp(TXSDateTime* _prop_val)
  {  Ftimestamp = _prop_val;  }

public:
  __fastcall ~GetServerTimestampResult();
__published:
  __property TXSDateTime*  timestamp = { read=Ftimestamp, write=Settimestamp };
};




// ************************************************************************ //
// XML       : SetPasswordResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class SetPasswordResult : public TRemotable {
private:
__published:
};




// ************************************************************************ //
// XML       : ResetPasswordResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class ResetPasswordResult : public TRemotable {
private:
  UnicodeString   Fpassword;
  UnicodeString __fastcall Getpassword()
  {  return Fpassword;  }
  void __fastcall Setpassword(UnicodeString _prop_val)
  {  Fpassword = _prop_val;  }
__published:
  __property UnicodeString   password = { read=Fpassword, write=Setpassword };
};




// ************************************************************************ //
// XML       : GetUserInfoResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class GetUserInfoResult : public TRemotable {
private:
  bool            FaccessibilityMode;
  UnicodeString   FcurrencySymbol;
  int             ForgAttachmentFileSizeLimit;
  UnicodeString   ForgDefaultCurrencyIsoCode;
  bool            ForgDisallowHtmlAttachments;
  bool            ForgHasPersonAccounts;
  ID              ForganizationId;
  bool            ForganizationMultiCurrency;
  UnicodeString   ForganizationName;
  ID              FprofileId;
  ID              FroleId;
  int             FsessionSecondsValid;
  UnicodeString   FuserDefaultCurrencyIsoCode;
  UnicodeString   FuserEmail;
  UnicodeString   FuserFullName;
  ID              FuserId;
  UnicodeString   FuserLanguage;
  UnicodeString   FuserLocale;
  UnicodeString   FuserName;
  UnicodeString   FuserTimeZone;
  UnicodeString   FuserType;
  UnicodeString   FuserUiSkin;
  bool __fastcall GetaccessibilityMode()
  {  return FaccessibilityMode;  }
  void __fastcall SetaccessibilityMode(bool _prop_val)
  {  FaccessibilityMode = _prop_val;  }
  UnicodeString __fastcall GetcurrencySymbol(int Index)
  {  return FcurrencySymbol;  }
  void __fastcall SetcurrencySymbol(int Index, UnicodeString _prop_val)
  {  FcurrencySymbol = _prop_val;  }
  int __fastcall GetorgAttachmentFileSizeLimit()
  {  return ForgAttachmentFileSizeLimit;  }
  void __fastcall SetorgAttachmentFileSizeLimit(int _prop_val)
  {  ForgAttachmentFileSizeLimit = _prop_val;  }
  UnicodeString __fastcall GetorgDefaultCurrencyIsoCode(int Index)
  {  return ForgDefaultCurrencyIsoCode;  }
  void __fastcall SetorgDefaultCurrencyIsoCode(int Index, UnicodeString _prop_val)
  {  ForgDefaultCurrencyIsoCode = _prop_val;  }
  bool __fastcall GetorgDisallowHtmlAttachments()
  {  return ForgDisallowHtmlAttachments;  }
  void __fastcall SetorgDisallowHtmlAttachments(bool _prop_val)
  {  ForgDisallowHtmlAttachments = _prop_val;  }
  bool __fastcall GetorgHasPersonAccounts()
  {  return ForgHasPersonAccounts;  }
  void __fastcall SetorgHasPersonAccounts(bool _prop_val)
  {  ForgHasPersonAccounts = _prop_val;  }
  ID __fastcall GetorganizationId()
  {  return ForganizationId;  }
  void __fastcall SetorganizationId(ID _prop_val)
  {  ForganizationId = _prop_val;  }
  bool __fastcall GetorganizationMultiCurrency()
  {  return ForganizationMultiCurrency;  }
  void __fastcall SetorganizationMultiCurrency(bool _prop_val)
  {  ForganizationMultiCurrency = _prop_val;  }
  UnicodeString __fastcall GetorganizationName()
  {  return ForganizationName;  }
  void __fastcall SetorganizationName(UnicodeString _prop_val)
  {  ForganizationName = _prop_val;  }
  ID __fastcall GetprofileId()
  {  return FprofileId;  }
  void __fastcall SetprofileId(ID _prop_val)
  {  FprofileId = _prop_val;  }
  ID __fastcall GetroleId(int Index)
  {  return FroleId;  }
  void __fastcall SetroleId(int Index, ID _prop_val)
  {  FroleId = _prop_val;  }
  int __fastcall GetsessionSecondsValid()
  {  return FsessionSecondsValid;  }
  void __fastcall SetsessionSecondsValid(int _prop_val)
  {  FsessionSecondsValid = _prop_val;  }
  UnicodeString __fastcall GetuserDefaultCurrencyIsoCode(int Index)
  {  return FuserDefaultCurrencyIsoCode;  }
  void __fastcall SetuserDefaultCurrencyIsoCode(int Index, UnicodeString _prop_val)
  {  FuserDefaultCurrencyIsoCode = _prop_val;  }
  UnicodeString __fastcall GetuserEmail()
  {  return FuserEmail;  }
  void __fastcall SetuserEmail(UnicodeString _prop_val)
  {  FuserEmail = _prop_val;  }
  UnicodeString __fastcall GetuserFullName()
  {  return FuserFullName;  }
  void __fastcall SetuserFullName(UnicodeString _prop_val)
  {  FuserFullName = _prop_val;  }
  ID __fastcall GetuserId()
  {  return FuserId;  }
  void __fastcall SetuserId(ID _prop_val)
  {  FuserId = _prop_val;  }
  UnicodeString __fastcall GetuserLanguage()
  {  return FuserLanguage;  }
  void __fastcall SetuserLanguage(UnicodeString _prop_val)
  {  FuserLanguage = _prop_val;  }
  UnicodeString __fastcall GetuserLocale()
  {  return FuserLocale;  }
  void __fastcall SetuserLocale(UnicodeString _prop_val)
  {  FuserLocale = _prop_val;  }
  UnicodeString __fastcall GetuserName()
  {  return FuserName;  }
  void __fastcall SetuserName(UnicodeString _prop_val)
  {  FuserName = _prop_val;  }
  UnicodeString __fastcall GetuserTimeZone()
  {  return FuserTimeZone;  }
  void __fastcall SetuserTimeZone(UnicodeString _prop_val)
  {  FuserTimeZone = _prop_val;  }
  UnicodeString __fastcall GetuserType()
  {  return FuserType;  }
  void __fastcall SetuserType(UnicodeString _prop_val)
  {  FuserType = _prop_val;  }
  UnicodeString __fastcall GetuserUiSkin()
  {  return FuserUiSkin;  }
  void __fastcall SetuserUiSkin(UnicodeString _prop_val)
  {  FuserUiSkin = _prop_val;  }
__published:
  __property bool       accessibilityMode = { read=FaccessibilityMode, write=SetaccessibilityMode };
  __property UnicodeString currencySymbol = { index=(IS_NLBL), read=FcurrencySymbol, write=SetcurrencySymbol };
  __property int        orgAttachmentFileSizeLimit = { read=ForgAttachmentFileSizeLimit, write=SetorgAttachmentFileSizeLimit };
  __property UnicodeString orgDefaultCurrencyIsoCode = { index=(IS_NLBL), read=ForgDefaultCurrencyIsoCode, write=SetorgDefaultCurrencyIsoCode };
  __property bool       orgDisallowHtmlAttachments = { read=ForgDisallowHtmlAttachments, write=SetorgDisallowHtmlAttachments };
  __property bool       orgHasPersonAccounts = { read=ForgHasPersonAccounts, write=SetorgHasPersonAccounts };
  __property ID         organizationId = { read=ForganizationId, write=SetorganizationId };
  __property bool       organizationMultiCurrency = { read=ForganizationMultiCurrency, write=SetorganizationMultiCurrency };
  __property UnicodeString organizationName = { read=ForganizationName, write=SetorganizationName };
  __property ID          profileId = { read=FprofileId, write=SetprofileId };
  __property ID             roleId = { index=(IS_NLBL), read=FroleId, write=SetroleId };
  __property int        sessionSecondsValid = { read=FsessionSecondsValid, write=SetsessionSecondsValid };
  __property UnicodeString userDefaultCurrencyIsoCode = { index=(IS_NLBL), read=FuserDefaultCurrencyIsoCode, write=SetuserDefaultCurrencyIsoCode };
  __property UnicodeString  userEmail = { read=FuserEmail, write=SetuserEmail };
  __property UnicodeString userFullName = { read=FuserFullName, write=SetuserFullName };
  __property ID             userId = { read=FuserId, write=SetuserId };
  __property UnicodeString userLanguage = { read=FuserLanguage, write=SetuserLanguage };
  __property UnicodeString userLocale = { read=FuserLocale, write=SetuserLocale };
  __property UnicodeString   userName = { read=FuserName, write=SetuserName };
  __property UnicodeString userTimeZone = { read=FuserTimeZone, write=SetuserTimeZone };
  __property UnicodeString   userType = { read=FuserType, write=SetuserType };
  __property UnicodeString userUiSkin = { read=FuserUiSkin, write=SetuserUiSkin };
};




// ************************************************************************ //
// XML       : LoginResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class LoginResult : public TRemotable {
private:
  UnicodeString   FmetadataServerUrl;
  bool            FpasswordExpired;
  bool            Fsandbox;
  UnicodeString   FserverUrl;
  UnicodeString   FsessionId;
  ID              FuserId;
  GetUserInfoResult* FuserInfo;
  bool            FuserInfo_Specified;
  UnicodeString __fastcall GetmetadataServerUrl(int Index)
  {  return FmetadataServerUrl;  }
  void __fastcall SetmetadataServerUrl(int Index, UnicodeString _prop_val)
  {  FmetadataServerUrl = _prop_val;  }
  bool __fastcall GetpasswordExpired()
  {  return FpasswordExpired;  }
  void __fastcall SetpasswordExpired(bool _prop_val)
  {  FpasswordExpired = _prop_val;  }
  bool __fastcall Getsandbox()
  {  return Fsandbox;  }
  void __fastcall Setsandbox(bool _prop_val)
  {  Fsandbox = _prop_val;  }
  UnicodeString __fastcall GetserverUrl(int Index)
  {  return FserverUrl;  }
  void __fastcall SetserverUrl(int Index, UnicodeString _prop_val)
  {  FserverUrl = _prop_val;  }
  UnicodeString __fastcall GetsessionId(int Index)
  {  return FsessionId;  }
  void __fastcall SetsessionId(int Index, UnicodeString _prop_val)
  {  FsessionId = _prop_val;  }
  ID __fastcall GetuserId(int Index)
  {  return FuserId;  }
  void __fastcall SetuserId(int Index, ID _prop_val)
  {  FuserId = _prop_val;  }
  GetUserInfoResult* __fastcall GetuserInfo(int Index)
  {  return FuserInfo;  }
  void __fastcall SetuserInfo(int Index, GetUserInfoResult* _prop_val)
  {  FuserInfo = _prop_val; FuserInfo_Specified = true;  }
  bool __fastcall userInfo_Specified(int Index)
  {  return FuserInfo_Specified;  } 

public:
  __fastcall ~LoginResult();
__published:
  __property UnicodeString metadataServerUrl = { index=(IS_NLBL), read=FmetadataServerUrl, write=SetmetadataServerUrl };
  __property bool       passwordExpired = { read=FpasswordExpired, write=SetpasswordExpired };
  __property bool          sandbox = { read=Fsandbox, write=Setsandbox };
  __property UnicodeString  serverUrl = { index=(IS_NLBL), read=FserverUrl, write=SetserverUrl };
  __property UnicodeString  sessionId = { index=(IS_NLBL), read=FsessionId, write=SetsessionId };
  __property ID             userId = { index=(IS_NLBL), read=FuserId, write=SetuserId };
  __property GetUserInfoResult*   userInfo = { index=(IS_OPTN), read=FuserInfo, write=SetuserInfo, stored = userInfo_Specified };
};




// ************************************************************************ //
// XML       : LeadConvert, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class LeadConvert : public TRemotable {
private:
  ID              FaccountId;
  ID              FcontactId;
  UnicodeString   FconvertedStatus;
  bool            FdoNotCreateOpportunity;
  ID              FleadId;
  UnicodeString   FopportunityName;
  bool            FoverwriteLeadSource;
  ID              FownerId;
  bool            FsendNotificationEmail;
  ID __fastcall GetaccountId(int Index)
  {  return FaccountId;  }
  void __fastcall SetaccountId(int Index, ID _prop_val)
  {  FaccountId = _prop_val;  }
  ID __fastcall GetcontactId(int Index)
  {  return FcontactId;  }
  void __fastcall SetcontactId(int Index, ID _prop_val)
  {  FcontactId = _prop_val;  }
  UnicodeString __fastcall GetconvertedStatus()
  {  return FconvertedStatus;  }
  void __fastcall SetconvertedStatus(UnicodeString _prop_val)
  {  FconvertedStatus = _prop_val;  }
  bool __fastcall GetdoNotCreateOpportunity()
  {  return FdoNotCreateOpportunity;  }
  void __fastcall SetdoNotCreateOpportunity(bool _prop_val)
  {  FdoNotCreateOpportunity = _prop_val;  }
  ID __fastcall GetleadId()
  {  return FleadId;  }
  void __fastcall SetleadId(ID _prop_val)
  {  FleadId = _prop_val;  }
  UnicodeString __fastcall GetopportunityName(int Index)
  {  return FopportunityName;  }
  void __fastcall SetopportunityName(int Index, UnicodeString _prop_val)
  {  FopportunityName = _prop_val;  }
  bool __fastcall GetoverwriteLeadSource()
  {  return FoverwriteLeadSource;  }
  void __fastcall SetoverwriteLeadSource(bool _prop_val)
  {  FoverwriteLeadSource = _prop_val;  }
  ID __fastcall GetownerId(int Index)
  {  return FownerId;  }
  void __fastcall SetownerId(int Index, ID _prop_val)
  {  FownerId = _prop_val;  }
  bool __fastcall GetsendNotificationEmail()
  {  return FsendNotificationEmail;  }
  void __fastcall SetsendNotificationEmail(bool _prop_val)
  {  FsendNotificationEmail = _prop_val;  }
__published:
  __property ID          accountId = { index=(IS_NLBL), read=FaccountId, write=SetaccountId };
  __property ID          contactId = { index=(IS_NLBL), read=FcontactId, write=SetcontactId };
  __property UnicodeString convertedStatus = { read=FconvertedStatus, write=SetconvertedStatus };
  __property bool       doNotCreateOpportunity = { read=FdoNotCreateOpportunity, write=SetdoNotCreateOpportunity };
  __property ID             leadId = { read=FleadId, write=SetleadId };
  __property UnicodeString opportunityName = { index=(IS_NLBL), read=FopportunityName, write=SetopportunityName };
  __property bool       overwriteLeadSource = { read=FoverwriteLeadSource, write=SetoverwriteLeadSource };
  __property ID            ownerId = { index=(IS_NLBL), read=FownerId, write=SetownerId };
  __property bool       sendNotificationEmail = { read=FsendNotificationEmail, write=SetsendNotificationEmail };
};




// ************************************************************************ //
// XML       : ChildRelationship, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class ChildRelationship : public TRemotable {
private:
  bool            FcascadeDelete;
  UnicodeString   FchildSObject;
  bool            FdeprecatedAndHidden;
  UnicodeString   Ffield;
  UnicodeString   FrelationshipName;
  bool            FrelationshipName_Specified;
  bool            FrestrictedDelete;
  bool            FrestrictedDelete_Specified;
  bool __fastcall GetcascadeDelete()
  {  return FcascadeDelete;  }
  void __fastcall SetcascadeDelete(bool _prop_val)
  {  FcascadeDelete = _prop_val;  }
  UnicodeString __fastcall GetchildSObject()
  {  return FchildSObject;  }
  void __fastcall SetchildSObject(UnicodeString _prop_val)
  {  FchildSObject = _prop_val;  }
  bool __fastcall GetdeprecatedAndHidden()
  {  return FdeprecatedAndHidden;  }
  void __fastcall SetdeprecatedAndHidden(bool _prop_val)
  {  FdeprecatedAndHidden = _prop_val;  }
  UnicodeString __fastcall Getfield()
  {  return Ffield;  }
  void __fastcall Setfield(UnicodeString _prop_val)
  {  Ffield = _prop_val;  }
  UnicodeString __fastcall GetrelationshipName(int Index)
  {  return FrelationshipName;  }
  void __fastcall SetrelationshipName(int Index, UnicodeString _prop_val)
  {  FrelationshipName = _prop_val; FrelationshipName_Specified = true;  }
  bool __fastcall relationshipName_Specified(int Index)
  {  return FrelationshipName_Specified;  } 
  bool __fastcall GetrestrictedDelete(int Index)
  {  return FrestrictedDelete;  }
  void __fastcall SetrestrictedDelete(int Index, bool _prop_val)
  {  FrestrictedDelete = _prop_val; FrestrictedDelete_Specified = true;  }
  bool __fastcall restrictedDelete_Specified(int Index)
  {  return FrestrictedDelete_Specified;  } 
__published:
  __property bool       cascadeDelete = { read=FcascadeDelete, write=SetcascadeDelete };
  __property UnicodeString childSObject = { read=FchildSObject, write=SetchildSObject };
  __property bool       deprecatedAndHidden = { read=FdeprecatedAndHidden, write=SetdeprecatedAndHidden };
  __property UnicodeString      field = { read=Ffield, write=Setfield };
  __property UnicodeString relationshipName = { index=(IS_OPTN), read=FrelationshipName, write=SetrelationshipName, stored = relationshipName_Specified };
  __property bool       restrictedDelete = { index=(IS_OPTN), read=FrestrictedDelete, write=SetrestrictedDelete, stored = restrictedDelete_Specified };
};




// ************************************************************************ //
// XML       : RecordTypeInfo, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class RecordTypeInfo : public TRemotable {
private:
  bool            Favailable;
  bool            FdefaultRecordTypeMapping;
  UnicodeString   Fname;
  ID              FrecordTypeId;
  bool __fastcall Getavailable()
  {  return Favailable;  }
  void __fastcall Setavailable(bool _prop_val)
  {  Favailable = _prop_val;  }
  bool __fastcall GetdefaultRecordTypeMapping()
  {  return FdefaultRecordTypeMapping;  }
  void __fastcall SetdefaultRecordTypeMapping(bool _prop_val)
  {  FdefaultRecordTypeMapping = _prop_val;  }
  UnicodeString __fastcall Getname()
  {  return Fname;  }
  void __fastcall Setname(UnicodeString _prop_val)
  {  Fname = _prop_val;  }
  ID __fastcall GetrecordTypeId(int Index)
  {  return FrecordTypeId;  }
  void __fastcall SetrecordTypeId(int Index, ID _prop_val)
  {  FrecordTypeId = _prop_val;  }
__published:
  __property bool        available = { read=Favailable, write=Setavailable };
  __property bool       defaultRecordTypeMapping = { read=FdefaultRecordTypeMapping, write=SetdefaultRecordTypeMapping };
  __property UnicodeString       name = { read=Fname, write=Setname };
  __property ID         recordTypeId = { index=(IS_NLBL), read=FrecordTypeId, write=SetrecordTypeId };
};




// ************************************************************************ //
// XML       : DescribeGlobalSObjectResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DescribeGlobalSObjectResult : public TRemotable {
private:
  bool            Factivateable;
  bool            Fcreateable;
  bool            Fcustom;
  bool            FcustomSetting;
  bool            Fdeletable;
  bool            FdeprecatedAndHidden;
  bool            FfeedEnabled;
  UnicodeString   FkeyPrefix;
  UnicodeString   Flabel;
  UnicodeString   FlabelPlural;
  bool            Flayoutable;
  bool            Fmergeable;
  UnicodeString   Fname;
  bool            Fqueryable;
  bool            Freplicateable;
  bool            Fretrieveable;
  bool            Fsearchable;
  bool            Ftriggerable;
  bool            Fundeletable;
  bool            Fupdateable;
  bool __fastcall Getactivateable()
  {  return Factivateable;  }
  void __fastcall Setactivateable(bool _prop_val)
  {  Factivateable = _prop_val;  }
  bool __fastcall Getcreateable()
  {  return Fcreateable;  }
  void __fastcall Setcreateable(bool _prop_val)
  {  Fcreateable = _prop_val;  }
  bool __fastcall Getcustom()
  {  return Fcustom;  }
  void __fastcall Setcustom(bool _prop_val)
  {  Fcustom = _prop_val;  }
  bool __fastcall GetcustomSetting()
  {  return FcustomSetting;  }
  void __fastcall SetcustomSetting(bool _prop_val)
  {  FcustomSetting = _prop_val;  }
  bool __fastcall Getdeletable()
  {  return Fdeletable;  }
  void __fastcall Setdeletable(bool _prop_val)
  {  Fdeletable = _prop_val;  }
  bool __fastcall GetdeprecatedAndHidden()
  {  return FdeprecatedAndHidden;  }
  void __fastcall SetdeprecatedAndHidden(bool _prop_val)
  {  FdeprecatedAndHidden = _prop_val;  }
  bool __fastcall GetfeedEnabled()
  {  return FfeedEnabled;  }
  void __fastcall SetfeedEnabled(bool _prop_val)
  {  FfeedEnabled = _prop_val;  }
  UnicodeString __fastcall GetkeyPrefix(int Index)
  {  return FkeyPrefix;  }
  void __fastcall SetkeyPrefix(int Index, UnicodeString _prop_val)
  {  FkeyPrefix = _prop_val;  }
  UnicodeString __fastcall Getlabel()
  {  return Flabel;  }
  void __fastcall Setlabel(UnicodeString _prop_val)
  {  Flabel = _prop_val;  }
  UnicodeString __fastcall GetlabelPlural()
  {  return FlabelPlural;  }
  void __fastcall SetlabelPlural(UnicodeString _prop_val)
  {  FlabelPlural = _prop_val;  }
  bool __fastcall Getlayoutable()
  {  return Flayoutable;  }
  void __fastcall Setlayoutable(bool _prop_val)
  {  Flayoutable = _prop_val;  }
  bool __fastcall Getmergeable()
  {  return Fmergeable;  }
  void __fastcall Setmergeable(bool _prop_val)
  {  Fmergeable = _prop_val;  }
  UnicodeString __fastcall Getname()
  {  return Fname;  }
  void __fastcall Setname(UnicodeString _prop_val)
  {  Fname = _prop_val;  }
  bool __fastcall Getqueryable()
  {  return Fqueryable;  }
  void __fastcall Setqueryable(bool _prop_val)
  {  Fqueryable = _prop_val;  }
  bool __fastcall Getreplicateable()
  {  return Freplicateable;  }
  void __fastcall Setreplicateable(bool _prop_val)
  {  Freplicateable = _prop_val;  }
  bool __fastcall Getretrieveable()
  {  return Fretrieveable;  }
  void __fastcall Setretrieveable(bool _prop_val)
  {  Fretrieveable = _prop_val;  }
  bool __fastcall Getsearchable()
  {  return Fsearchable;  }
  void __fastcall Setsearchable(bool _prop_val)
  {  Fsearchable = _prop_val;  }
  bool __fastcall Gettriggerable()
  {  return Ftriggerable;  }
  void __fastcall Settriggerable(bool _prop_val)
  {  Ftriggerable = _prop_val;  }
  bool __fastcall Getundeletable()
  {  return Fundeletable;  }
  void __fastcall Setundeletable(bool _prop_val)
  {  Fundeletable = _prop_val;  }
  bool __fastcall Getupdateable()
  {  return Fupdateable;  }
  void __fastcall Setupdateable(bool _prop_val)
  {  Fupdateable = _prop_val;  }
__published:
  __property bool       activateable = { read=Factivateable, write=Setactivateable };
  __property bool       createable = { read=Fcreateable, write=Setcreateable };
  __property bool           custom = { read=Fcustom, write=Setcustom };
  __property bool       customSetting = { read=FcustomSetting, write=SetcustomSetting };
  __property bool        deletable = { read=Fdeletable, write=Setdeletable };
  __property bool       deprecatedAndHidden = { read=FdeprecatedAndHidden, write=SetdeprecatedAndHidden };
  __property bool       feedEnabled = { read=FfeedEnabled, write=SetfeedEnabled };
  __property UnicodeString  keyPrefix = { index=(IS_NLBL), read=FkeyPrefix, write=SetkeyPrefix };
  __property UnicodeString      label = { read=Flabel, write=Setlabel };
  __property UnicodeString labelPlural = { read=FlabelPlural, write=SetlabelPlural };
  __property bool       layoutable = { read=Flayoutable, write=Setlayoutable };
  __property bool        mergeable = { read=Fmergeable, write=Setmergeable };
  __property UnicodeString       name = { read=Fname, write=Setname };
  __property bool        queryable = { read=Fqueryable, write=Setqueryable };
  __property bool       replicateable = { read=Freplicateable, write=Setreplicateable };
  __property bool       retrieveable = { read=Fretrieveable, write=Setretrieveable };
  __property bool       searchable = { read=Fsearchable, write=Setsearchable };
  __property bool       triggerable = { read=Ftriggerable, write=Settriggerable };
  __property bool       undeletable = { read=Fundeletable, write=Setundeletable };
  __property bool       updateable = { read=Fupdateable, write=Setupdateable };
};




// ************************************************************************ //
// XML       : PicklistEntry, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class PicklistEntry : public TRemotable {
private:
  bool            Factive;
  bool            FdefaultValue;
  UnicodeString   Flabel;
  TByteDynArray   FvalidFor;
  bool            FvalidFor_Specified;
  UnicodeString   Fvalue;
  bool __fastcall Getactive()
  {  return Factive;  }
  void __fastcall Setactive(bool _prop_val)
  {  Factive = _prop_val;  }
  bool __fastcall GetdefaultValue()
  {  return FdefaultValue;  }
  void __fastcall SetdefaultValue(bool _prop_val)
  {  FdefaultValue = _prop_val;  }
  UnicodeString __fastcall Getlabel(int Index)
  {  return Flabel;  }
  void __fastcall Setlabel(int Index, UnicodeString _prop_val)
  {  Flabel = _prop_val;  }
  TByteDynArray __fastcall GetvalidFor(int Index)
  {  return FvalidFor;  }
  void __fastcall SetvalidFor(int Index, TByteDynArray _prop_val)
  {  FvalidFor = _prop_val; FvalidFor_Specified = true;  }
  bool __fastcall validFor_Specified(int Index)
  {  return FvalidFor_Specified;  } 
  UnicodeString __fastcall Getvalue()
  {  return Fvalue;  }
  void __fastcall Setvalue(UnicodeString _prop_val)
  {  Fvalue = _prop_val;  }
__published:
  __property bool           active = { read=Factive, write=Setactive };
  __property bool       defaultValue = { read=FdefaultValue, write=SetdefaultValue };
  __property UnicodeString      label = { index=(IS_NLBL), read=Flabel, write=Setlabel };
  __property TByteDynArray   validFor = { index=(IS_OPTN), read=FvalidFor, write=SetvalidFor, stored = validFor_Specified };
  __property UnicodeString      value = { read=Fvalue, write=Setvalue };
};




// ************************************************************************ //
// XML       : DescribeDataCategoryGroupResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DescribeDataCategoryGroupResult : public TRemotable {
private:
  int             FcategoryCount;
  UnicodeString   Fdescription;
  UnicodeString   Flabel;
  UnicodeString   Fname;
  UnicodeString   Fsobject;
  int __fastcall GetcategoryCount()
  {  return FcategoryCount;  }
  void __fastcall SetcategoryCount(int _prop_val)
  {  FcategoryCount = _prop_val;  }
  UnicodeString __fastcall Getdescription()
  {  return Fdescription;  }
  void __fastcall Setdescription(UnicodeString _prop_val)
  {  Fdescription = _prop_val;  }
  UnicodeString __fastcall Getlabel()
  {  return Flabel;  }
  void __fastcall Setlabel(UnicodeString _prop_val)
  {  Flabel = _prop_val;  }
  UnicodeString __fastcall Getname()
  {  return Fname;  }
  void __fastcall Setname(UnicodeString _prop_val)
  {  Fname = _prop_val;  }
  UnicodeString __fastcall Getsobject()
  {  return Fsobject;  }
  void __fastcall Setsobject(UnicodeString _prop_val)
  {  Fsobject = _prop_val;  }
__published:
  __property int        categoryCount = { read=FcategoryCount, write=SetcategoryCount };
  __property UnicodeString description = { read=Fdescription, write=Setdescription };
  __property UnicodeString      label = { read=Flabel, write=Setlabel };
  __property UnicodeString       name = { read=Fname, write=Setname };
  __property UnicodeString    sobject = { read=Fsobject, write=Setsobject };
};




// ************************************************************************ //
// XML       : DataCategoryGroupSobjectTypePair, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DataCategoryGroupSobjectTypePair : public TRemotable {
private:
  UnicodeString   FdataCategoryGroupName;
  UnicodeString   Fsobject;
  UnicodeString __fastcall GetdataCategoryGroupName()
  {  return FdataCategoryGroupName;  }
  void __fastcall SetdataCategoryGroupName(UnicodeString _prop_val)
  {  FdataCategoryGroupName = _prop_val;  }
  UnicodeString __fastcall Getsobject()
  {  return Fsobject;  }
  void __fastcall Setsobject(UnicodeString _prop_val)
  {  Fsobject = _prop_val;  }
__published:
  __property UnicodeString dataCategoryGroupName = { read=FdataCategoryGroupName, write=SetdataCategoryGroupName };
  __property UnicodeString    sobject = { read=Fsobject, write=Setsobject };
};




// ************************************************************************ //
// XML       : DescribeSoftphoneLayoutInfoField, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DescribeSoftphoneLayoutInfoField : public TRemotable {
private:
  UnicodeString   Fname;
  UnicodeString __fastcall Getname()
  {  return Fname;  }
  void __fastcall Setname(UnicodeString _prop_val)
  {  Fname = _prop_val;  }
__published:
  __property UnicodeString       name = { read=Fname, write=Setname };
};




// ************************************************************************ //
// XML       : DescribeSoftphoneScreenPopOption, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DescribeSoftphoneScreenPopOption : public TRemotable {
private:
  UnicodeString   FmatchType;
  UnicodeString   FscreenPopData;
  UnicodeString   FscreenPopType;
  UnicodeString __fastcall GetmatchType()
  {  return FmatchType;  }
  void __fastcall SetmatchType(UnicodeString _prop_val)
  {  FmatchType = _prop_val;  }
  UnicodeString __fastcall GetscreenPopData()
  {  return FscreenPopData;  }
  void __fastcall SetscreenPopData(UnicodeString _prop_val)
  {  FscreenPopData = _prop_val;  }
  UnicodeString __fastcall GetscreenPopType()
  {  return FscreenPopType;  }
  void __fastcall SetscreenPopType(UnicodeString _prop_val)
  {  FscreenPopType = _prop_val;  }
__published:
  __property UnicodeString  matchType = { read=FmatchType, write=SetmatchType };
  __property UnicodeString screenPopData = { read=FscreenPopData, write=SetscreenPopData };
  __property UnicodeString screenPopType = { read=FscreenPopType, write=SetscreenPopType };
};




// ************************************************************************ //
// XML       : DescribeSoftphoneLayoutItem, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DescribeSoftphoneLayoutItem : public TRemotable {
private:
  UnicodeString   FitemApiName;
  UnicodeString __fastcall GetitemApiName()
  {  return FitemApiName;  }
  void __fastcall SetitemApiName(UnicodeString _prop_val)
  {  FitemApiName = _prop_val;  }
__published:
  __property UnicodeString itemApiName = { read=FitemApiName, write=SetitemApiName };
};




// ************************************************************************ //
// XML       : DescribeLayoutButton, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DescribeLayoutButton : public TRemotable {
private:
  bool            Fcustom;
  UnicodeString   Flabel;
  UnicodeString   Fname;
  bool __fastcall Getcustom()
  {  return Fcustom;  }
  void __fastcall Setcustom(bool _prop_val)
  {  Fcustom = _prop_val;  }
  UnicodeString __fastcall Getlabel(int Index)
  {  return Flabel;  }
  void __fastcall Setlabel(int Index, UnicodeString _prop_val)
  {  Flabel = _prop_val;  }
  UnicodeString __fastcall Getname(int Index)
  {  return Fname;  }
  void __fastcall Setname(int Index, UnicodeString _prop_val)
  {  Fname = _prop_val;  }
__published:
  __property bool           custom = { read=Fcustom, write=Setcustom };
  __property UnicodeString      label = { index=(IS_NLBL), read=Flabel, write=Setlabel };
  __property UnicodeString       name = { index=(IS_NLBL), read=Fname, write=Setname };
};




// ************************************************************************ //
// XML       : DescribeLayoutComponent, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DescribeLayoutComponent : public TRemotable {
private:
  int             FdisplayLines;
  int             FtabOrder;
  layoutComponentType Ftype;
  UnicodeString   Fvalue;
  int __fastcall GetdisplayLines()
  {  return FdisplayLines;  }
  void __fastcall SetdisplayLines(int _prop_val)
  {  FdisplayLines = _prop_val;  }
  int __fastcall GettabOrder()
  {  return FtabOrder;  }
  void __fastcall SettabOrder(int _prop_val)
  {  FtabOrder = _prop_val;  }
  layoutComponentType __fastcall Gettype()
  {  return Ftype;  }
  void __fastcall Settype(layoutComponentType _prop_val)
  {  Ftype = _prop_val;  }
  UnicodeString __fastcall Getvalue()
  {  return Fvalue;  }
  void __fastcall Setvalue(UnicodeString _prop_val)
  {  Fvalue = _prop_val;  }
__published:
  __property int        displayLines = { read=FdisplayLines, write=SetdisplayLines };
  __property int          tabOrder = { read=FtabOrder, write=SettabOrder };
  __property layoutComponentType       type = { read=Ftype, write=Settype };
  __property UnicodeString      value = { read=Fvalue, write=Setvalue };
};




// ************************************************************************ //
// XML       : RelatedListColumn, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class RelatedListColumn : public TRemotable {
private:
  UnicodeString   Ffield;
  UnicodeString   Fformat;
  UnicodeString   Flabel;
  UnicodeString   Fname;
  UnicodeString __fastcall Getfield(int Index)
  {  return Ffield;  }
  void __fastcall Setfield(int Index, UnicodeString _prop_val)
  {  Ffield = _prop_val;  }
  UnicodeString __fastcall Getformat(int Index)
  {  return Fformat;  }
  void __fastcall Setformat(int Index, UnicodeString _prop_val)
  {  Fformat = _prop_val;  }
  UnicodeString __fastcall Getlabel()
  {  return Flabel;  }
  void __fastcall Setlabel(UnicodeString _prop_val)
  {  Flabel = _prop_val;  }
  UnicodeString __fastcall Getname()
  {  return Fname;  }
  void __fastcall Setname(UnicodeString _prop_val)
  {  Fname = _prop_val;  }
__published:
  __property UnicodeString      field = { index=(IS_NLBL), read=Ffield, write=Setfield };
  __property UnicodeString     format = { index=(IS_NLBL), read=Fformat, write=Setformat };
  __property UnicodeString      label = { read=Flabel, write=Setlabel };
  __property UnicodeString       name = { read=Fname, write=Setname };
};




// ************************************************************************ //
// XML       : RelatedListSort, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class RelatedListSort : public TRemotable {
private:
  bool            Fascending;
  UnicodeString   Fcolumn;
  bool __fastcall Getascending()
  {  return Fascending;  }
  void __fastcall Setascending(bool _prop_val)
  {  Fascending = _prop_val;  }
  UnicodeString __fastcall Getcolumn()
  {  return Fcolumn;  }
  void __fastcall Setcolumn(UnicodeString _prop_val)
  {  Fcolumn = _prop_val;  }
__published:
  __property bool        ascending = { read=Fascending, write=Setascending };
  __property UnicodeString     column = { read=Fcolumn, write=Setcolumn };
};




// ************************************************************************ //
// XML       : Email, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class Email : public TRemotable {
private:
  bool            FbccSender;
  EmailPriority   FemailPriority;
  UnicodeString   FreplyTo;
  bool            FsaveAsActivity;
  UnicodeString   FsenderDisplayName;
  UnicodeString   Fsubject;
  bool            FuseSignature;
  bool __fastcall GetbccSender(int Index)
  {  return FbccSender;  }
  void __fastcall SetbccSender(int Index, bool _prop_val)
  {  FbccSender = _prop_val;  }
  EmailPriority __fastcall GetemailPriority(int Index)
  {  return FemailPriority;  }
  void __fastcall SetemailPriority(int Index, EmailPriority _prop_val)
  {  FemailPriority = _prop_val;  }
  UnicodeString __fastcall GetreplyTo(int Index)
  {  return FreplyTo;  }
  void __fastcall SetreplyTo(int Index, UnicodeString _prop_val)
  {  FreplyTo = _prop_val;  }
  bool __fastcall GetsaveAsActivity(int Index)
  {  return FsaveAsActivity;  }
  void __fastcall SetsaveAsActivity(int Index, bool _prop_val)
  {  FsaveAsActivity = _prop_val;  }
  UnicodeString __fastcall GetsenderDisplayName(int Index)
  {  return FsenderDisplayName;  }
  void __fastcall SetsenderDisplayName(int Index, UnicodeString _prop_val)
  {  FsenderDisplayName = _prop_val;  }
  UnicodeString __fastcall Getsubject(int Index)
  {  return Fsubject;  }
  void __fastcall Setsubject(int Index, UnicodeString _prop_val)
  {  Fsubject = _prop_val;  }
  bool __fastcall GetuseSignature(int Index)
  {  return FuseSignature;  }
  void __fastcall SetuseSignature(int Index, bool _prop_val)
  {  FuseSignature = _prop_val;  }
__published:
  __property bool        bccSender = { index=(IS_NLBL), read=FbccSender, write=SetbccSender };
  __property EmailPriority emailPriority = { index=(IS_NLBL), read=FemailPriority, write=SetemailPriority };
  __property UnicodeString    replyTo = { index=(IS_NLBL), read=FreplyTo, write=SetreplyTo };
  __property bool       saveAsActivity = { index=(IS_NLBL), read=FsaveAsActivity, write=SetsaveAsActivity };
  __property UnicodeString senderDisplayName = { index=(IS_NLBL), read=FsenderDisplayName, write=SetsenderDisplayName };
  __property UnicodeString    subject = { index=(IS_NLBL), read=Fsubject, write=Setsubject };
  __property bool       useSignature = { index=(IS_NLBL), read=FuseSignature, write=SetuseSignature };
};




// ************************************************************************ //
// XML       : DescribeTab, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DescribeTab : public TRemotable {
private:
  bool            Fcustom;
  UnicodeString   FiconUrl;
  UnicodeString   Flabel;
  UnicodeString   FminiIconUrl;
  UnicodeString   FsobjectName;
  UnicodeString   Furl;
  bool __fastcall Getcustom()
  {  return Fcustom;  }
  void __fastcall Setcustom(bool _prop_val)
  {  Fcustom = _prop_val;  }
  UnicodeString __fastcall GeticonUrl()
  {  return FiconUrl;  }
  void __fastcall SeticonUrl(UnicodeString _prop_val)
  {  FiconUrl = _prop_val;  }
  UnicodeString __fastcall Getlabel()
  {  return Flabel;  }
  void __fastcall Setlabel(UnicodeString _prop_val)
  {  Flabel = _prop_val;  }
  UnicodeString __fastcall GetminiIconUrl()
  {  return FminiIconUrl;  }
  void __fastcall SetminiIconUrl(UnicodeString _prop_val)
  {  FminiIconUrl = _prop_val;  }
  UnicodeString __fastcall GetsobjectName(int Index)
  {  return FsobjectName;  }
  void __fastcall SetsobjectName(int Index, UnicodeString _prop_val)
  {  FsobjectName = _prop_val;  }
  UnicodeString __fastcall Geturl()
  {  return Furl;  }
  void __fastcall Seturl(UnicodeString _prop_val)
  {  Furl = _prop_val;  }
__published:
  __property bool           custom = { read=Fcustom, write=Setcustom };
  __property UnicodeString    iconUrl = { read=FiconUrl, write=SeticonUrl };
  __property UnicodeString      label = { read=Flabel, write=Setlabel };
  __property UnicodeString miniIconUrl = { read=FminiIconUrl, write=SetminiIconUrl };
  __property UnicodeString sobjectName = { index=(IS_NLBL), read=FsobjectName, write=SetsobjectName };
  __property UnicodeString        url = { read=Furl, write=Seturl };
};




// ************************************************************************ //
// XML       : PackageVersion, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class PackageVersion : public TRemotable {
private:
  int             FmajorNumber;
  int             FminorNumber;
  UnicodeString   Fnamespace;
  int __fastcall GetmajorNumber()
  {  return FmajorNumber;  }
  void __fastcall SetmajorNumber(int _prop_val)
  {  FmajorNumber = _prop_val;  }
  int __fastcall GetminorNumber()
  {  return FminorNumber;  }
  void __fastcall SetminorNumber(int _prop_val)
  {  FminorNumber = _prop_val;  }
  UnicodeString __fastcall Getnamespace()
  {  return Fnamespace;  }
  void __fastcall Setnamespace(UnicodeString _prop_val)
  {  Fnamespace = _prop_val;  }
__published:
  __property int        majorNumber = { read=FmajorNumber, write=SetmajorNumber };
  __property int        minorNumber = { read=FminorNumber, write=SetminorNumber };
  __property UnicodeString  namespace_ = { read=Fnamespace, write=Setnamespace };
};




// ************************************************************************ //
// XML       : SessionHeader, global, <element>
// Namespace : urn:enterprise.soap.sforce.com
// Info      : Header
// ************************************************************************ //
class SessionHeader : public TSOAPHeader {
private:
  UnicodeString   FsessionId;
  UnicodeString __fastcall GetsessionId()
  {  return FsessionId;  }
  void __fastcall SetsessionId(UnicodeString _prop_val)
  {  FsessionId = _prop_val;  }
__published:
  __property UnicodeString  sessionId = { read=FsessionId, write=SetsessionId };
};




// ************************************************************************ //
// XML       : LoginScopeHeader, global, <element>
// Namespace : urn:enterprise.soap.sforce.com
// Info      : Header
// ************************************************************************ //
class LoginScopeHeader : public TSOAPHeader {
private:
  ID              ForganizationId;
  ID              FportalId;
  bool            FportalId_Specified;
  ID __fastcall GetorganizationId()
  {  return ForganizationId;  }
  void __fastcall SetorganizationId(ID _prop_val)
  {  ForganizationId = _prop_val;  }
  ID __fastcall GetportalId(int Index)
  {  return FportalId;  }
  void __fastcall SetportalId(int Index, ID _prop_val)
  {  FportalId = _prop_val; FportalId_Specified = true;  }
  bool __fastcall portalId_Specified(int Index)
  {  return FportalId_Specified;  } 
__published:
  __property ID         organizationId = { read=ForganizationId, write=SetorganizationId };
  __property ID           portalId = { index=(IS_OPTN), read=FportalId, write=SetportalId, stored = portalId_Specified };
};




// ************************************************************************ //
// XML       : QueryOptions, global, <element>
// Namespace : urn:enterprise.soap.sforce.com
// Info      : Header
// ************************************************************************ //
class QueryOptions : public TSOAPHeader {
private:
  int             FbatchSize;
  bool            FbatchSize_Specified;
  int __fastcall GetbatchSize(int Index)
  {  return FbatchSize;  }
  void __fastcall SetbatchSize(int Index, int _prop_val)
  {  FbatchSize = _prop_val; FbatchSize_Specified = true;  }
  bool __fastcall batchSize_Specified(int Index)
  {  return FbatchSize_Specified;  } 
__published:
  __property int         batchSize = { index=(IS_OPTN), read=FbatchSize, write=SetbatchSize, stored = batchSize_Specified };
};




// ************************************************************************ //
// XML       : DebuggingHeader, global, <element>
// Namespace : urn:enterprise.soap.sforce.com
// Info      : Header
// ************************************************************************ //
class DebuggingHeader : public TSOAPHeader {
private:
  DebugLevel      FdebugLevel;
  DebugLevel __fastcall GetdebugLevel()
  {  return FdebugLevel;  }
  void __fastcall SetdebugLevel(DebugLevel _prop_val)
  {  FdebugLevel = _prop_val;  }
__published:
  __property DebugLevel debugLevel = { read=FdebugLevel, write=SetdebugLevel };
};




// ************************************************************************ //
// XML       : DebuggingInfo, global, <element>
// Namespace : urn:enterprise.soap.sforce.com
// Info      : Header
// ************************************************************************ //
class DebuggingInfo : public TSOAPHeader {
private:
  UnicodeString   FdebugLog;
  UnicodeString __fastcall GetdebugLog()
  {  return FdebugLog;  }
  void __fastcall SetdebugLog(UnicodeString _prop_val)
  {  FdebugLog = _prop_val;  }
__published:
  __property UnicodeString   debugLog = { read=FdebugLog, write=SetdebugLog };
};




// ************************************************************************ //
// XML       : AllowFieldTruncationHeader, global, <element>
// Namespace : urn:enterprise.soap.sforce.com
// Info      : Header
// ************************************************************************ //
class AllowFieldTruncationHeader : public TSOAPHeader {
private:
  bool            FallowFieldTruncation;
  bool __fastcall GetallowFieldTruncation()
  {  return FallowFieldTruncation;  }
  void __fastcall SetallowFieldTruncation(bool _prop_val)
  {  FallowFieldTruncation = _prop_val;  }
__published:
  __property bool       allowFieldTruncation = { read=FallowFieldTruncation, write=SetallowFieldTruncation };
};




// ************************************************************************ //
// XML       : DisableFeedTrackingHeader, global, <element>
// Namespace : urn:enterprise.soap.sforce.com
// Info      : Header
// ************************************************************************ //
class DisableFeedTrackingHeader : public TSOAPHeader {
private:
  bool            FdisableFeedTracking;
  bool __fastcall GetdisableFeedTracking()
  {  return FdisableFeedTracking;  }
  void __fastcall SetdisableFeedTracking(bool _prop_val)
  {  FdisableFeedTracking = _prop_val;  }
__published:
  __property bool       disableFeedTracking = { read=FdisableFeedTracking, write=SetdisableFeedTracking };
};




// ************************************************************************ //
// XML       : StreamingEnabledHeader, global, <element>
// Namespace : urn:enterprise.soap.sforce.com
// Info      : Header
// ************************************************************************ //
class StreamingEnabledHeader : public TSOAPHeader {
private:
  bool            FstreamingEnabled;
  bool __fastcall GetstreamingEnabled()
  {  return FstreamingEnabled;  }
  void __fastcall SetstreamingEnabled(bool _prop_val)
  {  FstreamingEnabled = _prop_val;  }
__published:
  __property bool       streamingEnabled = { read=FstreamingEnabled, write=SetstreamingEnabled };
};




// ************************************************************************ //
// XML       : AllOrNoneHeader, global, <element>
// Namespace : urn:enterprise.soap.sforce.com
// Info      : Header
// ************************************************************************ //
class AllOrNoneHeader : public TSOAPHeader {
private:
  bool            FallOrNone;
  bool __fastcall GetallOrNone()
  {  return FallOrNone;  }
  void __fastcall SetallOrNone(bool _prop_val)
  {  FallOrNone = _prop_val;  }
__published:
  __property bool        allOrNone = { read=FallOrNone, write=SetallOrNone };
};




// ************************************************************************ //
// XML       : MruHeader, global, <element>
// Namespace : urn:enterprise.soap.sforce.com
// Info      : Header
// ************************************************************************ //
class MruHeader : public TSOAPHeader {
private:
  bool            FupdateMru;
  bool __fastcall GetupdateMru()
  {  return FupdateMru;  }
  void __fastcall SetupdateMru(bool _prop_val)
  {  FupdateMru = _prop_val;  }
__published:
  __property bool        updateMru = { read=FupdateMru, write=SetupdateMru };
};




// ************************************************************************ //
// XML       : EmailHeader, global, <element>
// Namespace : urn:enterprise.soap.sforce.com
// Info      : Header
// ************************************************************************ //
class EmailHeader : public TSOAPHeader {
private:
  bool            FtriggerAutoResponseEmail;
  bool            FtriggerOtherEmail;
  bool            FtriggerUserEmail;
  bool __fastcall GettriggerAutoResponseEmail()
  {  return FtriggerAutoResponseEmail;  }
  void __fastcall SettriggerAutoResponseEmail(bool _prop_val)
  {  FtriggerAutoResponseEmail = _prop_val;  }
  bool __fastcall GettriggerOtherEmail()
  {  return FtriggerOtherEmail;  }
  void __fastcall SettriggerOtherEmail(bool _prop_val)
  {  FtriggerOtherEmail = _prop_val;  }
  bool __fastcall GettriggerUserEmail()
  {  return FtriggerUserEmail;  }
  void __fastcall SettriggerUserEmail(bool _prop_val)
  {  FtriggerUserEmail = _prop_val;  }
__published:
  __property bool       triggerAutoResponseEmail = { read=FtriggerAutoResponseEmail, write=SettriggerAutoResponseEmail };
  __property bool       triggerOtherEmail = { read=FtriggerOtherEmail, write=SettriggerOtherEmail };
  __property bool       triggerUserEmail = { read=FtriggerUserEmail, write=SettriggerUserEmail };
};




// ************************************************************************ //
// XML       : AssignmentRuleHeader, global, <element>
// Namespace : urn:enterprise.soap.sforce.com
// Info      : Header
// ************************************************************************ //
class AssignmentRuleHeader : public TSOAPHeader {
private:
  ID              FassignmentRuleId;
  bool            FuseDefaultRule;
  ID __fastcall GetassignmentRuleId(int Index)
  {  return FassignmentRuleId;  }
  void __fastcall SetassignmentRuleId(int Index, ID _prop_val)
  {  FassignmentRuleId = _prop_val;  }
  bool __fastcall GetuseDefaultRule(int Index)
  {  return FuseDefaultRule;  }
  void __fastcall SetuseDefaultRule(int Index, bool _prop_val)
  {  FuseDefaultRule = _prop_val;  }
__published:
  __property ID         assignmentRuleId = { index=(IS_NLBL), read=FassignmentRuleId, write=SetassignmentRuleId };
  __property bool       useDefaultRule = { index=(IS_NLBL), read=FuseDefaultRule, write=SetuseDefaultRule };
};




// ************************************************************************ //
// XML       : UserTerritoryDeleteHeader, global, <element>
// Namespace : urn:enterprise.soap.sforce.com
// Info      : Header
// ************************************************************************ //
class UserTerritoryDeleteHeader : public TSOAPHeader {
private:
  ID              FtransferToUserId;
  ID __fastcall GettransferToUserId(int Index)
  {  return FtransferToUserId;  }
  void __fastcall SettransferToUserId(int Index, ID _prop_val)
  {  FtransferToUserId = _prop_val;  }
__published:
  __property ID         transferToUserId = { index=(IS_NLBL), read=FtransferToUserId, write=SettransferToUserId };
};




// ************************************************************************ //
// XML       : LocaleOptions, global, <element>
// Namespace : urn:enterprise.soap.sforce.com
// Info      : Header
// ************************************************************************ //
class LocaleOptions : public TSOAPHeader {
private:
  UnicodeString   Flanguage;
  bool            Flanguage_Specified;
  UnicodeString __fastcall Getlanguage(int Index)
  {  return Flanguage;  }
  void __fastcall Setlanguage(int Index, UnicodeString _prop_val)
  {  Flanguage = _prop_val; Flanguage_Specified = true;  }
  bool __fastcall language_Specified(int Index)
  {  return Flanguage_Specified;  } 
__published:
  __property UnicodeString   language = { index=(IS_OPTN), read=Flanguage, write=Setlanguage, stored = language_Specified };
};




// ************************************************************************ //
// XML       : ApiFault, global, <complexType>
// Namespace : urn:fault.enterprise.soap.sforce.com
// ************************************************************************ //
class ApiFault : public TRemotable {
private:
  ExceptionCode   FexceptionCode;
  UnicodeString   FexceptionMessage;
  ExceptionCode __fastcall GetexceptionCode()
  {  return FexceptionCode;  }
  void __fastcall SetexceptionCode(ExceptionCode _prop_val)
  {  FexceptionCode = _prop_val;  }
  UnicodeString __fastcall GetexceptionMessage()
  {  return FexceptionMessage;  }
  void __fastcall SetexceptionMessage(UnicodeString _prop_val)
  {  FexceptionMessage = _prop_val;  }
__published:
  __property ExceptionCode exceptionCode = { read=FexceptionCode, write=SetexceptionCode };
  __property UnicodeString exceptionMessage = { read=FexceptionMessage, write=SetexceptionMessage };
};




// ************************************************************************ //
// XML       : ApiQueryFault, global, <complexType>
// Namespace : urn:fault.enterprise.soap.sforce.com
// ************************************************************************ //
class ApiQueryFault : public ApiFault {
private:
  int             Frow;
  int             Fcolumn;
  int __fastcall Getrow()
  {  return Frow;  }
  void __fastcall Setrow(int _prop_val)
  {  Frow = _prop_val;  }
  int __fastcall Getcolumn()
  {  return Fcolumn;  }
  void __fastcall Setcolumn(int _prop_val)
  {  Fcolumn = _prop_val;  }
__published:
  __property int               row = { read=Frow, write=Setrow };
  __property int            column = { read=Fcolumn, write=Setcolumn };
};




// ************************************************************************ //
// XML       : LoginFault, global, <complexType>
// Namespace : urn:fault.enterprise.soap.sforce.com
// ************************************************************************ //
class LoginFault : public ApiFault {
private:
__published:
};




// ************************************************************************ //
// XML       : InvalidQueryLocatorFault, global, <complexType>
// Namespace : urn:fault.enterprise.soap.sforce.com
// ************************************************************************ //
class InvalidQueryLocatorFault : public ApiFault {
private:
__published:
};




// ************************************************************************ //
// XML       : InvalidNewPasswordFault, global, <complexType>
// Namespace : urn:fault.enterprise.soap.sforce.com
// ************************************************************************ //
class InvalidNewPasswordFault : public ApiFault {
private:
__published:
};




// ************************************************************************ //
// XML       : InvalidIdFault, global, <complexType>
// Namespace : urn:fault.enterprise.soap.sforce.com
// ************************************************************************ //
class InvalidIdFault : public ApiFault {
private:
__published:
};




// ************************************************************************ //
// XML       : UnexpectedErrorFault, global, <complexType>
// Namespace : urn:fault.enterprise.soap.sforce.com
// ************************************************************************ //
class UnexpectedErrorFault : public ApiFault {
private:
__published:
};




// ************************************************************************ //
// XML       : InvalidFieldFault, global, <complexType>
// Namespace : urn:fault.enterprise.soap.sforce.com
// ************************************************************************ //
class InvalidFieldFault : public ApiQueryFault {
private:
__published:
};




// ************************************************************************ //
// XML       : InvalidSObjectFault, global, <complexType>
// Namespace : urn:fault.enterprise.soap.sforce.com
// ************************************************************************ //
class InvalidSObjectFault : public ApiQueryFault {
private:
__published:
};




// ************************************************************************ //
// XML       : MalformedQueryFault, global, <complexType>
// Namespace : urn:fault.enterprise.soap.sforce.com
// ************************************************************************ //
class MalformedQueryFault : public ApiQueryFault {
private:
__published:
};




// ************************************************************************ //
// XML       : MalformedSearchFault, global, <complexType>
// Namespace : urn:fault.enterprise.soap.sforce.com
// ************************************************************************ //
class MalformedSearchFault : public ApiQueryFault {
private:
__published:
};




// ************************************************************************ //
// XML       : fault, global, <element>
// Namespace : urn:fault.enterprise.soap.sforce.com
// ************************************************************************ //
class fault : public ApiFault {
private:
__published:
};




// ************************************************************************ //
// XML       : LoginFault, global, <element>
// Namespace : urn:fault.enterprise.soap.sforce.com
// Info      : Fault
// Base Types: ApiFault, LoginFault
// ************************************************************************ //
class LoginFault2 : public ERemotableException {
private:
  ExceptionCode   FexceptionCode;
  UnicodeString   FexceptionMessage;
  ExceptionCode __fastcall GetexceptionCode()
  {  return FexceptionCode;  }
  void __fastcall SetexceptionCode(ExceptionCode _prop_val)
  {  FexceptionCode = _prop_val;  }
  UnicodeString __fastcall GetexceptionMessage()
  {  return FexceptionMessage;  }
  void __fastcall SetexceptionMessage(UnicodeString _prop_val)
  {  FexceptionMessage = _prop_val;  }
__published:
  __property ExceptionCode exceptionCode = { read=FexceptionCode, write=SetexceptionCode };
  __property UnicodeString exceptionMessage = { read=FexceptionMessage, write=SetexceptionMessage };
};




// ************************************************************************ //
// XML       : InvalidQueryLocatorFault, global, <element>
// Namespace : urn:fault.enterprise.soap.sforce.com
// Info      : Fault
// Base Types: ApiFault, InvalidQueryLocatorFault
// ************************************************************************ //
class InvalidQueryLocatorFault2 : public ERemotableException {
private:
  ExceptionCode   FexceptionCode;
  UnicodeString   FexceptionMessage;
  ExceptionCode __fastcall GetexceptionCode()
  {  return FexceptionCode;  }
  void __fastcall SetexceptionCode(ExceptionCode _prop_val)
  {  FexceptionCode = _prop_val;  }
  UnicodeString __fastcall GetexceptionMessage()
  {  return FexceptionMessage;  }
  void __fastcall SetexceptionMessage(UnicodeString _prop_val)
  {  FexceptionMessage = _prop_val;  }
__published:
  __property ExceptionCode exceptionCode = { read=FexceptionCode, write=SetexceptionCode };
  __property UnicodeString exceptionMessage = { read=FexceptionMessage, write=SetexceptionMessage };
};




// ************************************************************************ //
// XML       : InvalidNewPasswordFault, global, <element>
// Namespace : urn:fault.enterprise.soap.sforce.com
// Info      : Fault
// Base Types: ApiFault, InvalidNewPasswordFault
// ************************************************************************ //
class InvalidNewPasswordFault2 : public ERemotableException {
private:
  ExceptionCode   FexceptionCode;
  UnicodeString   FexceptionMessage;
  ExceptionCode __fastcall GetexceptionCode()
  {  return FexceptionCode;  }
  void __fastcall SetexceptionCode(ExceptionCode _prop_val)
  {  FexceptionCode = _prop_val;  }
  UnicodeString __fastcall GetexceptionMessage()
  {  return FexceptionMessage;  }
  void __fastcall SetexceptionMessage(UnicodeString _prop_val)
  {  FexceptionMessage = _prop_val;  }
__published:
  __property ExceptionCode exceptionCode = { read=FexceptionCode, write=SetexceptionCode };
  __property UnicodeString exceptionMessage = { read=FexceptionMessage, write=SetexceptionMessage };
};




// ************************************************************************ //
// XML       : InvalidIdFault, global, <element>
// Namespace : urn:fault.enterprise.soap.sforce.com
// Info      : Fault
// Base Types: ApiFault, InvalidIdFault
// ************************************************************************ //
class InvalidIdFault2 : public ERemotableException {
private:
  ExceptionCode   FexceptionCode;
  UnicodeString   FexceptionMessage;
  ExceptionCode __fastcall GetexceptionCode()
  {  return FexceptionCode;  }
  void __fastcall SetexceptionCode(ExceptionCode _prop_val)
  {  FexceptionCode = _prop_val;  }
  UnicodeString __fastcall GetexceptionMessage()
  {  return FexceptionMessage;  }
  void __fastcall SetexceptionMessage(UnicodeString _prop_val)
  {  FexceptionMessage = _prop_val;  }
__published:
  __property ExceptionCode exceptionCode = { read=FexceptionCode, write=SetexceptionCode };
  __property UnicodeString exceptionMessage = { read=FexceptionMessage, write=SetexceptionMessage };
};




// ************************************************************************ //
// XML       : UnexpectedErrorFault, global, <element>
// Namespace : urn:fault.enterprise.soap.sforce.com
// Info      : Fault
// Base Types: ApiFault, UnexpectedErrorFault
// ************************************************************************ //
class UnexpectedErrorFault2 : public ERemotableException {
private:
  ExceptionCode   FexceptionCode;
  UnicodeString   FexceptionMessage;
  ExceptionCode __fastcall GetexceptionCode()
  {  return FexceptionCode;  }
  void __fastcall SetexceptionCode(ExceptionCode _prop_val)
  {  FexceptionCode = _prop_val;  }
  UnicodeString __fastcall GetexceptionMessage()
  {  return FexceptionMessage;  }
  void __fastcall SetexceptionMessage(UnicodeString _prop_val)
  {  FexceptionMessage = _prop_val;  }
__published:
  __property ExceptionCode exceptionCode = { read=FexceptionCode, write=SetexceptionCode };
  __property UnicodeString exceptionMessage = { read=FexceptionMessage, write=SetexceptionMessage };
};




// ************************************************************************ //
// XML       : InvalidFieldFault, global, <element>
// Namespace : urn:fault.enterprise.soap.sforce.com
// Info      : Fault
// Base Types: ApiFault, ApiQueryFault, InvalidFieldFault
// ************************************************************************ //
class InvalidFieldFault2 : public ERemotableException {
private:
  ExceptionCode   FexceptionCode;
  UnicodeString   FexceptionMessage;
  int             Frow;
  int             Fcolumn;
  ExceptionCode __fastcall GetexceptionCode()
  {  return FexceptionCode;  }
  void __fastcall SetexceptionCode(ExceptionCode _prop_val)
  {  FexceptionCode = _prop_val;  }
  UnicodeString __fastcall GetexceptionMessage()
  {  return FexceptionMessage;  }
  void __fastcall SetexceptionMessage(UnicodeString _prop_val)
  {  FexceptionMessage = _prop_val;  }
  int __fastcall Getrow()
  {  return Frow;  }
  void __fastcall Setrow(int _prop_val)
  {  Frow = _prop_val;  }
  int __fastcall Getcolumn()
  {  return Fcolumn;  }
  void __fastcall Setcolumn(int _prop_val)
  {  Fcolumn = _prop_val;  }
__published:
  __property ExceptionCode exceptionCode = { read=FexceptionCode, write=SetexceptionCode };
  __property UnicodeString exceptionMessage = { read=FexceptionMessage, write=SetexceptionMessage };
  __property int               row = { read=Frow, write=Setrow };
  __property int            column = { read=Fcolumn, write=Setcolumn };
};




// ************************************************************************ //
// XML       : InvalidSObjectFault, global, <element>
// Namespace : urn:fault.enterprise.soap.sforce.com
// Info      : Fault
// Base Types: ApiFault, ApiQueryFault, InvalidSObjectFault
// ************************************************************************ //
class InvalidSObjectFault2 : public ERemotableException {
private:
  ExceptionCode   FexceptionCode;
  UnicodeString   FexceptionMessage;
  int             Frow;
  int             Fcolumn;
  ExceptionCode __fastcall GetexceptionCode()
  {  return FexceptionCode;  }
  void __fastcall SetexceptionCode(ExceptionCode _prop_val)
  {  FexceptionCode = _prop_val;  }
  UnicodeString __fastcall GetexceptionMessage()
  {  return FexceptionMessage;  }
  void __fastcall SetexceptionMessage(UnicodeString _prop_val)
  {  FexceptionMessage = _prop_val;  }
  int __fastcall Getrow()
  {  return Frow;  }
  void __fastcall Setrow(int _prop_val)
  {  Frow = _prop_val;  }
  int __fastcall Getcolumn()
  {  return Fcolumn;  }
  void __fastcall Setcolumn(int _prop_val)
  {  Fcolumn = _prop_val;  }
__published:
  __property ExceptionCode exceptionCode = { read=FexceptionCode, write=SetexceptionCode };
  __property UnicodeString exceptionMessage = { read=FexceptionMessage, write=SetexceptionMessage };
  __property int               row = { read=Frow, write=Setrow };
  __property int            column = { read=Fcolumn, write=Setcolumn };
};




// ************************************************************************ //
// XML       : MalformedQueryFault, global, <element>
// Namespace : urn:fault.enterprise.soap.sforce.com
// Info      : Fault
// Base Types: ApiFault, ApiQueryFault, MalformedQueryFault
// ************************************************************************ //
class MalformedQueryFault2 : public ERemotableException {
private:
  ExceptionCode   FexceptionCode;
  UnicodeString   FexceptionMessage;
  int             Frow;
  int             Fcolumn;
  ExceptionCode __fastcall GetexceptionCode()
  {  return FexceptionCode;  }
  void __fastcall SetexceptionCode(ExceptionCode _prop_val)
  {  FexceptionCode = _prop_val;  }
  UnicodeString __fastcall GetexceptionMessage()
  {  return FexceptionMessage;  }
  void __fastcall SetexceptionMessage(UnicodeString _prop_val)
  {  FexceptionMessage = _prop_val;  }
  int __fastcall Getrow()
  {  return Frow;  }
  void __fastcall Setrow(int _prop_val)
  {  Frow = _prop_val;  }
  int __fastcall Getcolumn()
  {  return Fcolumn;  }
  void __fastcall Setcolumn(int _prop_val)
  {  Fcolumn = _prop_val;  }
__published:
  __property ExceptionCode exceptionCode = { read=FexceptionCode, write=SetexceptionCode };
  __property UnicodeString exceptionMessage = { read=FexceptionMessage, write=SetexceptionMessage };
  __property int               row = { read=Frow, write=Setrow };
  __property int            column = { read=Fcolumn, write=Setcolumn };
};




// ************************************************************************ //
// XML       : MalformedSearchFault, global, <element>
// Namespace : urn:fault.enterprise.soap.sforce.com
// Info      : Fault
// Base Types: ApiFault, ApiQueryFault, MalformedSearchFault
// ************************************************************************ //
class MalformedSearchFault2 : public ERemotableException {
private:
  ExceptionCode   FexceptionCode;
  UnicodeString   FexceptionMessage;
  int             Frow;
  int             Fcolumn;
  ExceptionCode __fastcall GetexceptionCode()
  {  return FexceptionCode;  }
  void __fastcall SetexceptionCode(ExceptionCode _prop_val)
  {  FexceptionCode = _prop_val;  }
  UnicodeString __fastcall GetexceptionMessage()
  {  return FexceptionMessage;  }
  void __fastcall SetexceptionMessage(UnicodeString _prop_val)
  {  FexceptionMessage = _prop_val;  }
  int __fastcall Getrow()
  {  return Frow;  }
  void __fastcall Setrow(int _prop_val)
  {  Frow = _prop_val;  }
  int __fastcall Getcolumn()
  {  return Fcolumn;  }
  void __fastcall Setcolumn(int _prop_val)
  {  Fcolumn = _prop_val;  }
__published:
  __property ExceptionCode exceptionCode = { read=FexceptionCode, write=SetexceptionCode };
  __property UnicodeString exceptionMessage = { read=FexceptionMessage, write=SetexceptionMessage };
  __property int               row = { read=Frow, write=Setrow };
  __property int            column = { read=Fcolumn, write=Setcolumn };
};


typedef DynamicArray<UnicodeString> Array_Of_string; /* "http://www.w3.org/2001/XMLSchema"[GblUbnd] */


// ************************************************************************ //
// XML       : SendEmailError, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class SendEmailError : public TRemotable {
private:
  Array_Of_string Ffields;
  bool            Ffields_Specified;
  UnicodeString   Fmessage;
  StatusCode      FstatusCode;
  ID              FtargetObjectId;
  Array_Of_string __fastcall Getfields(int Index)
  {  return Ffields;  }
  void __fastcall Setfields(int Index, Array_Of_string _prop_val)
  {  Ffields = _prop_val; Ffields_Specified = true;  }
  bool __fastcall fields_Specified(int Index)
  {  return Ffields_Specified;  } 
  UnicodeString __fastcall Getmessage()
  {  return Fmessage;  }
  void __fastcall Setmessage(UnicodeString _prop_val)
  {  Fmessage = _prop_val;  }
  StatusCode __fastcall GetstatusCode()
  {  return FstatusCode;  }
  void __fastcall SetstatusCode(StatusCode _prop_val)
  {  FstatusCode = _prop_val;  }
  ID __fastcall GettargetObjectId(int Index)
  {  return FtargetObjectId;  }
  void __fastcall SettargetObjectId(int Index, ID _prop_val)
  {  FtargetObjectId = _prop_val;  }
__published:
  __property Array_Of_string     fields = { index=(IS_OPTN|IS_UNBD|IS_NLBL), read=Ffields, write=Setfields, stored = fields_Specified };
  __property UnicodeString    message = { read=Fmessage, write=Setmessage };
  __property StatusCode statusCode = { read=FstatusCode, write=SetstatusCode };
  __property ID         targetObjectId = { index=(IS_NLBL), read=FtargetObjectId, write=SettargetObjectId };
};




// ************************************************************************ //
// XML       : Error, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class Error : public TRemotable {
private:
  Array_Of_string Ffields;
  bool            Ffields_Specified;
  UnicodeString   Fmessage;
  StatusCode      FstatusCode;
  Array_Of_string __fastcall Getfields(int Index)
  {  return Ffields;  }
  void __fastcall Setfields(int Index, Array_Of_string _prop_val)
  {  Ffields = _prop_val; Ffields_Specified = true;  }
  bool __fastcall fields_Specified(int Index)
  {  return Ffields_Specified;  } 
  UnicodeString __fastcall Getmessage()
  {  return Fmessage;  }
  void __fastcall Setmessage(UnicodeString _prop_val)
  {  Fmessage = _prop_val;  }
  StatusCode __fastcall GetstatusCode()
  {  return FstatusCode;  }
  void __fastcall SetstatusCode(StatusCode _prop_val)
  {  FstatusCode = _prop_val;  }
__published:
  __property Array_Of_string     fields = { index=(IS_OPTN|IS_UNBD|IS_NLBL), read=Ffields, write=Setfields, stored = fields_Specified };
  __property UnicodeString    message = { read=Fmessage, write=Setmessage };
  __property StatusCode statusCode = { read=FstatusCode, write=SetstatusCode };
};




// ************************************************************************ //
// XML       : sObject, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class sObject : public TRemotable {
private:
  Array_Of_string FfieldsToNull;
  bool            FfieldsToNull_Specified;
  ID              FId;
  Array_Of_string __fastcall GetfieldsToNull(int Index)
  {  return FfieldsToNull;  }
  void __fastcall SetfieldsToNull(int Index, Array_Of_string _prop_val)
  {  FfieldsToNull = _prop_val; FfieldsToNull_Specified = true;  }
  bool __fastcall fieldsToNull_Specified(int Index)
  {  return FfieldsToNull_Specified;  } 
  ID __fastcall GetId(int Index)
  {  return FId;  }
  void __fastcall SetId(int Index, ID _prop_val)
  {  FId = _prop_val;  }
__published:
  __property Array_Of_string fieldsToNull = { index=(IS_OPTN|IS_UNBD|IS_NLBL), read=FfieldsToNull, write=SetfieldsToNull, stored = fieldsToNull_Specified };
  __property ID                 Id = { index=(IS_NLBL), read=FId, write=SetId };
};




// ************************************************************************ //
// XML       : WebLink, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class WebLink : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  UnicodeString   FDisplayType;
  bool            FDisplayType_Specified;
  UnicodeString   FEncodingKey;
  bool            FEncodingKey_Specified;
  bool            FHasMenubar;
  bool            FHasMenubar_Specified;
  bool            FHasScrollbars;
  bool            FHasScrollbars_Specified;
  bool            FHasToolbar;
  bool            FHasToolbar_Specified;
  int             FHeight;
  bool            FHeight_Specified;
  bool            FIsProtected;
  bool            FIsProtected_Specified;
  bool            FIsResizable;
  bool            FIsResizable_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FLinkType;
  bool            FLinkType_Specified;
  UnicodeString   FMasterLabel;
  bool            FMasterLabel_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  UnicodeString   FNamespacePrefix;
  bool            FNamespacePrefix_Specified;
  UnicodeString   FOpenType;
  bool            FOpenType_Specified;
  UnicodeString   FPageOrSobjectType;
  bool            FPageOrSobjectType_Specified;
  UnicodeString   FPosition;
  bool            FPosition_Specified;
  bool            FRequireRowSelection;
  bool            FRequireRowSelection_Specified;
  ID              FScontrolId;
  bool            FScontrolId_Specified;
  bool            FShowsLocation;
  bool            FShowsLocation_Specified;
  bool            FShowsStatus;
  bool            FShowsStatus_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FUrl;
  bool            FUrl_Specified;
  int             FWidth;
  bool            FWidth_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  UnicodeString __fastcall GetDisplayType(int Index)
  {  return FDisplayType;  }
  void __fastcall SetDisplayType(int Index, UnicodeString _prop_val)
  {  FDisplayType = _prop_val; FDisplayType_Specified = true;  }
  bool __fastcall DisplayType_Specified(int Index)
  {  return FDisplayType_Specified;  } 
  UnicodeString __fastcall GetEncodingKey(int Index)
  {  return FEncodingKey;  }
  void __fastcall SetEncodingKey(int Index, UnicodeString _prop_val)
  {  FEncodingKey = _prop_val; FEncodingKey_Specified = true;  }
  bool __fastcall EncodingKey_Specified(int Index)
  {  return FEncodingKey_Specified;  } 
  bool __fastcall GetHasMenubar(int Index)
  {  return FHasMenubar;  }
  void __fastcall SetHasMenubar(int Index, bool _prop_val)
  {  FHasMenubar = _prop_val; FHasMenubar_Specified = true;  }
  bool __fastcall HasMenubar_Specified(int Index)
  {  return FHasMenubar_Specified;  } 
  bool __fastcall GetHasScrollbars(int Index)
  {  return FHasScrollbars;  }
  void __fastcall SetHasScrollbars(int Index, bool _prop_val)
  {  FHasScrollbars = _prop_val; FHasScrollbars_Specified = true;  }
  bool __fastcall HasScrollbars_Specified(int Index)
  {  return FHasScrollbars_Specified;  } 
  bool __fastcall GetHasToolbar(int Index)
  {  return FHasToolbar;  }
  void __fastcall SetHasToolbar(int Index, bool _prop_val)
  {  FHasToolbar = _prop_val; FHasToolbar_Specified = true;  }
  bool __fastcall HasToolbar_Specified(int Index)
  {  return FHasToolbar_Specified;  } 
  int __fastcall GetHeight(int Index)
  {  return FHeight;  }
  void __fastcall SetHeight(int Index, int _prop_val)
  {  FHeight = _prop_val; FHeight_Specified = true;  }
  bool __fastcall Height_Specified(int Index)
  {  return FHeight_Specified;  } 
  bool __fastcall GetIsProtected(int Index)
  {  return FIsProtected;  }
  void __fastcall SetIsProtected(int Index, bool _prop_val)
  {  FIsProtected = _prop_val; FIsProtected_Specified = true;  }
  bool __fastcall IsProtected_Specified(int Index)
  {  return FIsProtected_Specified;  } 
  bool __fastcall GetIsResizable(int Index)
  {  return FIsResizable;  }
  void __fastcall SetIsResizable(int Index, bool _prop_val)
  {  FIsResizable = _prop_val; FIsResizable_Specified = true;  }
  bool __fastcall IsResizable_Specified(int Index)
  {  return FIsResizable_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetLinkType(int Index)
  {  return FLinkType;  }
  void __fastcall SetLinkType(int Index, UnicodeString _prop_val)
  {  FLinkType = _prop_val; FLinkType_Specified = true;  }
  bool __fastcall LinkType_Specified(int Index)
  {  return FLinkType_Specified;  } 
  UnicodeString __fastcall GetMasterLabel(int Index)
  {  return FMasterLabel;  }
  void __fastcall SetMasterLabel(int Index, UnicodeString _prop_val)
  {  FMasterLabel = _prop_val; FMasterLabel_Specified = true;  }
  bool __fastcall MasterLabel_Specified(int Index)
  {  return FMasterLabel_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  UnicodeString __fastcall GetNamespacePrefix(int Index)
  {  return FNamespacePrefix;  }
  void __fastcall SetNamespacePrefix(int Index, UnicodeString _prop_val)
  {  FNamespacePrefix = _prop_val; FNamespacePrefix_Specified = true;  }
  bool __fastcall NamespacePrefix_Specified(int Index)
  {  return FNamespacePrefix_Specified;  } 
  UnicodeString __fastcall GetOpenType(int Index)
  {  return FOpenType;  }
  void __fastcall SetOpenType(int Index, UnicodeString _prop_val)
  {  FOpenType = _prop_val; FOpenType_Specified = true;  }
  bool __fastcall OpenType_Specified(int Index)
  {  return FOpenType_Specified;  } 
  UnicodeString __fastcall GetPageOrSobjectType(int Index)
  {  return FPageOrSobjectType;  }
  void __fastcall SetPageOrSobjectType(int Index, UnicodeString _prop_val)
  {  FPageOrSobjectType = _prop_val; FPageOrSobjectType_Specified = true;  }
  bool __fastcall PageOrSobjectType_Specified(int Index)
  {  return FPageOrSobjectType_Specified;  } 
  UnicodeString __fastcall GetPosition(int Index)
  {  return FPosition;  }
  void __fastcall SetPosition(int Index, UnicodeString _prop_val)
  {  FPosition = _prop_val; FPosition_Specified = true;  }
  bool __fastcall Position_Specified(int Index)
  {  return FPosition_Specified;  } 
  bool __fastcall GetRequireRowSelection(int Index)
  {  return FRequireRowSelection;  }
  void __fastcall SetRequireRowSelection(int Index, bool _prop_val)
  {  FRequireRowSelection = _prop_val; FRequireRowSelection_Specified = true;  }
  bool __fastcall RequireRowSelection_Specified(int Index)
  {  return FRequireRowSelection_Specified;  } 
  ID __fastcall GetScontrolId(int Index)
  {  return FScontrolId;  }
  void __fastcall SetScontrolId(int Index, ID _prop_val)
  {  FScontrolId = _prop_val; FScontrolId_Specified = true;  }
  bool __fastcall ScontrolId_Specified(int Index)
  {  return FScontrolId_Specified;  } 
  bool __fastcall GetShowsLocation(int Index)
  {  return FShowsLocation;  }
  void __fastcall SetShowsLocation(int Index, bool _prop_val)
  {  FShowsLocation = _prop_val; FShowsLocation_Specified = true;  }
  bool __fastcall ShowsLocation_Specified(int Index)
  {  return FShowsLocation_Specified;  } 
  bool __fastcall GetShowsStatus(int Index)
  {  return FShowsStatus;  }
  void __fastcall SetShowsStatus(int Index, bool _prop_val)
  {  FShowsStatus = _prop_val; FShowsStatus_Specified = true;  }
  bool __fastcall ShowsStatus_Specified(int Index)
  {  return FShowsStatus_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetUrl(int Index)
  {  return FUrl;  }
  void __fastcall SetUrl(int Index, UnicodeString _prop_val)
  {  FUrl = _prop_val; FUrl_Specified = true;  }
  bool __fastcall Url_Specified(int Index)
  {  return FUrl_Specified;  } 
  int __fastcall GetWidth(int Index)
  {  return FWidth;  }
  void __fastcall SetWidth(int Index, int _prop_val)
  {  FWidth = _prop_val; FWidth_Specified = true;  }
  bool __fastcall Width_Specified(int Index)
  {  return FWidth_Specified;  } 

public:
  __fastcall ~WebLink();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property UnicodeString DisplayType = { index=(IS_OPTN|IS_NLBL), read=FDisplayType, write=SetDisplayType, stored = DisplayType_Specified };
  __property UnicodeString EncodingKey = { index=(IS_OPTN|IS_NLBL), read=FEncodingKey, write=SetEncodingKey, stored = EncodingKey_Specified };
  __property bool       HasMenubar = { index=(IS_OPTN|IS_NLBL), read=FHasMenubar, write=SetHasMenubar, stored = HasMenubar_Specified };
  __property bool       HasScrollbars = { index=(IS_OPTN|IS_NLBL), read=FHasScrollbars, write=SetHasScrollbars, stored = HasScrollbars_Specified };
  __property bool       HasToolbar = { index=(IS_OPTN|IS_NLBL), read=FHasToolbar, write=SetHasToolbar, stored = HasToolbar_Specified };
  __property int            Height = { index=(IS_OPTN|IS_NLBL), read=FHeight, write=SetHeight, stored = Height_Specified };
  __property bool       IsProtected = { index=(IS_OPTN|IS_NLBL), read=FIsProtected, write=SetIsProtected, stored = IsProtected_Specified };
  __property bool       IsResizable = { index=(IS_OPTN|IS_NLBL), read=FIsResizable, write=SetIsResizable, stored = IsResizable_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString   LinkType = { index=(IS_OPTN|IS_NLBL), read=FLinkType, write=SetLinkType, stored = LinkType_Specified };
  __property UnicodeString MasterLabel = { index=(IS_OPTN|IS_NLBL), read=FMasterLabel, write=SetMasterLabel, stored = MasterLabel_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property UnicodeString NamespacePrefix = { index=(IS_OPTN|IS_NLBL), read=FNamespacePrefix, write=SetNamespacePrefix, stored = NamespacePrefix_Specified };
  __property UnicodeString   OpenType = { index=(IS_OPTN|IS_NLBL), read=FOpenType, write=SetOpenType, stored = OpenType_Specified };
  __property UnicodeString PageOrSobjectType = { index=(IS_OPTN|IS_NLBL), read=FPageOrSobjectType, write=SetPageOrSobjectType, stored = PageOrSobjectType_Specified };
  __property UnicodeString   Position = { index=(IS_OPTN|IS_NLBL), read=FPosition, write=SetPosition, stored = Position_Specified };
  __property bool       RequireRowSelection = { index=(IS_OPTN|IS_NLBL), read=FRequireRowSelection, write=SetRequireRowSelection, stored = RequireRowSelection_Specified };
  __property ID         ScontrolId = { index=(IS_OPTN|IS_NLBL), read=FScontrolId, write=SetScontrolId, stored = ScontrolId_Specified };
  __property bool       ShowsLocation = { index=(IS_OPTN|IS_NLBL), read=FShowsLocation, write=SetShowsLocation, stored = ShowsLocation_Specified };
  __property bool       ShowsStatus = { index=(IS_OPTN|IS_NLBL), read=FShowsStatus, write=SetShowsStatus, stored = ShowsStatus_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString        Url = { index=(IS_OPTN|IS_NLBL), read=FUrl, write=SetUrl, stored = Url_Specified };
  __property int             Width = { index=(IS_OPTN|IS_NLBL), read=FWidth, write=SetWidth, stored = Width_Specified };
};




// ************************************************************************ //
// XML       : Vote, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Vote : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  Name_*           FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  Name_* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Name_* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~Vote();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property Name_*          Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : UserRecordAccess, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class UserRecordAccess : public sObject {
private:
  bool            FHasAllAccess;
  bool            FHasAllAccess_Specified;
  bool            FHasDeleteAccess;
  bool            FHasDeleteAccess_Specified;
  bool            FHasEditAccess;
  bool            FHasEditAccess_Specified;
  bool            FHasReadAccess;
  bool            FHasReadAccess_Specified;
  bool            FHasTransferAccess;
  bool            FHasTransferAccess_Specified;
  UnicodeString   FMaxAccessLevel;
  bool            FMaxAccessLevel_Specified;
  UnicodeString   FRecordId;
  bool            FRecordId_Specified;
  ID              FUserId;
  bool            FUserId_Specified;
  bool __fastcall GetHasAllAccess(int Index)
  {  return FHasAllAccess;  }
  void __fastcall SetHasAllAccess(int Index, bool _prop_val)
  {  FHasAllAccess = _prop_val; FHasAllAccess_Specified = true;  }
  bool __fastcall HasAllAccess_Specified(int Index)
  {  return FHasAllAccess_Specified;  } 
  bool __fastcall GetHasDeleteAccess(int Index)
  {  return FHasDeleteAccess;  }
  void __fastcall SetHasDeleteAccess(int Index, bool _prop_val)
  {  FHasDeleteAccess = _prop_val; FHasDeleteAccess_Specified = true;  }
  bool __fastcall HasDeleteAccess_Specified(int Index)
  {  return FHasDeleteAccess_Specified;  } 
  bool __fastcall GetHasEditAccess(int Index)
  {  return FHasEditAccess;  }
  void __fastcall SetHasEditAccess(int Index, bool _prop_val)
  {  FHasEditAccess = _prop_val; FHasEditAccess_Specified = true;  }
  bool __fastcall HasEditAccess_Specified(int Index)
  {  return FHasEditAccess_Specified;  } 
  bool __fastcall GetHasReadAccess(int Index)
  {  return FHasReadAccess;  }
  void __fastcall SetHasReadAccess(int Index, bool _prop_val)
  {  FHasReadAccess = _prop_val; FHasReadAccess_Specified = true;  }
  bool __fastcall HasReadAccess_Specified(int Index)
  {  return FHasReadAccess_Specified;  } 
  bool __fastcall GetHasTransferAccess(int Index)
  {  return FHasTransferAccess;  }
  void __fastcall SetHasTransferAccess(int Index, bool _prop_val)
  {  FHasTransferAccess = _prop_val; FHasTransferAccess_Specified = true;  }
  bool __fastcall HasTransferAccess_Specified(int Index)
  {  return FHasTransferAccess_Specified;  } 
  UnicodeString __fastcall GetMaxAccessLevel(int Index)
  {  return FMaxAccessLevel;  }
  void __fastcall SetMaxAccessLevel(int Index, UnicodeString _prop_val)
  {  FMaxAccessLevel = _prop_val; FMaxAccessLevel_Specified = true;  }
  bool __fastcall MaxAccessLevel_Specified(int Index)
  {  return FMaxAccessLevel_Specified;  } 
  UnicodeString __fastcall GetRecordId(int Index)
  {  return FRecordId;  }
  void __fastcall SetRecordId(int Index, UnicodeString _prop_val)
  {  FRecordId = _prop_val; FRecordId_Specified = true;  }
  bool __fastcall RecordId_Specified(int Index)
  {  return FRecordId_Specified;  } 
  ID __fastcall GetUserId(int Index)
  {  return FUserId;  }
  void __fastcall SetUserId(int Index, ID _prop_val)
  {  FUserId = _prop_val; FUserId_Specified = true;  }
  bool __fastcall UserId_Specified(int Index)
  {  return FUserId_Specified;  } 
__published:
  __property bool       HasAllAccess = { index=(IS_OPTN|IS_NLBL), read=FHasAllAccess, write=SetHasAllAccess, stored = HasAllAccess_Specified };
  __property bool       HasDeleteAccess = { index=(IS_OPTN|IS_NLBL), read=FHasDeleteAccess, write=SetHasDeleteAccess, stored = HasDeleteAccess_Specified };
  __property bool       HasEditAccess = { index=(IS_OPTN|IS_NLBL), read=FHasEditAccess, write=SetHasEditAccess, stored = HasEditAccess_Specified };
  __property bool       HasReadAccess = { index=(IS_OPTN|IS_NLBL), read=FHasReadAccess, write=SetHasReadAccess, stored = HasReadAccess_Specified };
  __property bool       HasTransferAccess = { index=(IS_OPTN|IS_NLBL), read=FHasTransferAccess, write=SetHasTransferAccess, stored = HasTransferAccess_Specified };
  __property UnicodeString MaxAccessLevel = { index=(IS_OPTN|IS_NLBL), read=FMaxAccessLevel, write=SetMaxAccessLevel, stored = MaxAccessLevel_Specified };
  __property UnicodeString   RecordId = { index=(IS_OPTN|IS_NLBL), read=FRecordId, write=SetRecordId, stored = RecordId_Specified };
  __property ID             UserId = { index=(IS_OPTN|IS_NLBL), read=FUserId, write=SetUserId, stored = UserId_Specified };
};




// ************************************************************************ //
// XML       : UserProfileFeed, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class UserProfileFeed : public sObject {
private:
  UnicodeString   FBody;
  bool            FBody_Specified;
  int             FCommentCount;
  bool            FCommentCount_Specified;
  TByteDynArray   FContentData;
  bool            FContentData_Specified;
  UnicodeString   FContentDescription;
  bool            FContentDescription_Specified;
  UnicodeString   FContentFileName;
  bool            FContentFileName_Specified;
  int             FContentSize;
  bool            FContentSize_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedComments;
  bool            FFeedComments_Specified;
  QueryResult*    FFeedLikes;
  bool            FFeedLikes_Specified;
  QueryResult*    FFeedTrackedChanges;
  bool            FFeedTrackedChanges_Specified;
  Name_*           FInsertedBy;
  bool            FInsertedBy_Specified;
  ID              FInsertedById;
  bool            FInsertedById_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLikeCount;
  bool            FLikeCount_Specified;
  UnicodeString   FLinkUrl;
  bool            FLinkUrl_Specified;
  Name_*           FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FRelatedRecordId;
  bool            FRelatedRecordId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetCommentCount(int Index)
  {  return FCommentCount;  }
  void __fastcall SetCommentCount(int Index, int _prop_val)
  {  FCommentCount = _prop_val; FCommentCount_Specified = true;  }
  bool __fastcall CommentCount_Specified(int Index)
  {  return FCommentCount_Specified;  } 
  TByteDynArray __fastcall GetContentData(int Index)
  {  return FContentData;  }
  void __fastcall SetContentData(int Index, TByteDynArray _prop_val)
  {  FContentData = _prop_val; FContentData_Specified = true;  }
  bool __fastcall ContentData_Specified(int Index)
  {  return FContentData_Specified;  } 
  UnicodeString __fastcall GetContentDescription(int Index)
  {  return FContentDescription;  }
  void __fastcall SetContentDescription(int Index, UnicodeString _prop_val)
  {  FContentDescription = _prop_val; FContentDescription_Specified = true;  }
  bool __fastcall ContentDescription_Specified(int Index)
  {  return FContentDescription_Specified;  } 
  UnicodeString __fastcall GetContentFileName(int Index)
  {  return FContentFileName;  }
  void __fastcall SetContentFileName(int Index, UnicodeString _prop_val)
  {  FContentFileName = _prop_val; FContentFileName_Specified = true;  }
  bool __fastcall ContentFileName_Specified(int Index)
  {  return FContentFileName_Specified;  } 
  int __fastcall GetContentSize(int Index)
  {  return FContentSize;  }
  void __fastcall SetContentSize(int Index, int _prop_val)
  {  FContentSize = _prop_val; FContentSize_Specified = true;  }
  bool __fastcall ContentSize_Specified(int Index)
  {  return FContentSize_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedComments(int Index)
  {  return FFeedComments;  }
  void __fastcall SetFeedComments(int Index, QueryResult* _prop_val)
  {  FFeedComments = _prop_val; FFeedComments_Specified = true;  }
  bool __fastcall FeedComments_Specified(int Index)
  {  return FFeedComments_Specified;  } 
  QueryResult* __fastcall GetFeedLikes(int Index)
  {  return FFeedLikes;  }
  void __fastcall SetFeedLikes(int Index, QueryResult* _prop_val)
  {  FFeedLikes = _prop_val; FFeedLikes_Specified = true;  }
  bool __fastcall FeedLikes_Specified(int Index)
  {  return FFeedLikes_Specified;  } 
  QueryResult* __fastcall GetFeedTrackedChanges(int Index)
  {  return FFeedTrackedChanges;  }
  void __fastcall SetFeedTrackedChanges(int Index, QueryResult* _prop_val)
  {  FFeedTrackedChanges = _prop_val; FFeedTrackedChanges_Specified = true;  }
  bool __fastcall FeedTrackedChanges_Specified(int Index)
  {  return FFeedTrackedChanges_Specified;  } 
  Name_* __fastcall GetInsertedBy(int Index)
  {  return FInsertedBy;  }
  void __fastcall SetInsertedBy(int Index, Name_* _prop_val)
  {  FInsertedBy = _prop_val; FInsertedBy_Specified = true;  }
  bool __fastcall InsertedBy_Specified(int Index)
  {  return FInsertedBy_Specified;  } 
  ID __fastcall GetInsertedById(int Index)
  {  return FInsertedById;  }
  void __fastcall SetInsertedById(int Index, ID _prop_val)
  {  FInsertedById = _prop_val; FInsertedById_Specified = true;  }
  bool __fastcall InsertedById_Specified(int Index)
  {  return FInsertedById_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLikeCount(int Index)
  {  return FLikeCount;  }
  void __fastcall SetLikeCount(int Index, int _prop_val)
  {  FLikeCount = _prop_val; FLikeCount_Specified = true;  }
  bool __fastcall LikeCount_Specified(int Index)
  {  return FLikeCount_Specified;  } 
  UnicodeString __fastcall GetLinkUrl(int Index)
  {  return FLinkUrl;  }
  void __fastcall SetLinkUrl(int Index, UnicodeString _prop_val)
  {  FLinkUrl = _prop_val; FLinkUrl_Specified = true;  }
  bool __fastcall LinkUrl_Specified(int Index)
  {  return FLinkUrl_Specified;  } 
  Name_* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Name_* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetRelatedRecordId(int Index)
  {  return FRelatedRecordId;  }
  void __fastcall SetRelatedRecordId(int Index, ID _prop_val)
  {  FRelatedRecordId = _prop_val; FRelatedRecordId_Specified = true;  }
  bool __fastcall RelatedRecordId_Specified(int Index)
  {  return FRelatedRecordId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~UserProfileFeed();
__published:
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        CommentCount = { index=(IS_OPTN|IS_NLBL), read=FCommentCount, write=SetCommentCount, stored = CommentCount_Specified };
  __property TByteDynArray ContentData = { index=(IS_OPTN|IS_NLBL), read=FContentData, write=SetContentData, stored = ContentData_Specified };
  __property UnicodeString ContentDescription = { index=(IS_OPTN|IS_NLBL), read=FContentDescription, write=SetContentDescription, stored = ContentDescription_Specified };
  __property UnicodeString ContentFileName = { index=(IS_OPTN|IS_NLBL), read=FContentFileName, write=SetContentFileName, stored = ContentFileName_Specified };
  __property int        ContentSize = { index=(IS_OPTN|IS_NLBL), read=FContentSize, write=SetContentSize, stored = ContentSize_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedComments = { index=(IS_OPTN|IS_NLBL), read=FFeedComments, write=SetFeedComments, stored = FeedComments_Specified };
  __property QueryResult*  FeedLikes = { index=(IS_OPTN|IS_NLBL), read=FFeedLikes, write=SetFeedLikes, stored = FeedLikes_Specified };
  __property QueryResult* FeedTrackedChanges = { index=(IS_OPTN|IS_NLBL), read=FFeedTrackedChanges, write=SetFeedTrackedChanges, stored = FeedTrackedChanges_Specified };
  __property Name_*      InsertedBy = { index=(IS_OPTN|IS_NLBL), read=FInsertedBy, write=SetInsertedBy, stored = InsertedBy_Specified };
  __property ID         InsertedById = { index=(IS_OPTN|IS_NLBL), read=FInsertedById, write=SetInsertedById, stored = InsertedById_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int         LikeCount = { index=(IS_OPTN|IS_NLBL), read=FLikeCount, write=SetLikeCount, stored = LikeCount_Specified };
  __property UnicodeString    LinkUrl = { index=(IS_OPTN|IS_NLBL), read=FLinkUrl, write=SetLinkUrl, stored = LinkUrl_Specified };
  __property Name_*          Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         RelatedRecordId = { index=(IS_OPTN|IS_NLBL), read=FRelatedRecordId, write=SetRelatedRecordId, stored = RelatedRecordId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : UserPreference, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class UserPreference : public sObject {
private:
  UnicodeString   FPreference;
  bool            FPreference_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  ID              FUserId;
  bool            FUserId_Specified;
  UnicodeString   FValue;
  bool            FValue_Specified;
  UnicodeString __fastcall GetPreference(int Index)
  {  return FPreference;  }
  void __fastcall SetPreference(int Index, UnicodeString _prop_val)
  {  FPreference = _prop_val; FPreference_Specified = true;  }
  bool __fastcall Preference_Specified(int Index)
  {  return FPreference_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  ID __fastcall GetUserId(int Index)
  {  return FUserId;  }
  void __fastcall SetUserId(int Index, ID _prop_val)
  {  FUserId = _prop_val; FUserId_Specified = true;  }
  bool __fastcall UserId_Specified(int Index)
  {  return FUserId_Specified;  } 
  UnicodeString __fastcall GetValue(int Index)
  {  return FValue;  }
  void __fastcall SetValue(int Index, UnicodeString _prop_val)
  {  FValue = _prop_val; FValue_Specified = true;  }
  bool __fastcall Value_Specified(int Index)
  {  return FValue_Specified;  } 

public:
  __fastcall ~UserPreference();
__published:
  __property UnicodeString Preference = { index=(IS_OPTN|IS_NLBL), read=FPreference, write=SetPreference, stored = Preference_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property ID             UserId = { index=(IS_OPTN|IS_NLBL), read=FUserId, write=SetUserId, stored = UserId_Specified };
  __property UnicodeString      Value = { index=(IS_OPTN|IS_NLBL), read=FValue, write=SetValue, stored = Value_Specified };
};




// ************************************************************************ //
// XML       : UserFeed, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class UserFeed : public sObject {
private:
  UnicodeString   FBody;
  bool            FBody_Specified;
  int             FCommentCount;
  bool            FCommentCount_Specified;
  TByteDynArray   FContentData;
  bool            FContentData_Specified;
  UnicodeString   FContentDescription;
  bool            FContentDescription_Specified;
  UnicodeString   FContentFileName;
  bool            FContentFileName_Specified;
  int             FContentSize;
  bool            FContentSize_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedComments;
  bool            FFeedComments_Specified;
  QueryResult*    FFeedLikes;
  bool            FFeedLikes_Specified;
  QueryResult*    FFeedTrackedChanges;
  bool            FFeedTrackedChanges_Specified;
  Name_*           FInsertedBy;
  bool            FInsertedBy_Specified;
  ID              FInsertedById;
  bool            FInsertedById_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLikeCount;
  bool            FLikeCount_Specified;
  UnicodeString   FLinkUrl;
  bool            FLinkUrl_Specified;
  User*           FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FRelatedRecordId;
  bool            FRelatedRecordId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetCommentCount(int Index)
  {  return FCommentCount;  }
  void __fastcall SetCommentCount(int Index, int _prop_val)
  {  FCommentCount = _prop_val; FCommentCount_Specified = true;  }
  bool __fastcall CommentCount_Specified(int Index)
  {  return FCommentCount_Specified;  } 
  TByteDynArray __fastcall GetContentData(int Index)
  {  return FContentData;  }
  void __fastcall SetContentData(int Index, TByteDynArray _prop_val)
  {  FContentData = _prop_val; FContentData_Specified = true;  }
  bool __fastcall ContentData_Specified(int Index)
  {  return FContentData_Specified;  } 
  UnicodeString __fastcall GetContentDescription(int Index)
  {  return FContentDescription;  }
  void __fastcall SetContentDescription(int Index, UnicodeString _prop_val)
  {  FContentDescription = _prop_val; FContentDescription_Specified = true;  }
  bool __fastcall ContentDescription_Specified(int Index)
  {  return FContentDescription_Specified;  } 
  UnicodeString __fastcall GetContentFileName(int Index)
  {  return FContentFileName;  }
  void __fastcall SetContentFileName(int Index, UnicodeString _prop_val)
  {  FContentFileName = _prop_val; FContentFileName_Specified = true;  }
  bool __fastcall ContentFileName_Specified(int Index)
  {  return FContentFileName_Specified;  } 
  int __fastcall GetContentSize(int Index)
  {  return FContentSize;  }
  void __fastcall SetContentSize(int Index, int _prop_val)
  {  FContentSize = _prop_val; FContentSize_Specified = true;  }
  bool __fastcall ContentSize_Specified(int Index)
  {  return FContentSize_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedComments(int Index)
  {  return FFeedComments;  }
  void __fastcall SetFeedComments(int Index, QueryResult* _prop_val)
  {  FFeedComments = _prop_val; FFeedComments_Specified = true;  }
  bool __fastcall FeedComments_Specified(int Index)
  {  return FFeedComments_Specified;  } 
  QueryResult* __fastcall GetFeedLikes(int Index)
  {  return FFeedLikes;  }
  void __fastcall SetFeedLikes(int Index, QueryResult* _prop_val)
  {  FFeedLikes = _prop_val; FFeedLikes_Specified = true;  }
  bool __fastcall FeedLikes_Specified(int Index)
  {  return FFeedLikes_Specified;  } 
  QueryResult* __fastcall GetFeedTrackedChanges(int Index)
  {  return FFeedTrackedChanges;  }
  void __fastcall SetFeedTrackedChanges(int Index, QueryResult* _prop_val)
  {  FFeedTrackedChanges = _prop_val; FFeedTrackedChanges_Specified = true;  }
  bool __fastcall FeedTrackedChanges_Specified(int Index)
  {  return FFeedTrackedChanges_Specified;  } 
  Name_* __fastcall GetInsertedBy(int Index)
  {  return FInsertedBy;  }
  void __fastcall SetInsertedBy(int Index, Name_* _prop_val)
  {  FInsertedBy = _prop_val; FInsertedBy_Specified = true;  }
  bool __fastcall InsertedBy_Specified(int Index)
  {  return FInsertedBy_Specified;  } 
  ID __fastcall GetInsertedById(int Index)
  {  return FInsertedById;  }
  void __fastcall SetInsertedById(int Index, ID _prop_val)
  {  FInsertedById = _prop_val; FInsertedById_Specified = true;  }
  bool __fastcall InsertedById_Specified(int Index)
  {  return FInsertedById_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLikeCount(int Index)
  {  return FLikeCount;  }
  void __fastcall SetLikeCount(int Index, int _prop_val)
  {  FLikeCount = _prop_val; FLikeCount_Specified = true;  }
  bool __fastcall LikeCount_Specified(int Index)
  {  return FLikeCount_Specified;  } 
  UnicodeString __fastcall GetLinkUrl(int Index)
  {  return FLinkUrl;  }
  void __fastcall SetLinkUrl(int Index, UnicodeString _prop_val)
  {  FLinkUrl = _prop_val; FLinkUrl_Specified = true;  }
  bool __fastcall LinkUrl_Specified(int Index)
  {  return FLinkUrl_Specified;  } 
  User* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, User* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetRelatedRecordId(int Index)
  {  return FRelatedRecordId;  }
  void __fastcall SetRelatedRecordId(int Index, ID _prop_val)
  {  FRelatedRecordId = _prop_val; FRelatedRecordId_Specified = true;  }
  bool __fastcall RelatedRecordId_Specified(int Index)
  {  return FRelatedRecordId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~UserFeed();
__published:
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        CommentCount = { index=(IS_OPTN|IS_NLBL), read=FCommentCount, write=SetCommentCount, stored = CommentCount_Specified };
  __property TByteDynArray ContentData = { index=(IS_OPTN|IS_NLBL), read=FContentData, write=SetContentData, stored = ContentData_Specified };
  __property UnicodeString ContentDescription = { index=(IS_OPTN|IS_NLBL), read=FContentDescription, write=SetContentDescription, stored = ContentDescription_Specified };
  __property UnicodeString ContentFileName = { index=(IS_OPTN|IS_NLBL), read=FContentFileName, write=SetContentFileName, stored = ContentFileName_Specified };
  __property int        ContentSize = { index=(IS_OPTN|IS_NLBL), read=FContentSize, write=SetContentSize, stored = ContentSize_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedComments = { index=(IS_OPTN|IS_NLBL), read=FFeedComments, write=SetFeedComments, stored = FeedComments_Specified };
  __property QueryResult*  FeedLikes = { index=(IS_OPTN|IS_NLBL), read=FFeedLikes, write=SetFeedLikes, stored = FeedLikes_Specified };
  __property QueryResult* FeedTrackedChanges = { index=(IS_OPTN|IS_NLBL), read=FFeedTrackedChanges, write=SetFeedTrackedChanges, stored = FeedTrackedChanges_Specified };
  __property Name_*      InsertedBy = { index=(IS_OPTN|IS_NLBL), read=FInsertedBy, write=SetInsertedBy, stored = InsertedBy_Specified };
  __property ID         InsertedById = { index=(IS_OPTN|IS_NLBL), read=FInsertedById, write=SetInsertedById, stored = InsertedById_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int         LikeCount = { index=(IS_OPTN|IS_NLBL), read=FLikeCount, write=SetLikeCount, stored = LikeCount_Specified };
  __property UnicodeString    LinkUrl = { index=(IS_OPTN|IS_NLBL), read=FLinkUrl, write=SetLinkUrl, stored = LinkUrl_Specified };
  __property User*          Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         RelatedRecordId = { index=(IS_OPTN|IS_NLBL), read=FRelatedRecordId, write=SetRelatedRecordId, stored = RelatedRecordId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : TraceFlag, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class TraceFlag : public sObject {
private:
  UnicodeString   FApexCode;
  bool            FApexCode_Specified;
  UnicodeString   FApexProfiling;
  bool            FApexProfiling_Specified;
  UnicodeString   FCallout;
  bool            FCallout_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDatabase;
  bool            FDatabase_Specified;
  TXSDateTime*    FExpirationDate;
  bool            FExpirationDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  User*           FScope;
  bool            FScope_Specified;
  ID              FScopeId;
  bool            FScopeId_Specified;
  UnicodeString   FSystem;
  bool            FSystem_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  Name_*           FTracedEntity;
  bool            FTracedEntity_Specified;
  ID              FTracedEntityId;
  bool            FTracedEntityId_Specified;
  UnicodeString   FValidation;
  bool            FValidation_Specified;
  UnicodeString   FVisualforce;
  bool            FVisualforce_Specified;
  UnicodeString   FWorkflow;
  bool            FWorkflow_Specified;
  UnicodeString __fastcall GetApexCode(int Index)
  {  return FApexCode;  }
  void __fastcall SetApexCode(int Index, UnicodeString _prop_val)
  {  FApexCode = _prop_val; FApexCode_Specified = true;  }
  bool __fastcall ApexCode_Specified(int Index)
  {  return FApexCode_Specified;  } 
  UnicodeString __fastcall GetApexProfiling(int Index)
  {  return FApexProfiling;  }
  void __fastcall SetApexProfiling(int Index, UnicodeString _prop_val)
  {  FApexProfiling = _prop_val; FApexProfiling_Specified = true;  }
  bool __fastcall ApexProfiling_Specified(int Index)
  {  return FApexProfiling_Specified;  } 
  UnicodeString __fastcall GetCallout(int Index)
  {  return FCallout;  }
  void __fastcall SetCallout(int Index, UnicodeString _prop_val)
  {  FCallout = _prop_val; FCallout_Specified = true;  }
  bool __fastcall Callout_Specified(int Index)
  {  return FCallout_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDatabase(int Index)
  {  return FDatabase;  }
  void __fastcall SetDatabase(int Index, UnicodeString _prop_val)
  {  FDatabase = _prop_val; FDatabase_Specified = true;  }
  bool __fastcall Database_Specified(int Index)
  {  return FDatabase_Specified;  } 
  TXSDateTime* __fastcall GetExpirationDate(int Index)
  {  return FExpirationDate;  }
  void __fastcall SetExpirationDate(int Index, TXSDateTime* _prop_val)
  {  FExpirationDate = _prop_val; FExpirationDate_Specified = true;  }
  bool __fastcall ExpirationDate_Specified(int Index)
  {  return FExpirationDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  User* __fastcall GetScope(int Index)
  {  return FScope;  }
  void __fastcall SetScope(int Index, User* _prop_val)
  {  FScope = _prop_val; FScope_Specified = true;  }
  bool __fastcall Scope_Specified(int Index)
  {  return FScope_Specified;  } 
  ID __fastcall GetScopeId(int Index)
  {  return FScopeId;  }
  void __fastcall SetScopeId(int Index, ID _prop_val)
  {  FScopeId = _prop_val; FScopeId_Specified = true;  }
  bool __fastcall ScopeId_Specified(int Index)
  {  return FScopeId_Specified;  } 
  UnicodeString __fastcall GetSystem(int Index)
  {  return FSystem;  }
  void __fastcall SetSystem(int Index, UnicodeString _prop_val)
  {  FSystem = _prop_val; FSystem_Specified = true;  }
  bool __fastcall System_Specified(int Index)
  {  return FSystem_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  Name_* __fastcall GetTracedEntity(int Index)
  {  return FTracedEntity;  }
  void __fastcall SetTracedEntity(int Index, Name_* _prop_val)
  {  FTracedEntity = _prop_val; FTracedEntity_Specified = true;  }
  bool __fastcall TracedEntity_Specified(int Index)
  {  return FTracedEntity_Specified;  } 
  ID __fastcall GetTracedEntityId(int Index)
  {  return FTracedEntityId;  }
  void __fastcall SetTracedEntityId(int Index, ID _prop_val)
  {  FTracedEntityId = _prop_val; FTracedEntityId_Specified = true;  }
  bool __fastcall TracedEntityId_Specified(int Index)
  {  return FTracedEntityId_Specified;  } 
  UnicodeString __fastcall GetValidation(int Index)
  {  return FValidation;  }
  void __fastcall SetValidation(int Index, UnicodeString _prop_val)
  {  FValidation = _prop_val; FValidation_Specified = true;  }
  bool __fastcall Validation_Specified(int Index)
  {  return FValidation_Specified;  } 
  UnicodeString __fastcall GetVisualforce(int Index)
  {  return FVisualforce;  }
  void __fastcall SetVisualforce(int Index, UnicodeString _prop_val)
  {  FVisualforce = _prop_val; FVisualforce_Specified = true;  }
  bool __fastcall Visualforce_Specified(int Index)
  {  return FVisualforce_Specified;  } 
  UnicodeString __fastcall GetWorkflow(int Index)
  {  return FWorkflow;  }
  void __fastcall SetWorkflow(int Index, UnicodeString _prop_val)
  {  FWorkflow = _prop_val; FWorkflow_Specified = true;  }
  bool __fastcall Workflow_Specified(int Index)
  {  return FWorkflow_Specified;  } 

public:
  __fastcall ~TraceFlag();
__published:
  __property UnicodeString   ApexCode = { index=(IS_OPTN|IS_NLBL), read=FApexCode, write=SetApexCode, stored = ApexCode_Specified };
  __property UnicodeString ApexProfiling = { index=(IS_OPTN|IS_NLBL), read=FApexProfiling, write=SetApexProfiling, stored = ApexProfiling_Specified };
  __property UnicodeString    Callout = { index=(IS_OPTN|IS_NLBL), read=FCallout, write=SetCallout, stored = Callout_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString   Database = { index=(IS_OPTN|IS_NLBL), read=FDatabase, write=SetDatabase, stored = Database_Specified };
  __property TXSDateTime* ExpirationDate = { index=(IS_OPTN|IS_NLBL), read=FExpirationDate, write=SetExpirationDate, stored = ExpirationDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property User*           Scope = { index=(IS_OPTN|IS_NLBL), read=FScope, write=SetScope, stored = Scope_Specified };
  __property ID            ScopeId = { index=(IS_OPTN|IS_NLBL), read=FScopeId, write=SetScopeId, stored = ScopeId_Specified };
  __property UnicodeString     System = { index=(IS_OPTN|IS_NLBL), read=FSystem, write=SetSystem, stored = System_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property Name_*      TracedEntity = { index=(IS_OPTN|IS_NLBL), read=FTracedEntity, write=SetTracedEntity, stored = TracedEntity_Specified };
  __property ID         TracedEntityId = { index=(IS_OPTN|IS_NLBL), read=FTracedEntityId, write=SetTracedEntityId, stored = TracedEntityId_Specified };
  __property UnicodeString Validation = { index=(IS_OPTN|IS_NLBL), read=FValidation, write=SetValidation, stored = Validation_Specified };
  __property UnicodeString Visualforce = { index=(IS_OPTN|IS_NLBL), read=FVisualforce, write=SetVisualforce, stored = Visualforce_Specified };
  __property UnicodeString   Workflow = { index=(IS_OPTN|IS_NLBL), read=FWorkflow, write=SetWorkflow, stored = Workflow_Specified };
};




// ************************************************************************ //
// XML       : Time__c_, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Time__c_ : public sObject {
private:
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  double          FBreaktime__c;
  bool            FBreaktime__c_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  ID              FDay__c_;
  bool            FDay__c__Specified;
  Day__c_*         FDay__r;
  bool            FDay__r_Specified;
  TXSDateTime*    FEnd_Time__c;
  bool            FEnd_Time__c_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  double          FHourly_Rate__c;
  bool            FHourly_Rate__c_Specified;
  double          FHours__c;
  bool            FHours__c_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  QueryResult*    FNotes;
  bool            FNotes_Specified;
  QueryResult*    FNotesAndAttachments;
  bool            FNotesAndAttachments_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  ID              FStaff__c_;
  bool            FStaff__c__Specified;
  Staff__c_*       FStaff__r;
  bool            FStaff__r_Specified;
  TXSDateTime*    FStart_Date__c;
  bool            FStart_Date__c_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  double __fastcall GetBreaktime__c(int Index)
  {  return FBreaktime__c;  }
  void __fastcall SetBreaktime__c(int Index, double _prop_val)
  {  FBreaktime__c = _prop_val; FBreaktime__c_Specified = true;  }
  bool __fastcall Breaktime__c_Specified(int Index)
  {  return FBreaktime__c_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  ID __fastcall GetDay__c_(int Index)
  {  return FDay__c_;  }
  void __fastcall SetDay__c_(int Index, ID _prop_val)
  {  FDay__c_ = _prop_val; FDay__c__Specified = true;  }
  bool __fastcall Day__c__Specified(int Index)
  {  return FDay__c__Specified;  } 
  Day__c_* __fastcall GetDay__r(int Index)
  {  return FDay__r;  }
  void __fastcall SetDay__r(int Index, Day__c_* _prop_val)
  {  FDay__r = _prop_val; FDay__r_Specified = true;  }
  bool __fastcall Day__r_Specified(int Index)
  {  return FDay__r_Specified;  } 
  TXSDateTime* __fastcall GetEnd_Time__c_(int Index)
  {  return FEnd_Time__c;  }
  void __fastcall SetEnd_Time__c_(int Index, TXSDateTime* _prop_val)
  {  FEnd_Time__c = _prop_val; FEnd_Time__c_Specified = true;  }
  bool __fastcall End_Time__c_Specified(int Index)
  {  return FEnd_Time__c_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  double __fastcall GetHourly_Rate__c(int Index)
  {  return FHourly_Rate__c;  }
  void __fastcall SetHourly_Rate__c(int Index, double _prop_val)
  {  FHourly_Rate__c = _prop_val; FHourly_Rate__c_Specified = true;  }
  bool __fastcall Hourly_Rate__c_Specified(int Index)
  {  return FHourly_Rate__c_Specified;  } 
  double __fastcall GetHours__c(int Index)
  {  return FHours__c;  }
  void __fastcall SetHours__c(int Index, double _prop_val)
  {  FHours__c = _prop_val; FHours__c_Specified = true;  }
  bool __fastcall Hours__c_Specified(int Index)
  {  return FHours__c_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  QueryResult* __fastcall GetNotes(int Index)
  {  return FNotes;  }
  void __fastcall SetNotes(int Index, QueryResult* _prop_val)
  {  FNotes = _prop_val; FNotes_Specified = true;  }
  bool __fastcall Notes_Specified(int Index)
  {  return FNotes_Specified;  } 
  QueryResult* __fastcall GetNotesAndAttachments(int Index)
  {  return FNotesAndAttachments;  }
  void __fastcall SetNotesAndAttachments(int Index, QueryResult* _prop_val)
  {  FNotesAndAttachments = _prop_val; FNotesAndAttachments_Specified = true;  }
  bool __fastcall NotesAndAttachments_Specified(int Index)
  {  return FNotesAndAttachments_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  ID __fastcall GetStaff__c_(int Index)
  {  return FStaff__c_;  }
  void __fastcall SetStaff__c_(int Index, ID _prop_val)
  {  FStaff__c_ = _prop_val; FStaff__c__Specified = true;  }
  bool __fastcall Staff__c__Specified(int Index)
  {  return FStaff__c__Specified;  } 
  Staff__c_* __fastcall GetStaff__r(int Index)
  {  return FStaff__r;  }
  void __fastcall SetStaff__r(int Index, Staff__c_* _prop_val)
  {  FStaff__r = _prop_val; FStaff__r_Specified = true;  }
  bool __fastcall Staff__r_Specified(int Index)
  {  return FStaff__r_Specified;  } 
  TXSDateTime* __fastcall GetStart_Date__c(int Index)
  {  return FStart_Date__c;  }
  void __fastcall SetStart_Date__c(int Index, TXSDateTime* _prop_val)
  {  FStart_Date__c = _prop_val; FStart_Date__c_Specified = true;  }
  bool __fastcall Start_Date__c_Specified(int Index)
  {  return FStart_Date__c_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~Time__c_();
__published:
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property double     Breaktime__c = { index=(IS_OPTN|IS_NLBL), read=FBreaktime__c, write=SetBreaktime__c, stored = Breaktime__c_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property ID             Day__c = { index=(IS_OPTN|IS_NLBL), read=FDay__c_, write=SetDay__c_, stored = Day__c__Specified };
  __property Day__c_*        Day__r = { index=(IS_OPTN|IS_NLBL), read=FDay__r, write=SetDay__r, stored = Day__r_Specified };
  __property TXSDateTime* End_Time__c = { index=(IS_OPTN|IS_NLBL), read=FEnd_Time__c, write=SetEnd_Time__c_, stored = End_Time__c_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property double     Hourly_Rate__c = { index=(IS_OPTN|IS_NLBL), read=FHourly_Rate__c, write=SetHourly_Rate__c, stored = Hourly_Rate__c_Specified };
  __property double       Hours__c = { index=(IS_OPTN|IS_NLBL), read=FHours__c, write=SetHours__c, stored = Hours__c_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property QueryResult*      Notes = { index=(IS_OPTN|IS_NLBL), read=FNotes, write=SetNotes, stored = Notes_Specified };
  __property QueryResult* NotesAndAttachments = { index=(IS_OPTN|IS_NLBL), read=FNotesAndAttachments, write=SetNotesAndAttachments, stored = NotesAndAttachments_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property ID           Staff__c = { index=(IS_OPTN|IS_NLBL), read=FStaff__c_, write=SetStaff__c_, stored = Staff__c__Specified };
  __property Staff__c_*    Staff__r = { index=(IS_OPTN|IS_NLBL), read=FStaff__r, write=SetStaff__r, stored = Staff__r_Specified };
  __property TXSDateTime* Start_Date__c = { index=(IS_OPTN|IS_NLBL), read=FStart_Date__c, write=SetStart_Date__c, stored = Start_Date__c_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : TaskStatus, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class TaskStatus : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsClosed;
  bool            FIsClosed_Specified;
  bool            FIsDefault;
  bool            FIsDefault_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FMasterLabel;
  bool            FMasterLabel_Specified;
  int             FSortOrder;
  bool            FSortOrder_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsClosed(int Index)
  {  return FIsClosed;  }
  void __fastcall SetIsClosed(int Index, bool _prop_val)
  {  FIsClosed = _prop_val; FIsClosed_Specified = true;  }
  bool __fastcall IsClosed_Specified(int Index)
  {  return FIsClosed_Specified;  } 
  bool __fastcall GetIsDefault(int Index)
  {  return FIsDefault;  }
  void __fastcall SetIsDefault(int Index, bool _prop_val)
  {  FIsDefault = _prop_val; FIsDefault_Specified = true;  }
  bool __fastcall IsDefault_Specified(int Index)
  {  return FIsDefault_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetMasterLabel(int Index)
  {  return FMasterLabel;  }
  void __fastcall SetMasterLabel(int Index, UnicodeString _prop_val)
  {  FMasterLabel = _prop_val; FMasterLabel_Specified = true;  }
  bool __fastcall MasterLabel_Specified(int Index)
  {  return FMasterLabel_Specified;  } 
  int __fastcall GetSortOrder(int Index)
  {  return FSortOrder;  }
  void __fastcall SetSortOrder(int Index, int _prop_val)
  {  FSortOrder = _prop_val; FSortOrder_Specified = true;  }
  bool __fastcall SortOrder_Specified(int Index)
  {  return FSortOrder_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~TaskStatus();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool         IsClosed = { index=(IS_OPTN|IS_NLBL), read=FIsClosed, write=SetIsClosed, stored = IsClosed_Specified };
  __property bool        IsDefault = { index=(IS_OPTN|IS_NLBL), read=FIsDefault, write=SetIsDefault, stored = IsDefault_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString MasterLabel = { index=(IS_OPTN|IS_NLBL), read=FMasterLabel, write=SetMasterLabel, stored = MasterLabel_Specified };
  __property int         SortOrder = { index=(IS_OPTN|IS_NLBL), read=FSortOrder, write=SetSortOrder, stored = SortOrder_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : TaskPriority, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class TaskPriority : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDefault;
  bool            FIsDefault_Specified;
  bool            FIsHighPriority;
  bool            FIsHighPriority_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FMasterLabel;
  bool            FMasterLabel_Specified;
  int             FSortOrder;
  bool            FSortOrder_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDefault(int Index)
  {  return FIsDefault;  }
  void __fastcall SetIsDefault(int Index, bool _prop_val)
  {  FIsDefault = _prop_val; FIsDefault_Specified = true;  }
  bool __fastcall IsDefault_Specified(int Index)
  {  return FIsDefault_Specified;  } 
  bool __fastcall GetIsHighPriority(int Index)
  {  return FIsHighPriority;  }
  void __fastcall SetIsHighPriority(int Index, bool _prop_val)
  {  FIsHighPriority = _prop_val; FIsHighPriority_Specified = true;  }
  bool __fastcall IsHighPriority_Specified(int Index)
  {  return FIsHighPriority_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetMasterLabel(int Index)
  {  return FMasterLabel;  }
  void __fastcall SetMasterLabel(int Index, UnicodeString _prop_val)
  {  FMasterLabel = _prop_val; FMasterLabel_Specified = true;  }
  bool __fastcall MasterLabel_Specified(int Index)
  {  return FMasterLabel_Specified;  } 
  int __fastcall GetSortOrder(int Index)
  {  return FSortOrder;  }
  void __fastcall SetSortOrder(int Index, int _prop_val)
  {  FSortOrder = _prop_val; FSortOrder_Specified = true;  }
  bool __fastcall SortOrder_Specified(int Index)
  {  return FSortOrder_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~TaskPriority();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDefault = { index=(IS_OPTN|IS_NLBL), read=FIsDefault, write=SetIsDefault, stored = IsDefault_Specified };
  __property bool       IsHighPriority = { index=(IS_OPTN|IS_NLBL), read=FIsHighPriority, write=SetIsHighPriority, stored = IsHighPriority_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString MasterLabel = { index=(IS_OPTN|IS_NLBL), read=FMasterLabel, write=SetMasterLabel, stored = MasterLabel_Specified };
  __property int         SortOrder = { index=(IS_OPTN|IS_NLBL), read=FSortOrder, write=SetSortOrder, stored = SortOrder_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : TaskFeed, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class TaskFeed : public sObject {
private:
  UnicodeString   FBody;
  bool            FBody_Specified;
  int             FCommentCount;
  bool            FCommentCount_Specified;
  TByteDynArray   FContentData;
  bool            FContentData_Specified;
  UnicodeString   FContentDescription;
  bool            FContentDescription_Specified;
  UnicodeString   FContentFileName;
  bool            FContentFileName_Specified;
  int             FContentSize;
  bool            FContentSize_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedComments;
  bool            FFeedComments_Specified;
  QueryResult*    FFeedLikes;
  bool            FFeedLikes_Specified;
  QueryResult*    FFeedTrackedChanges;
  bool            FFeedTrackedChanges_Specified;
  Name_*           FInsertedBy;
  bool            FInsertedBy_Specified;
  ID              FInsertedById;
  bool            FInsertedById_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLikeCount;
  bool            FLikeCount_Specified;
  UnicodeString   FLinkUrl;
  bool            FLinkUrl_Specified;
  Task*           FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FRelatedRecordId;
  bool            FRelatedRecordId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetCommentCount(int Index)
  {  return FCommentCount;  }
  void __fastcall SetCommentCount(int Index, int _prop_val)
  {  FCommentCount = _prop_val; FCommentCount_Specified = true;  }
  bool __fastcall CommentCount_Specified(int Index)
  {  return FCommentCount_Specified;  } 
  TByteDynArray __fastcall GetContentData(int Index)
  {  return FContentData;  }
  void __fastcall SetContentData(int Index, TByteDynArray _prop_val)
  {  FContentData = _prop_val; FContentData_Specified = true;  }
  bool __fastcall ContentData_Specified(int Index)
  {  return FContentData_Specified;  } 
  UnicodeString __fastcall GetContentDescription(int Index)
  {  return FContentDescription;  }
  void __fastcall SetContentDescription(int Index, UnicodeString _prop_val)
  {  FContentDescription = _prop_val; FContentDescription_Specified = true;  }
  bool __fastcall ContentDescription_Specified(int Index)
  {  return FContentDescription_Specified;  } 
  UnicodeString __fastcall GetContentFileName(int Index)
  {  return FContentFileName;  }
  void __fastcall SetContentFileName(int Index, UnicodeString _prop_val)
  {  FContentFileName = _prop_val; FContentFileName_Specified = true;  }
  bool __fastcall ContentFileName_Specified(int Index)
  {  return FContentFileName_Specified;  } 
  int __fastcall GetContentSize(int Index)
  {  return FContentSize;  }
  void __fastcall SetContentSize(int Index, int _prop_val)
  {  FContentSize = _prop_val; FContentSize_Specified = true;  }
  bool __fastcall ContentSize_Specified(int Index)
  {  return FContentSize_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedComments(int Index)
  {  return FFeedComments;  }
  void __fastcall SetFeedComments(int Index, QueryResult* _prop_val)
  {  FFeedComments = _prop_val; FFeedComments_Specified = true;  }
  bool __fastcall FeedComments_Specified(int Index)
  {  return FFeedComments_Specified;  } 
  QueryResult* __fastcall GetFeedLikes(int Index)
  {  return FFeedLikes;  }
  void __fastcall SetFeedLikes(int Index, QueryResult* _prop_val)
  {  FFeedLikes = _prop_val; FFeedLikes_Specified = true;  }
  bool __fastcall FeedLikes_Specified(int Index)
  {  return FFeedLikes_Specified;  } 
  QueryResult* __fastcall GetFeedTrackedChanges(int Index)
  {  return FFeedTrackedChanges;  }
  void __fastcall SetFeedTrackedChanges(int Index, QueryResult* _prop_val)
  {  FFeedTrackedChanges = _prop_val; FFeedTrackedChanges_Specified = true;  }
  bool __fastcall FeedTrackedChanges_Specified(int Index)
  {  return FFeedTrackedChanges_Specified;  } 
  Name_* __fastcall GetInsertedBy(int Index)
  {  return FInsertedBy;  }
  void __fastcall SetInsertedBy(int Index, Name_* _prop_val)
  {  FInsertedBy = _prop_val; FInsertedBy_Specified = true;  }
  bool __fastcall InsertedBy_Specified(int Index)
  {  return FInsertedBy_Specified;  } 
  ID __fastcall GetInsertedById(int Index)
  {  return FInsertedById;  }
  void __fastcall SetInsertedById(int Index, ID _prop_val)
  {  FInsertedById = _prop_val; FInsertedById_Specified = true;  }
  bool __fastcall InsertedById_Specified(int Index)
  {  return FInsertedById_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLikeCount(int Index)
  {  return FLikeCount;  }
  void __fastcall SetLikeCount(int Index, int _prop_val)
  {  FLikeCount = _prop_val; FLikeCount_Specified = true;  }
  bool __fastcall LikeCount_Specified(int Index)
  {  return FLikeCount_Specified;  } 
  UnicodeString __fastcall GetLinkUrl(int Index)
  {  return FLinkUrl;  }
  void __fastcall SetLinkUrl(int Index, UnicodeString _prop_val)
  {  FLinkUrl = _prop_val; FLinkUrl_Specified = true;  }
  bool __fastcall LinkUrl_Specified(int Index)
  {  return FLinkUrl_Specified;  } 
  Task* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Task* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetRelatedRecordId(int Index)
  {  return FRelatedRecordId;  }
  void __fastcall SetRelatedRecordId(int Index, ID _prop_val)
  {  FRelatedRecordId = _prop_val; FRelatedRecordId_Specified = true;  }
  bool __fastcall RelatedRecordId_Specified(int Index)
  {  return FRelatedRecordId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~TaskFeed();
__published:
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        CommentCount = { index=(IS_OPTN|IS_NLBL), read=FCommentCount, write=SetCommentCount, stored = CommentCount_Specified };
  __property TByteDynArray ContentData = { index=(IS_OPTN|IS_NLBL), read=FContentData, write=SetContentData, stored = ContentData_Specified };
  __property UnicodeString ContentDescription = { index=(IS_OPTN|IS_NLBL), read=FContentDescription, write=SetContentDescription, stored = ContentDescription_Specified };
  __property UnicodeString ContentFileName = { index=(IS_OPTN|IS_NLBL), read=FContentFileName, write=SetContentFileName, stored = ContentFileName_Specified };
  __property int        ContentSize = { index=(IS_OPTN|IS_NLBL), read=FContentSize, write=SetContentSize, stored = ContentSize_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedComments = { index=(IS_OPTN|IS_NLBL), read=FFeedComments, write=SetFeedComments, stored = FeedComments_Specified };
  __property QueryResult*  FeedLikes = { index=(IS_OPTN|IS_NLBL), read=FFeedLikes, write=SetFeedLikes, stored = FeedLikes_Specified };
  __property QueryResult* FeedTrackedChanges = { index=(IS_OPTN|IS_NLBL), read=FFeedTrackedChanges, write=SetFeedTrackedChanges, stored = FeedTrackedChanges_Specified };
  __property Name_*      InsertedBy = { index=(IS_OPTN|IS_NLBL), read=FInsertedBy, write=SetInsertedBy, stored = InsertedBy_Specified };
  __property ID         InsertedById = { index=(IS_OPTN|IS_NLBL), read=FInsertedById, write=SetInsertedById, stored = InsertedById_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int         LikeCount = { index=(IS_OPTN|IS_NLBL), read=FLikeCount, write=SetLikeCount, stored = LikeCount_Specified };
  __property UnicodeString    LinkUrl = { index=(IS_OPTN|IS_NLBL), read=FLinkUrl, write=SetLinkUrl, stored = LinkUrl_Specified };
  __property Task*          Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         RelatedRecordId = { index=(IS_OPTN|IS_NLBL), read=FRelatedRecordId, write=SetRelatedRecordId, stored = RelatedRecordId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : StaticResource, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class StaticResource : public sObject {
private:
  TByteDynArray   FBody;
  bool            FBody_Specified;
  int             FBodyLength;
  bool            FBodyLength_Specified;
  UnicodeString   FCacheControl;
  bool            FCacheControl_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  UnicodeString   FNamespacePrefix;
  bool            FNamespacePrefix_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  TByteDynArray __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, TByteDynArray _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetBodyLength(int Index)
  {  return FBodyLength;  }
  void __fastcall SetBodyLength(int Index, int _prop_val)
  {  FBodyLength = _prop_val; FBodyLength_Specified = true;  }
  bool __fastcall BodyLength_Specified(int Index)
  {  return FBodyLength_Specified;  } 
  UnicodeString __fastcall GetCacheControl(int Index)
  {  return FCacheControl;  }
  void __fastcall SetCacheControl(int Index, UnicodeString _prop_val)
  {  FCacheControl = _prop_val; FCacheControl_Specified = true;  }
  bool __fastcall CacheControl_Specified(int Index)
  {  return FCacheControl_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  UnicodeString __fastcall GetNamespacePrefix(int Index)
  {  return FNamespacePrefix;  }
  void __fastcall SetNamespacePrefix(int Index, UnicodeString _prop_val)
  {  FNamespacePrefix = _prop_val; FNamespacePrefix_Specified = true;  }
  bool __fastcall NamespacePrefix_Specified(int Index)
  {  return FNamespacePrefix_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~StaticResource();
__published:
  __property TByteDynArray       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        BodyLength = { index=(IS_OPTN|IS_NLBL), read=FBodyLength, write=SetBodyLength, stored = BodyLength_Specified };
  __property UnicodeString CacheControl = { index=(IS_OPTN|IS_NLBL), read=FCacheControl, write=SetCacheControl, stored = CacheControl_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property UnicodeString NamespacePrefix = { index=(IS_OPTN|IS_NLBL), read=FNamespacePrefix, write=SetNamespacePrefix, stored = NamespacePrefix_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : Staff__c_, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Staff__c_ : public sObject {
private:
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  QueryResult*    FNotes;
  bool            FNotes_Specified;
  QueryResult*    FNotesAndAttachments;
  bool            FNotesAndAttachments_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  ID              FSite__c_;
  bool            FSite__c__Specified;
  Site__c_*        FSite__r;
  bool            FSite__r_Specified;
  ID              FStaff_Title__c_;
  bool            FStaff_Title__c__Specified;
  Staff_Title__c_* FStaff_Title__r;
  bool            FStaff_Title__r_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  QueryResult*    FTimes__r;
  bool            FTimes__r_Specified;
  QueryResult*    FTransactions__r;
  bool            FTransactions__r_Specified;
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  QueryResult* __fastcall GetNotes(int Index)
  {  return FNotes;  }
  void __fastcall SetNotes(int Index, QueryResult* _prop_val)
  {  FNotes = _prop_val; FNotes_Specified = true;  }
  bool __fastcall Notes_Specified(int Index)
  {  return FNotes_Specified;  } 
  QueryResult* __fastcall GetNotesAndAttachments(int Index)
  {  return FNotesAndAttachments;  }
  void __fastcall SetNotesAndAttachments(int Index, QueryResult* _prop_val)
  {  FNotesAndAttachments = _prop_val; FNotesAndAttachments_Specified = true;  }
  bool __fastcall NotesAndAttachments_Specified(int Index)
  {  return FNotesAndAttachments_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  ID __fastcall GetSite__c_(int Index)
  {  return FSite__c_;  }
  void __fastcall SetSite__c_(int Index, ID _prop_val)
  {  FSite__c_ = _prop_val; FSite__c__Specified = true;  }
  bool __fastcall Site__c__Specified(int Index)
  {  return FSite__c__Specified;  } 
  Site__c_* __fastcall GetSite__r(int Index)
  {  return FSite__r;  }
  void __fastcall SetSite__r(int Index, Site__c_* _prop_val)
  {  FSite__r = _prop_val; FSite__r_Specified = true;  }
  bool __fastcall Site__r_Specified(int Index)
  {  return FSite__r_Specified;  } 
  ID __fastcall GetStaff_Title__c_(int Index)
  {  return FStaff_Title__c_;  }
  void __fastcall SetStaff_Title__c_(int Index, ID _prop_val)
  {  FStaff_Title__c_ = _prop_val; FStaff_Title__c__Specified = true;  }
  bool __fastcall Staff_Title__c__Specified(int Index)
  {  return FStaff_Title__c__Specified;  } 
  Staff_Title__c_* __fastcall GetStaff_Title__r(int Index)
  {  return FStaff_Title__r;  }
  void __fastcall SetStaff_Title__r(int Index, Staff_Title__c_* _prop_val)
  {  FStaff_Title__r = _prop_val; FStaff_Title__r_Specified = true;  }
  bool __fastcall Staff_Title__r_Specified(int Index)
  {  return FStaff_Title__r_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  QueryResult* __fastcall GetTimes__r(int Index)
  {  return FTimes__r;  }
  void __fastcall SetTimes__r(int Index, QueryResult* _prop_val)
  {  FTimes__r = _prop_val; FTimes__r_Specified = true;  }
  bool __fastcall Times__r_Specified(int Index)
  {  return FTimes__r_Specified;  } 
  QueryResult* __fastcall GetTransactions__r(int Index)
  {  return FTransactions__r;  }
  void __fastcall SetTransactions__r(int Index, QueryResult* _prop_val)
  {  FTransactions__r = _prop_val; FTransactions__r_Specified = true;  }
  bool __fastcall Transactions__r_Specified(int Index)
  {  return FTransactions__r_Specified;  } 

public:
  __fastcall ~Staff__c_();
__published:
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property QueryResult*      Notes = { index=(IS_OPTN|IS_NLBL), read=FNotes, write=SetNotes, stored = Notes_Specified };
  __property QueryResult* NotesAndAttachments = { index=(IS_OPTN|IS_NLBL), read=FNotesAndAttachments, write=SetNotesAndAttachments, stored = NotesAndAttachments_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property ID            Site__c = { index=(IS_OPTN|IS_NLBL), read=FSite__c_, write=SetSite__c_, stored = Site__c__Specified };
  __property Site__c_*      Site__r = { index=(IS_OPTN|IS_NLBL), read=FSite__r, write=SetSite__r, stored = Site__r_Specified };
  __property ID         Staff_Title__c = { index=(IS_OPTN|IS_NLBL), read=FStaff_Title__c_, write=SetStaff_Title__c_, stored = Staff_Title__c__Specified };
  __property Staff_Title__c_* Staff_Title__r = { index=(IS_OPTN|IS_NLBL), read=FStaff_Title__r, write=SetStaff_Title__r, stored = Staff_Title__r_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property QueryResult*   Times__r = { index=(IS_OPTN|IS_NLBL), read=FTimes__r, write=SetTimes__r, stored = Times__r_Specified };
  __property QueryResult* Transactions__r = { index=(IS_OPTN|IS_NLBL), read=FTransactions__r, write=SetTransactions__r, stored = Transactions__r_Specified };
};




// ************************************************************************ //
// XML       : Staff_Title__c_, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Staff_Title__c_ : public sObject {
private:
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  double          FCommision_Rate__c;
  bool            FCommision_Rate__c_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  double          FHourly_Rate__c;
  bool            FHourly_Rate__c_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  QueryResult*    FNotes;
  bool            FNotes_Specified;
  QueryResult*    FNotesAndAttachments;
  bool            FNotesAndAttachments_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  ID              FSite__c_;
  bool            FSite__c__Specified;
  Site__c_*        FSite__r;
  bool            FSite__r_Specified;
  QueryResult*    FStaff__r;
  bool            FStaff__r_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  double __fastcall GetCommision_Rate__c(int Index)
  {  return FCommision_Rate__c;  }
  void __fastcall SetCommision_Rate__c(int Index, double _prop_val)
  {  FCommision_Rate__c = _prop_val; FCommision_Rate__c_Specified = true;  }
  bool __fastcall Commision_Rate__c_Specified(int Index)
  {  return FCommision_Rate__c_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  double __fastcall GetHourly_Rate__c(int Index)
  {  return FHourly_Rate__c;  }
  void __fastcall SetHourly_Rate__c(int Index, double _prop_val)
  {  FHourly_Rate__c = _prop_val; FHourly_Rate__c_Specified = true;  }
  bool __fastcall Hourly_Rate__c_Specified(int Index)
  {  return FHourly_Rate__c_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  QueryResult* __fastcall GetNotes(int Index)
  {  return FNotes;  }
  void __fastcall SetNotes(int Index, QueryResult* _prop_val)
  {  FNotes = _prop_val; FNotes_Specified = true;  }
  bool __fastcall Notes_Specified(int Index)
  {  return FNotes_Specified;  } 
  QueryResult* __fastcall GetNotesAndAttachments(int Index)
  {  return FNotesAndAttachments;  }
  void __fastcall SetNotesAndAttachments(int Index, QueryResult* _prop_val)
  {  FNotesAndAttachments = _prop_val; FNotesAndAttachments_Specified = true;  }
  bool __fastcall NotesAndAttachments_Specified(int Index)
  {  return FNotesAndAttachments_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  ID __fastcall GetSite__c_(int Index)
  {  return FSite__c_;  }
  void __fastcall SetSite__c_(int Index, ID _prop_val)
  {  FSite__c_ = _prop_val; FSite__c__Specified = true;  }
  bool __fastcall Site__c__Specified(int Index)
  {  return FSite__c__Specified;  } 
  Site__c_* __fastcall GetSite__r(int Index)
  {  return FSite__r;  }
  void __fastcall SetSite__r(int Index, Site__c_* _prop_val)
  {  FSite__r = _prop_val; FSite__r_Specified = true;  }
  bool __fastcall Site__r_Specified(int Index)
  {  return FSite__r_Specified;  } 
  QueryResult* __fastcall GetStaff__r(int Index)
  {  return FStaff__r;  }
  void __fastcall SetStaff__r(int Index, QueryResult* _prop_val)
  {  FStaff__r = _prop_val; FStaff__r_Specified = true;  }
  bool __fastcall Staff__r_Specified(int Index)
  {  return FStaff__r_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~Staff_Title__c_();
__published:
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property double     Commision_Rate__c = { index=(IS_OPTN|IS_NLBL), read=FCommision_Rate__c, write=SetCommision_Rate__c, stored = Commision_Rate__c_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property double     Hourly_Rate__c = { index=(IS_OPTN|IS_NLBL), read=FHourly_Rate__c, write=SetHourly_Rate__c, stored = Hourly_Rate__c_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property QueryResult*      Notes = { index=(IS_OPTN|IS_NLBL), read=FNotes, write=SetNotes, stored = Notes_Specified };
  __property QueryResult* NotesAndAttachments = { index=(IS_OPTN|IS_NLBL), read=FNotesAndAttachments, write=SetNotesAndAttachments, stored = NotesAndAttachments_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property ID            Site__c = { index=(IS_OPTN|IS_NLBL), read=FSite__c_, write=SetSite__c_, stored = Site__c__Specified };
  __property Site__c_*      Site__r = { index=(IS_OPTN|IS_NLBL), read=FSite__r, write=SetSite__r, stored = Site__r_Specified };
  __property QueryResult*   Staff__r = { index=(IS_OPTN|IS_NLBL), read=FStaff__r, write=SetStaff__r, stored = Staff__r_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : SolutionStatus, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class SolutionStatus : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDefault;
  bool            FIsDefault_Specified;
  bool            FIsReviewed;
  bool            FIsReviewed_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FMasterLabel;
  bool            FMasterLabel_Specified;
  int             FSortOrder;
  bool            FSortOrder_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDefault(int Index)
  {  return FIsDefault;  }
  void __fastcall SetIsDefault(int Index, bool _prop_val)
  {  FIsDefault = _prop_val; FIsDefault_Specified = true;  }
  bool __fastcall IsDefault_Specified(int Index)
  {  return FIsDefault_Specified;  } 
  bool __fastcall GetIsReviewed(int Index)
  {  return FIsReviewed;  }
  void __fastcall SetIsReviewed(int Index, bool _prop_val)
  {  FIsReviewed = _prop_val; FIsReviewed_Specified = true;  }
  bool __fastcall IsReviewed_Specified(int Index)
  {  return FIsReviewed_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetMasterLabel(int Index)
  {  return FMasterLabel;  }
  void __fastcall SetMasterLabel(int Index, UnicodeString _prop_val)
  {  FMasterLabel = _prop_val; FMasterLabel_Specified = true;  }
  bool __fastcall MasterLabel_Specified(int Index)
  {  return FMasterLabel_Specified;  } 
  int __fastcall GetSortOrder(int Index)
  {  return FSortOrder;  }
  void __fastcall SetSortOrder(int Index, int _prop_val)
  {  FSortOrder = _prop_val; FSortOrder_Specified = true;  }
  bool __fastcall SortOrder_Specified(int Index)
  {  return FSortOrder_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~SolutionStatus();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDefault = { index=(IS_OPTN|IS_NLBL), read=FIsDefault, write=SetIsDefault, stored = IsDefault_Specified };
  __property bool       IsReviewed = { index=(IS_OPTN|IS_NLBL), read=FIsReviewed, write=SetIsReviewed, stored = IsReviewed_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString MasterLabel = { index=(IS_OPTN|IS_NLBL), read=FMasterLabel, write=SetMasterLabel, stored = MasterLabel_Specified };
  __property int         SortOrder = { index=(IS_OPTN|IS_NLBL), read=FSortOrder, write=SetSortOrder, stored = SortOrder_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : SolutionHistory, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class SolutionHistory : public sObject {
private:
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FField;
  bool            FField_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  Variant         FNewValue;
  bool            FNewValue_Specified;
  Variant         FOldValue;
  bool            FOldValue_Specified;
  Solution*       FSolution;
  bool            FSolution_Specified;
  ID              FSolutionId;
  bool            FSolutionId_Specified;
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetField(int Index)
  {  return FField;  }
  void __fastcall SetField(int Index, UnicodeString _prop_val)
  {  FField = _prop_val; FField_Specified = true;  }
  bool __fastcall Field_Specified(int Index)
  {  return FField_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  Variant __fastcall GetNewValue(int Index)
  {  return FNewValue;  }
  void __fastcall SetNewValue(int Index, Variant _prop_val)
  {  FNewValue = _prop_val; FNewValue_Specified = true;  }
  bool __fastcall NewValue_Specified(int Index)
  {  return FNewValue_Specified;  } 
  Variant __fastcall GetOldValue(int Index)
  {  return FOldValue;  }
  void __fastcall SetOldValue(int Index, Variant _prop_val)
  {  FOldValue = _prop_val; FOldValue_Specified = true;  }
  bool __fastcall OldValue_Specified(int Index)
  {  return FOldValue_Specified;  } 
  Solution* __fastcall GetSolution(int Index)
  {  return FSolution;  }
  void __fastcall SetSolution(int Index, Solution* _prop_val)
  {  FSolution = _prop_val; FSolution_Specified = true;  }
  bool __fastcall Solution_Specified(int Index)
  {  return FSolution_Specified;  } 
  ID __fastcall GetSolutionId(int Index)
  {  return FSolutionId;  }
  void __fastcall SetSolutionId(int Index, ID _prop_val)
  {  FSolutionId = _prop_val; FSolutionId_Specified = true;  }
  bool __fastcall SolutionId_Specified(int Index)
  {  return FSolutionId_Specified;  } 

public:
  __fastcall ~SolutionHistory();
__published:
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString      Field = { index=(IS_OPTN|IS_NLBL), read=FField, write=SetField, stored = Field_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property Variant      NewValue = { index=(IS_OPTN|IS_NLBL), read=FNewValue, write=SetNewValue, stored = NewValue_Specified };
  __property Variant      OldValue = { index=(IS_OPTN|IS_NLBL), read=FOldValue, write=SetOldValue, stored = OldValue_Specified };
  __property Solution*    Solution = { index=(IS_OPTN|IS_NLBL), read=FSolution, write=SetSolution, stored = Solution_Specified };
  __property ID         SolutionId = { index=(IS_OPTN|IS_NLBL), read=FSolutionId, write=SetSolutionId, stored = SolutionId_Specified };
};




// ************************************************************************ //
// XML       : SolutionFeed, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class SolutionFeed : public sObject {
private:
  UnicodeString   FBody;
  bool            FBody_Specified;
  int             FCommentCount;
  bool            FCommentCount_Specified;
  TByteDynArray   FContentData;
  bool            FContentData_Specified;
  UnicodeString   FContentDescription;
  bool            FContentDescription_Specified;
  UnicodeString   FContentFileName;
  bool            FContentFileName_Specified;
  int             FContentSize;
  bool            FContentSize_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedComments;
  bool            FFeedComments_Specified;
  QueryResult*    FFeedLikes;
  bool            FFeedLikes_Specified;
  QueryResult*    FFeedTrackedChanges;
  bool            FFeedTrackedChanges_Specified;
  Name_*           FInsertedBy;
  bool            FInsertedBy_Specified;
  ID              FInsertedById;
  bool            FInsertedById_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLikeCount;
  bool            FLikeCount_Specified;
  UnicodeString   FLinkUrl;
  bool            FLinkUrl_Specified;
  Solution*       FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FRelatedRecordId;
  bool            FRelatedRecordId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetCommentCount(int Index)
  {  return FCommentCount;  }
  void __fastcall SetCommentCount(int Index, int _prop_val)
  {  FCommentCount = _prop_val; FCommentCount_Specified = true;  }
  bool __fastcall CommentCount_Specified(int Index)
  {  return FCommentCount_Specified;  } 
  TByteDynArray __fastcall GetContentData(int Index)
  {  return FContentData;  }
  void __fastcall SetContentData(int Index, TByteDynArray _prop_val)
  {  FContentData = _prop_val; FContentData_Specified = true;  }
  bool __fastcall ContentData_Specified(int Index)
  {  return FContentData_Specified;  } 
  UnicodeString __fastcall GetContentDescription(int Index)
  {  return FContentDescription;  }
  void __fastcall SetContentDescription(int Index, UnicodeString _prop_val)
  {  FContentDescription = _prop_val; FContentDescription_Specified = true;  }
  bool __fastcall ContentDescription_Specified(int Index)
  {  return FContentDescription_Specified;  } 
  UnicodeString __fastcall GetContentFileName(int Index)
  {  return FContentFileName;  }
  void __fastcall SetContentFileName(int Index, UnicodeString _prop_val)
  {  FContentFileName = _prop_val; FContentFileName_Specified = true;  }
  bool __fastcall ContentFileName_Specified(int Index)
  {  return FContentFileName_Specified;  } 
  int __fastcall GetContentSize(int Index)
  {  return FContentSize;  }
  void __fastcall SetContentSize(int Index, int _prop_val)
  {  FContentSize = _prop_val; FContentSize_Specified = true;  }
  bool __fastcall ContentSize_Specified(int Index)
  {  return FContentSize_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedComments(int Index)
  {  return FFeedComments;  }
  void __fastcall SetFeedComments(int Index, QueryResult* _prop_val)
  {  FFeedComments = _prop_val; FFeedComments_Specified = true;  }
  bool __fastcall FeedComments_Specified(int Index)
  {  return FFeedComments_Specified;  } 
  QueryResult* __fastcall GetFeedLikes(int Index)
  {  return FFeedLikes;  }
  void __fastcall SetFeedLikes(int Index, QueryResult* _prop_val)
  {  FFeedLikes = _prop_val; FFeedLikes_Specified = true;  }
  bool __fastcall FeedLikes_Specified(int Index)
  {  return FFeedLikes_Specified;  } 
  QueryResult* __fastcall GetFeedTrackedChanges(int Index)
  {  return FFeedTrackedChanges;  }
  void __fastcall SetFeedTrackedChanges(int Index, QueryResult* _prop_val)
  {  FFeedTrackedChanges = _prop_val; FFeedTrackedChanges_Specified = true;  }
  bool __fastcall FeedTrackedChanges_Specified(int Index)
  {  return FFeedTrackedChanges_Specified;  } 
  Name_* __fastcall GetInsertedBy(int Index)
  {  return FInsertedBy;  }
  void __fastcall SetInsertedBy(int Index, Name_* _prop_val)
  {  FInsertedBy = _prop_val; FInsertedBy_Specified = true;  }
  bool __fastcall InsertedBy_Specified(int Index)
  {  return FInsertedBy_Specified;  } 
  ID __fastcall GetInsertedById(int Index)
  {  return FInsertedById;  }
  void __fastcall SetInsertedById(int Index, ID _prop_val)
  {  FInsertedById = _prop_val; FInsertedById_Specified = true;  }
  bool __fastcall InsertedById_Specified(int Index)
  {  return FInsertedById_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLikeCount(int Index)
  {  return FLikeCount;  }
  void __fastcall SetLikeCount(int Index, int _prop_val)
  {  FLikeCount = _prop_val; FLikeCount_Specified = true;  }
  bool __fastcall LikeCount_Specified(int Index)
  {  return FLikeCount_Specified;  } 
  UnicodeString __fastcall GetLinkUrl(int Index)
  {  return FLinkUrl;  }
  void __fastcall SetLinkUrl(int Index, UnicodeString _prop_val)
  {  FLinkUrl = _prop_val; FLinkUrl_Specified = true;  }
  bool __fastcall LinkUrl_Specified(int Index)
  {  return FLinkUrl_Specified;  } 
  Solution* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Solution* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetRelatedRecordId(int Index)
  {  return FRelatedRecordId;  }
  void __fastcall SetRelatedRecordId(int Index, ID _prop_val)
  {  FRelatedRecordId = _prop_val; FRelatedRecordId_Specified = true;  }
  bool __fastcall RelatedRecordId_Specified(int Index)
  {  return FRelatedRecordId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~SolutionFeed();
__published:
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        CommentCount = { index=(IS_OPTN|IS_NLBL), read=FCommentCount, write=SetCommentCount, stored = CommentCount_Specified };
  __property TByteDynArray ContentData = { index=(IS_OPTN|IS_NLBL), read=FContentData, write=SetContentData, stored = ContentData_Specified };
  __property UnicodeString ContentDescription = { index=(IS_OPTN|IS_NLBL), read=FContentDescription, write=SetContentDescription, stored = ContentDescription_Specified };
  __property UnicodeString ContentFileName = { index=(IS_OPTN|IS_NLBL), read=FContentFileName, write=SetContentFileName, stored = ContentFileName_Specified };
  __property int        ContentSize = { index=(IS_OPTN|IS_NLBL), read=FContentSize, write=SetContentSize, stored = ContentSize_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedComments = { index=(IS_OPTN|IS_NLBL), read=FFeedComments, write=SetFeedComments, stored = FeedComments_Specified };
  __property QueryResult*  FeedLikes = { index=(IS_OPTN|IS_NLBL), read=FFeedLikes, write=SetFeedLikes, stored = FeedLikes_Specified };
  __property QueryResult* FeedTrackedChanges = { index=(IS_OPTN|IS_NLBL), read=FFeedTrackedChanges, write=SetFeedTrackedChanges, stored = FeedTrackedChanges_Specified };
  __property Name_*      InsertedBy = { index=(IS_OPTN|IS_NLBL), read=FInsertedBy, write=SetInsertedBy, stored = InsertedBy_Specified };
  __property ID         InsertedById = { index=(IS_OPTN|IS_NLBL), read=FInsertedById, write=SetInsertedById, stored = InsertedById_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int         LikeCount = { index=(IS_OPTN|IS_NLBL), read=FLikeCount, write=SetLikeCount, stored = LikeCount_Specified };
  __property UnicodeString    LinkUrl = { index=(IS_OPTN|IS_NLBL), read=FLinkUrl, write=SetLinkUrl, stored = LinkUrl_Specified };
  __property Solution*      Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         RelatedRecordId = { index=(IS_OPTN|IS_NLBL), read=FRelatedRecordId, write=SetRelatedRecordId, stored = RelatedRecordId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : SiteHistory, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class SiteHistory : public sObject {
private:
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FField;
  bool            FField_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  Variant         FNewValue;
  bool            FNewValue_Specified;
  Variant         FOldValue;
  bool            FOldValue_Specified;
  Site*           FSite;
  bool            FSite_Specified;
  ID              FSiteId;
  bool            FSiteId_Specified;
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetField(int Index)
  {  return FField;  }
  void __fastcall SetField(int Index, UnicodeString _prop_val)
  {  FField = _prop_val; FField_Specified = true;  }
  bool __fastcall Field_Specified(int Index)
  {  return FField_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  Variant __fastcall GetNewValue(int Index)
  {  return FNewValue;  }
  void __fastcall SetNewValue(int Index, Variant _prop_val)
  {  FNewValue = _prop_val; FNewValue_Specified = true;  }
  bool __fastcall NewValue_Specified(int Index)
  {  return FNewValue_Specified;  } 
  Variant __fastcall GetOldValue(int Index)
  {  return FOldValue;  }
  void __fastcall SetOldValue(int Index, Variant _prop_val)
  {  FOldValue = _prop_val; FOldValue_Specified = true;  }
  bool __fastcall OldValue_Specified(int Index)
  {  return FOldValue_Specified;  } 
  Site* __fastcall GetSite(int Index)
  {  return FSite;  }
  void __fastcall SetSite(int Index, Site* _prop_val)
  {  FSite = _prop_val; FSite_Specified = true;  }
  bool __fastcall Site_Specified(int Index)
  {  return FSite_Specified;  } 
  ID __fastcall GetSiteId(int Index)
  {  return FSiteId;  }
  void __fastcall SetSiteId(int Index, ID _prop_val)
  {  FSiteId = _prop_val; FSiteId_Specified = true;  }
  bool __fastcall SiteId_Specified(int Index)
  {  return FSiteId_Specified;  } 

public:
  __fastcall ~SiteHistory();
__published:
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString      Field = { index=(IS_OPTN|IS_NLBL), read=FField, write=SetField, stored = Field_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property Variant      NewValue = { index=(IS_OPTN|IS_NLBL), read=FNewValue, write=SetNewValue, stored = NewValue_Specified };
  __property Variant      OldValue = { index=(IS_OPTN|IS_NLBL), read=FOldValue, write=SetOldValue, stored = OldValue_Specified };
  __property Site*            Site = { index=(IS_OPTN|IS_NLBL), read=FSite, write=SetSite, stored = Site_Specified };
  __property ID             SiteId = { index=(IS_OPTN|IS_NLBL), read=FSiteId, write=SetSiteId, stored = SiteId_Specified };
};




// ************************************************************************ //
// XML       : SiteFeed, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class SiteFeed : public sObject {
private:
  UnicodeString   FBody;
  bool            FBody_Specified;
  int             FCommentCount;
  bool            FCommentCount_Specified;
  TByteDynArray   FContentData;
  bool            FContentData_Specified;
  UnicodeString   FContentDescription;
  bool            FContentDescription_Specified;
  UnicodeString   FContentFileName;
  bool            FContentFileName_Specified;
  int             FContentSize;
  bool            FContentSize_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedComments;
  bool            FFeedComments_Specified;
  QueryResult*    FFeedLikes;
  bool            FFeedLikes_Specified;
  QueryResult*    FFeedTrackedChanges;
  bool            FFeedTrackedChanges_Specified;
  Name_*           FInsertedBy;
  bool            FInsertedBy_Specified;
  ID              FInsertedById;
  bool            FInsertedById_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLikeCount;
  bool            FLikeCount_Specified;
  UnicodeString   FLinkUrl;
  bool            FLinkUrl_Specified;
  Site*           FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FRelatedRecordId;
  bool            FRelatedRecordId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetCommentCount(int Index)
  {  return FCommentCount;  }
  void __fastcall SetCommentCount(int Index, int _prop_val)
  {  FCommentCount = _prop_val; FCommentCount_Specified = true;  }
  bool __fastcall CommentCount_Specified(int Index)
  {  return FCommentCount_Specified;  } 
  TByteDynArray __fastcall GetContentData(int Index)
  {  return FContentData;  }
  void __fastcall SetContentData(int Index, TByteDynArray _prop_val)
  {  FContentData = _prop_val; FContentData_Specified = true;  }
  bool __fastcall ContentData_Specified(int Index)
  {  return FContentData_Specified;  } 
  UnicodeString __fastcall GetContentDescription(int Index)
  {  return FContentDescription;  }
  void __fastcall SetContentDescription(int Index, UnicodeString _prop_val)
  {  FContentDescription = _prop_val; FContentDescription_Specified = true;  }
  bool __fastcall ContentDescription_Specified(int Index)
  {  return FContentDescription_Specified;  } 
  UnicodeString __fastcall GetContentFileName(int Index)
  {  return FContentFileName;  }
  void __fastcall SetContentFileName(int Index, UnicodeString _prop_val)
  {  FContentFileName = _prop_val; FContentFileName_Specified = true;  }
  bool __fastcall ContentFileName_Specified(int Index)
  {  return FContentFileName_Specified;  } 
  int __fastcall GetContentSize(int Index)
  {  return FContentSize;  }
  void __fastcall SetContentSize(int Index, int _prop_val)
  {  FContentSize = _prop_val; FContentSize_Specified = true;  }
  bool __fastcall ContentSize_Specified(int Index)
  {  return FContentSize_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedComments(int Index)
  {  return FFeedComments;  }
  void __fastcall SetFeedComments(int Index, QueryResult* _prop_val)
  {  FFeedComments = _prop_val; FFeedComments_Specified = true;  }
  bool __fastcall FeedComments_Specified(int Index)
  {  return FFeedComments_Specified;  } 
  QueryResult* __fastcall GetFeedLikes(int Index)
  {  return FFeedLikes;  }
  void __fastcall SetFeedLikes(int Index, QueryResult* _prop_val)
  {  FFeedLikes = _prop_val; FFeedLikes_Specified = true;  }
  bool __fastcall FeedLikes_Specified(int Index)
  {  return FFeedLikes_Specified;  } 
  QueryResult* __fastcall GetFeedTrackedChanges(int Index)
  {  return FFeedTrackedChanges;  }
  void __fastcall SetFeedTrackedChanges(int Index, QueryResult* _prop_val)
  {  FFeedTrackedChanges = _prop_val; FFeedTrackedChanges_Specified = true;  }
  bool __fastcall FeedTrackedChanges_Specified(int Index)
  {  return FFeedTrackedChanges_Specified;  } 
  Name_* __fastcall GetInsertedBy(int Index)
  {  return FInsertedBy;  }
  void __fastcall SetInsertedBy(int Index, Name_* _prop_val)
  {  FInsertedBy = _prop_val; FInsertedBy_Specified = true;  }
  bool __fastcall InsertedBy_Specified(int Index)
  {  return FInsertedBy_Specified;  } 
  ID __fastcall GetInsertedById(int Index)
  {  return FInsertedById;  }
  void __fastcall SetInsertedById(int Index, ID _prop_val)
  {  FInsertedById = _prop_val; FInsertedById_Specified = true;  }
  bool __fastcall InsertedById_Specified(int Index)
  {  return FInsertedById_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLikeCount(int Index)
  {  return FLikeCount;  }
  void __fastcall SetLikeCount(int Index, int _prop_val)
  {  FLikeCount = _prop_val; FLikeCount_Specified = true;  }
  bool __fastcall LikeCount_Specified(int Index)
  {  return FLikeCount_Specified;  } 
  UnicodeString __fastcall GetLinkUrl(int Index)
  {  return FLinkUrl;  }
  void __fastcall SetLinkUrl(int Index, UnicodeString _prop_val)
  {  FLinkUrl = _prop_val; FLinkUrl_Specified = true;  }
  bool __fastcall LinkUrl_Specified(int Index)
  {  return FLinkUrl_Specified;  } 
  Site* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Site* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetRelatedRecordId(int Index)
  {  return FRelatedRecordId;  }
  void __fastcall SetRelatedRecordId(int Index, ID _prop_val)
  {  FRelatedRecordId = _prop_val; FRelatedRecordId_Specified = true;  }
  bool __fastcall RelatedRecordId_Specified(int Index)
  {  return FRelatedRecordId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~SiteFeed();
__published:
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        CommentCount = { index=(IS_OPTN|IS_NLBL), read=FCommentCount, write=SetCommentCount, stored = CommentCount_Specified };
  __property TByteDynArray ContentData = { index=(IS_OPTN|IS_NLBL), read=FContentData, write=SetContentData, stored = ContentData_Specified };
  __property UnicodeString ContentDescription = { index=(IS_OPTN|IS_NLBL), read=FContentDescription, write=SetContentDescription, stored = ContentDescription_Specified };
  __property UnicodeString ContentFileName = { index=(IS_OPTN|IS_NLBL), read=FContentFileName, write=SetContentFileName, stored = ContentFileName_Specified };
  __property int        ContentSize = { index=(IS_OPTN|IS_NLBL), read=FContentSize, write=SetContentSize, stored = ContentSize_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedComments = { index=(IS_OPTN|IS_NLBL), read=FFeedComments, write=SetFeedComments, stored = FeedComments_Specified };
  __property QueryResult*  FeedLikes = { index=(IS_OPTN|IS_NLBL), read=FFeedLikes, write=SetFeedLikes, stored = FeedLikes_Specified };
  __property QueryResult* FeedTrackedChanges = { index=(IS_OPTN|IS_NLBL), read=FFeedTrackedChanges, write=SetFeedTrackedChanges, stored = FeedTrackedChanges_Specified };
  __property Name_*      InsertedBy = { index=(IS_OPTN|IS_NLBL), read=FInsertedBy, write=SetInsertedBy, stored = InsertedBy_Specified };
  __property ID         InsertedById = { index=(IS_OPTN|IS_NLBL), read=FInsertedById, write=SetInsertedById, stored = InsertedById_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int         LikeCount = { index=(IS_OPTN|IS_NLBL), read=FLikeCount, write=SetLikeCount, stored = LikeCount_Specified };
  __property UnicodeString    LinkUrl = { index=(IS_OPTN|IS_NLBL), read=FLinkUrl, write=SetLinkUrl, stored = LinkUrl_Specified };
  __property Site*          Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         RelatedRecordId = { index=(IS_OPTN|IS_NLBL), read=FRelatedRecordId, write=SetRelatedRecordId, stored = RelatedRecordId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : SiteDomain, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class SiteDomain : public sObject {
private:
  UnicodeString   FDomain;
  bool            FDomain_Specified;
  UnicodeString   FDomainType;
  bool            FDomainType_Specified;
  Site*           FSite;
  bool            FSite_Specified;
  ID              FSiteId;
  bool            FSiteId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString __fastcall GetDomain(int Index)
  {  return FDomain;  }
  void __fastcall SetDomain(int Index, UnicodeString _prop_val)
  {  FDomain = _prop_val; FDomain_Specified = true;  }
  bool __fastcall Domain_Specified(int Index)
  {  return FDomain_Specified;  } 
  UnicodeString __fastcall GetDomainType(int Index)
  {  return FDomainType;  }
  void __fastcall SetDomainType(int Index, UnicodeString _prop_val)
  {  FDomainType = _prop_val; FDomainType_Specified = true;  }
  bool __fastcall DomainType_Specified(int Index)
  {  return FDomainType_Specified;  } 
  Site* __fastcall GetSite(int Index)
  {  return FSite;  }
  void __fastcall SetSite(int Index, Site* _prop_val)
  {  FSite = _prop_val; FSite_Specified = true;  }
  bool __fastcall Site_Specified(int Index)
  {  return FSite_Specified;  } 
  ID __fastcall GetSiteId(int Index)
  {  return FSiteId;  }
  void __fastcall SetSiteId(int Index, ID _prop_val)
  {  FSiteId = _prop_val; FSiteId_Specified = true;  }
  bool __fastcall SiteId_Specified(int Index)
  {  return FSiteId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~SiteDomain();
__published:
  __property UnicodeString     Domain = { index=(IS_OPTN|IS_NLBL), read=FDomain, write=SetDomain, stored = Domain_Specified };
  __property UnicodeString DomainType = { index=(IS_OPTN|IS_NLBL), read=FDomainType, write=SetDomainType, stored = DomainType_Specified };
  __property Site*            Site = { index=(IS_OPTN|IS_NLBL), read=FSite, write=SetSite, stored = Site_Specified };
  __property ID             SiteId = { index=(IS_OPTN|IS_NLBL), read=FSiteId, write=SetSiteId, stored = SiteId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : Site, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Site : public sObject {
private:
  User*           FAdmin;
  bool            FAdmin_Specified;
  ID              FAdminId;
  bool            FAdminId_Specified;
  UnicodeString   FAnalyticsTrackingCode;
  bool            FAnalyticsTrackingCode_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  int             FDailyBandwidthLimit;
  bool            FDailyBandwidthLimit_Specified;
  int             FDailyBandwidthUsed;
  bool            FDailyBandwidthUsed_Specified;
  int             FDailyRequestTimeLimit;
  bool            FDailyRequestTimeLimit_Specified;
  int             FDailyRequestTimeUsed;
  bool            FDailyRequestTimeUsed_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  QueryResult*    FFeeds;
  bool            FFeeds_Specified;
  QueryResult*    FHistories;
  bool            FHistories_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FMasterLabel;
  bool            FMasterLabel_Specified;
  int             FMonthlyPageViewsEntitlement;
  bool            FMonthlyPageViewsEntitlement_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  bool            FOptionsAllowHomePage;
  bool            FOptionsAllowHomePage_Specified;
  bool            FOptionsAllowStandardAnswersPages;
  bool            FOptionsAllowStandardAnswersPages_Specified;
  bool            FOptionsAllowStandardIdeasPages;
  bool            FOptionsAllowStandardIdeasPages_Specified;
  bool            FOptionsAllowStandardLookups;
  bool            FOptionsAllowStandardLookups_Specified;
  bool            FOptionsAllowStandardSearch;
  bool            FOptionsAllowStandardSearch_Specified;
  bool            FOptionsEnableFeeds;
  bool            FOptionsEnableFeeds_Specified;
  QueryResult*    FSiteDomains;
  bool            FSiteDomains_Specified;
  UnicodeString   FSiteType;
  bool            FSiteType_Specified;
  UnicodeString   FStatus;
  bool            FStatus_Specified;
  UnicodeString   FSubdomain;
  bool            FSubdomain_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FUrlPathPrefix;
  bool            FUrlPathPrefix_Specified;
  User* __fastcall GetAdmin(int Index)
  {  return FAdmin;  }
  void __fastcall SetAdmin(int Index, User* _prop_val)
  {  FAdmin = _prop_val; FAdmin_Specified = true;  }
  bool __fastcall Admin_Specified(int Index)
  {  return FAdmin_Specified;  } 
  ID __fastcall GetAdminId(int Index)
  {  return FAdminId;  }
  void __fastcall SetAdminId(int Index, ID _prop_val)
  {  FAdminId = _prop_val; FAdminId_Specified = true;  }
  bool __fastcall AdminId_Specified(int Index)
  {  return FAdminId_Specified;  } 
  UnicodeString __fastcall GetAnalyticsTrackingCode(int Index)
  {  return FAnalyticsTrackingCode;  }
  void __fastcall SetAnalyticsTrackingCode(int Index, UnicodeString _prop_val)
  {  FAnalyticsTrackingCode = _prop_val; FAnalyticsTrackingCode_Specified = true;  }
  bool __fastcall AnalyticsTrackingCode_Specified(int Index)
  {  return FAnalyticsTrackingCode_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  int __fastcall GetDailyBandwidthLimit(int Index)
  {  return FDailyBandwidthLimit;  }
  void __fastcall SetDailyBandwidthLimit(int Index, int _prop_val)
  {  FDailyBandwidthLimit = _prop_val; FDailyBandwidthLimit_Specified = true;  }
  bool __fastcall DailyBandwidthLimit_Specified(int Index)
  {  return FDailyBandwidthLimit_Specified;  } 
  int __fastcall GetDailyBandwidthUsed(int Index)
  {  return FDailyBandwidthUsed;  }
  void __fastcall SetDailyBandwidthUsed(int Index, int _prop_val)
  {  FDailyBandwidthUsed = _prop_val; FDailyBandwidthUsed_Specified = true;  }
  bool __fastcall DailyBandwidthUsed_Specified(int Index)
  {  return FDailyBandwidthUsed_Specified;  } 
  int __fastcall GetDailyRequestTimeLimit(int Index)
  {  return FDailyRequestTimeLimit;  }
  void __fastcall SetDailyRequestTimeLimit(int Index, int _prop_val)
  {  FDailyRequestTimeLimit = _prop_val; FDailyRequestTimeLimit_Specified = true;  }
  bool __fastcall DailyRequestTimeLimit_Specified(int Index)
  {  return FDailyRequestTimeLimit_Specified;  } 
  int __fastcall GetDailyRequestTimeUsed(int Index)
  {  return FDailyRequestTimeUsed;  }
  void __fastcall SetDailyRequestTimeUsed(int Index, int _prop_val)
  {  FDailyRequestTimeUsed = _prop_val; FDailyRequestTimeUsed_Specified = true;  }
  bool __fastcall DailyRequestTimeUsed_Specified(int Index)
  {  return FDailyRequestTimeUsed_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  QueryResult* __fastcall GetFeeds(int Index)
  {  return FFeeds;  }
  void __fastcall SetFeeds(int Index, QueryResult* _prop_val)
  {  FFeeds = _prop_val; FFeeds_Specified = true;  }
  bool __fastcall Feeds_Specified(int Index)
  {  return FFeeds_Specified;  } 
  QueryResult* __fastcall GetHistories(int Index)
  {  return FHistories;  }
  void __fastcall SetHistories(int Index, QueryResult* _prop_val)
  {  FHistories = _prop_val; FHistories_Specified = true;  }
  bool __fastcall Histories_Specified(int Index)
  {  return FHistories_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetMasterLabel(int Index)
  {  return FMasterLabel;  }
  void __fastcall SetMasterLabel(int Index, UnicodeString _prop_val)
  {  FMasterLabel = _prop_val; FMasterLabel_Specified = true;  }
  bool __fastcall MasterLabel_Specified(int Index)
  {  return FMasterLabel_Specified;  } 
  int __fastcall GetMonthlyPageViewsEntitlement(int Index)
  {  return FMonthlyPageViewsEntitlement;  }
  void __fastcall SetMonthlyPageViewsEntitlement(int Index, int _prop_val)
  {  FMonthlyPageViewsEntitlement = _prop_val; FMonthlyPageViewsEntitlement_Specified = true;  }
  bool __fastcall MonthlyPageViewsEntitlement_Specified(int Index)
  {  return FMonthlyPageViewsEntitlement_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  bool __fastcall GetOptionsAllowHomePage(int Index)
  {  return FOptionsAllowHomePage;  }
  void __fastcall SetOptionsAllowHomePage(int Index, bool _prop_val)
  {  FOptionsAllowHomePage = _prop_val; FOptionsAllowHomePage_Specified = true;  }
  bool __fastcall OptionsAllowHomePage_Specified(int Index)
  {  return FOptionsAllowHomePage_Specified;  } 
  bool __fastcall GetOptionsAllowStandardAnswersPages(int Index)
  {  return FOptionsAllowStandardAnswersPages;  }
  void __fastcall SetOptionsAllowStandardAnswersPages(int Index, bool _prop_val)
  {  FOptionsAllowStandardAnswersPages = _prop_val; FOptionsAllowStandardAnswersPages_Specified = true;  }
  bool __fastcall OptionsAllowStandardAnswersPages_Specified(int Index)
  {  return FOptionsAllowStandardAnswersPages_Specified;  } 
  bool __fastcall GetOptionsAllowStandardIdeasPages(int Index)
  {  return FOptionsAllowStandardIdeasPages;  }
  void __fastcall SetOptionsAllowStandardIdeasPages(int Index, bool _prop_val)
  {  FOptionsAllowStandardIdeasPages = _prop_val; FOptionsAllowStandardIdeasPages_Specified = true;  }
  bool __fastcall OptionsAllowStandardIdeasPages_Specified(int Index)
  {  return FOptionsAllowStandardIdeasPages_Specified;  } 
  bool __fastcall GetOptionsAllowStandardLookups(int Index)
  {  return FOptionsAllowStandardLookups;  }
  void __fastcall SetOptionsAllowStandardLookups(int Index, bool _prop_val)
  {  FOptionsAllowStandardLookups = _prop_val; FOptionsAllowStandardLookups_Specified = true;  }
  bool __fastcall OptionsAllowStandardLookups_Specified(int Index)
  {  return FOptionsAllowStandardLookups_Specified;  } 
  bool __fastcall GetOptionsAllowStandardSearch(int Index)
  {  return FOptionsAllowStandardSearch;  }
  void __fastcall SetOptionsAllowStandardSearch(int Index, bool _prop_val)
  {  FOptionsAllowStandardSearch = _prop_val; FOptionsAllowStandardSearch_Specified = true;  }
  bool __fastcall OptionsAllowStandardSearch_Specified(int Index)
  {  return FOptionsAllowStandardSearch_Specified;  } 
  bool __fastcall GetOptionsEnableFeeds(int Index)
  {  return FOptionsEnableFeeds;  }
  void __fastcall SetOptionsEnableFeeds(int Index, bool _prop_val)
  {  FOptionsEnableFeeds = _prop_val; FOptionsEnableFeeds_Specified = true;  }
  bool __fastcall OptionsEnableFeeds_Specified(int Index)
  {  return FOptionsEnableFeeds_Specified;  } 
  QueryResult* __fastcall GetSiteDomains(int Index)
  {  return FSiteDomains;  }
  void __fastcall SetSiteDomains(int Index, QueryResult* _prop_val)
  {  FSiteDomains = _prop_val; FSiteDomains_Specified = true;  }
  bool __fastcall SiteDomains_Specified(int Index)
  {  return FSiteDomains_Specified;  } 
  UnicodeString __fastcall GetSiteType(int Index)
  {  return FSiteType;  }
  void __fastcall SetSiteType(int Index, UnicodeString _prop_val)
  {  FSiteType = _prop_val; FSiteType_Specified = true;  }
  bool __fastcall SiteType_Specified(int Index)
  {  return FSiteType_Specified;  } 
  UnicodeString __fastcall GetStatus(int Index)
  {  return FStatus;  }
  void __fastcall SetStatus(int Index, UnicodeString _prop_val)
  {  FStatus = _prop_val; FStatus_Specified = true;  }
  bool __fastcall Status_Specified(int Index)
  {  return FStatus_Specified;  } 
  UnicodeString __fastcall GetSubdomain(int Index)
  {  return FSubdomain;  }
  void __fastcall SetSubdomain(int Index, UnicodeString _prop_val)
  {  FSubdomain = _prop_val; FSubdomain_Specified = true;  }
  bool __fastcall Subdomain_Specified(int Index)
  {  return FSubdomain_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetUrlPathPrefix(int Index)
  {  return FUrlPathPrefix;  }
  void __fastcall SetUrlPathPrefix(int Index, UnicodeString _prop_val)
  {  FUrlPathPrefix = _prop_val; FUrlPathPrefix_Specified = true;  }
  bool __fastcall UrlPathPrefix_Specified(int Index)
  {  return FUrlPathPrefix_Specified;  } 

public:
  __fastcall ~Site();
__published:
  __property User*           Admin = { index=(IS_OPTN|IS_NLBL), read=FAdmin, write=SetAdmin, stored = Admin_Specified };
  __property ID            AdminId = { index=(IS_OPTN|IS_NLBL), read=FAdminId, write=SetAdminId, stored = AdminId_Specified };
  __property UnicodeString AnalyticsTrackingCode = { index=(IS_OPTN|IS_NLBL), read=FAnalyticsTrackingCode, write=SetAnalyticsTrackingCode, stored = AnalyticsTrackingCode_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property int        DailyBandwidthLimit = { index=(IS_OPTN|IS_NLBL), read=FDailyBandwidthLimit, write=SetDailyBandwidthLimit, stored = DailyBandwidthLimit_Specified };
  __property int        DailyBandwidthUsed = { index=(IS_OPTN|IS_NLBL), read=FDailyBandwidthUsed, write=SetDailyBandwidthUsed, stored = DailyBandwidthUsed_Specified };
  __property int        DailyRequestTimeLimit = { index=(IS_OPTN|IS_NLBL), read=FDailyRequestTimeLimit, write=SetDailyRequestTimeLimit, stored = DailyRequestTimeLimit_Specified };
  __property int        DailyRequestTimeUsed = { index=(IS_OPTN|IS_NLBL), read=FDailyRequestTimeUsed, write=SetDailyRequestTimeUsed, stored = DailyRequestTimeUsed_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property QueryResult*      Feeds = { index=(IS_OPTN|IS_NLBL), read=FFeeds, write=SetFeeds, stored = Feeds_Specified };
  __property QueryResult*  Histories = { index=(IS_OPTN|IS_NLBL), read=FHistories, write=SetHistories, stored = Histories_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString MasterLabel = { index=(IS_OPTN|IS_NLBL), read=FMasterLabel, write=SetMasterLabel, stored = MasterLabel_Specified };
  __property int        MonthlyPageViewsEntitlement = { index=(IS_OPTN|IS_NLBL), read=FMonthlyPageViewsEntitlement, write=SetMonthlyPageViewsEntitlement, stored = MonthlyPageViewsEntitlement_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property bool       OptionsAllowHomePage = { index=(IS_OPTN|IS_NLBL), read=FOptionsAllowHomePage, write=SetOptionsAllowHomePage, stored = OptionsAllowHomePage_Specified };
  __property bool       OptionsAllowStandardAnswersPages = { index=(IS_OPTN|IS_NLBL), read=FOptionsAllowStandardAnswersPages, write=SetOptionsAllowStandardAnswersPages, stored = OptionsAllowStandardAnswersPages_Specified };
  __property bool       OptionsAllowStandardIdeasPages = { index=(IS_OPTN|IS_NLBL), read=FOptionsAllowStandardIdeasPages, write=SetOptionsAllowStandardIdeasPages, stored = OptionsAllowStandardIdeasPages_Specified };
  __property bool       OptionsAllowStandardLookups = { index=(IS_OPTN|IS_NLBL), read=FOptionsAllowStandardLookups, write=SetOptionsAllowStandardLookups, stored = OptionsAllowStandardLookups_Specified };
  __property bool       OptionsAllowStandardSearch = { index=(IS_OPTN|IS_NLBL), read=FOptionsAllowStandardSearch, write=SetOptionsAllowStandardSearch, stored = OptionsAllowStandardSearch_Specified };
  __property bool       OptionsEnableFeeds = { index=(IS_OPTN|IS_NLBL), read=FOptionsEnableFeeds, write=SetOptionsEnableFeeds, stored = OptionsEnableFeeds_Specified };
  __property QueryResult* SiteDomains = { index=(IS_OPTN|IS_NLBL), read=FSiteDomains, write=SetSiteDomains, stored = SiteDomains_Specified };
  __property UnicodeString   SiteType = { index=(IS_OPTN|IS_NLBL), read=FSiteType, write=SetSiteType, stored = SiteType_Specified };
  __property UnicodeString     Status = { index=(IS_OPTN|IS_NLBL), read=FStatus, write=SetStatus, stored = Status_Specified };
  __property UnicodeString  Subdomain = { index=(IS_OPTN|IS_NLBL), read=FSubdomain, write=SetSubdomain, stored = Subdomain_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString UrlPathPrefix = { index=(IS_OPTN|IS_NLBL), read=FUrlPathPrefix, write=SetUrlPathPrefix, stored = UrlPathPrefix_Specified };
};




// ************************************************************************ //
// XML       : SetupEntityAccess, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class SetupEntityAccess : public sObject {
private:
  PermissionSet*  FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FSetupEntityId;
  bool            FSetupEntityId_Specified;
  UnicodeString   FSetupEntityType;
  bool            FSetupEntityType_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  PermissionSet* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, PermissionSet* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetSetupEntityId(int Index)
  {  return FSetupEntityId;  }
  void __fastcall SetSetupEntityId(int Index, ID _prop_val)
  {  FSetupEntityId = _prop_val; FSetupEntityId_Specified = true;  }
  bool __fastcall SetupEntityId_Specified(int Index)
  {  return FSetupEntityId_Specified;  } 
  UnicodeString __fastcall GetSetupEntityType(int Index)
  {  return FSetupEntityType;  }
  void __fastcall SetSetupEntityType(int Index, UnicodeString _prop_val)
  {  FSetupEntityType = _prop_val; FSetupEntityType_Specified = true;  }
  bool __fastcall SetupEntityType_Specified(int Index)
  {  return FSetupEntityType_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~SetupEntityAccess();
__published:
  __property PermissionSet*     Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         SetupEntityId = { index=(IS_OPTN|IS_NLBL), read=FSetupEntityId, write=SetSetupEntityId, stored = SetupEntityId_Specified };
  __property UnicodeString SetupEntityType = { index=(IS_OPTN|IS_NLBL), read=FSetupEntityType, write=SetSetupEntityType, stored = SetupEntityType_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : SelfServiceUser, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class SelfServiceUser : public sObject {
private:
  ID              FContactId;
  bool            FContactId_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FEmail;
  bool            FEmail_Specified;
  UnicodeString   FFirstName;
  bool            FFirstName_Specified;
  bool            FIsActive;
  bool            FIsActive_Specified;
  UnicodeString   FLanguageLocaleKey;
  bool            FLanguageLocaleKey_Specified;
  TXSDateTime*    FLastLoginDate;
  bool            FLastLoginDate_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FLastName;
  bool            FLastName_Specified;
  UnicodeString   FLocaleSidKey;
  bool            FLocaleSidKey_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  bool            FSuperUser;
  bool            FSuperUser_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTimeZoneSidKey;
  bool            FTimeZoneSidKey_Specified;
  UnicodeString   FUsername;
  bool            FUsername_Specified;
  ID __fastcall GetContactId(int Index)
  {  return FContactId;  }
  void __fastcall SetContactId(int Index, ID _prop_val)
  {  FContactId = _prop_val; FContactId_Specified = true;  }
  bool __fastcall ContactId_Specified(int Index)
  {  return FContactId_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetEmail(int Index)
  {  return FEmail;  }
  void __fastcall SetEmail(int Index, UnicodeString _prop_val)
  {  FEmail = _prop_val; FEmail_Specified = true;  }
  bool __fastcall Email_Specified(int Index)
  {  return FEmail_Specified;  } 
  UnicodeString __fastcall GetFirstName(int Index)
  {  return FFirstName;  }
  void __fastcall SetFirstName(int Index, UnicodeString _prop_val)
  {  FFirstName = _prop_val; FFirstName_Specified = true;  }
  bool __fastcall FirstName_Specified(int Index)
  {  return FFirstName_Specified;  } 
  bool __fastcall GetIsActive(int Index)
  {  return FIsActive;  }
  void __fastcall SetIsActive(int Index, bool _prop_val)
  {  FIsActive = _prop_val; FIsActive_Specified = true;  }
  bool __fastcall IsActive_Specified(int Index)
  {  return FIsActive_Specified;  } 
  UnicodeString __fastcall GetLanguageLocaleKey(int Index)
  {  return FLanguageLocaleKey;  }
  void __fastcall SetLanguageLocaleKey(int Index, UnicodeString _prop_val)
  {  FLanguageLocaleKey = _prop_val; FLanguageLocaleKey_Specified = true;  }
  bool __fastcall LanguageLocaleKey_Specified(int Index)
  {  return FLanguageLocaleKey_Specified;  } 
  TXSDateTime* __fastcall GetLastLoginDate(int Index)
  {  return FLastLoginDate;  }
  void __fastcall SetLastLoginDate(int Index, TXSDateTime* _prop_val)
  {  FLastLoginDate = _prop_val; FLastLoginDate_Specified = true;  }
  bool __fastcall LastLoginDate_Specified(int Index)
  {  return FLastLoginDate_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetLastName(int Index)
  {  return FLastName;  }
  void __fastcall SetLastName(int Index, UnicodeString _prop_val)
  {  FLastName = _prop_val; FLastName_Specified = true;  }
  bool __fastcall LastName_Specified(int Index)
  {  return FLastName_Specified;  } 
  UnicodeString __fastcall GetLocaleSidKey(int Index)
  {  return FLocaleSidKey;  }
  void __fastcall SetLocaleSidKey(int Index, UnicodeString _prop_val)
  {  FLocaleSidKey = _prop_val; FLocaleSidKey_Specified = true;  }
  bool __fastcall LocaleSidKey_Specified(int Index)
  {  return FLocaleSidKey_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  bool __fastcall GetSuperUser(int Index)
  {  return FSuperUser;  }
  void __fastcall SetSuperUser(int Index, bool _prop_val)
  {  FSuperUser = _prop_val; FSuperUser_Specified = true;  }
  bool __fastcall SuperUser_Specified(int Index)
  {  return FSuperUser_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTimeZoneSidKey(int Index)
  {  return FTimeZoneSidKey;  }
  void __fastcall SetTimeZoneSidKey(int Index, UnicodeString _prop_val)
  {  FTimeZoneSidKey = _prop_val; FTimeZoneSidKey_Specified = true;  }
  bool __fastcall TimeZoneSidKey_Specified(int Index)
  {  return FTimeZoneSidKey_Specified;  } 
  UnicodeString __fastcall GetUsername(int Index)
  {  return FUsername;  }
  void __fastcall SetUsername(int Index, UnicodeString _prop_val)
  {  FUsername = _prop_val; FUsername_Specified = true;  }
  bool __fastcall Username_Specified(int Index)
  {  return FUsername_Specified;  } 

public:
  __fastcall ~SelfServiceUser();
__published:
  __property ID          ContactId = { index=(IS_OPTN|IS_NLBL), read=FContactId, write=SetContactId, stored = ContactId_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString      Email = { index=(IS_OPTN|IS_NLBL), read=FEmail, write=SetEmail, stored = Email_Specified };
  __property UnicodeString  FirstName = { index=(IS_OPTN|IS_NLBL), read=FFirstName, write=SetFirstName, stored = FirstName_Specified };
  __property bool         IsActive = { index=(IS_OPTN|IS_NLBL), read=FIsActive, write=SetIsActive, stored = IsActive_Specified };
  __property UnicodeString LanguageLocaleKey = { index=(IS_OPTN|IS_NLBL), read=FLanguageLocaleKey, write=SetLanguageLocaleKey, stored = LanguageLocaleKey_Specified };
  __property TXSDateTime* LastLoginDate = { index=(IS_OPTN|IS_NLBL), read=FLastLoginDate, write=SetLastLoginDate, stored = LastLoginDate_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString   LastName = { index=(IS_OPTN|IS_NLBL), read=FLastName, write=SetLastName, stored = LastName_Specified };
  __property UnicodeString LocaleSidKey = { index=(IS_OPTN|IS_NLBL), read=FLocaleSidKey, write=SetLocaleSidKey, stored = LocaleSidKey_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property bool        SuperUser = { index=(IS_OPTN|IS_NLBL), read=FSuperUser, write=SetSuperUser, stored = SuperUser_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString TimeZoneSidKey = { index=(IS_OPTN|IS_NLBL), read=FTimeZoneSidKey, write=SetTimeZoneSidKey, stored = TimeZoneSidKey_Specified };
  __property UnicodeString   Username = { index=(IS_OPTN|IS_NLBL), read=FUsername, write=SetUsername, stored = Username_Specified };
};




// ************************************************************************ //
// XML       : ReportFeed, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ReportFeed : public sObject {
private:
  UnicodeString   FBody;
  bool            FBody_Specified;
  int             FCommentCount;
  bool            FCommentCount_Specified;
  TByteDynArray   FContentData;
  bool            FContentData_Specified;
  UnicodeString   FContentDescription;
  bool            FContentDescription_Specified;
  UnicodeString   FContentFileName;
  bool            FContentFileName_Specified;
  int             FContentSize;
  bool            FContentSize_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedComments;
  bool            FFeedComments_Specified;
  QueryResult*    FFeedLikes;
  bool            FFeedLikes_Specified;
  QueryResult*    FFeedTrackedChanges;
  bool            FFeedTrackedChanges_Specified;
  Name_*           FInsertedBy;
  bool            FInsertedBy_Specified;
  ID              FInsertedById;
  bool            FInsertedById_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLikeCount;
  bool            FLikeCount_Specified;
  UnicodeString   FLinkUrl;
  bool            FLinkUrl_Specified;
  Report*         FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FRelatedRecordId;
  bool            FRelatedRecordId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetCommentCount(int Index)
  {  return FCommentCount;  }
  void __fastcall SetCommentCount(int Index, int _prop_val)
  {  FCommentCount = _prop_val; FCommentCount_Specified = true;  }
  bool __fastcall CommentCount_Specified(int Index)
  {  return FCommentCount_Specified;  } 
  TByteDynArray __fastcall GetContentData(int Index)
  {  return FContentData;  }
  void __fastcall SetContentData(int Index, TByteDynArray _prop_val)
  {  FContentData = _prop_val; FContentData_Specified = true;  }
  bool __fastcall ContentData_Specified(int Index)
  {  return FContentData_Specified;  } 
  UnicodeString __fastcall GetContentDescription(int Index)
  {  return FContentDescription;  }
  void __fastcall SetContentDescription(int Index, UnicodeString _prop_val)
  {  FContentDescription = _prop_val; FContentDescription_Specified = true;  }
  bool __fastcall ContentDescription_Specified(int Index)
  {  return FContentDescription_Specified;  } 
  UnicodeString __fastcall GetContentFileName(int Index)
  {  return FContentFileName;  }
  void __fastcall SetContentFileName(int Index, UnicodeString _prop_val)
  {  FContentFileName = _prop_val; FContentFileName_Specified = true;  }
  bool __fastcall ContentFileName_Specified(int Index)
  {  return FContentFileName_Specified;  } 
  int __fastcall GetContentSize(int Index)
  {  return FContentSize;  }
  void __fastcall SetContentSize(int Index, int _prop_val)
  {  FContentSize = _prop_val; FContentSize_Specified = true;  }
  bool __fastcall ContentSize_Specified(int Index)
  {  return FContentSize_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedComments(int Index)
  {  return FFeedComments;  }
  void __fastcall SetFeedComments(int Index, QueryResult* _prop_val)
  {  FFeedComments = _prop_val; FFeedComments_Specified = true;  }
  bool __fastcall FeedComments_Specified(int Index)
  {  return FFeedComments_Specified;  } 
  QueryResult* __fastcall GetFeedLikes(int Index)
  {  return FFeedLikes;  }
  void __fastcall SetFeedLikes(int Index, QueryResult* _prop_val)
  {  FFeedLikes = _prop_val; FFeedLikes_Specified = true;  }
  bool __fastcall FeedLikes_Specified(int Index)
  {  return FFeedLikes_Specified;  } 
  QueryResult* __fastcall GetFeedTrackedChanges(int Index)
  {  return FFeedTrackedChanges;  }
  void __fastcall SetFeedTrackedChanges(int Index, QueryResult* _prop_val)
  {  FFeedTrackedChanges = _prop_val; FFeedTrackedChanges_Specified = true;  }
  bool __fastcall FeedTrackedChanges_Specified(int Index)
  {  return FFeedTrackedChanges_Specified;  } 
  Name_* __fastcall GetInsertedBy(int Index)
  {  return FInsertedBy;  }
  void __fastcall SetInsertedBy(int Index, Name_* _prop_val)
  {  FInsertedBy = _prop_val; FInsertedBy_Specified = true;  }
  bool __fastcall InsertedBy_Specified(int Index)
  {  return FInsertedBy_Specified;  } 
  ID __fastcall GetInsertedById(int Index)
  {  return FInsertedById;  }
  void __fastcall SetInsertedById(int Index, ID _prop_val)
  {  FInsertedById = _prop_val; FInsertedById_Specified = true;  }
  bool __fastcall InsertedById_Specified(int Index)
  {  return FInsertedById_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLikeCount(int Index)
  {  return FLikeCount;  }
  void __fastcall SetLikeCount(int Index, int _prop_val)
  {  FLikeCount = _prop_val; FLikeCount_Specified = true;  }
  bool __fastcall LikeCount_Specified(int Index)
  {  return FLikeCount_Specified;  } 
  UnicodeString __fastcall GetLinkUrl(int Index)
  {  return FLinkUrl;  }
  void __fastcall SetLinkUrl(int Index, UnicodeString _prop_val)
  {  FLinkUrl = _prop_val; FLinkUrl_Specified = true;  }
  bool __fastcall LinkUrl_Specified(int Index)
  {  return FLinkUrl_Specified;  } 
  Report* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Report* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetRelatedRecordId(int Index)
  {  return FRelatedRecordId;  }
  void __fastcall SetRelatedRecordId(int Index, ID _prop_val)
  {  FRelatedRecordId = _prop_val; FRelatedRecordId_Specified = true;  }
  bool __fastcall RelatedRecordId_Specified(int Index)
  {  return FRelatedRecordId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~ReportFeed();
__published:
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        CommentCount = { index=(IS_OPTN|IS_NLBL), read=FCommentCount, write=SetCommentCount, stored = CommentCount_Specified };
  __property TByteDynArray ContentData = { index=(IS_OPTN|IS_NLBL), read=FContentData, write=SetContentData, stored = ContentData_Specified };
  __property UnicodeString ContentDescription = { index=(IS_OPTN|IS_NLBL), read=FContentDescription, write=SetContentDescription, stored = ContentDescription_Specified };
  __property UnicodeString ContentFileName = { index=(IS_OPTN|IS_NLBL), read=FContentFileName, write=SetContentFileName, stored = ContentFileName_Specified };
  __property int        ContentSize = { index=(IS_OPTN|IS_NLBL), read=FContentSize, write=SetContentSize, stored = ContentSize_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedComments = { index=(IS_OPTN|IS_NLBL), read=FFeedComments, write=SetFeedComments, stored = FeedComments_Specified };
  __property QueryResult*  FeedLikes = { index=(IS_OPTN|IS_NLBL), read=FFeedLikes, write=SetFeedLikes, stored = FeedLikes_Specified };
  __property QueryResult* FeedTrackedChanges = { index=(IS_OPTN|IS_NLBL), read=FFeedTrackedChanges, write=SetFeedTrackedChanges, stored = FeedTrackedChanges_Specified };
  __property Name_*      InsertedBy = { index=(IS_OPTN|IS_NLBL), read=FInsertedBy, write=SetInsertedBy, stored = InsertedBy_Specified };
  __property ID         InsertedById = { index=(IS_OPTN|IS_NLBL), read=FInsertedById, write=SetInsertedById, stored = InsertedById_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int         LikeCount = { index=(IS_OPTN|IS_NLBL), read=FLikeCount, write=SetLikeCount, stored = LikeCount_Specified };
  __property UnicodeString    LinkUrl = { index=(IS_OPTN|IS_NLBL), read=FLinkUrl, write=SetLinkUrl, stored = LinkUrl_Specified };
  __property Report*        Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         RelatedRecordId = { index=(IS_OPTN|IS_NLBL), read=FRelatedRecordId, write=SetRelatedRecordId, stored = RelatedRecordId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : Report, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Report : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  UnicodeString   FDeveloperName;
  bool            FDeveloperName_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  QueryResult*    FFeeds;
  bool            FFeeds_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  TXSDateTime*    FLastRunDate;
  bool            FLastRunDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  UnicodeString   FNamespacePrefix;
  bool            FNamespacePrefix_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  UnicodeString __fastcall GetDeveloperName(int Index)
  {  return FDeveloperName;  }
  void __fastcall SetDeveloperName(int Index, UnicodeString _prop_val)
  {  FDeveloperName = _prop_val; FDeveloperName_Specified = true;  }
  bool __fastcall DeveloperName_Specified(int Index)
  {  return FDeveloperName_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  QueryResult* __fastcall GetFeeds(int Index)
  {  return FFeeds;  }
  void __fastcall SetFeeds(int Index, QueryResult* _prop_val)
  {  FFeeds = _prop_val; FFeeds_Specified = true;  }
  bool __fastcall Feeds_Specified(int Index)
  {  return FFeeds_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  TXSDateTime* __fastcall GetLastRunDate(int Index)
  {  return FLastRunDate;  }
  void __fastcall SetLastRunDate(int Index, TXSDateTime* _prop_val)
  {  FLastRunDate = _prop_val; FLastRunDate_Specified = true;  }
  bool __fastcall LastRunDate_Specified(int Index)
  {  return FLastRunDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  UnicodeString __fastcall GetNamespacePrefix(int Index)
  {  return FNamespacePrefix;  }
  void __fastcall SetNamespacePrefix(int Index, UnicodeString _prop_val)
  {  FNamespacePrefix = _prop_val; FNamespacePrefix_Specified = true;  }
  bool __fastcall NamespacePrefix_Specified(int Index)
  {  return FNamespacePrefix_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~Report();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property UnicodeString DeveloperName = { index=(IS_OPTN|IS_NLBL), read=FDeveloperName, write=SetDeveloperName, stored = DeveloperName_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property QueryResult*      Feeds = { index=(IS_OPTN|IS_NLBL), read=FFeeds, write=SetFeeds, stored = Feeds_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property TXSDateTime* LastRunDate = { index=(IS_OPTN|IS_NLBL), read=FLastRunDate, write=SetLastRunDate, stored = LastRunDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property UnicodeString NamespacePrefix = { index=(IS_OPTN|IS_NLBL), read=FNamespacePrefix, write=SetNamespacePrefix, stored = NamespacePrefix_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : QueueSobject, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class QueueSobject : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  Group*          FQueue;
  bool            FQueue_Specified;
  ID              FQueueId;
  bool            FQueueId_Specified;
  UnicodeString   FSobjectType;
  bool            FSobjectType_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  Group* __fastcall GetQueue(int Index)
  {  return FQueue;  }
  void __fastcall SetQueue(int Index, Group* _prop_val)
  {  FQueue = _prop_val; FQueue_Specified = true;  }
  bool __fastcall Queue_Specified(int Index)
  {  return FQueue_Specified;  } 
  ID __fastcall GetQueueId(int Index)
  {  return FQueueId;  }
  void __fastcall SetQueueId(int Index, ID _prop_val)
  {  FQueueId = _prop_val; FQueueId_Specified = true;  }
  bool __fastcall QueueId_Specified(int Index)
  {  return FQueueId_Specified;  } 
  UnicodeString __fastcall GetSobjectType(int Index)
  {  return FSobjectType;  }
  void __fastcall SetSobjectType(int Index, UnicodeString _prop_val)
  {  FSobjectType = _prop_val; FSobjectType_Specified = true;  }
  bool __fastcall SobjectType_Specified(int Index)
  {  return FSobjectType_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~QueueSobject();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property Group*          Queue = { index=(IS_OPTN|IS_NLBL), read=FQueue, write=SetQueue, stored = Queue_Specified };
  __property ID            QueueId = { index=(IS_OPTN|IS_NLBL), read=FQueueId, write=SetQueueId, stored = QueueId_Specified };
  __property UnicodeString SobjectType = { index=(IS_OPTN|IS_NLBL), read=FSobjectType, write=SetSobjectType, stored = SobjectType_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : PushTopic, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class PushTopic : public sObject {
private:
  double          FApiVersion;
  bool            FApiVersion_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  bool            FIsActive;
  bool            FIsActive_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  UnicodeString   FNotifyForFields;
  bool            FNotifyForFields_Specified;
  UnicodeString   FNotifyForOperations;
  bool            FNotifyForOperations_Specified;
  UnicodeString   FQuery;
  bool            FQuery_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  double __fastcall GetApiVersion(int Index)
  {  return FApiVersion;  }
  void __fastcall SetApiVersion(int Index, double _prop_val)
  {  FApiVersion = _prop_val; FApiVersion_Specified = true;  }
  bool __fastcall ApiVersion_Specified(int Index)
  {  return FApiVersion_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  bool __fastcall GetIsActive(int Index)
  {  return FIsActive;  }
  void __fastcall SetIsActive(int Index, bool _prop_val)
  {  FIsActive = _prop_val; FIsActive_Specified = true;  }
  bool __fastcall IsActive_Specified(int Index)
  {  return FIsActive_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  UnicodeString __fastcall GetNotifyForFields(int Index)
  {  return FNotifyForFields;  }
  void __fastcall SetNotifyForFields(int Index, UnicodeString _prop_val)
  {  FNotifyForFields = _prop_val; FNotifyForFields_Specified = true;  }
  bool __fastcall NotifyForFields_Specified(int Index)
  {  return FNotifyForFields_Specified;  } 
  UnicodeString __fastcall GetNotifyForOperations(int Index)
  {  return FNotifyForOperations;  }
  void __fastcall SetNotifyForOperations(int Index, UnicodeString _prop_val)
  {  FNotifyForOperations = _prop_val; FNotifyForOperations_Specified = true;  }
  bool __fastcall NotifyForOperations_Specified(int Index)
  {  return FNotifyForOperations_Specified;  } 
  UnicodeString __fastcall GetQuery(int Index)
  {  return FQuery;  }
  void __fastcall SetQuery(int Index, UnicodeString _prop_val)
  {  FQuery = _prop_val; FQuery_Specified = true;  }
  bool __fastcall Query_Specified(int Index)
  {  return FQuery_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~PushTopic();
__published:
  __property double     ApiVersion = { index=(IS_OPTN|IS_NLBL), read=FApiVersion, write=SetApiVersion, stored = ApiVersion_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property bool         IsActive = { index=(IS_OPTN|IS_NLBL), read=FIsActive, write=SetIsActive, stored = IsActive_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property UnicodeString NotifyForFields = { index=(IS_OPTN|IS_NLBL), read=FNotifyForFields, write=SetNotifyForFields, stored = NotifyForFields_Specified };
  __property UnicodeString NotifyForOperations = { index=(IS_OPTN|IS_NLBL), read=FNotifyForOperations, write=SetNotifyForOperations, stored = NotifyForOperations_Specified };
  __property UnicodeString      Query = { index=(IS_OPTN|IS_NLBL), read=FQuery, write=SetQuery, stored = Query_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : Product2Feed, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Product2Feed : public sObject {
private:
  UnicodeString   FBody;
  bool            FBody_Specified;
  int             FCommentCount;
  bool            FCommentCount_Specified;
  TByteDynArray   FContentData;
  bool            FContentData_Specified;
  UnicodeString   FContentDescription;
  bool            FContentDescription_Specified;
  UnicodeString   FContentFileName;
  bool            FContentFileName_Specified;
  int             FContentSize;
  bool            FContentSize_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedComments;
  bool            FFeedComments_Specified;
  QueryResult*    FFeedLikes;
  bool            FFeedLikes_Specified;
  QueryResult*    FFeedTrackedChanges;
  bool            FFeedTrackedChanges_Specified;
  Name_*           FInsertedBy;
  bool            FInsertedBy_Specified;
  ID              FInsertedById;
  bool            FInsertedById_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLikeCount;
  bool            FLikeCount_Specified;
  UnicodeString   FLinkUrl;
  bool            FLinkUrl_Specified;
  Product2*       FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FRelatedRecordId;
  bool            FRelatedRecordId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetCommentCount(int Index)
  {  return FCommentCount;  }
  void __fastcall SetCommentCount(int Index, int _prop_val)
  {  FCommentCount = _prop_val; FCommentCount_Specified = true;  }
  bool __fastcall CommentCount_Specified(int Index)
  {  return FCommentCount_Specified;  } 
  TByteDynArray __fastcall GetContentData(int Index)
  {  return FContentData;  }
  void __fastcall SetContentData(int Index, TByteDynArray _prop_val)
  {  FContentData = _prop_val; FContentData_Specified = true;  }
  bool __fastcall ContentData_Specified(int Index)
  {  return FContentData_Specified;  } 
  UnicodeString __fastcall GetContentDescription(int Index)
  {  return FContentDescription;  }
  void __fastcall SetContentDescription(int Index, UnicodeString _prop_val)
  {  FContentDescription = _prop_val; FContentDescription_Specified = true;  }
  bool __fastcall ContentDescription_Specified(int Index)
  {  return FContentDescription_Specified;  } 
  UnicodeString __fastcall GetContentFileName(int Index)
  {  return FContentFileName;  }
  void __fastcall SetContentFileName(int Index, UnicodeString _prop_val)
  {  FContentFileName = _prop_val; FContentFileName_Specified = true;  }
  bool __fastcall ContentFileName_Specified(int Index)
  {  return FContentFileName_Specified;  } 
  int __fastcall GetContentSize(int Index)
  {  return FContentSize;  }
  void __fastcall SetContentSize(int Index, int _prop_val)
  {  FContentSize = _prop_val; FContentSize_Specified = true;  }
  bool __fastcall ContentSize_Specified(int Index)
  {  return FContentSize_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedComments(int Index)
  {  return FFeedComments;  }
  void __fastcall SetFeedComments(int Index, QueryResult* _prop_val)
  {  FFeedComments = _prop_val; FFeedComments_Specified = true;  }
  bool __fastcall FeedComments_Specified(int Index)
  {  return FFeedComments_Specified;  } 
  QueryResult* __fastcall GetFeedLikes(int Index)
  {  return FFeedLikes;  }
  void __fastcall SetFeedLikes(int Index, QueryResult* _prop_val)
  {  FFeedLikes = _prop_val; FFeedLikes_Specified = true;  }
  bool __fastcall FeedLikes_Specified(int Index)
  {  return FFeedLikes_Specified;  } 
  QueryResult* __fastcall GetFeedTrackedChanges(int Index)
  {  return FFeedTrackedChanges;  }
  void __fastcall SetFeedTrackedChanges(int Index, QueryResult* _prop_val)
  {  FFeedTrackedChanges = _prop_val; FFeedTrackedChanges_Specified = true;  }
  bool __fastcall FeedTrackedChanges_Specified(int Index)
  {  return FFeedTrackedChanges_Specified;  } 
  Name_* __fastcall GetInsertedBy(int Index)
  {  return FInsertedBy;  }
  void __fastcall SetInsertedBy(int Index, Name_* _prop_val)
  {  FInsertedBy = _prop_val; FInsertedBy_Specified = true;  }
  bool __fastcall InsertedBy_Specified(int Index)
  {  return FInsertedBy_Specified;  } 
  ID __fastcall GetInsertedById(int Index)
  {  return FInsertedById;  }
  void __fastcall SetInsertedById(int Index, ID _prop_val)
  {  FInsertedById = _prop_val; FInsertedById_Specified = true;  }
  bool __fastcall InsertedById_Specified(int Index)
  {  return FInsertedById_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLikeCount(int Index)
  {  return FLikeCount;  }
  void __fastcall SetLikeCount(int Index, int _prop_val)
  {  FLikeCount = _prop_val; FLikeCount_Specified = true;  }
  bool __fastcall LikeCount_Specified(int Index)
  {  return FLikeCount_Specified;  } 
  UnicodeString __fastcall GetLinkUrl(int Index)
  {  return FLinkUrl;  }
  void __fastcall SetLinkUrl(int Index, UnicodeString _prop_val)
  {  FLinkUrl = _prop_val; FLinkUrl_Specified = true;  }
  bool __fastcall LinkUrl_Specified(int Index)
  {  return FLinkUrl_Specified;  } 
  Product2* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Product2* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetRelatedRecordId(int Index)
  {  return FRelatedRecordId;  }
  void __fastcall SetRelatedRecordId(int Index, ID _prop_val)
  {  FRelatedRecordId = _prop_val; FRelatedRecordId_Specified = true;  }
  bool __fastcall RelatedRecordId_Specified(int Index)
  {  return FRelatedRecordId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~Product2Feed();
__published:
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        CommentCount = { index=(IS_OPTN|IS_NLBL), read=FCommentCount, write=SetCommentCount, stored = CommentCount_Specified };
  __property TByteDynArray ContentData = { index=(IS_OPTN|IS_NLBL), read=FContentData, write=SetContentData, stored = ContentData_Specified };
  __property UnicodeString ContentDescription = { index=(IS_OPTN|IS_NLBL), read=FContentDescription, write=SetContentDescription, stored = ContentDescription_Specified };
  __property UnicodeString ContentFileName = { index=(IS_OPTN|IS_NLBL), read=FContentFileName, write=SetContentFileName, stored = ContentFileName_Specified };
  __property int        ContentSize = { index=(IS_OPTN|IS_NLBL), read=FContentSize, write=SetContentSize, stored = ContentSize_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedComments = { index=(IS_OPTN|IS_NLBL), read=FFeedComments, write=SetFeedComments, stored = FeedComments_Specified };
  __property QueryResult*  FeedLikes = { index=(IS_OPTN|IS_NLBL), read=FFeedLikes, write=SetFeedLikes, stored = FeedLikes_Specified };
  __property QueryResult* FeedTrackedChanges = { index=(IS_OPTN|IS_NLBL), read=FFeedTrackedChanges, write=SetFeedTrackedChanges, stored = FeedTrackedChanges_Specified };
  __property Name_*      InsertedBy = { index=(IS_OPTN|IS_NLBL), read=FInsertedBy, write=SetInsertedBy, stored = InsertedBy_Specified };
  __property ID         InsertedById = { index=(IS_OPTN|IS_NLBL), read=FInsertedById, write=SetInsertedById, stored = InsertedById_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int         LikeCount = { index=(IS_OPTN|IS_NLBL), read=FLikeCount, write=SetLikeCount, stored = LikeCount_Specified };
  __property UnicodeString    LinkUrl = { index=(IS_OPTN|IS_NLBL), read=FLinkUrl, write=SetLinkUrl, stored = LinkUrl_Specified };
  __property Product2*      Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         RelatedRecordId = { index=(IS_OPTN|IS_NLBL), read=FRelatedRecordId, write=SetRelatedRecordId, stored = RelatedRecordId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : ProcessInstanceWorkitem, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ProcessInstanceWorkitem : public sObject {
private:
  Name_*           FActor;
  bool            FActor_Specified;
  ID              FActorId;
  bool            FActorId_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  Name_*           FOriginalActor;
  bool            FOriginalActor_Specified;
  ID              FOriginalActorId;
  bool            FOriginalActorId_Specified;
  ProcessInstance* FProcessInstance;
  bool            FProcessInstance_Specified;
  ID              FProcessInstanceId;
  bool            FProcessInstanceId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  Name_* __fastcall GetActor(int Index)
  {  return FActor;  }
  void __fastcall SetActor(int Index, Name_* _prop_val)
  {  FActor = _prop_val; FActor_Specified = true;  }
  bool __fastcall Actor_Specified(int Index)
  {  return FActor_Specified;  } 
  ID __fastcall GetActorId(int Index)
  {  return FActorId;  }
  void __fastcall SetActorId(int Index, ID _prop_val)
  {  FActorId = _prop_val; FActorId_Specified = true;  }
  bool __fastcall ActorId_Specified(int Index)
  {  return FActorId_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  Name_* __fastcall GetOriginalActor(int Index)
  {  return FOriginalActor;  }
  void __fastcall SetOriginalActor(int Index, Name_* _prop_val)
  {  FOriginalActor = _prop_val; FOriginalActor_Specified = true;  }
  bool __fastcall OriginalActor_Specified(int Index)
  {  return FOriginalActor_Specified;  } 
  ID __fastcall GetOriginalActorId(int Index)
  {  return FOriginalActorId;  }
  void __fastcall SetOriginalActorId(int Index, ID _prop_val)
  {  FOriginalActorId = _prop_val; FOriginalActorId_Specified = true;  }
  bool __fastcall OriginalActorId_Specified(int Index)
  {  return FOriginalActorId_Specified;  } 
  ProcessInstance* __fastcall GetProcessInstance(int Index)
  {  return FProcessInstance;  }
  void __fastcall SetProcessInstance(int Index, ProcessInstance* _prop_val)
  {  FProcessInstance = _prop_val; FProcessInstance_Specified = true;  }
  bool __fastcall ProcessInstance_Specified(int Index)
  {  return FProcessInstance_Specified;  } 
  ID __fastcall GetProcessInstanceId(int Index)
  {  return FProcessInstanceId;  }
  void __fastcall SetProcessInstanceId(int Index, ID _prop_val)
  {  FProcessInstanceId = _prop_val; FProcessInstanceId_Specified = true;  }
  bool __fastcall ProcessInstanceId_Specified(int Index)
  {  return FProcessInstanceId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~ProcessInstanceWorkitem();
__published:
  __property Name_*           Actor = { index=(IS_OPTN|IS_NLBL), read=FActor, write=SetActor, stored = Actor_Specified };
  __property ID            ActorId = { index=(IS_OPTN|IS_NLBL), read=FActorId, write=SetActorId, stored = ActorId_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property Name_*      OriginalActor = { index=(IS_OPTN|IS_NLBL), read=FOriginalActor, write=SetOriginalActor, stored = OriginalActor_Specified };
  __property ID         OriginalActorId = { index=(IS_OPTN|IS_NLBL), read=FOriginalActorId, write=SetOriginalActorId, stored = OriginalActorId_Specified };
  __property ProcessInstance* ProcessInstance = { index=(IS_OPTN|IS_NLBL), read=FProcessInstance, write=SetProcessInstance, stored = ProcessInstance_Specified };
  __property ID         ProcessInstanceId = { index=(IS_OPTN|IS_NLBL), read=FProcessInstanceId, write=SetProcessInstanceId, stored = ProcessInstanceId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : ProcessInstanceStep, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ProcessInstanceStep : public sObject {
private:
  Name_*           FActor;
  bool            FActor_Specified;
  ID              FActorId;
  bool            FActorId_Specified;
  UnicodeString   FComments;
  bool            FComments_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  Name_*           FOriginalActor;
  bool            FOriginalActor_Specified;
  ID              FOriginalActorId;
  bool            FOriginalActorId_Specified;
  ProcessInstance* FProcessInstance;
  bool            FProcessInstance_Specified;
  ID              FProcessInstanceId;
  bool            FProcessInstanceId_Specified;
  UnicodeString   FStepStatus;
  bool            FStepStatus_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  Name_* __fastcall GetActor(int Index)
  {  return FActor;  }
  void __fastcall SetActor(int Index, Name_* _prop_val)
  {  FActor = _prop_val; FActor_Specified = true;  }
  bool __fastcall Actor_Specified(int Index)
  {  return FActor_Specified;  } 
  ID __fastcall GetActorId(int Index)
  {  return FActorId;  }
  void __fastcall SetActorId(int Index, ID _prop_val)
  {  FActorId = _prop_val; FActorId_Specified = true;  }
  bool __fastcall ActorId_Specified(int Index)
  {  return FActorId_Specified;  } 
  UnicodeString __fastcall GetComments(int Index)
  {  return FComments;  }
  void __fastcall SetComments(int Index, UnicodeString _prop_val)
  {  FComments = _prop_val; FComments_Specified = true;  }
  bool __fastcall Comments_Specified(int Index)
  {  return FComments_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  Name_* __fastcall GetOriginalActor(int Index)
  {  return FOriginalActor;  }
  void __fastcall SetOriginalActor(int Index, Name_* _prop_val)
  {  FOriginalActor = _prop_val; FOriginalActor_Specified = true;  }
  bool __fastcall OriginalActor_Specified(int Index)
  {  return FOriginalActor_Specified;  } 
  ID __fastcall GetOriginalActorId(int Index)
  {  return FOriginalActorId;  }
  void __fastcall SetOriginalActorId(int Index, ID _prop_val)
  {  FOriginalActorId = _prop_val; FOriginalActorId_Specified = true;  }
  bool __fastcall OriginalActorId_Specified(int Index)
  {  return FOriginalActorId_Specified;  } 
  ProcessInstance* __fastcall GetProcessInstance(int Index)
  {  return FProcessInstance;  }
  void __fastcall SetProcessInstance(int Index, ProcessInstance* _prop_val)
  {  FProcessInstance = _prop_val; FProcessInstance_Specified = true;  }
  bool __fastcall ProcessInstance_Specified(int Index)
  {  return FProcessInstance_Specified;  } 
  ID __fastcall GetProcessInstanceId(int Index)
  {  return FProcessInstanceId;  }
  void __fastcall SetProcessInstanceId(int Index, ID _prop_val)
  {  FProcessInstanceId = _prop_val; FProcessInstanceId_Specified = true;  }
  bool __fastcall ProcessInstanceId_Specified(int Index)
  {  return FProcessInstanceId_Specified;  } 
  UnicodeString __fastcall GetStepStatus(int Index)
  {  return FStepStatus;  }
  void __fastcall SetStepStatus(int Index, UnicodeString _prop_val)
  {  FStepStatus = _prop_val; FStepStatus_Specified = true;  }
  bool __fastcall StepStatus_Specified(int Index)
  {  return FStepStatus_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~ProcessInstanceStep();
__published:
  __property Name_*           Actor = { index=(IS_OPTN|IS_NLBL), read=FActor, write=SetActor, stored = Actor_Specified };
  __property ID            ActorId = { index=(IS_OPTN|IS_NLBL), read=FActorId, write=SetActorId, stored = ActorId_Specified };
  __property UnicodeString   Comments = { index=(IS_OPTN|IS_NLBL), read=FComments, write=SetComments, stored = Comments_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property Name_*      OriginalActor = { index=(IS_OPTN|IS_NLBL), read=FOriginalActor, write=SetOriginalActor, stored = OriginalActor_Specified };
  __property ID         OriginalActorId = { index=(IS_OPTN|IS_NLBL), read=FOriginalActorId, write=SetOriginalActorId, stored = OriginalActorId_Specified };
  __property ProcessInstance* ProcessInstance = { index=(IS_OPTN|IS_NLBL), read=FProcessInstance, write=SetProcessInstance, stored = ProcessInstance_Specified };
  __property ID         ProcessInstanceId = { index=(IS_OPTN|IS_NLBL), read=FProcessInstanceId, write=SetProcessInstanceId, stored = ProcessInstanceId_Specified };
  __property UnicodeString StepStatus = { index=(IS_OPTN|IS_NLBL), read=FStepStatus, write=SetStepStatus, stored = StepStatus_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : ProcessInstanceHistory, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ProcessInstanceHistory : public sObject {
private:
  Name_*           FActor;
  bool            FActor_Specified;
  ID              FActorId;
  bool            FActorId_Specified;
  UnicodeString   FComments;
  bool            FComments_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsPending;
  bool            FIsPending_Specified;
  Name_*           FOriginalActor;
  bool            FOriginalActor_Specified;
  ID              FOriginalActorId;
  bool            FOriginalActorId_Specified;
  ProcessInstance* FProcessInstance;
  bool            FProcessInstance_Specified;
  ID              FProcessInstanceId;
  bool            FProcessInstanceId_Specified;
  int             FRemindersSent;
  bool            FRemindersSent_Specified;
  UnicodeString   FStepStatus;
  bool            FStepStatus_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  Name_*           FTargetObject;
  bool            FTargetObject_Specified;
  ID              FTargetObjectId;
  bool            FTargetObjectId_Specified;
  Name_* __fastcall GetActor(int Index)
  {  return FActor;  }
  void __fastcall SetActor(int Index, Name_* _prop_val)
  {  FActor = _prop_val; FActor_Specified = true;  }
  bool __fastcall Actor_Specified(int Index)
  {  return FActor_Specified;  } 
  ID __fastcall GetActorId(int Index)
  {  return FActorId;  }
  void __fastcall SetActorId(int Index, ID _prop_val)
  {  FActorId = _prop_val; FActorId_Specified = true;  }
  bool __fastcall ActorId_Specified(int Index)
  {  return FActorId_Specified;  } 
  UnicodeString __fastcall GetComments(int Index)
  {  return FComments;  }
  void __fastcall SetComments(int Index, UnicodeString _prop_val)
  {  FComments = _prop_val; FComments_Specified = true;  }
  bool __fastcall Comments_Specified(int Index)
  {  return FComments_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsPending(int Index)
  {  return FIsPending;  }
  void __fastcall SetIsPending(int Index, bool _prop_val)
  {  FIsPending = _prop_val; FIsPending_Specified = true;  }
  bool __fastcall IsPending_Specified(int Index)
  {  return FIsPending_Specified;  } 
  Name_* __fastcall GetOriginalActor(int Index)
  {  return FOriginalActor;  }
  void __fastcall SetOriginalActor(int Index, Name_* _prop_val)
  {  FOriginalActor = _prop_val; FOriginalActor_Specified = true;  }
  bool __fastcall OriginalActor_Specified(int Index)
  {  return FOriginalActor_Specified;  } 
  ID __fastcall GetOriginalActorId(int Index)
  {  return FOriginalActorId;  }
  void __fastcall SetOriginalActorId(int Index, ID _prop_val)
  {  FOriginalActorId = _prop_val; FOriginalActorId_Specified = true;  }
  bool __fastcall OriginalActorId_Specified(int Index)
  {  return FOriginalActorId_Specified;  } 
  ProcessInstance* __fastcall GetProcessInstance(int Index)
  {  return FProcessInstance;  }
  void __fastcall SetProcessInstance(int Index, ProcessInstance* _prop_val)
  {  FProcessInstance = _prop_val; FProcessInstance_Specified = true;  }
  bool __fastcall ProcessInstance_Specified(int Index)
  {  return FProcessInstance_Specified;  } 
  ID __fastcall GetProcessInstanceId(int Index)
  {  return FProcessInstanceId;  }
  void __fastcall SetProcessInstanceId(int Index, ID _prop_val)
  {  FProcessInstanceId = _prop_val; FProcessInstanceId_Specified = true;  }
  bool __fastcall ProcessInstanceId_Specified(int Index)
  {  return FProcessInstanceId_Specified;  } 
  int __fastcall GetRemindersSent(int Index)
  {  return FRemindersSent;  }
  void __fastcall SetRemindersSent(int Index, int _prop_val)
  {  FRemindersSent = _prop_val; FRemindersSent_Specified = true;  }
  bool __fastcall RemindersSent_Specified(int Index)
  {  return FRemindersSent_Specified;  } 
  UnicodeString __fastcall GetStepStatus(int Index)
  {  return FStepStatus;  }
  void __fastcall SetStepStatus(int Index, UnicodeString _prop_val)
  {  FStepStatus = _prop_val; FStepStatus_Specified = true;  }
  bool __fastcall StepStatus_Specified(int Index)
  {  return FStepStatus_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  Name_* __fastcall GetTargetObject(int Index)
  {  return FTargetObject;  }
  void __fastcall SetTargetObject(int Index, Name_* _prop_val)
  {  FTargetObject = _prop_val; FTargetObject_Specified = true;  }
  bool __fastcall TargetObject_Specified(int Index)
  {  return FTargetObject_Specified;  } 
  ID __fastcall GetTargetObjectId(int Index)
  {  return FTargetObjectId;  }
  void __fastcall SetTargetObjectId(int Index, ID _prop_val)
  {  FTargetObjectId = _prop_val; FTargetObjectId_Specified = true;  }
  bool __fastcall TargetObjectId_Specified(int Index)
  {  return FTargetObjectId_Specified;  } 

public:
  __fastcall ~ProcessInstanceHistory();
__published:
  __property Name_*           Actor = { index=(IS_OPTN|IS_NLBL), read=FActor, write=SetActor, stored = Actor_Specified };
  __property ID            ActorId = { index=(IS_OPTN|IS_NLBL), read=FActorId, write=SetActorId, stored = ActorId_Specified };
  __property UnicodeString   Comments = { index=(IS_OPTN|IS_NLBL), read=FComments, write=SetComments, stored = Comments_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool        IsPending = { index=(IS_OPTN|IS_NLBL), read=FIsPending, write=SetIsPending, stored = IsPending_Specified };
  __property Name_*      OriginalActor = { index=(IS_OPTN|IS_NLBL), read=FOriginalActor, write=SetOriginalActor, stored = OriginalActor_Specified };
  __property ID         OriginalActorId = { index=(IS_OPTN|IS_NLBL), read=FOriginalActorId, write=SetOriginalActorId, stored = OriginalActorId_Specified };
  __property ProcessInstance* ProcessInstance = { index=(IS_OPTN|IS_NLBL), read=FProcessInstance, write=SetProcessInstance, stored = ProcessInstance_Specified };
  __property ID         ProcessInstanceId = { index=(IS_OPTN|IS_NLBL), read=FProcessInstanceId, write=SetProcessInstanceId, stored = ProcessInstanceId_Specified };
  __property int        RemindersSent = { index=(IS_OPTN|IS_NLBL), read=FRemindersSent, write=SetRemindersSent, stored = RemindersSent_Specified };
  __property UnicodeString StepStatus = { index=(IS_OPTN|IS_NLBL), read=FStepStatus, write=SetStepStatus, stored = StepStatus_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property Name_*      TargetObject = { index=(IS_OPTN|IS_NLBL), read=FTargetObject, write=SetTargetObject, stored = TargetObject_Specified };
  __property ID         TargetObjectId = { index=(IS_OPTN|IS_NLBL), read=FTargetObjectId, write=SetTargetObjectId, stored = TargetObjectId_Specified };
};




// ************************************************************************ //
// XML       : ProcessInstance, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ProcessInstance : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FStatus;
  bool            FStatus_Specified;
  QueryResult*    FSteps;
  bool            FSteps_Specified;
  QueryResult*    FStepsAndWorkitems;
  bool            FStepsAndWorkitems_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  Name_*           FTargetObject;
  bool            FTargetObject_Specified;
  ID              FTargetObjectId;
  bool            FTargetObjectId_Specified;
  QueryResult*    FWorkitems;
  bool            FWorkitems_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetStatus(int Index)
  {  return FStatus;  }
  void __fastcall SetStatus(int Index, UnicodeString _prop_val)
  {  FStatus = _prop_val; FStatus_Specified = true;  }
  bool __fastcall Status_Specified(int Index)
  {  return FStatus_Specified;  } 
  QueryResult* __fastcall GetSteps(int Index)
  {  return FSteps;  }
  void __fastcall SetSteps(int Index, QueryResult* _prop_val)
  {  FSteps = _prop_val; FSteps_Specified = true;  }
  bool __fastcall Steps_Specified(int Index)
  {  return FSteps_Specified;  } 
  QueryResult* __fastcall GetStepsAndWorkitems(int Index)
  {  return FStepsAndWorkitems;  }
  void __fastcall SetStepsAndWorkitems(int Index, QueryResult* _prop_val)
  {  FStepsAndWorkitems = _prop_val; FStepsAndWorkitems_Specified = true;  }
  bool __fastcall StepsAndWorkitems_Specified(int Index)
  {  return FStepsAndWorkitems_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  Name_* __fastcall GetTargetObject(int Index)
  {  return FTargetObject;  }
  void __fastcall SetTargetObject(int Index, Name_* _prop_val)
  {  FTargetObject = _prop_val; FTargetObject_Specified = true;  }
  bool __fastcall TargetObject_Specified(int Index)
  {  return FTargetObject_Specified;  } 
  ID __fastcall GetTargetObjectId(int Index)
  {  return FTargetObjectId;  }
  void __fastcall SetTargetObjectId(int Index, ID _prop_val)
  {  FTargetObjectId = _prop_val; FTargetObjectId_Specified = true;  }
  bool __fastcall TargetObjectId_Specified(int Index)
  {  return FTargetObjectId_Specified;  } 
  QueryResult* __fastcall GetWorkitems(int Index)
  {  return FWorkitems;  }
  void __fastcall SetWorkitems(int Index, QueryResult* _prop_val)
  {  FWorkitems = _prop_val; FWorkitems_Specified = true;  }
  bool __fastcall Workitems_Specified(int Index)
  {  return FWorkitems_Specified;  } 

public:
  __fastcall ~ProcessInstance();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString     Status = { index=(IS_OPTN|IS_NLBL), read=FStatus, write=SetStatus, stored = Status_Specified };
  __property QueryResult*      Steps = { index=(IS_OPTN|IS_NLBL), read=FSteps, write=SetSteps, stored = Steps_Specified };
  __property QueryResult* StepsAndWorkitems = { index=(IS_OPTN|IS_NLBL), read=FStepsAndWorkitems, write=SetStepsAndWorkitems, stored = StepsAndWorkitems_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property Name_*      TargetObject = { index=(IS_OPTN|IS_NLBL), read=FTargetObject, write=SetTargetObject, stored = TargetObject_Specified };
  __property ID         TargetObjectId = { index=(IS_OPTN|IS_NLBL), read=FTargetObjectId, write=SetTargetObjectId, stored = TargetObjectId_Specified };
  __property QueryResult*  Workitems = { index=(IS_OPTN|IS_NLBL), read=FWorkitems, write=SetWorkitems, stored = Workitems_Specified };
};




// ************************************************************************ //
// XML       : PermissionSetAssignment, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class PermissionSetAssignment : public sObject {
private:
  User*           FAssignee;
  bool            FAssignee_Specified;
  ID              FAssigneeId;
  bool            FAssigneeId_Specified;
  PermissionSet*  FPermissionSet;
  bool            FPermissionSet_Specified;
  ID              FPermissionSetId;
  bool            FPermissionSetId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  User* __fastcall GetAssignee(int Index)
  {  return FAssignee;  }
  void __fastcall SetAssignee(int Index, User* _prop_val)
  {  FAssignee = _prop_val; FAssignee_Specified = true;  }
  bool __fastcall Assignee_Specified(int Index)
  {  return FAssignee_Specified;  } 
  ID __fastcall GetAssigneeId(int Index)
  {  return FAssigneeId;  }
  void __fastcall SetAssigneeId(int Index, ID _prop_val)
  {  FAssigneeId = _prop_val; FAssigneeId_Specified = true;  }
  bool __fastcall AssigneeId_Specified(int Index)
  {  return FAssigneeId_Specified;  } 
  PermissionSet* __fastcall GetPermissionSet(int Index)
  {  return FPermissionSet;  }
  void __fastcall SetPermissionSet(int Index, PermissionSet* _prop_val)
  {  FPermissionSet = _prop_val; FPermissionSet_Specified = true;  }
  bool __fastcall PermissionSet_Specified(int Index)
  {  return FPermissionSet_Specified;  } 
  ID __fastcall GetPermissionSetId(int Index)
  {  return FPermissionSetId;  }
  void __fastcall SetPermissionSetId(int Index, ID _prop_val)
  {  FPermissionSetId = _prop_val; FPermissionSetId_Specified = true;  }
  bool __fastcall PermissionSetId_Specified(int Index)
  {  return FPermissionSetId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~PermissionSetAssignment();
__published:
  __property User*        Assignee = { index=(IS_OPTN|IS_NLBL), read=FAssignee, write=SetAssignee, stored = Assignee_Specified };
  __property ID         AssigneeId = { index=(IS_OPTN|IS_NLBL), read=FAssigneeId, write=SetAssigneeId, stored = AssigneeId_Specified };
  __property PermissionSet* PermissionSet = { index=(IS_OPTN|IS_NLBL), read=FPermissionSet, write=SetPermissionSet, stored = PermissionSet_Specified };
  __property ID         PermissionSetId = { index=(IS_OPTN|IS_NLBL), read=FPermissionSetId, write=SetPermissionSetId, stored = PermissionSetId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : UserLicense, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class UserLicense : public sObject {
private:
  UnicodeString   FLicenseDefinitionKey;
  bool            FLicenseDefinitionKey_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString __fastcall GetLicenseDefinitionKey(int Index)
  {  return FLicenseDefinitionKey;  }
  void __fastcall SetLicenseDefinitionKey(int Index, UnicodeString _prop_val)
  {  FLicenseDefinitionKey = _prop_val; FLicenseDefinitionKey_Specified = true;  }
  bool __fastcall LicenseDefinitionKey_Specified(int Index)
  {  return FLicenseDefinitionKey_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~UserLicense();
__published:
  __property UnicodeString LicenseDefinitionKey = { index=(IS_OPTN|IS_NLBL), read=FLicenseDefinitionKey, write=SetLicenseDefinitionKey, stored = LicenseDefinitionKey_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : Period, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Period : public sObject {
private:
  TXSDate*        FEndDate;
  bool            FEndDate_Specified;
  FiscalYearSettings* FFiscalYearSettings;
  bool            FFiscalYearSettings_Specified;
  ID              FFiscalYearSettingsId;
  bool            FFiscalYearSettingsId_Specified;
  bool            FIsForecastPeriod;
  bool            FIsForecastPeriod_Specified;
  int             FNumber;
  bool            FNumber_Specified;
  UnicodeString   FPeriodLabel;
  bool            FPeriodLabel_Specified;
  UnicodeString   FQuarterLabel;
  bool            FQuarterLabel_Specified;
  TXSDate*        FStartDate;
  bool            FStartDate_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  TXSDate* __fastcall GetEndDate(int Index)
  {  return FEndDate;  }
  void __fastcall SetEndDate(int Index, TXSDate* _prop_val)
  {  FEndDate = _prop_val; FEndDate_Specified = true;  }
  bool __fastcall EndDate_Specified(int Index)
  {  return FEndDate_Specified;  } 
  FiscalYearSettings* __fastcall GetFiscalYearSettings(int Index)
  {  return FFiscalYearSettings;  }
  void __fastcall SetFiscalYearSettings(int Index, FiscalYearSettings* _prop_val)
  {  FFiscalYearSettings = _prop_val; FFiscalYearSettings_Specified = true;  }
  bool __fastcall FiscalYearSettings_Specified(int Index)
  {  return FFiscalYearSettings_Specified;  } 
  ID __fastcall GetFiscalYearSettingsId(int Index)
  {  return FFiscalYearSettingsId;  }
  void __fastcall SetFiscalYearSettingsId(int Index, ID _prop_val)
  {  FFiscalYearSettingsId = _prop_val; FFiscalYearSettingsId_Specified = true;  }
  bool __fastcall FiscalYearSettingsId_Specified(int Index)
  {  return FFiscalYearSettingsId_Specified;  } 
  bool __fastcall GetIsForecastPeriod(int Index)
  {  return FIsForecastPeriod;  }
  void __fastcall SetIsForecastPeriod(int Index, bool _prop_val)
  {  FIsForecastPeriod = _prop_val; FIsForecastPeriod_Specified = true;  }
  bool __fastcall IsForecastPeriod_Specified(int Index)
  {  return FIsForecastPeriod_Specified;  } 
  int __fastcall GetNumber(int Index)
  {  return FNumber;  }
  void __fastcall SetNumber(int Index, int _prop_val)
  {  FNumber = _prop_val; FNumber_Specified = true;  }
  bool __fastcall Number_Specified(int Index)
  {  return FNumber_Specified;  } 
  UnicodeString __fastcall GetPeriodLabel(int Index)
  {  return FPeriodLabel;  }
  void __fastcall SetPeriodLabel(int Index, UnicodeString _prop_val)
  {  FPeriodLabel = _prop_val; FPeriodLabel_Specified = true;  }
  bool __fastcall PeriodLabel_Specified(int Index)
  {  return FPeriodLabel_Specified;  } 
  UnicodeString __fastcall GetQuarterLabel(int Index)
  {  return FQuarterLabel;  }
  void __fastcall SetQuarterLabel(int Index, UnicodeString _prop_val)
  {  FQuarterLabel = _prop_val; FQuarterLabel_Specified = true;  }
  bool __fastcall QuarterLabel_Specified(int Index)
  {  return FQuarterLabel_Specified;  } 
  TXSDate* __fastcall GetStartDate(int Index)
  {  return FStartDate;  }
  void __fastcall SetStartDate(int Index, TXSDate* _prop_val)
  {  FStartDate = _prop_val; FStartDate_Specified = true;  }
  bool __fastcall StartDate_Specified(int Index)
  {  return FStartDate_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~Period();
__published:
  __property TXSDate*      EndDate = { index=(IS_OPTN|IS_NLBL), read=FEndDate, write=SetEndDate, stored = EndDate_Specified };
  __property FiscalYearSettings* FiscalYearSettings = { index=(IS_OPTN|IS_NLBL), read=FFiscalYearSettings, write=SetFiscalYearSettings, stored = FiscalYearSettings_Specified };
  __property ID         FiscalYearSettingsId = { index=(IS_OPTN|IS_NLBL), read=FFiscalYearSettingsId, write=SetFiscalYearSettingsId, stored = FiscalYearSettingsId_Specified };
  __property bool       IsForecastPeriod = { index=(IS_OPTN|IS_NLBL), read=FIsForecastPeriod, write=SetIsForecastPeriod, stored = IsForecastPeriod_Specified };
  __property int            Number = { index=(IS_OPTN|IS_NLBL), read=FNumber, write=SetNumber, stored = Number_Specified };
  __property UnicodeString PeriodLabel = { index=(IS_OPTN|IS_NLBL), read=FPeriodLabel, write=SetPeriodLabel, stored = PeriodLabel_Specified };
  __property UnicodeString QuarterLabel = { index=(IS_OPTN|IS_NLBL), read=FQuarterLabel, write=SetQuarterLabel, stored = QuarterLabel_Specified };
  __property TXSDate*    StartDate = { index=(IS_OPTN|IS_NLBL), read=FStartDate, write=SetStartDate, stored = StartDate_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : PartnerRole, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class PartnerRole : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FMasterLabel;
  bool            FMasterLabel_Specified;
  UnicodeString   FReverseRole;
  bool            FReverseRole_Specified;
  int             FSortOrder;
  bool            FSortOrder_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetMasterLabel(int Index)
  {  return FMasterLabel;  }
  void __fastcall SetMasterLabel(int Index, UnicodeString _prop_val)
  {  FMasterLabel = _prop_val; FMasterLabel_Specified = true;  }
  bool __fastcall MasterLabel_Specified(int Index)
  {  return FMasterLabel_Specified;  } 
  UnicodeString __fastcall GetReverseRole(int Index)
  {  return FReverseRole;  }
  void __fastcall SetReverseRole(int Index, UnicodeString _prop_val)
  {  FReverseRole = _prop_val; FReverseRole_Specified = true;  }
  bool __fastcall ReverseRole_Specified(int Index)
  {  return FReverseRole_Specified;  } 
  int __fastcall GetSortOrder(int Index)
  {  return FSortOrder;  }
  void __fastcall SetSortOrder(int Index, int _prop_val)
  {  FSortOrder = _prop_val; FSortOrder_Specified = true;  }
  bool __fastcall SortOrder_Specified(int Index)
  {  return FSortOrder_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~PartnerRole();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString MasterLabel = { index=(IS_OPTN|IS_NLBL), read=FMasterLabel, write=SetMasterLabel, stored = MasterLabel_Specified };
  __property UnicodeString ReverseRole = { index=(IS_OPTN|IS_NLBL), read=FReverseRole, write=SetReverseRole, stored = ReverseRole_Specified };
  __property int         SortOrder = { index=(IS_OPTN|IS_NLBL), read=FSortOrder, write=SetSortOrder, stored = SortOrder_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : Partner, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Partner : public sObject {
private:
  Account*        FAccountFrom;
  bool            FAccountFrom_Specified;
  ID              FAccountFromId;
  bool            FAccountFromId_Specified;
  Account*        FAccountTo;
  bool            FAccountTo_Specified;
  ID              FAccountToId;
  bool            FAccountToId_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsPrimary;
  bool            FIsPrimary_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  Opportunity*    FOpportunity;
  bool            FOpportunity_Specified;
  ID              FOpportunityId;
  bool            FOpportunityId_Specified;
  ID              FReversePartnerId;
  bool            FReversePartnerId_Specified;
  UnicodeString   FRole;
  bool            FRole_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  Account* __fastcall GetAccountFrom(int Index)
  {  return FAccountFrom;  }
  void __fastcall SetAccountFrom(int Index, Account* _prop_val)
  {  FAccountFrom = _prop_val; FAccountFrom_Specified = true;  }
  bool __fastcall AccountFrom_Specified(int Index)
  {  return FAccountFrom_Specified;  } 
  ID __fastcall GetAccountFromId(int Index)
  {  return FAccountFromId;  }
  void __fastcall SetAccountFromId(int Index, ID _prop_val)
  {  FAccountFromId = _prop_val; FAccountFromId_Specified = true;  }
  bool __fastcall AccountFromId_Specified(int Index)
  {  return FAccountFromId_Specified;  } 
  Account* __fastcall GetAccountTo(int Index)
  {  return FAccountTo;  }
  void __fastcall SetAccountTo(int Index, Account* _prop_val)
  {  FAccountTo = _prop_val; FAccountTo_Specified = true;  }
  bool __fastcall AccountTo_Specified(int Index)
  {  return FAccountTo_Specified;  } 
  ID __fastcall GetAccountToId(int Index)
  {  return FAccountToId;  }
  void __fastcall SetAccountToId(int Index, ID _prop_val)
  {  FAccountToId = _prop_val; FAccountToId_Specified = true;  }
  bool __fastcall AccountToId_Specified(int Index)
  {  return FAccountToId_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsPrimary(int Index)
  {  return FIsPrimary;  }
  void __fastcall SetIsPrimary(int Index, bool _prop_val)
  {  FIsPrimary = _prop_val; FIsPrimary_Specified = true;  }
  bool __fastcall IsPrimary_Specified(int Index)
  {  return FIsPrimary_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  Opportunity* __fastcall GetOpportunity(int Index)
  {  return FOpportunity;  }
  void __fastcall SetOpportunity(int Index, Opportunity* _prop_val)
  {  FOpportunity = _prop_val; FOpportunity_Specified = true;  }
  bool __fastcall Opportunity_Specified(int Index)
  {  return FOpportunity_Specified;  } 
  ID __fastcall GetOpportunityId(int Index)
  {  return FOpportunityId;  }
  void __fastcall SetOpportunityId(int Index, ID _prop_val)
  {  FOpportunityId = _prop_val; FOpportunityId_Specified = true;  }
  bool __fastcall OpportunityId_Specified(int Index)
  {  return FOpportunityId_Specified;  } 
  ID __fastcall GetReversePartnerId(int Index)
  {  return FReversePartnerId;  }
  void __fastcall SetReversePartnerId(int Index, ID _prop_val)
  {  FReversePartnerId = _prop_val; FReversePartnerId_Specified = true;  }
  bool __fastcall ReversePartnerId_Specified(int Index)
  {  return FReversePartnerId_Specified;  } 
  UnicodeString __fastcall GetRole(int Index)
  {  return FRole;  }
  void __fastcall SetRole(int Index, UnicodeString _prop_val)
  {  FRole = _prop_val; FRole_Specified = true;  }
  bool __fastcall Role_Specified(int Index)
  {  return FRole_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~Partner();
__published:
  __property Account*   AccountFrom = { index=(IS_OPTN|IS_NLBL), read=FAccountFrom, write=SetAccountFrom, stored = AccountFrom_Specified };
  __property ID         AccountFromId = { index=(IS_OPTN|IS_NLBL), read=FAccountFromId, write=SetAccountFromId, stored = AccountFromId_Specified };
  __property Account*    AccountTo = { index=(IS_OPTN|IS_NLBL), read=FAccountTo, write=SetAccountTo, stored = AccountTo_Specified };
  __property ID         AccountToId = { index=(IS_OPTN|IS_NLBL), read=FAccountToId, write=SetAccountToId, stored = AccountToId_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool        IsPrimary = { index=(IS_OPTN|IS_NLBL), read=FIsPrimary, write=SetIsPrimary, stored = IsPrimary_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property Opportunity* Opportunity = { index=(IS_OPTN|IS_NLBL), read=FOpportunity, write=SetOpportunity, stored = Opportunity_Specified };
  __property ID         OpportunityId = { index=(IS_OPTN|IS_NLBL), read=FOpportunityId, write=SetOpportunityId, stored = OpportunityId_Specified };
  __property ID         ReversePartnerId = { index=(IS_OPTN|IS_NLBL), read=FReversePartnerId, write=SetReversePartnerId, stored = ReversePartnerId_Specified };
  __property UnicodeString       Role = { index=(IS_OPTN|IS_NLBL), read=FRole, write=SetRole, stored = Role_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : PLU_Stock__c, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class PLU_Stock__c : public sObject {
private:
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  double          FAverage_Cost__c;
  bool            FAverage_Cost__c_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  ID              FDay__c_;
  bool            FDay__c__Specified;
  Day__c_*         FDay__r;
  bool            FDay__r_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  double          FLast_Cost_Price__c;
  bool            FLast_Cost_Price__c_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  QueryResult*    FNotes;
  bool            FNotes_Specified;
  QueryResult*    FNotesAndAttachments;
  bool            FNotesAndAttachments_Specified;
  Name_*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  double          FQuantity__c;
  bool            FQuantity__c_Specified;
  UnicodeString   FStock_Code__c;
  bool            FStock_Code__c_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  double __fastcall GetAverage_Cost__c(int Index)
  {  return FAverage_Cost__c;  }
  void __fastcall SetAverage_Cost__c(int Index, double _prop_val)
  {  FAverage_Cost__c = _prop_val; FAverage_Cost__c_Specified = true;  }
  bool __fastcall Average_Cost__c_Specified(int Index)
  {  return FAverage_Cost__c_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  ID __fastcall GetDay__c_(int Index)
  {  return FDay__c_;  }
  void __fastcall SetDay__c_(int Index, ID _prop_val)
  {  FDay__c_ = _prop_val; FDay__c__Specified = true;  }
  bool __fastcall Day__c__Specified(int Index)
  {  return FDay__c__Specified;  } 
  Day__c_* __fastcall GetDay__r(int Index)
  {  return FDay__r;  }
  void __fastcall SetDay__r(int Index, Day__c_* _prop_val)
  {  FDay__r = _prop_val; FDay__r_Specified = true;  }
  bool __fastcall Day__r_Specified(int Index)
  {  return FDay__r_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  double __fastcall GetLast_Cost_Price__c(int Index)
  {  return FLast_Cost_Price__c;  }
  void __fastcall SetLast_Cost_Price__c(int Index, double _prop_val)
  {  FLast_Cost_Price__c = _prop_val; FLast_Cost_Price__c_Specified = true;  }
  bool __fastcall Last_Cost_Price__c_Specified(int Index)
  {  return FLast_Cost_Price__c_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  QueryResult* __fastcall GetNotes(int Index)
  {  return FNotes;  }
  void __fastcall SetNotes(int Index, QueryResult* _prop_val)
  {  FNotes = _prop_val; FNotes_Specified = true;  }
  bool __fastcall Notes_Specified(int Index)
  {  return FNotes_Specified;  } 
  QueryResult* __fastcall GetNotesAndAttachments(int Index)
  {  return FNotesAndAttachments;  }
  void __fastcall SetNotesAndAttachments(int Index, QueryResult* _prop_val)
  {  FNotesAndAttachments = _prop_val; FNotesAndAttachments_Specified = true;  }
  bool __fastcall NotesAndAttachments_Specified(int Index)
  {  return FNotesAndAttachments_Specified;  } 
  Name_* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, Name_* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  double __fastcall GetQuantity__c(int Index)
  {  return FQuantity__c;  }
  void __fastcall SetQuantity__c(int Index, double _prop_val)
  {  FQuantity__c = _prop_val; FQuantity__c_Specified = true;  }
  bool __fastcall Quantity__c_Specified(int Index)
  {  return FQuantity__c_Specified;  } 
  UnicodeString __fastcall GetStock_Code__c(int Index)
  {  return FStock_Code__c;  }
  void __fastcall SetStock_Code__c(int Index, UnicodeString _prop_val)
  {  FStock_Code__c = _prop_val; FStock_Code__c_Specified = true;  }
  bool __fastcall Stock_Code__c_Specified(int Index)
  {  return FStock_Code__c_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~PLU_Stock__c();
__published:
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property double     Average_Cost__c = { index=(IS_OPTN|IS_NLBL), read=FAverage_Cost__c, write=SetAverage_Cost__c, stored = Average_Cost__c_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property ID             Day__c = { index=(IS_OPTN|IS_NLBL), read=FDay__c_, write=SetDay__c_, stored = Day__c__Specified };
  __property Day__c_*        Day__r = { index=(IS_OPTN|IS_NLBL), read=FDay__r, write=SetDay__r, stored = Day__r_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property double     Last_Cost_Price__c = { index=(IS_OPTN|IS_NLBL), read=FLast_Cost_Price__c, write=SetLast_Cost_Price__c, stored = Last_Cost_Price__c_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property QueryResult*      Notes = { index=(IS_OPTN|IS_NLBL), read=FNotes, write=SetNotes, stored = Notes_Specified };
  __property QueryResult* NotesAndAttachments = { index=(IS_OPTN|IS_NLBL), read=FNotesAndAttachments, write=SetNotesAndAttachments, stored = NotesAndAttachments_Specified };
  __property Name_*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property double     Quantity__c = { index=(IS_OPTN|IS_NLBL), read=FQuantity__c, write=SetQuantity__c, stored = Quantity__c_Specified };
  __property UnicodeString Stock_Code__c = { index=(IS_OPTN|IS_NLBL), read=FStock_Code__c, write=SetStock_Code__c, stored = Stock_Code__c_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : Organization, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Organization : public sObject {
private:
  UnicodeString   FCity;
  bool            FCity_Specified;
  UnicodeString   FComplianceBccEmail;
  bool            FComplianceBccEmail_Specified;
  UnicodeString   FCountry;
  bool            FCountry_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDefaultAccountAccess;
  bool            FDefaultAccountAccess_Specified;
  UnicodeString   FDefaultCalendarAccess;
  bool            FDefaultCalendarAccess_Specified;
  UnicodeString   FDefaultCampaignAccess;
  bool            FDefaultCampaignAccess_Specified;
  UnicodeString   FDefaultCaseAccess;
  bool            FDefaultCaseAccess_Specified;
  UnicodeString   FDefaultContactAccess;
  bool            FDefaultContactAccess_Specified;
  UnicodeString   FDefaultLeadAccess;
  bool            FDefaultLeadAccess_Specified;
  UnicodeString   FDefaultLocaleSidKey;
  bool            FDefaultLocaleSidKey_Specified;
  UnicodeString   FDefaultOpportunityAccess;
  bool            FDefaultOpportunityAccess_Specified;
  UnicodeString   FDefaultPricebookAccess;
  bool            FDefaultPricebookAccess_Specified;
  UnicodeString   FDivision;
  bool            FDivision_Specified;
  UnicodeString   FFax;
  bool            FFax_Specified;
  int             FFiscalYearStartMonth;
  bool            FFiscalYearStartMonth_Specified;
  UnicodeString   FLanguageLocaleKey;
  bool            FLanguageLocaleKey_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FMonthlyPageViewsEntitlement;
  bool            FMonthlyPageViewsEntitlement_Specified;
  int             FMonthlyPageViewsUsed;
  bool            FMonthlyPageViewsUsed_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  UnicodeString   FOrganizationType;
  bool            FOrganizationType_Specified;
  UnicodeString   FPhone;
  bool            FPhone_Specified;
  UnicodeString   FPostalCode;
  bool            FPostalCode_Specified;
  bool            FPreferencesRequireOpportunityProducts;
  bool            FPreferencesRequireOpportunityProducts_Specified;
  UnicodeString   FPrimaryContact;
  bool            FPrimaryContact_Specified;
  bool            FReceivesAdminInfoEmails;
  bool            FReceivesAdminInfoEmails_Specified;
  bool            FReceivesInfoEmails;
  bool            FReceivesInfoEmails_Specified;
  UnicodeString   FState;
  bool            FState_Specified;
  UnicodeString   FStreet;
  bool            FStreet_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  TXSDateTime*    FTrialExpirationDate;
  bool            FTrialExpirationDate_Specified;
  UnicodeString   FUiSkin;
  bool            FUiSkin_Specified;
  bool            FUsesStartDateAsFiscalYearName;
  bool            FUsesStartDateAsFiscalYearName_Specified;
  UnicodeString   FWebToCaseDefaultOrigin;
  bool            FWebToCaseDefaultOrigin_Specified;
  UnicodeString __fastcall GetCity(int Index)
  {  return FCity;  }
  void __fastcall SetCity(int Index, UnicodeString _prop_val)
  {  FCity = _prop_val; FCity_Specified = true;  }
  bool __fastcall City_Specified(int Index)
  {  return FCity_Specified;  } 
  UnicodeString __fastcall GetComplianceBccEmail(int Index)
  {  return FComplianceBccEmail;  }
  void __fastcall SetComplianceBccEmail(int Index, UnicodeString _prop_val)
  {  FComplianceBccEmail = _prop_val; FComplianceBccEmail_Specified = true;  }
  bool __fastcall ComplianceBccEmail_Specified(int Index)
  {  return FComplianceBccEmail_Specified;  } 
  UnicodeString __fastcall GetCountry(int Index)
  {  return FCountry;  }
  void __fastcall SetCountry(int Index, UnicodeString _prop_val)
  {  FCountry = _prop_val; FCountry_Specified = true;  }
  bool __fastcall Country_Specified(int Index)
  {  return FCountry_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDefaultAccountAccess(int Index)
  {  return FDefaultAccountAccess;  }
  void __fastcall SetDefaultAccountAccess(int Index, UnicodeString _prop_val)
  {  FDefaultAccountAccess = _prop_val; FDefaultAccountAccess_Specified = true;  }
  bool __fastcall DefaultAccountAccess_Specified(int Index)
  {  return FDefaultAccountAccess_Specified;  } 
  UnicodeString __fastcall GetDefaultCalendarAccess(int Index)
  {  return FDefaultCalendarAccess;  }
  void __fastcall SetDefaultCalendarAccess(int Index, UnicodeString _prop_val)
  {  FDefaultCalendarAccess = _prop_val; FDefaultCalendarAccess_Specified = true;  }
  bool __fastcall DefaultCalendarAccess_Specified(int Index)
  {  return FDefaultCalendarAccess_Specified;  } 
  UnicodeString __fastcall GetDefaultCampaignAccess(int Index)
  {  return FDefaultCampaignAccess;  }
  void __fastcall SetDefaultCampaignAccess(int Index, UnicodeString _prop_val)
  {  FDefaultCampaignAccess = _prop_val; FDefaultCampaignAccess_Specified = true;  }
  bool __fastcall DefaultCampaignAccess_Specified(int Index)
  {  return FDefaultCampaignAccess_Specified;  } 
  UnicodeString __fastcall GetDefaultCaseAccess(int Index)
  {  return FDefaultCaseAccess;  }
  void __fastcall SetDefaultCaseAccess(int Index, UnicodeString _prop_val)
  {  FDefaultCaseAccess = _prop_val; FDefaultCaseAccess_Specified = true;  }
  bool __fastcall DefaultCaseAccess_Specified(int Index)
  {  return FDefaultCaseAccess_Specified;  } 
  UnicodeString __fastcall GetDefaultContactAccess(int Index)
  {  return FDefaultContactAccess;  }
  void __fastcall SetDefaultContactAccess(int Index, UnicodeString _prop_val)
  {  FDefaultContactAccess = _prop_val; FDefaultContactAccess_Specified = true;  }
  bool __fastcall DefaultContactAccess_Specified(int Index)
  {  return FDefaultContactAccess_Specified;  } 
  UnicodeString __fastcall GetDefaultLeadAccess(int Index)
  {  return FDefaultLeadAccess;  }
  void __fastcall SetDefaultLeadAccess(int Index, UnicodeString _prop_val)
  {  FDefaultLeadAccess = _prop_val; FDefaultLeadAccess_Specified = true;  }
  bool __fastcall DefaultLeadAccess_Specified(int Index)
  {  return FDefaultLeadAccess_Specified;  } 
  UnicodeString __fastcall GetDefaultLocaleSidKey(int Index)
  {  return FDefaultLocaleSidKey;  }
  void __fastcall SetDefaultLocaleSidKey(int Index, UnicodeString _prop_val)
  {  FDefaultLocaleSidKey = _prop_val; FDefaultLocaleSidKey_Specified = true;  }
  bool __fastcall DefaultLocaleSidKey_Specified(int Index)
  {  return FDefaultLocaleSidKey_Specified;  } 
  UnicodeString __fastcall GetDefaultOpportunityAccess(int Index)
  {  return FDefaultOpportunityAccess;  }
  void __fastcall SetDefaultOpportunityAccess(int Index, UnicodeString _prop_val)
  {  FDefaultOpportunityAccess = _prop_val; FDefaultOpportunityAccess_Specified = true;  }
  bool __fastcall DefaultOpportunityAccess_Specified(int Index)
  {  return FDefaultOpportunityAccess_Specified;  } 
  UnicodeString __fastcall GetDefaultPricebookAccess(int Index)
  {  return FDefaultPricebookAccess;  }
  void __fastcall SetDefaultPricebookAccess(int Index, UnicodeString _prop_val)
  {  FDefaultPricebookAccess = _prop_val; FDefaultPricebookAccess_Specified = true;  }
  bool __fastcall DefaultPricebookAccess_Specified(int Index)
  {  return FDefaultPricebookAccess_Specified;  } 
  UnicodeString __fastcall GetDivision(int Index)
  {  return FDivision;  }
  void __fastcall SetDivision(int Index, UnicodeString _prop_val)
  {  FDivision = _prop_val; FDivision_Specified = true;  }
  bool __fastcall Division_Specified(int Index)
  {  return FDivision_Specified;  } 
  UnicodeString __fastcall GetFax(int Index)
  {  return FFax;  }
  void __fastcall SetFax(int Index, UnicodeString _prop_val)
  {  FFax = _prop_val; FFax_Specified = true;  }
  bool __fastcall Fax_Specified(int Index)
  {  return FFax_Specified;  } 
  int __fastcall GetFiscalYearStartMonth(int Index)
  {  return FFiscalYearStartMonth;  }
  void __fastcall SetFiscalYearStartMonth(int Index, int _prop_val)
  {  FFiscalYearStartMonth = _prop_val; FFiscalYearStartMonth_Specified = true;  }
  bool __fastcall FiscalYearStartMonth_Specified(int Index)
  {  return FFiscalYearStartMonth_Specified;  } 
  UnicodeString __fastcall GetLanguageLocaleKey(int Index)
  {  return FLanguageLocaleKey;  }
  void __fastcall SetLanguageLocaleKey(int Index, UnicodeString _prop_val)
  {  FLanguageLocaleKey = _prop_val; FLanguageLocaleKey_Specified = true;  }
  bool __fastcall LanguageLocaleKey_Specified(int Index)
  {  return FLanguageLocaleKey_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetMonthlyPageViewsEntitlement(int Index)
  {  return FMonthlyPageViewsEntitlement;  }
  void __fastcall SetMonthlyPageViewsEntitlement(int Index, int _prop_val)
  {  FMonthlyPageViewsEntitlement = _prop_val; FMonthlyPageViewsEntitlement_Specified = true;  }
  bool __fastcall MonthlyPageViewsEntitlement_Specified(int Index)
  {  return FMonthlyPageViewsEntitlement_Specified;  } 
  int __fastcall GetMonthlyPageViewsUsed(int Index)
  {  return FMonthlyPageViewsUsed;  }
  void __fastcall SetMonthlyPageViewsUsed(int Index, int _prop_val)
  {  FMonthlyPageViewsUsed = _prop_val; FMonthlyPageViewsUsed_Specified = true;  }
  bool __fastcall MonthlyPageViewsUsed_Specified(int Index)
  {  return FMonthlyPageViewsUsed_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  UnicodeString __fastcall GetOrganizationType(int Index)
  {  return FOrganizationType;  }
  void __fastcall SetOrganizationType(int Index, UnicodeString _prop_val)
  {  FOrganizationType = _prop_val; FOrganizationType_Specified = true;  }
  bool __fastcall OrganizationType_Specified(int Index)
  {  return FOrganizationType_Specified;  } 
  UnicodeString __fastcall GetPhone(int Index)
  {  return FPhone;  }
  void __fastcall SetPhone(int Index, UnicodeString _prop_val)
  {  FPhone = _prop_val; FPhone_Specified = true;  }
  bool __fastcall Phone_Specified(int Index)
  {  return FPhone_Specified;  } 
  UnicodeString __fastcall GetPostalCode(int Index)
  {  return FPostalCode;  }
  void __fastcall SetPostalCode(int Index, UnicodeString _prop_val)
  {  FPostalCode = _prop_val; FPostalCode_Specified = true;  }
  bool __fastcall PostalCode_Specified(int Index)
  {  return FPostalCode_Specified;  } 
  bool __fastcall GetPreferencesRequireOpportunityProducts(int Index)
  {  return FPreferencesRequireOpportunityProducts;  }
  void __fastcall SetPreferencesRequireOpportunityProducts(int Index, bool _prop_val)
  {  FPreferencesRequireOpportunityProducts = _prop_val; FPreferencesRequireOpportunityProducts_Specified = true;  }
  bool __fastcall PreferencesRequireOpportunityProducts_Specified(int Index)
  {  return FPreferencesRequireOpportunityProducts_Specified;  } 
  UnicodeString __fastcall GetPrimaryContact(int Index)
  {  return FPrimaryContact;  }
  void __fastcall SetPrimaryContact(int Index, UnicodeString _prop_val)
  {  FPrimaryContact = _prop_val; FPrimaryContact_Specified = true;  }
  bool __fastcall PrimaryContact_Specified(int Index)
  {  return FPrimaryContact_Specified;  } 
  bool __fastcall GetReceivesAdminInfoEmails(int Index)
  {  return FReceivesAdminInfoEmails;  }
  void __fastcall SetReceivesAdminInfoEmails(int Index, bool _prop_val)
  {  FReceivesAdminInfoEmails = _prop_val; FReceivesAdminInfoEmails_Specified = true;  }
  bool __fastcall ReceivesAdminInfoEmails_Specified(int Index)
  {  return FReceivesAdminInfoEmails_Specified;  } 
  bool __fastcall GetReceivesInfoEmails(int Index)
  {  return FReceivesInfoEmails;  }
  void __fastcall SetReceivesInfoEmails(int Index, bool _prop_val)
  {  FReceivesInfoEmails = _prop_val; FReceivesInfoEmails_Specified = true;  }
  bool __fastcall ReceivesInfoEmails_Specified(int Index)
  {  return FReceivesInfoEmails_Specified;  } 
  UnicodeString __fastcall GetState(int Index)
  {  return FState;  }
  void __fastcall SetState(int Index, UnicodeString _prop_val)
  {  FState = _prop_val; FState_Specified = true;  }
  bool __fastcall State_Specified(int Index)
  {  return FState_Specified;  } 
  UnicodeString __fastcall GetStreet(int Index)
  {  return FStreet;  }
  void __fastcall SetStreet(int Index, UnicodeString _prop_val)
  {  FStreet = _prop_val; FStreet_Specified = true;  }
  bool __fastcall Street_Specified(int Index)
  {  return FStreet_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  TXSDateTime* __fastcall GetTrialExpirationDate(int Index)
  {  return FTrialExpirationDate;  }
  void __fastcall SetTrialExpirationDate(int Index, TXSDateTime* _prop_val)
  {  FTrialExpirationDate = _prop_val; FTrialExpirationDate_Specified = true;  }
  bool __fastcall TrialExpirationDate_Specified(int Index)
  {  return FTrialExpirationDate_Specified;  } 
  UnicodeString __fastcall GetUiSkin(int Index)
  {  return FUiSkin;  }
  void __fastcall SetUiSkin(int Index, UnicodeString _prop_val)
  {  FUiSkin = _prop_val; FUiSkin_Specified = true;  }
  bool __fastcall UiSkin_Specified(int Index)
  {  return FUiSkin_Specified;  } 
  bool __fastcall GetUsesStartDateAsFiscalYearName(int Index)
  {  return FUsesStartDateAsFiscalYearName;  }
  void __fastcall SetUsesStartDateAsFiscalYearName(int Index, bool _prop_val)
  {  FUsesStartDateAsFiscalYearName = _prop_val; FUsesStartDateAsFiscalYearName_Specified = true;  }
  bool __fastcall UsesStartDateAsFiscalYearName_Specified(int Index)
  {  return FUsesStartDateAsFiscalYearName_Specified;  } 
  UnicodeString __fastcall GetWebToCaseDefaultOrigin(int Index)
  {  return FWebToCaseDefaultOrigin;  }
  void __fastcall SetWebToCaseDefaultOrigin(int Index, UnicodeString _prop_val)
  {  FWebToCaseDefaultOrigin = _prop_val; FWebToCaseDefaultOrigin_Specified = true;  }
  bool __fastcall WebToCaseDefaultOrigin_Specified(int Index)
  {  return FWebToCaseDefaultOrigin_Specified;  } 

public:
  __fastcall ~Organization();
__published:
  __property UnicodeString       City = { index=(IS_OPTN|IS_NLBL), read=FCity, write=SetCity, stored = City_Specified };
  __property UnicodeString ComplianceBccEmail = { index=(IS_OPTN|IS_NLBL), read=FComplianceBccEmail, write=SetComplianceBccEmail, stored = ComplianceBccEmail_Specified };
  __property UnicodeString    Country = { index=(IS_OPTN|IS_NLBL), read=FCountry, write=SetCountry, stored = Country_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString DefaultAccountAccess = { index=(IS_OPTN|IS_NLBL), read=FDefaultAccountAccess, write=SetDefaultAccountAccess, stored = DefaultAccountAccess_Specified };
  __property UnicodeString DefaultCalendarAccess = { index=(IS_OPTN|IS_NLBL), read=FDefaultCalendarAccess, write=SetDefaultCalendarAccess, stored = DefaultCalendarAccess_Specified };
  __property UnicodeString DefaultCampaignAccess = { index=(IS_OPTN|IS_NLBL), read=FDefaultCampaignAccess, write=SetDefaultCampaignAccess, stored = DefaultCampaignAccess_Specified };
  __property UnicodeString DefaultCaseAccess = { index=(IS_OPTN|IS_NLBL), read=FDefaultCaseAccess, write=SetDefaultCaseAccess, stored = DefaultCaseAccess_Specified };
  __property UnicodeString DefaultContactAccess = { index=(IS_OPTN|IS_NLBL), read=FDefaultContactAccess, write=SetDefaultContactAccess, stored = DefaultContactAccess_Specified };
  __property UnicodeString DefaultLeadAccess = { index=(IS_OPTN|IS_NLBL), read=FDefaultLeadAccess, write=SetDefaultLeadAccess, stored = DefaultLeadAccess_Specified };
  __property UnicodeString DefaultLocaleSidKey = { index=(IS_OPTN|IS_NLBL), read=FDefaultLocaleSidKey, write=SetDefaultLocaleSidKey, stored = DefaultLocaleSidKey_Specified };
  __property UnicodeString DefaultOpportunityAccess = { index=(IS_OPTN|IS_NLBL), read=FDefaultOpportunityAccess, write=SetDefaultOpportunityAccess, stored = DefaultOpportunityAccess_Specified };
  __property UnicodeString DefaultPricebookAccess = { index=(IS_OPTN|IS_NLBL), read=FDefaultPricebookAccess, write=SetDefaultPricebookAccess, stored = DefaultPricebookAccess_Specified };
  __property UnicodeString   Division = { index=(IS_OPTN|IS_NLBL), read=FDivision, write=SetDivision, stored = Division_Specified };
  __property UnicodeString        Fax = { index=(IS_OPTN|IS_NLBL), read=FFax, write=SetFax, stored = Fax_Specified };
  __property int        FiscalYearStartMonth = { index=(IS_OPTN|IS_NLBL), read=FFiscalYearStartMonth, write=SetFiscalYearStartMonth, stored = FiscalYearStartMonth_Specified };
  __property UnicodeString LanguageLocaleKey = { index=(IS_OPTN|IS_NLBL), read=FLanguageLocaleKey, write=SetLanguageLocaleKey, stored = LanguageLocaleKey_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int        MonthlyPageViewsEntitlement = { index=(IS_OPTN|IS_NLBL), read=FMonthlyPageViewsEntitlement, write=SetMonthlyPageViewsEntitlement, stored = MonthlyPageViewsEntitlement_Specified };
  __property int        MonthlyPageViewsUsed = { index=(IS_OPTN|IS_NLBL), read=FMonthlyPageViewsUsed, write=SetMonthlyPageViewsUsed, stored = MonthlyPageViewsUsed_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property UnicodeString OrganizationType = { index=(IS_OPTN|IS_NLBL), read=FOrganizationType, write=SetOrganizationType, stored = OrganizationType_Specified };
  __property UnicodeString      Phone = { index=(IS_OPTN|IS_NLBL), read=FPhone, write=SetPhone, stored = Phone_Specified };
  __property UnicodeString PostalCode = { index=(IS_OPTN|IS_NLBL), read=FPostalCode, write=SetPostalCode, stored = PostalCode_Specified };
  __property bool       PreferencesRequireOpportunityProducts = { index=(IS_OPTN|IS_NLBL), read=FPreferencesRequireOpportunityProducts, write=SetPreferencesRequireOpportunityProducts, stored = PreferencesRequireOpportunityProducts_Specified };
  __property UnicodeString PrimaryContact = { index=(IS_OPTN|IS_NLBL), read=FPrimaryContact, write=SetPrimaryContact, stored = PrimaryContact_Specified };
  __property bool       ReceivesAdminInfoEmails = { index=(IS_OPTN|IS_NLBL), read=FReceivesAdminInfoEmails, write=SetReceivesAdminInfoEmails, stored = ReceivesAdminInfoEmails_Specified };
  __property bool       ReceivesInfoEmails = { index=(IS_OPTN|IS_NLBL), read=FReceivesInfoEmails, write=SetReceivesInfoEmails, stored = ReceivesInfoEmails_Specified };
  __property UnicodeString      State = { index=(IS_OPTN|IS_NLBL), read=FState, write=SetState, stored = State_Specified };
  __property UnicodeString     Street = { index=(IS_OPTN|IS_NLBL), read=FStreet, write=SetStreet, stored = Street_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property TXSDateTime* TrialExpirationDate = { index=(IS_OPTN|IS_NLBL), read=FTrialExpirationDate, write=SetTrialExpirationDate, stored = TrialExpirationDate_Specified };
  __property UnicodeString     UiSkin = { index=(IS_OPTN|IS_NLBL), read=FUiSkin, write=SetUiSkin, stored = UiSkin_Specified };
  __property bool       UsesStartDateAsFiscalYearName = { index=(IS_OPTN|IS_NLBL), read=FUsesStartDateAsFiscalYearName, write=SetUsesStartDateAsFiscalYearName, stored = UsesStartDateAsFiscalYearName_Specified };
  __property UnicodeString WebToCaseDefaultOrigin = { index=(IS_OPTN|IS_NLBL), read=FWebToCaseDefaultOrigin, write=SetWebToCaseDefaultOrigin, stored = WebToCaseDefaultOrigin_Specified };
};




// ************************************************************************ //
// XML       : OrgWideEmailAddress, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class OrgWideEmailAddress : public sObject {
private:
  UnicodeString   FAddress;
  bool            FAddress_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDisplayName;
  bool            FDisplayName_Specified;
  bool            FIsAllowAllProfiles;
  bool            FIsAllowAllProfiles_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString __fastcall GetAddress(int Index)
  {  return FAddress;  }
  void __fastcall SetAddress(int Index, UnicodeString _prop_val)
  {  FAddress = _prop_val; FAddress_Specified = true;  }
  bool __fastcall Address_Specified(int Index)
  {  return FAddress_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDisplayName(int Index)
  {  return FDisplayName;  }
  void __fastcall SetDisplayName(int Index, UnicodeString _prop_val)
  {  FDisplayName = _prop_val; FDisplayName_Specified = true;  }
  bool __fastcall DisplayName_Specified(int Index)
  {  return FDisplayName_Specified;  } 
  bool __fastcall GetIsAllowAllProfiles(int Index)
  {  return FIsAllowAllProfiles;  }
  void __fastcall SetIsAllowAllProfiles(int Index, bool _prop_val)
  {  FIsAllowAllProfiles = _prop_val; FIsAllowAllProfiles_Specified = true;  }
  bool __fastcall IsAllowAllProfiles_Specified(int Index)
  {  return FIsAllowAllProfiles_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~OrgWideEmailAddress();
__published:
  __property UnicodeString    Address = { index=(IS_OPTN|IS_NLBL), read=FAddress, write=SetAddress, stored = Address_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString DisplayName = { index=(IS_OPTN|IS_NLBL), read=FDisplayName, write=SetDisplayName, stored = DisplayName_Specified };
  __property bool       IsAllowAllProfiles = { index=(IS_OPTN|IS_NLBL), read=FIsAllowAllProfiles, write=SetIsAllowAllProfiles, stored = IsAllowAllProfiles_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : OpportunityStage, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class OpportunityStage : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  double          FDefaultProbability;
  bool            FDefaultProbability_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  UnicodeString   FForecastCategory;
  bool            FForecastCategory_Specified;
  UnicodeString   FForecastCategoryName;
  bool            FForecastCategoryName_Specified;
  bool            FIsActive;
  bool            FIsActive_Specified;
  bool            FIsClosed;
  bool            FIsClosed_Specified;
  bool            FIsWon;
  bool            FIsWon_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FMasterLabel;
  bool            FMasterLabel_Specified;
  int             FSortOrder;
  bool            FSortOrder_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  double __fastcall GetDefaultProbability(int Index)
  {  return FDefaultProbability;  }
  void __fastcall SetDefaultProbability(int Index, double _prop_val)
  {  FDefaultProbability = _prop_val; FDefaultProbability_Specified = true;  }
  bool __fastcall DefaultProbability_Specified(int Index)
  {  return FDefaultProbability_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  UnicodeString __fastcall GetForecastCategory(int Index)
  {  return FForecastCategory;  }
  void __fastcall SetForecastCategory(int Index, UnicodeString _prop_val)
  {  FForecastCategory = _prop_val; FForecastCategory_Specified = true;  }
  bool __fastcall ForecastCategory_Specified(int Index)
  {  return FForecastCategory_Specified;  } 
  UnicodeString __fastcall GetForecastCategoryName(int Index)
  {  return FForecastCategoryName;  }
  void __fastcall SetForecastCategoryName(int Index, UnicodeString _prop_val)
  {  FForecastCategoryName = _prop_val; FForecastCategoryName_Specified = true;  }
  bool __fastcall ForecastCategoryName_Specified(int Index)
  {  return FForecastCategoryName_Specified;  } 
  bool __fastcall GetIsActive(int Index)
  {  return FIsActive;  }
  void __fastcall SetIsActive(int Index, bool _prop_val)
  {  FIsActive = _prop_val; FIsActive_Specified = true;  }
  bool __fastcall IsActive_Specified(int Index)
  {  return FIsActive_Specified;  } 
  bool __fastcall GetIsClosed(int Index)
  {  return FIsClosed;  }
  void __fastcall SetIsClosed(int Index, bool _prop_val)
  {  FIsClosed = _prop_val; FIsClosed_Specified = true;  }
  bool __fastcall IsClosed_Specified(int Index)
  {  return FIsClosed_Specified;  } 
  bool __fastcall GetIsWon(int Index)
  {  return FIsWon;  }
  void __fastcall SetIsWon(int Index, bool _prop_val)
  {  FIsWon = _prop_val; FIsWon_Specified = true;  }
  bool __fastcall IsWon_Specified(int Index)
  {  return FIsWon_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetMasterLabel(int Index)
  {  return FMasterLabel;  }
  void __fastcall SetMasterLabel(int Index, UnicodeString _prop_val)
  {  FMasterLabel = _prop_val; FMasterLabel_Specified = true;  }
  bool __fastcall MasterLabel_Specified(int Index)
  {  return FMasterLabel_Specified;  } 
  int __fastcall GetSortOrder(int Index)
  {  return FSortOrder;  }
  void __fastcall SetSortOrder(int Index, int _prop_val)
  {  FSortOrder = _prop_val; FSortOrder_Specified = true;  }
  bool __fastcall SortOrder_Specified(int Index)
  {  return FSortOrder_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~OpportunityStage();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property double     DefaultProbability = { index=(IS_OPTN|IS_NLBL), read=FDefaultProbability, write=SetDefaultProbability, stored = DefaultProbability_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property UnicodeString ForecastCategory = { index=(IS_OPTN|IS_NLBL), read=FForecastCategory, write=SetForecastCategory, stored = ForecastCategory_Specified };
  __property UnicodeString ForecastCategoryName = { index=(IS_OPTN|IS_NLBL), read=FForecastCategoryName, write=SetForecastCategoryName, stored = ForecastCategoryName_Specified };
  __property bool         IsActive = { index=(IS_OPTN|IS_NLBL), read=FIsActive, write=SetIsActive, stored = IsActive_Specified };
  __property bool         IsClosed = { index=(IS_OPTN|IS_NLBL), read=FIsClosed, write=SetIsClosed, stored = IsClosed_Specified };
  __property bool            IsWon = { index=(IS_OPTN|IS_NLBL), read=FIsWon, write=SetIsWon, stored = IsWon_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString MasterLabel = { index=(IS_OPTN|IS_NLBL), read=FMasterLabel, write=SetMasterLabel, stored = MasterLabel_Specified };
  __property int         SortOrder = { index=(IS_OPTN|IS_NLBL), read=FSortOrder, write=SetSortOrder, stored = SortOrder_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : OpportunityShare, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class OpportunityShare : public sObject {
private:
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  Opportunity*    FOpportunity;
  bool            FOpportunity_Specified;
  UnicodeString   FOpportunityAccessLevel;
  bool            FOpportunityAccessLevel_Specified;
  ID              FOpportunityId;
  bool            FOpportunityId_Specified;
  UnicodeString   FRowCause;
  bool            FRowCause_Specified;
  ID              FUserOrGroupId;
  bool            FUserOrGroupId_Specified;
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  Opportunity* __fastcall GetOpportunity(int Index)
  {  return FOpportunity;  }
  void __fastcall SetOpportunity(int Index, Opportunity* _prop_val)
  {  FOpportunity = _prop_val; FOpportunity_Specified = true;  }
  bool __fastcall Opportunity_Specified(int Index)
  {  return FOpportunity_Specified;  } 
  UnicodeString __fastcall GetOpportunityAccessLevel(int Index)
  {  return FOpportunityAccessLevel;  }
  void __fastcall SetOpportunityAccessLevel(int Index, UnicodeString _prop_val)
  {  FOpportunityAccessLevel = _prop_val; FOpportunityAccessLevel_Specified = true;  }
  bool __fastcall OpportunityAccessLevel_Specified(int Index)
  {  return FOpportunityAccessLevel_Specified;  } 
  ID __fastcall GetOpportunityId(int Index)
  {  return FOpportunityId;  }
  void __fastcall SetOpportunityId(int Index, ID _prop_val)
  {  FOpportunityId = _prop_val; FOpportunityId_Specified = true;  }
  bool __fastcall OpportunityId_Specified(int Index)
  {  return FOpportunityId_Specified;  } 
  UnicodeString __fastcall GetRowCause(int Index)
  {  return FRowCause;  }
  void __fastcall SetRowCause(int Index, UnicodeString _prop_val)
  {  FRowCause = _prop_val; FRowCause_Specified = true;  }
  bool __fastcall RowCause_Specified(int Index)
  {  return FRowCause_Specified;  } 
  ID __fastcall GetUserOrGroupId(int Index)
  {  return FUserOrGroupId;  }
  void __fastcall SetUserOrGroupId(int Index, ID _prop_val)
  {  FUserOrGroupId = _prop_val; FUserOrGroupId_Specified = true;  }
  bool __fastcall UserOrGroupId_Specified(int Index)
  {  return FUserOrGroupId_Specified;  } 

public:
  __fastcall ~OpportunityShare();
__published:
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property Opportunity* Opportunity = { index=(IS_OPTN|IS_NLBL), read=FOpportunity, write=SetOpportunity, stored = Opportunity_Specified };
  __property UnicodeString OpportunityAccessLevel = { index=(IS_OPTN|IS_NLBL), read=FOpportunityAccessLevel, write=SetOpportunityAccessLevel, stored = OpportunityAccessLevel_Specified };
  __property ID         OpportunityId = { index=(IS_OPTN|IS_NLBL), read=FOpportunityId, write=SetOpportunityId, stored = OpportunityId_Specified };
  __property UnicodeString   RowCause = { index=(IS_OPTN|IS_NLBL), read=FRowCause, write=SetRowCause, stored = RowCause_Specified };
  __property ID         UserOrGroupId = { index=(IS_OPTN|IS_NLBL), read=FUserOrGroupId, write=SetUserOrGroupId, stored = UserOrGroupId_Specified };
};




// ************************************************************************ //
// XML       : OpportunityPartner, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class OpportunityPartner : public sObject {
private:
  Account*        FAccountTo;
  bool            FAccountTo_Specified;
  ID              FAccountToId;
  bool            FAccountToId_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsPrimary;
  bool            FIsPrimary_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  Opportunity*    FOpportunity;
  bool            FOpportunity_Specified;
  ID              FOpportunityId;
  bool            FOpportunityId_Specified;
  ID              FReversePartnerId;
  bool            FReversePartnerId_Specified;
  UnicodeString   FRole;
  bool            FRole_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  Account* __fastcall GetAccountTo(int Index)
  {  return FAccountTo;  }
  void __fastcall SetAccountTo(int Index, Account* _prop_val)
  {  FAccountTo = _prop_val; FAccountTo_Specified = true;  }
  bool __fastcall AccountTo_Specified(int Index)
  {  return FAccountTo_Specified;  } 
  ID __fastcall GetAccountToId(int Index)
  {  return FAccountToId;  }
  void __fastcall SetAccountToId(int Index, ID _prop_val)
  {  FAccountToId = _prop_val; FAccountToId_Specified = true;  }
  bool __fastcall AccountToId_Specified(int Index)
  {  return FAccountToId_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsPrimary(int Index)
  {  return FIsPrimary;  }
  void __fastcall SetIsPrimary(int Index, bool _prop_val)
  {  FIsPrimary = _prop_val; FIsPrimary_Specified = true;  }
  bool __fastcall IsPrimary_Specified(int Index)
  {  return FIsPrimary_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  Opportunity* __fastcall GetOpportunity(int Index)
  {  return FOpportunity;  }
  void __fastcall SetOpportunity(int Index, Opportunity* _prop_val)
  {  FOpportunity = _prop_val; FOpportunity_Specified = true;  }
  bool __fastcall Opportunity_Specified(int Index)
  {  return FOpportunity_Specified;  } 
  ID __fastcall GetOpportunityId(int Index)
  {  return FOpportunityId;  }
  void __fastcall SetOpportunityId(int Index, ID _prop_val)
  {  FOpportunityId = _prop_val; FOpportunityId_Specified = true;  }
  bool __fastcall OpportunityId_Specified(int Index)
  {  return FOpportunityId_Specified;  } 
  ID __fastcall GetReversePartnerId(int Index)
  {  return FReversePartnerId;  }
  void __fastcall SetReversePartnerId(int Index, ID _prop_val)
  {  FReversePartnerId = _prop_val; FReversePartnerId_Specified = true;  }
  bool __fastcall ReversePartnerId_Specified(int Index)
  {  return FReversePartnerId_Specified;  } 
  UnicodeString __fastcall GetRole(int Index)
  {  return FRole;  }
  void __fastcall SetRole(int Index, UnicodeString _prop_val)
  {  FRole = _prop_val; FRole_Specified = true;  }
  bool __fastcall Role_Specified(int Index)
  {  return FRole_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~OpportunityPartner();
__published:
  __property Account*    AccountTo = { index=(IS_OPTN|IS_NLBL), read=FAccountTo, write=SetAccountTo, stored = AccountTo_Specified };
  __property ID         AccountToId = { index=(IS_OPTN|IS_NLBL), read=FAccountToId, write=SetAccountToId, stored = AccountToId_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool        IsPrimary = { index=(IS_OPTN|IS_NLBL), read=FIsPrimary, write=SetIsPrimary, stored = IsPrimary_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property Opportunity* Opportunity = { index=(IS_OPTN|IS_NLBL), read=FOpportunity, write=SetOpportunity, stored = Opportunity_Specified };
  __property ID         OpportunityId = { index=(IS_OPTN|IS_NLBL), read=FOpportunityId, write=SetOpportunityId, stored = OpportunityId_Specified };
  __property ID         ReversePartnerId = { index=(IS_OPTN|IS_NLBL), read=FReversePartnerId, write=SetReversePartnerId, stored = ReversePartnerId_Specified };
  __property UnicodeString       Role = { index=(IS_OPTN|IS_NLBL), read=FRole, write=SetRole, stored = Role_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : PricebookEntry, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class PricebookEntry : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsActive;
  bool            FIsActive_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  QueryResult*    FOpportunityLineItems;
  bool            FOpportunityLineItems_Specified;
  Pricebook2*     FPricebook2;
  bool            FPricebook2_Specified;
  ID              FPricebook2Id;
  bool            FPricebook2Id_Specified;
  Product2*       FProduct2;
  bool            FProduct2_Specified;
  ID              FProduct2Id;
  bool            FProduct2Id_Specified;
  UnicodeString   FProductCode;
  bool            FProductCode_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  double          FUnitPrice;
  bool            FUnitPrice_Specified;
  bool            FUseStandardPrice;
  bool            FUseStandardPrice_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsActive(int Index)
  {  return FIsActive;  }
  void __fastcall SetIsActive(int Index, bool _prop_val)
  {  FIsActive = _prop_val; FIsActive_Specified = true;  }
  bool __fastcall IsActive_Specified(int Index)
  {  return FIsActive_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  QueryResult* __fastcall GetOpportunityLineItems(int Index)
  {  return FOpportunityLineItems;  }
  void __fastcall SetOpportunityLineItems(int Index, QueryResult* _prop_val)
  {  FOpportunityLineItems = _prop_val; FOpportunityLineItems_Specified = true;  }
  bool __fastcall OpportunityLineItems_Specified(int Index)
  {  return FOpportunityLineItems_Specified;  } 
  Pricebook2* __fastcall GetPricebook2(int Index)
  {  return FPricebook2;  }
  void __fastcall SetPricebook2(int Index, Pricebook2* _prop_val)
  {  FPricebook2 = _prop_val; FPricebook2_Specified = true;  }
  bool __fastcall Pricebook2_Specified(int Index)
  {  return FPricebook2_Specified;  } 
  ID __fastcall GetPricebook2Id(int Index)
  {  return FPricebook2Id;  }
  void __fastcall SetPricebook2Id(int Index, ID _prop_val)
  {  FPricebook2Id = _prop_val; FPricebook2Id_Specified = true;  }
  bool __fastcall Pricebook2Id_Specified(int Index)
  {  return FPricebook2Id_Specified;  } 
  Product2* __fastcall GetProduct2(int Index)
  {  return FProduct2;  }
  void __fastcall SetProduct2(int Index, Product2* _prop_val)
  {  FProduct2 = _prop_val; FProduct2_Specified = true;  }
  bool __fastcall Product2_Specified(int Index)
  {  return FProduct2_Specified;  } 
  ID __fastcall GetProduct2Id(int Index)
  {  return FProduct2Id;  }
  void __fastcall SetProduct2Id(int Index, ID _prop_val)
  {  FProduct2Id = _prop_val; FProduct2Id_Specified = true;  }
  bool __fastcall Product2Id_Specified(int Index)
  {  return FProduct2Id_Specified;  } 
  UnicodeString __fastcall GetProductCode(int Index)
  {  return FProductCode;  }
  void __fastcall SetProductCode(int Index, UnicodeString _prop_val)
  {  FProductCode = _prop_val; FProductCode_Specified = true;  }
  bool __fastcall ProductCode_Specified(int Index)
  {  return FProductCode_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  double __fastcall GetUnitPrice(int Index)
  {  return FUnitPrice;  }
  void __fastcall SetUnitPrice(int Index, double _prop_val)
  {  FUnitPrice = _prop_val; FUnitPrice_Specified = true;  }
  bool __fastcall UnitPrice_Specified(int Index)
  {  return FUnitPrice_Specified;  } 
  bool __fastcall GetUseStandardPrice(int Index)
  {  return FUseStandardPrice;  }
  void __fastcall SetUseStandardPrice(int Index, bool _prop_val)
  {  FUseStandardPrice = _prop_val; FUseStandardPrice_Specified = true;  }
  bool __fastcall UseStandardPrice_Specified(int Index)
  {  return FUseStandardPrice_Specified;  } 

public:
  __fastcall ~PricebookEntry();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool         IsActive = { index=(IS_OPTN|IS_NLBL), read=FIsActive, write=SetIsActive, stored = IsActive_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property QueryResult* OpportunityLineItems = { index=(IS_OPTN|IS_NLBL), read=FOpportunityLineItems, write=SetOpportunityLineItems, stored = OpportunityLineItems_Specified };
  __property Pricebook2* Pricebook2 = { index=(IS_OPTN|IS_NLBL), read=FPricebook2, write=SetPricebook2, stored = Pricebook2_Specified };
  __property ID         Pricebook2Id = { index=(IS_OPTN|IS_NLBL), read=FPricebook2Id, write=SetPricebook2Id, stored = Pricebook2Id_Specified };
  __property Product2*    Product2 = { index=(IS_OPTN|IS_NLBL), read=FProduct2, write=SetProduct2, stored = Product2_Specified };
  __property ID         Product2Id = { index=(IS_OPTN|IS_NLBL), read=FProduct2Id, write=SetProduct2Id, stored = Product2Id_Specified };
  __property UnicodeString ProductCode = { index=(IS_OPTN|IS_NLBL), read=FProductCode, write=SetProductCode, stored = ProductCode_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property double      UnitPrice = { index=(IS_OPTN|IS_NLBL), read=FUnitPrice, write=SetUnitPrice, stored = UnitPrice_Specified };
  __property bool       UseStandardPrice = { index=(IS_OPTN|IS_NLBL), read=FUseStandardPrice, write=SetUseStandardPrice, stored = UseStandardPrice_Specified };
};




// ************************************************************************ //
// XML       : OpportunityLineItem, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class OpportunityLineItem : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  double          FListPrice;
  bool            FListPrice_Specified;
  Opportunity*    FOpportunity;
  bool            FOpportunity_Specified;
  ID              FOpportunityId;
  bool            FOpportunityId_Specified;
  PricebookEntry* FPricebookEntry;
  bool            FPricebookEntry_Specified;
  ID              FPricebookEntryId;
  bool            FPricebookEntryId_Specified;
  double          FQuantity;
  bool            FQuantity_Specified;
  TXSDate*        FServiceDate;
  bool            FServiceDate_Specified;
  int             FSortOrder;
  bool            FSortOrder_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  double          FTotalPrice;
  bool            FTotalPrice_Specified;
  double          FUnitPrice;
  bool            FUnitPrice_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  double __fastcall GetListPrice(int Index)
  {  return FListPrice;  }
  void __fastcall SetListPrice(int Index, double _prop_val)
  {  FListPrice = _prop_val; FListPrice_Specified = true;  }
  bool __fastcall ListPrice_Specified(int Index)
  {  return FListPrice_Specified;  } 
  Opportunity* __fastcall GetOpportunity(int Index)
  {  return FOpportunity;  }
  void __fastcall SetOpportunity(int Index, Opportunity* _prop_val)
  {  FOpportunity = _prop_val; FOpportunity_Specified = true;  }
  bool __fastcall Opportunity_Specified(int Index)
  {  return FOpportunity_Specified;  } 
  ID __fastcall GetOpportunityId(int Index)
  {  return FOpportunityId;  }
  void __fastcall SetOpportunityId(int Index, ID _prop_val)
  {  FOpportunityId = _prop_val; FOpportunityId_Specified = true;  }
  bool __fastcall OpportunityId_Specified(int Index)
  {  return FOpportunityId_Specified;  } 
  PricebookEntry* __fastcall GetPricebookEntry(int Index)
  {  return FPricebookEntry;  }
  void __fastcall SetPricebookEntry(int Index, PricebookEntry* _prop_val)
  {  FPricebookEntry = _prop_val; FPricebookEntry_Specified = true;  }
  bool __fastcall PricebookEntry_Specified(int Index)
  {  return FPricebookEntry_Specified;  } 
  ID __fastcall GetPricebookEntryId(int Index)
  {  return FPricebookEntryId;  }
  void __fastcall SetPricebookEntryId(int Index, ID _prop_val)
  {  FPricebookEntryId = _prop_val; FPricebookEntryId_Specified = true;  }
  bool __fastcall PricebookEntryId_Specified(int Index)
  {  return FPricebookEntryId_Specified;  } 
  double __fastcall GetQuantity(int Index)
  {  return FQuantity;  }
  void __fastcall SetQuantity(int Index, double _prop_val)
  {  FQuantity = _prop_val; FQuantity_Specified = true;  }
  bool __fastcall Quantity_Specified(int Index)
  {  return FQuantity_Specified;  } 
  TXSDate* __fastcall GetServiceDate(int Index)
  {  return FServiceDate;  }
  void __fastcall SetServiceDate(int Index, TXSDate* _prop_val)
  {  FServiceDate = _prop_val; FServiceDate_Specified = true;  }
  bool __fastcall ServiceDate_Specified(int Index)
  {  return FServiceDate_Specified;  } 
  int __fastcall GetSortOrder(int Index)
  {  return FSortOrder;  }
  void __fastcall SetSortOrder(int Index, int _prop_val)
  {  FSortOrder = _prop_val; FSortOrder_Specified = true;  }
  bool __fastcall SortOrder_Specified(int Index)
  {  return FSortOrder_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  double __fastcall GetTotalPrice(int Index)
  {  return FTotalPrice;  }
  void __fastcall SetTotalPrice(int Index, double _prop_val)
  {  FTotalPrice = _prop_val; FTotalPrice_Specified = true;  }
  bool __fastcall TotalPrice_Specified(int Index)
  {  return FTotalPrice_Specified;  } 
  double __fastcall GetUnitPrice(int Index)
  {  return FUnitPrice;  }
  void __fastcall SetUnitPrice(int Index, double _prop_val)
  {  FUnitPrice = _prop_val; FUnitPrice_Specified = true;  }
  bool __fastcall UnitPrice_Specified(int Index)
  {  return FUnitPrice_Specified;  } 

public:
  __fastcall ~OpportunityLineItem();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property double      ListPrice = { index=(IS_OPTN|IS_NLBL), read=FListPrice, write=SetListPrice, stored = ListPrice_Specified };
  __property Opportunity* Opportunity = { index=(IS_OPTN|IS_NLBL), read=FOpportunity, write=SetOpportunity, stored = Opportunity_Specified };
  __property ID         OpportunityId = { index=(IS_OPTN|IS_NLBL), read=FOpportunityId, write=SetOpportunityId, stored = OpportunityId_Specified };
  __property PricebookEntry* PricebookEntry = { index=(IS_OPTN|IS_NLBL), read=FPricebookEntry, write=SetPricebookEntry, stored = PricebookEntry_Specified };
  __property ID         PricebookEntryId = { index=(IS_OPTN|IS_NLBL), read=FPricebookEntryId, write=SetPricebookEntryId, stored = PricebookEntryId_Specified };
  __property double       Quantity = { index=(IS_OPTN|IS_NLBL), read=FQuantity, write=SetQuantity, stored = Quantity_Specified };
  __property TXSDate*   ServiceDate = { index=(IS_OPTN|IS_NLBL), read=FServiceDate, write=SetServiceDate, stored = ServiceDate_Specified };
  __property int         SortOrder = { index=(IS_OPTN|IS_NLBL), read=FSortOrder, write=SetSortOrder, stored = SortOrder_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property double     TotalPrice = { index=(IS_OPTN|IS_NLBL), read=FTotalPrice, write=SetTotalPrice, stored = TotalPrice_Specified };
  __property double      UnitPrice = { index=(IS_OPTN|IS_NLBL), read=FUnitPrice, write=SetUnitPrice, stored = UnitPrice_Specified };
};




// ************************************************************************ //
// XML       : OpportunityHistory, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class OpportunityHistory : public sObject {
private:
  double          FAmount;
  bool            FAmount_Specified;
  TXSDate*        FCloseDate;
  bool            FCloseDate_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  double          FExpectedRevenue;
  bool            FExpectedRevenue_Specified;
  UnicodeString   FForecastCategory;
  bool            FForecastCategory_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  Opportunity*    FOpportunity;
  bool            FOpportunity_Specified;
  ID              FOpportunityId;
  bool            FOpportunityId_Specified;
  double          FProbability;
  bool            FProbability_Specified;
  UnicodeString   FStageName;
  bool            FStageName_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  double __fastcall GetAmount(int Index)
  {  return FAmount;  }
  void __fastcall SetAmount(int Index, double _prop_val)
  {  FAmount = _prop_val; FAmount_Specified = true;  }
  bool __fastcall Amount_Specified(int Index)
  {  return FAmount_Specified;  } 
  TXSDate* __fastcall GetCloseDate(int Index)
  {  return FCloseDate;  }
  void __fastcall SetCloseDate(int Index, TXSDate* _prop_val)
  {  FCloseDate = _prop_val; FCloseDate_Specified = true;  }
  bool __fastcall CloseDate_Specified(int Index)
  {  return FCloseDate_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  double __fastcall GetExpectedRevenue(int Index)
  {  return FExpectedRevenue;  }
  void __fastcall SetExpectedRevenue(int Index, double _prop_val)
  {  FExpectedRevenue = _prop_val; FExpectedRevenue_Specified = true;  }
  bool __fastcall ExpectedRevenue_Specified(int Index)
  {  return FExpectedRevenue_Specified;  } 
  UnicodeString __fastcall GetForecastCategory(int Index)
  {  return FForecastCategory;  }
  void __fastcall SetForecastCategory(int Index, UnicodeString _prop_val)
  {  FForecastCategory = _prop_val; FForecastCategory_Specified = true;  }
  bool __fastcall ForecastCategory_Specified(int Index)
  {  return FForecastCategory_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  Opportunity* __fastcall GetOpportunity(int Index)
  {  return FOpportunity;  }
  void __fastcall SetOpportunity(int Index, Opportunity* _prop_val)
  {  FOpportunity = _prop_val; FOpportunity_Specified = true;  }
  bool __fastcall Opportunity_Specified(int Index)
  {  return FOpportunity_Specified;  } 
  ID __fastcall GetOpportunityId(int Index)
  {  return FOpportunityId;  }
  void __fastcall SetOpportunityId(int Index, ID _prop_val)
  {  FOpportunityId = _prop_val; FOpportunityId_Specified = true;  }
  bool __fastcall OpportunityId_Specified(int Index)
  {  return FOpportunityId_Specified;  } 
  double __fastcall GetProbability(int Index)
  {  return FProbability;  }
  void __fastcall SetProbability(int Index, double _prop_val)
  {  FProbability = _prop_val; FProbability_Specified = true;  }
  bool __fastcall Probability_Specified(int Index)
  {  return FProbability_Specified;  } 
  UnicodeString __fastcall GetStageName(int Index)
  {  return FStageName;  }
  void __fastcall SetStageName(int Index, UnicodeString _prop_val)
  {  FStageName = _prop_val; FStageName_Specified = true;  }
  bool __fastcall StageName_Specified(int Index)
  {  return FStageName_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~OpportunityHistory();
__published:
  __property double         Amount = { index=(IS_OPTN|IS_NLBL), read=FAmount, write=SetAmount, stored = Amount_Specified };
  __property TXSDate*    CloseDate = { index=(IS_OPTN|IS_NLBL), read=FCloseDate, write=SetCloseDate, stored = CloseDate_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property double     ExpectedRevenue = { index=(IS_OPTN|IS_NLBL), read=FExpectedRevenue, write=SetExpectedRevenue, stored = ExpectedRevenue_Specified };
  __property UnicodeString ForecastCategory = { index=(IS_OPTN|IS_NLBL), read=FForecastCategory, write=SetForecastCategory, stored = ForecastCategory_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property Opportunity* Opportunity = { index=(IS_OPTN|IS_NLBL), read=FOpportunity, write=SetOpportunity, stored = Opportunity_Specified };
  __property ID         OpportunityId = { index=(IS_OPTN|IS_NLBL), read=FOpportunityId, write=SetOpportunityId, stored = OpportunityId_Specified };
  __property double     Probability = { index=(IS_OPTN|IS_NLBL), read=FProbability, write=SetProbability, stored = Probability_Specified };
  __property UnicodeString  StageName = { index=(IS_OPTN|IS_NLBL), read=FStageName, write=SetStageName, stored = StageName_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : OpportunityFieldHistory, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class OpportunityFieldHistory : public sObject {
private:
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FField;
  bool            FField_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  Variant         FNewValue;
  bool            FNewValue_Specified;
  Variant         FOldValue;
  bool            FOldValue_Specified;
  Opportunity*    FOpportunity;
  bool            FOpportunity_Specified;
  ID              FOpportunityId;
  bool            FOpportunityId_Specified;
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetField(int Index)
  {  return FField;  }
  void __fastcall SetField(int Index, UnicodeString _prop_val)
  {  FField = _prop_val; FField_Specified = true;  }
  bool __fastcall Field_Specified(int Index)
  {  return FField_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  Variant __fastcall GetNewValue(int Index)
  {  return FNewValue;  }
  void __fastcall SetNewValue(int Index, Variant _prop_val)
  {  FNewValue = _prop_val; FNewValue_Specified = true;  }
  bool __fastcall NewValue_Specified(int Index)
  {  return FNewValue_Specified;  } 
  Variant __fastcall GetOldValue(int Index)
  {  return FOldValue;  }
  void __fastcall SetOldValue(int Index, Variant _prop_val)
  {  FOldValue = _prop_val; FOldValue_Specified = true;  }
  bool __fastcall OldValue_Specified(int Index)
  {  return FOldValue_Specified;  } 
  Opportunity* __fastcall GetOpportunity(int Index)
  {  return FOpportunity;  }
  void __fastcall SetOpportunity(int Index, Opportunity* _prop_val)
  {  FOpportunity = _prop_val; FOpportunity_Specified = true;  }
  bool __fastcall Opportunity_Specified(int Index)
  {  return FOpportunity_Specified;  } 
  ID __fastcall GetOpportunityId(int Index)
  {  return FOpportunityId;  }
  void __fastcall SetOpportunityId(int Index, ID _prop_val)
  {  FOpportunityId = _prop_val; FOpportunityId_Specified = true;  }
  bool __fastcall OpportunityId_Specified(int Index)
  {  return FOpportunityId_Specified;  } 

public:
  __fastcall ~OpportunityFieldHistory();
__published:
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString      Field = { index=(IS_OPTN|IS_NLBL), read=FField, write=SetField, stored = Field_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property Variant      NewValue = { index=(IS_OPTN|IS_NLBL), read=FNewValue, write=SetNewValue, stored = NewValue_Specified };
  __property Variant      OldValue = { index=(IS_OPTN|IS_NLBL), read=FOldValue, write=SetOldValue, stored = OldValue_Specified };
  __property Opportunity* Opportunity = { index=(IS_OPTN|IS_NLBL), read=FOpportunity, write=SetOpportunity, stored = Opportunity_Specified };
  __property ID         OpportunityId = { index=(IS_OPTN|IS_NLBL), read=FOpportunityId, write=SetOpportunityId, stored = OpportunityId_Specified };
};




// ************************************************************************ //
// XML       : OpportunityFeed, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class OpportunityFeed : public sObject {
private:
  UnicodeString   FBody;
  bool            FBody_Specified;
  int             FCommentCount;
  bool            FCommentCount_Specified;
  TByteDynArray   FContentData;
  bool            FContentData_Specified;
  UnicodeString   FContentDescription;
  bool            FContentDescription_Specified;
  UnicodeString   FContentFileName;
  bool            FContentFileName_Specified;
  int             FContentSize;
  bool            FContentSize_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedComments;
  bool            FFeedComments_Specified;
  QueryResult*    FFeedLikes;
  bool            FFeedLikes_Specified;
  QueryResult*    FFeedTrackedChanges;
  bool            FFeedTrackedChanges_Specified;
  Name_*           FInsertedBy;
  bool            FInsertedBy_Specified;
  ID              FInsertedById;
  bool            FInsertedById_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLikeCount;
  bool            FLikeCount_Specified;
  UnicodeString   FLinkUrl;
  bool            FLinkUrl_Specified;
  Opportunity*    FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FRelatedRecordId;
  bool            FRelatedRecordId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetCommentCount(int Index)
  {  return FCommentCount;  }
  void __fastcall SetCommentCount(int Index, int _prop_val)
  {  FCommentCount = _prop_val; FCommentCount_Specified = true;  }
  bool __fastcall CommentCount_Specified(int Index)
  {  return FCommentCount_Specified;  } 
  TByteDynArray __fastcall GetContentData(int Index)
  {  return FContentData;  }
  void __fastcall SetContentData(int Index, TByteDynArray _prop_val)
  {  FContentData = _prop_val; FContentData_Specified = true;  }
  bool __fastcall ContentData_Specified(int Index)
  {  return FContentData_Specified;  } 
  UnicodeString __fastcall GetContentDescription(int Index)
  {  return FContentDescription;  }
  void __fastcall SetContentDescription(int Index, UnicodeString _prop_val)
  {  FContentDescription = _prop_val; FContentDescription_Specified = true;  }
  bool __fastcall ContentDescription_Specified(int Index)
  {  return FContentDescription_Specified;  } 
  UnicodeString __fastcall GetContentFileName(int Index)
  {  return FContentFileName;  }
  void __fastcall SetContentFileName(int Index, UnicodeString _prop_val)
  {  FContentFileName = _prop_val; FContentFileName_Specified = true;  }
  bool __fastcall ContentFileName_Specified(int Index)
  {  return FContentFileName_Specified;  } 
  int __fastcall GetContentSize(int Index)
  {  return FContentSize;  }
  void __fastcall SetContentSize(int Index, int _prop_val)
  {  FContentSize = _prop_val; FContentSize_Specified = true;  }
  bool __fastcall ContentSize_Specified(int Index)
  {  return FContentSize_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedComments(int Index)
  {  return FFeedComments;  }
  void __fastcall SetFeedComments(int Index, QueryResult* _prop_val)
  {  FFeedComments = _prop_val; FFeedComments_Specified = true;  }
  bool __fastcall FeedComments_Specified(int Index)
  {  return FFeedComments_Specified;  } 
  QueryResult* __fastcall GetFeedLikes(int Index)
  {  return FFeedLikes;  }
  void __fastcall SetFeedLikes(int Index, QueryResult* _prop_val)
  {  FFeedLikes = _prop_val; FFeedLikes_Specified = true;  }
  bool __fastcall FeedLikes_Specified(int Index)
  {  return FFeedLikes_Specified;  } 
  QueryResult* __fastcall GetFeedTrackedChanges(int Index)
  {  return FFeedTrackedChanges;  }
  void __fastcall SetFeedTrackedChanges(int Index, QueryResult* _prop_val)
  {  FFeedTrackedChanges = _prop_val; FFeedTrackedChanges_Specified = true;  }
  bool __fastcall FeedTrackedChanges_Specified(int Index)
  {  return FFeedTrackedChanges_Specified;  } 
  Name_* __fastcall GetInsertedBy(int Index)
  {  return FInsertedBy;  }
  void __fastcall SetInsertedBy(int Index, Name_* _prop_val)
  {  FInsertedBy = _prop_val; FInsertedBy_Specified = true;  }
  bool __fastcall InsertedBy_Specified(int Index)
  {  return FInsertedBy_Specified;  } 
  ID __fastcall GetInsertedById(int Index)
  {  return FInsertedById;  }
  void __fastcall SetInsertedById(int Index, ID _prop_val)
  {  FInsertedById = _prop_val; FInsertedById_Specified = true;  }
  bool __fastcall InsertedById_Specified(int Index)
  {  return FInsertedById_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLikeCount(int Index)
  {  return FLikeCount;  }
  void __fastcall SetLikeCount(int Index, int _prop_val)
  {  FLikeCount = _prop_val; FLikeCount_Specified = true;  }
  bool __fastcall LikeCount_Specified(int Index)
  {  return FLikeCount_Specified;  } 
  UnicodeString __fastcall GetLinkUrl(int Index)
  {  return FLinkUrl;  }
  void __fastcall SetLinkUrl(int Index, UnicodeString _prop_val)
  {  FLinkUrl = _prop_val; FLinkUrl_Specified = true;  }
  bool __fastcall LinkUrl_Specified(int Index)
  {  return FLinkUrl_Specified;  } 
  Opportunity* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Opportunity* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetRelatedRecordId(int Index)
  {  return FRelatedRecordId;  }
  void __fastcall SetRelatedRecordId(int Index, ID _prop_val)
  {  FRelatedRecordId = _prop_val; FRelatedRecordId_Specified = true;  }
  bool __fastcall RelatedRecordId_Specified(int Index)
  {  return FRelatedRecordId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~OpportunityFeed();
__published:
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        CommentCount = { index=(IS_OPTN|IS_NLBL), read=FCommentCount, write=SetCommentCount, stored = CommentCount_Specified };
  __property TByteDynArray ContentData = { index=(IS_OPTN|IS_NLBL), read=FContentData, write=SetContentData, stored = ContentData_Specified };
  __property UnicodeString ContentDescription = { index=(IS_OPTN|IS_NLBL), read=FContentDescription, write=SetContentDescription, stored = ContentDescription_Specified };
  __property UnicodeString ContentFileName = { index=(IS_OPTN|IS_NLBL), read=FContentFileName, write=SetContentFileName, stored = ContentFileName_Specified };
  __property int        ContentSize = { index=(IS_OPTN|IS_NLBL), read=FContentSize, write=SetContentSize, stored = ContentSize_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedComments = { index=(IS_OPTN|IS_NLBL), read=FFeedComments, write=SetFeedComments, stored = FeedComments_Specified };
  __property QueryResult*  FeedLikes = { index=(IS_OPTN|IS_NLBL), read=FFeedLikes, write=SetFeedLikes, stored = FeedLikes_Specified };
  __property QueryResult* FeedTrackedChanges = { index=(IS_OPTN|IS_NLBL), read=FFeedTrackedChanges, write=SetFeedTrackedChanges, stored = FeedTrackedChanges_Specified };
  __property Name_*      InsertedBy = { index=(IS_OPTN|IS_NLBL), read=FInsertedBy, write=SetInsertedBy, stored = InsertedBy_Specified };
  __property ID         InsertedById = { index=(IS_OPTN|IS_NLBL), read=FInsertedById, write=SetInsertedById, stored = InsertedById_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int         LikeCount = { index=(IS_OPTN|IS_NLBL), read=FLikeCount, write=SetLikeCount, stored = LikeCount_Specified };
  __property UnicodeString    LinkUrl = { index=(IS_OPTN|IS_NLBL), read=FLinkUrl, write=SetLinkUrl, stored = LinkUrl_Specified };
  __property Opportunity*     Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         RelatedRecordId = { index=(IS_OPTN|IS_NLBL), read=FRelatedRecordId, write=SetRelatedRecordId, stored = RelatedRecordId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : OpportunityContactRole, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class OpportunityContactRole : public sObject {
private:
  Contact*        FContact;
  bool            FContact_Specified;
  ID              FContactId;
  bool            FContactId_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsPrimary;
  bool            FIsPrimary_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  Opportunity*    FOpportunity;
  bool            FOpportunity_Specified;
  ID              FOpportunityId;
  bool            FOpportunityId_Specified;
  UnicodeString   FRole;
  bool            FRole_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  Contact* __fastcall GetContact(int Index)
  {  return FContact;  }
  void __fastcall SetContact(int Index, Contact* _prop_val)
  {  FContact = _prop_val; FContact_Specified = true;  }
  bool __fastcall Contact_Specified(int Index)
  {  return FContact_Specified;  } 
  ID __fastcall GetContactId(int Index)
  {  return FContactId;  }
  void __fastcall SetContactId(int Index, ID _prop_val)
  {  FContactId = _prop_val; FContactId_Specified = true;  }
  bool __fastcall ContactId_Specified(int Index)
  {  return FContactId_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsPrimary(int Index)
  {  return FIsPrimary;  }
  void __fastcall SetIsPrimary(int Index, bool _prop_val)
  {  FIsPrimary = _prop_val; FIsPrimary_Specified = true;  }
  bool __fastcall IsPrimary_Specified(int Index)
  {  return FIsPrimary_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  Opportunity* __fastcall GetOpportunity(int Index)
  {  return FOpportunity;  }
  void __fastcall SetOpportunity(int Index, Opportunity* _prop_val)
  {  FOpportunity = _prop_val; FOpportunity_Specified = true;  }
  bool __fastcall Opportunity_Specified(int Index)
  {  return FOpportunity_Specified;  } 
  ID __fastcall GetOpportunityId(int Index)
  {  return FOpportunityId;  }
  void __fastcall SetOpportunityId(int Index, ID _prop_val)
  {  FOpportunityId = _prop_val; FOpportunityId_Specified = true;  }
  bool __fastcall OpportunityId_Specified(int Index)
  {  return FOpportunityId_Specified;  } 
  UnicodeString __fastcall GetRole(int Index)
  {  return FRole;  }
  void __fastcall SetRole(int Index, UnicodeString _prop_val)
  {  FRole = _prop_val; FRole_Specified = true;  }
  bool __fastcall Role_Specified(int Index)
  {  return FRole_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~OpportunityContactRole();
__published:
  __property Contact*      Contact = { index=(IS_OPTN|IS_NLBL), read=FContact, write=SetContact, stored = Contact_Specified };
  __property ID          ContactId = { index=(IS_OPTN|IS_NLBL), read=FContactId, write=SetContactId, stored = ContactId_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool        IsPrimary = { index=(IS_OPTN|IS_NLBL), read=FIsPrimary, write=SetIsPrimary, stored = IsPrimary_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property Opportunity* Opportunity = { index=(IS_OPTN|IS_NLBL), read=FOpportunity, write=SetOpportunity, stored = Opportunity_Specified };
  __property ID         OpportunityId = { index=(IS_OPTN|IS_NLBL), read=FOpportunityId, write=SetOpportunityId, stored = OpportunityId_Specified };
  __property UnicodeString       Role = { index=(IS_OPTN|IS_NLBL), read=FRole, write=SetRole, stored = Role_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : OpportunityCompetitor, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class OpportunityCompetitor : public sObject {
private:
  UnicodeString   FCompetitorName;
  bool            FCompetitorName_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  Opportunity*    FOpportunity;
  bool            FOpportunity_Specified;
  ID              FOpportunityId;
  bool            FOpportunityId_Specified;
  UnicodeString   FStrengths;
  bool            FStrengths_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FWeaknesses;
  bool            FWeaknesses_Specified;
  UnicodeString __fastcall GetCompetitorName(int Index)
  {  return FCompetitorName;  }
  void __fastcall SetCompetitorName(int Index, UnicodeString _prop_val)
  {  FCompetitorName = _prop_val; FCompetitorName_Specified = true;  }
  bool __fastcall CompetitorName_Specified(int Index)
  {  return FCompetitorName_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  Opportunity* __fastcall GetOpportunity(int Index)
  {  return FOpportunity;  }
  void __fastcall SetOpportunity(int Index, Opportunity* _prop_val)
  {  FOpportunity = _prop_val; FOpportunity_Specified = true;  }
  bool __fastcall Opportunity_Specified(int Index)
  {  return FOpportunity_Specified;  } 
  ID __fastcall GetOpportunityId(int Index)
  {  return FOpportunityId;  }
  void __fastcall SetOpportunityId(int Index, ID _prop_val)
  {  FOpportunityId = _prop_val; FOpportunityId_Specified = true;  }
  bool __fastcall OpportunityId_Specified(int Index)
  {  return FOpportunityId_Specified;  } 
  UnicodeString __fastcall GetStrengths(int Index)
  {  return FStrengths;  }
  void __fastcall SetStrengths(int Index, UnicodeString _prop_val)
  {  FStrengths = _prop_val; FStrengths_Specified = true;  }
  bool __fastcall Strengths_Specified(int Index)
  {  return FStrengths_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetWeaknesses(int Index)
  {  return FWeaknesses;  }
  void __fastcall SetWeaknesses(int Index, UnicodeString _prop_val)
  {  FWeaknesses = _prop_val; FWeaknesses_Specified = true;  }
  bool __fastcall Weaknesses_Specified(int Index)
  {  return FWeaknesses_Specified;  } 

public:
  __fastcall ~OpportunityCompetitor();
__published:
  __property UnicodeString CompetitorName = { index=(IS_OPTN|IS_NLBL), read=FCompetitorName, write=SetCompetitorName, stored = CompetitorName_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property Opportunity* Opportunity = { index=(IS_OPTN|IS_NLBL), read=FOpportunity, write=SetOpportunity, stored = Opportunity_Specified };
  __property ID         OpportunityId = { index=(IS_OPTN|IS_NLBL), read=FOpportunityId, write=SetOpportunityId, stored = OpportunityId_Specified };
  __property UnicodeString  Strengths = { index=(IS_OPTN|IS_NLBL), read=FStrengths, write=SetStrengths, stored = Strengths_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString Weaknesses = { index=(IS_OPTN|IS_NLBL), read=FWeaknesses, write=SetWeaknesses, stored = Weaknesses_Specified };
};




// ************************************************************************ //
// XML       : Pricebook2, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Pricebook2 : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  bool            FIsActive;
  bool            FIsActive_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsStandard;
  bool            FIsStandard_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  QueryResult*    FOpportunities;
  bool            FOpportunities_Specified;
  QueryResult*    FPricebookEntries;
  bool            FPricebookEntries_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  bool __fastcall GetIsActive(int Index)
  {  return FIsActive;  }
  void __fastcall SetIsActive(int Index, bool _prop_val)
  {  FIsActive = _prop_val; FIsActive_Specified = true;  }
  bool __fastcall IsActive_Specified(int Index)
  {  return FIsActive_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsStandard(int Index)
  {  return FIsStandard;  }
  void __fastcall SetIsStandard(int Index, bool _prop_val)
  {  FIsStandard = _prop_val; FIsStandard_Specified = true;  }
  bool __fastcall IsStandard_Specified(int Index)
  {  return FIsStandard_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  QueryResult* __fastcall GetOpportunities(int Index)
  {  return FOpportunities;  }
  void __fastcall SetOpportunities(int Index, QueryResult* _prop_val)
  {  FOpportunities = _prop_val; FOpportunities_Specified = true;  }
  bool __fastcall Opportunities_Specified(int Index)
  {  return FOpportunities_Specified;  } 
  QueryResult* __fastcall GetPricebookEntries(int Index)
  {  return FPricebookEntries;  }
  void __fastcall SetPricebookEntries(int Index, QueryResult* _prop_val)
  {  FPricebookEntries = _prop_val; FPricebookEntries_Specified = true;  }
  bool __fastcall PricebookEntries_Specified(int Index)
  {  return FPricebookEntries_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~Pricebook2();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property bool         IsActive = { index=(IS_OPTN|IS_NLBL), read=FIsActive, write=SetIsActive, stored = IsActive_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool       IsStandard = { index=(IS_OPTN|IS_NLBL), read=FIsStandard, write=SetIsStandard, stored = IsStandard_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property QueryResult* Opportunities = { index=(IS_OPTN|IS_NLBL), read=FOpportunities, write=SetOpportunities, stored = Opportunities_Specified };
  __property QueryResult* PricebookEntries = { index=(IS_OPTN|IS_NLBL), read=FPricebookEntries, write=SetPricebookEntries, stored = PricebookEntries_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : OpenActivity, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class OpenActivity : public sObject {
private:
  Account*        FAccount;
  bool            FAccount_Specified;
  ID              FAccountId;
  bool            FAccountId_Specified;
  TXSDate*        FActivityDate;
  bool            FActivityDate_Specified;
  UnicodeString   FActivityType;
  bool            FActivityType_Specified;
  UnicodeString   FCallDisposition;
  bool            FCallDisposition_Specified;
  int             FCallDurationInSeconds;
  bool            FCallDurationInSeconds_Specified;
  UnicodeString   FCallObject;
  bool            FCallObject_Specified;
  UnicodeString   FCallType;
  bool            FCallType_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  int             FDurationInMinutes;
  bool            FDurationInMinutes_Specified;
  bool            FIsAllDayEvent;
  bool            FIsAllDayEvent_Specified;
  bool            FIsClosed;
  bool            FIsClosed_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsReminderSet;
  bool            FIsReminderSet_Specified;
  bool            FIsTask;
  bool            FIsTask_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FLocation;
  bool            FLocation_Specified;
  Name_*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  UnicodeString   FPriority;
  bool            FPriority_Specified;
  TXSDateTime*    FReminderDateTime;
  bool            FReminderDateTime_Specified;
  UnicodeString   FStatus;
  bool            FStatus_Specified;
  UnicodeString   FSubject;
  bool            FSubject_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  Name_*           FWhat;
  bool            FWhat_Specified;
  ID              FWhatId;
  bool            FWhatId_Specified;
  Name_*           FWho;
  bool            FWho_Specified;
  ID              FWhoId;
  bool            FWhoId_Specified;
  Account* __fastcall GetAccount(int Index)
  {  return FAccount;  }
  void __fastcall SetAccount(int Index, Account* _prop_val)
  {  FAccount = _prop_val; FAccount_Specified = true;  }
  bool __fastcall Account_Specified(int Index)
  {  return FAccount_Specified;  } 
  ID __fastcall GetAccountId(int Index)
  {  return FAccountId;  }
  void __fastcall SetAccountId(int Index, ID _prop_val)
  {  FAccountId = _prop_val; FAccountId_Specified = true;  }
  bool __fastcall AccountId_Specified(int Index)
  {  return FAccountId_Specified;  } 
  TXSDate* __fastcall GetActivityDate(int Index)
  {  return FActivityDate;  }
  void __fastcall SetActivityDate(int Index, TXSDate* _prop_val)
  {  FActivityDate = _prop_val; FActivityDate_Specified = true;  }
  bool __fastcall ActivityDate_Specified(int Index)
  {  return FActivityDate_Specified;  } 
  UnicodeString __fastcall GetActivityType(int Index)
  {  return FActivityType;  }
  void __fastcall SetActivityType(int Index, UnicodeString _prop_val)
  {  FActivityType = _prop_val; FActivityType_Specified = true;  }
  bool __fastcall ActivityType_Specified(int Index)
  {  return FActivityType_Specified;  } 
  UnicodeString __fastcall GetCallDisposition(int Index)
  {  return FCallDisposition;  }
  void __fastcall SetCallDisposition(int Index, UnicodeString _prop_val)
  {  FCallDisposition = _prop_val; FCallDisposition_Specified = true;  }
  bool __fastcall CallDisposition_Specified(int Index)
  {  return FCallDisposition_Specified;  } 
  int __fastcall GetCallDurationInSeconds(int Index)
  {  return FCallDurationInSeconds;  }
  void __fastcall SetCallDurationInSeconds(int Index, int _prop_val)
  {  FCallDurationInSeconds = _prop_val; FCallDurationInSeconds_Specified = true;  }
  bool __fastcall CallDurationInSeconds_Specified(int Index)
  {  return FCallDurationInSeconds_Specified;  } 
  UnicodeString __fastcall GetCallObject(int Index)
  {  return FCallObject;  }
  void __fastcall SetCallObject(int Index, UnicodeString _prop_val)
  {  FCallObject = _prop_val; FCallObject_Specified = true;  }
  bool __fastcall CallObject_Specified(int Index)
  {  return FCallObject_Specified;  } 
  UnicodeString __fastcall GetCallType(int Index)
  {  return FCallType;  }
  void __fastcall SetCallType(int Index, UnicodeString _prop_val)
  {  FCallType = _prop_val; FCallType_Specified = true;  }
  bool __fastcall CallType_Specified(int Index)
  {  return FCallType_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  int __fastcall GetDurationInMinutes(int Index)
  {  return FDurationInMinutes;  }
  void __fastcall SetDurationInMinutes(int Index, int _prop_val)
  {  FDurationInMinutes = _prop_val; FDurationInMinutes_Specified = true;  }
  bool __fastcall DurationInMinutes_Specified(int Index)
  {  return FDurationInMinutes_Specified;  } 
  bool __fastcall GetIsAllDayEvent(int Index)
  {  return FIsAllDayEvent;  }
  void __fastcall SetIsAllDayEvent(int Index, bool _prop_val)
  {  FIsAllDayEvent = _prop_val; FIsAllDayEvent_Specified = true;  }
  bool __fastcall IsAllDayEvent_Specified(int Index)
  {  return FIsAllDayEvent_Specified;  } 
  bool __fastcall GetIsClosed(int Index)
  {  return FIsClosed;  }
  void __fastcall SetIsClosed(int Index, bool _prop_val)
  {  FIsClosed = _prop_val; FIsClosed_Specified = true;  }
  bool __fastcall IsClosed_Specified(int Index)
  {  return FIsClosed_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsReminderSet(int Index)
  {  return FIsReminderSet;  }
  void __fastcall SetIsReminderSet(int Index, bool _prop_val)
  {  FIsReminderSet = _prop_val; FIsReminderSet_Specified = true;  }
  bool __fastcall IsReminderSet_Specified(int Index)
  {  return FIsReminderSet_Specified;  } 
  bool __fastcall GetIsTask(int Index)
  {  return FIsTask;  }
  void __fastcall SetIsTask(int Index, bool _prop_val)
  {  FIsTask = _prop_val; FIsTask_Specified = true;  }
  bool __fastcall IsTask_Specified(int Index)
  {  return FIsTask_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetLocation(int Index)
  {  return FLocation;  }
  void __fastcall SetLocation(int Index, UnicodeString _prop_val)
  {  FLocation = _prop_val; FLocation_Specified = true;  }
  bool __fastcall Location_Specified(int Index)
  {  return FLocation_Specified;  } 
  Name_* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, Name_* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  UnicodeString __fastcall GetPriority(int Index)
  {  return FPriority;  }
  void __fastcall SetPriority(int Index, UnicodeString _prop_val)
  {  FPriority = _prop_val; FPriority_Specified = true;  }
  bool __fastcall Priority_Specified(int Index)
  {  return FPriority_Specified;  } 
  TXSDateTime* __fastcall GetReminderDateTime(int Index)
  {  return FReminderDateTime;  }
  void __fastcall SetReminderDateTime(int Index, TXSDateTime* _prop_val)
  {  FReminderDateTime = _prop_val; FReminderDateTime_Specified = true;  }
  bool __fastcall ReminderDateTime_Specified(int Index)
  {  return FReminderDateTime_Specified;  } 
  UnicodeString __fastcall GetStatus(int Index)
  {  return FStatus;  }
  void __fastcall SetStatus(int Index, UnicodeString _prop_val)
  {  FStatus = _prop_val; FStatus_Specified = true;  }
  bool __fastcall Status_Specified(int Index)
  {  return FStatus_Specified;  } 
  UnicodeString __fastcall GetSubject(int Index)
  {  return FSubject;  }
  void __fastcall SetSubject(int Index, UnicodeString _prop_val)
  {  FSubject = _prop_val; FSubject_Specified = true;  }
  bool __fastcall Subject_Specified(int Index)
  {  return FSubject_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  Name_* __fastcall GetWhat(int Index)
  {  return FWhat;  }
  void __fastcall SetWhat(int Index, Name_* _prop_val)
  {  FWhat = _prop_val; FWhat_Specified = true;  }
  bool __fastcall What_Specified(int Index)
  {  return FWhat_Specified;  } 
  ID __fastcall GetWhatId(int Index)
  {  return FWhatId;  }
  void __fastcall SetWhatId(int Index, ID _prop_val)
  {  FWhatId = _prop_val; FWhatId_Specified = true;  }
  bool __fastcall WhatId_Specified(int Index)
  {  return FWhatId_Specified;  } 
  Name_* __fastcall GetWho(int Index)
  {  return FWho;  }
  void __fastcall SetWho(int Index, Name_* _prop_val)
  {  FWho = _prop_val; FWho_Specified = true;  }
  bool __fastcall Who_Specified(int Index)
  {  return FWho_Specified;  } 
  ID __fastcall GetWhoId(int Index)
  {  return FWhoId;  }
  void __fastcall SetWhoId(int Index, ID _prop_val)
  {  FWhoId = _prop_val; FWhoId_Specified = true;  }
  bool __fastcall WhoId_Specified(int Index)
  {  return FWhoId_Specified;  } 

public:
  __fastcall ~OpenActivity();
__published:
  __property Account*      Account = { index=(IS_OPTN|IS_NLBL), read=FAccount, write=SetAccount, stored = Account_Specified };
  __property ID          AccountId = { index=(IS_OPTN|IS_NLBL), read=FAccountId, write=SetAccountId, stored = AccountId_Specified };
  __property TXSDate*   ActivityDate = { index=(IS_OPTN|IS_NLBL), read=FActivityDate, write=SetActivityDate, stored = ActivityDate_Specified };
  __property UnicodeString ActivityType = { index=(IS_OPTN|IS_NLBL), read=FActivityType, write=SetActivityType, stored = ActivityType_Specified };
  __property UnicodeString CallDisposition = { index=(IS_OPTN|IS_NLBL), read=FCallDisposition, write=SetCallDisposition, stored = CallDisposition_Specified };
  __property int        CallDurationInSeconds = { index=(IS_OPTN|IS_NLBL), read=FCallDurationInSeconds, write=SetCallDurationInSeconds, stored = CallDurationInSeconds_Specified };
  __property UnicodeString CallObject = { index=(IS_OPTN|IS_NLBL), read=FCallObject, write=SetCallObject, stored = CallObject_Specified };
  __property UnicodeString   CallType = { index=(IS_OPTN|IS_NLBL), read=FCallType, write=SetCallType, stored = CallType_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property int        DurationInMinutes = { index=(IS_OPTN|IS_NLBL), read=FDurationInMinutes, write=SetDurationInMinutes, stored = DurationInMinutes_Specified };
  __property bool       IsAllDayEvent = { index=(IS_OPTN|IS_NLBL), read=FIsAllDayEvent, write=SetIsAllDayEvent, stored = IsAllDayEvent_Specified };
  __property bool         IsClosed = { index=(IS_OPTN|IS_NLBL), read=FIsClosed, write=SetIsClosed, stored = IsClosed_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool       IsReminderSet = { index=(IS_OPTN|IS_NLBL), read=FIsReminderSet, write=SetIsReminderSet, stored = IsReminderSet_Specified };
  __property bool           IsTask = { index=(IS_OPTN|IS_NLBL), read=FIsTask, write=SetIsTask, stored = IsTask_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString   Location = { index=(IS_OPTN|IS_NLBL), read=FLocation, write=SetLocation, stored = Location_Specified };
  __property Name_*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property UnicodeString   Priority = { index=(IS_OPTN|IS_NLBL), read=FPriority, write=SetPriority, stored = Priority_Specified };
  __property TXSDateTime* ReminderDateTime = { index=(IS_OPTN|IS_NLBL), read=FReminderDateTime, write=SetReminderDateTime, stored = ReminderDateTime_Specified };
  __property UnicodeString     Status = { index=(IS_OPTN|IS_NLBL), read=FStatus, write=SetStatus, stored = Status_Specified };
  __property UnicodeString    Subject = { index=(IS_OPTN|IS_NLBL), read=FSubject, write=SetSubject, stored = Subject_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property Name_*            What = { index=(IS_OPTN|IS_NLBL), read=FWhat, write=SetWhat, stored = What_Specified };
  __property ID             WhatId = { index=(IS_OPTN|IS_NLBL), read=FWhatId, write=SetWhatId, stored = WhatId_Specified };
  __property Name_*             Who = { index=(IS_OPTN|IS_NLBL), read=FWho, write=SetWho, stored = Who_Specified };
  __property ID              WhoId = { index=(IS_OPTN|IS_NLBL), read=FWhoId, write=SetWhoId, stored = WhoId_Specified };
};




// ************************************************************************ //
// XML       : ObjectPermissions, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ObjectPermissions : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  PermissionSet*  FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  bool            FPermissionsCreate;
  bool            FPermissionsCreate_Specified;
  bool            FPermissionsDelete;
  bool            FPermissionsDelete_Specified;
  bool            FPermissionsEdit;
  bool            FPermissionsEdit_Specified;
  bool            FPermissionsModifyAllRecords;
  bool            FPermissionsModifyAllRecords_Specified;
  bool            FPermissionsRead;
  bool            FPermissionsRead_Specified;
  bool            FPermissionsViewAllRecords;
  bool            FPermissionsViewAllRecords_Specified;
  UnicodeString   FSobjectType;
  bool            FSobjectType_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  PermissionSet* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, PermissionSet* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  bool __fastcall GetPermissionsCreate(int Index)
  {  return FPermissionsCreate;  }
  void __fastcall SetPermissionsCreate(int Index, bool _prop_val)
  {  FPermissionsCreate = _prop_val; FPermissionsCreate_Specified = true;  }
  bool __fastcall PermissionsCreate_Specified(int Index)
  {  return FPermissionsCreate_Specified;  } 
  bool __fastcall GetPermissionsDelete(int Index)
  {  return FPermissionsDelete;  }
  void __fastcall SetPermissionsDelete(int Index, bool _prop_val)
  {  FPermissionsDelete = _prop_val; FPermissionsDelete_Specified = true;  }
  bool __fastcall PermissionsDelete_Specified(int Index)
  {  return FPermissionsDelete_Specified;  } 
  bool __fastcall GetPermissionsEdit(int Index)
  {  return FPermissionsEdit;  }
  void __fastcall SetPermissionsEdit(int Index, bool _prop_val)
  {  FPermissionsEdit = _prop_val; FPermissionsEdit_Specified = true;  }
  bool __fastcall PermissionsEdit_Specified(int Index)
  {  return FPermissionsEdit_Specified;  } 
  bool __fastcall GetPermissionsModifyAllRecords(int Index)
  {  return FPermissionsModifyAllRecords;  }
  void __fastcall SetPermissionsModifyAllRecords(int Index, bool _prop_val)
  {  FPermissionsModifyAllRecords = _prop_val; FPermissionsModifyAllRecords_Specified = true;  }
  bool __fastcall PermissionsModifyAllRecords_Specified(int Index)
  {  return FPermissionsModifyAllRecords_Specified;  } 
  bool __fastcall GetPermissionsRead(int Index)
  {  return FPermissionsRead;  }
  void __fastcall SetPermissionsRead(int Index, bool _prop_val)
  {  FPermissionsRead = _prop_val; FPermissionsRead_Specified = true;  }
  bool __fastcall PermissionsRead_Specified(int Index)
  {  return FPermissionsRead_Specified;  } 
  bool __fastcall GetPermissionsViewAllRecords(int Index)
  {  return FPermissionsViewAllRecords;  }
  void __fastcall SetPermissionsViewAllRecords(int Index, bool _prop_val)
  {  FPermissionsViewAllRecords = _prop_val; FPermissionsViewAllRecords_Specified = true;  }
  bool __fastcall PermissionsViewAllRecords_Specified(int Index)
  {  return FPermissionsViewAllRecords_Specified;  } 
  UnicodeString __fastcall GetSobjectType(int Index)
  {  return FSobjectType;  }
  void __fastcall SetSobjectType(int Index, UnicodeString _prop_val)
  {  FSobjectType = _prop_val; FSobjectType_Specified = true;  }
  bool __fastcall SobjectType_Specified(int Index)
  {  return FSobjectType_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~ObjectPermissions();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property PermissionSet*     Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property bool       PermissionsCreate = { index=(IS_OPTN|IS_NLBL), read=FPermissionsCreate, write=SetPermissionsCreate, stored = PermissionsCreate_Specified };
  __property bool       PermissionsDelete = { index=(IS_OPTN|IS_NLBL), read=FPermissionsDelete, write=SetPermissionsDelete, stored = PermissionsDelete_Specified };
  __property bool       PermissionsEdit = { index=(IS_OPTN|IS_NLBL), read=FPermissionsEdit, write=SetPermissionsEdit, stored = PermissionsEdit_Specified };
  __property bool       PermissionsModifyAllRecords = { index=(IS_OPTN|IS_NLBL), read=FPermissionsModifyAllRecords, write=SetPermissionsModifyAllRecords, stored = PermissionsModifyAllRecords_Specified };
  __property bool       PermissionsRead = { index=(IS_OPTN|IS_NLBL), read=FPermissionsRead, write=SetPermissionsRead, stored = PermissionsRead_Specified };
  __property bool       PermissionsViewAllRecords = { index=(IS_OPTN|IS_NLBL), read=FPermissionsViewAllRecords, write=SetPermissionsViewAllRecords, stored = PermissionsViewAllRecords_Specified };
  __property UnicodeString SobjectType = { index=(IS_OPTN|IS_NLBL), read=FSobjectType, write=SetSobjectType, stored = SobjectType_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : NoteAndAttachment, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class NoteAndAttachment : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsNote;
  bool            FIsNote_Specified;
  bool            FIsPrivate;
  bool            FIsPrivate_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  User*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  Name_*           FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsNote(int Index)
  {  return FIsNote;  }
  void __fastcall SetIsNote(int Index, bool _prop_val)
  {  FIsNote = _prop_val; FIsNote_Specified = true;  }
  bool __fastcall IsNote_Specified(int Index)
  {  return FIsNote_Specified;  } 
  bool __fastcall GetIsPrivate(int Index)
  {  return FIsPrivate;  }
  void __fastcall SetIsPrivate(int Index, bool _prop_val)
  {  FIsPrivate = _prop_val; FIsPrivate_Specified = true;  }
  bool __fastcall IsPrivate_Specified(int Index)
  {  return FIsPrivate_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  User* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, User* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  Name_* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Name_* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 

public:
  __fastcall ~NoteAndAttachment();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool           IsNote = { index=(IS_OPTN|IS_NLBL), read=FIsNote, write=SetIsNote, stored = IsNote_Specified };
  __property bool        IsPrivate = { index=(IS_OPTN|IS_NLBL), read=FIsPrivate, write=SetIsPrivate, stored = IsPrivate_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property User*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property Name_*          Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
};




// ************************************************************************ //
// XML       : Note, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Note : public sObject {
private:
  UnicodeString   FBody;
  bool            FBody_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsPrivate;
  bool            FIsPrivate_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  User*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  Name_*           FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsPrivate(int Index)
  {  return FIsPrivate;  }
  void __fastcall SetIsPrivate(int Index, bool _prop_val)
  {  FIsPrivate = _prop_val; FIsPrivate_Specified = true;  }
  bool __fastcall IsPrivate_Specified(int Index)
  {  return FIsPrivate_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  User* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, User* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  Name_* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Name_* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 

public:
  __fastcall ~Note();
__published:
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool        IsPrivate = { index=(IS_OPTN|IS_NLBL), read=FIsPrivate, write=SetIsPrivate, stored = IsPrivate_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property User*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property Name_*          Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
};




// ************************************************************************ //
// XML       : NewsFeed, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class NewsFeed : public sObject {
private:
  UnicodeString   FBody;
  bool            FBody_Specified;
  int             FCommentCount;
  bool            FCommentCount_Specified;
  TByteDynArray   FContentData;
  bool            FContentData_Specified;
  UnicodeString   FContentDescription;
  bool            FContentDescription_Specified;
  UnicodeString   FContentFileName;
  bool            FContentFileName_Specified;
  int             FContentSize;
  bool            FContentSize_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedComments;
  bool            FFeedComments_Specified;
  QueryResult*    FFeedLikes;
  bool            FFeedLikes_Specified;
  QueryResult*    FFeedTrackedChanges;
  bool            FFeedTrackedChanges_Specified;
  Name_*           FInsertedBy;
  bool            FInsertedBy_Specified;
  ID              FInsertedById;
  bool            FInsertedById_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLikeCount;
  bool            FLikeCount_Specified;
  UnicodeString   FLinkUrl;
  bool            FLinkUrl_Specified;
  Name_*           FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FRelatedRecordId;
  bool            FRelatedRecordId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetCommentCount(int Index)
  {  return FCommentCount;  }
  void __fastcall SetCommentCount(int Index, int _prop_val)
  {  FCommentCount = _prop_val; FCommentCount_Specified = true;  }
  bool __fastcall CommentCount_Specified(int Index)
  {  return FCommentCount_Specified;  } 
  TByteDynArray __fastcall GetContentData(int Index)
  {  return FContentData;  }
  void __fastcall SetContentData(int Index, TByteDynArray _prop_val)
  {  FContentData = _prop_val; FContentData_Specified = true;  }
  bool __fastcall ContentData_Specified(int Index)
  {  return FContentData_Specified;  } 
  UnicodeString __fastcall GetContentDescription(int Index)
  {  return FContentDescription;  }
  void __fastcall SetContentDescription(int Index, UnicodeString _prop_val)
  {  FContentDescription = _prop_val; FContentDescription_Specified = true;  }
  bool __fastcall ContentDescription_Specified(int Index)
  {  return FContentDescription_Specified;  } 
  UnicodeString __fastcall GetContentFileName(int Index)
  {  return FContentFileName;  }
  void __fastcall SetContentFileName(int Index, UnicodeString _prop_val)
  {  FContentFileName = _prop_val; FContentFileName_Specified = true;  }
  bool __fastcall ContentFileName_Specified(int Index)
  {  return FContentFileName_Specified;  } 
  int __fastcall GetContentSize(int Index)
  {  return FContentSize;  }
  void __fastcall SetContentSize(int Index, int _prop_val)
  {  FContentSize = _prop_val; FContentSize_Specified = true;  }
  bool __fastcall ContentSize_Specified(int Index)
  {  return FContentSize_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedComments(int Index)
  {  return FFeedComments;  }
  void __fastcall SetFeedComments(int Index, QueryResult* _prop_val)
  {  FFeedComments = _prop_val; FFeedComments_Specified = true;  }
  bool __fastcall FeedComments_Specified(int Index)
  {  return FFeedComments_Specified;  } 
  QueryResult* __fastcall GetFeedLikes(int Index)
  {  return FFeedLikes;  }
  void __fastcall SetFeedLikes(int Index, QueryResult* _prop_val)
  {  FFeedLikes = _prop_val; FFeedLikes_Specified = true;  }
  bool __fastcall FeedLikes_Specified(int Index)
  {  return FFeedLikes_Specified;  } 
  QueryResult* __fastcall GetFeedTrackedChanges(int Index)
  {  return FFeedTrackedChanges;  }
  void __fastcall SetFeedTrackedChanges(int Index, QueryResult* _prop_val)
  {  FFeedTrackedChanges = _prop_val; FFeedTrackedChanges_Specified = true;  }
  bool __fastcall FeedTrackedChanges_Specified(int Index)
  {  return FFeedTrackedChanges_Specified;  } 
  Name_* __fastcall GetInsertedBy(int Index)
  {  return FInsertedBy;  }
  void __fastcall SetInsertedBy(int Index, Name_* _prop_val)
  {  FInsertedBy = _prop_val; FInsertedBy_Specified = true;  }
  bool __fastcall InsertedBy_Specified(int Index)
  {  return FInsertedBy_Specified;  } 
  ID __fastcall GetInsertedById(int Index)
  {  return FInsertedById;  }
  void __fastcall SetInsertedById(int Index, ID _prop_val)
  {  FInsertedById = _prop_val; FInsertedById_Specified = true;  }
  bool __fastcall InsertedById_Specified(int Index)
  {  return FInsertedById_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLikeCount(int Index)
  {  return FLikeCount;  }
  void __fastcall SetLikeCount(int Index, int _prop_val)
  {  FLikeCount = _prop_val; FLikeCount_Specified = true;  }
  bool __fastcall LikeCount_Specified(int Index)
  {  return FLikeCount_Specified;  } 
  UnicodeString __fastcall GetLinkUrl(int Index)
  {  return FLinkUrl;  }
  void __fastcall SetLinkUrl(int Index, UnicodeString _prop_val)
  {  FLinkUrl = _prop_val; FLinkUrl_Specified = true;  }
  bool __fastcall LinkUrl_Specified(int Index)
  {  return FLinkUrl_Specified;  } 
  Name_* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Name_* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetRelatedRecordId(int Index)
  {  return FRelatedRecordId;  }
  void __fastcall SetRelatedRecordId(int Index, ID _prop_val)
  {  FRelatedRecordId = _prop_val; FRelatedRecordId_Specified = true;  }
  bool __fastcall RelatedRecordId_Specified(int Index)
  {  return FRelatedRecordId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~NewsFeed();
__published:
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        CommentCount = { index=(IS_OPTN|IS_NLBL), read=FCommentCount, write=SetCommentCount, stored = CommentCount_Specified };
  __property TByteDynArray ContentData = { index=(IS_OPTN|IS_NLBL), read=FContentData, write=SetContentData, stored = ContentData_Specified };
  __property UnicodeString ContentDescription = { index=(IS_OPTN|IS_NLBL), read=FContentDescription, write=SetContentDescription, stored = ContentDescription_Specified };
  __property UnicodeString ContentFileName = { index=(IS_OPTN|IS_NLBL), read=FContentFileName, write=SetContentFileName, stored = ContentFileName_Specified };
  __property int        ContentSize = { index=(IS_OPTN|IS_NLBL), read=FContentSize, write=SetContentSize, stored = ContentSize_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedComments = { index=(IS_OPTN|IS_NLBL), read=FFeedComments, write=SetFeedComments, stored = FeedComments_Specified };
  __property QueryResult*  FeedLikes = { index=(IS_OPTN|IS_NLBL), read=FFeedLikes, write=SetFeedLikes, stored = FeedLikes_Specified };
  __property QueryResult* FeedTrackedChanges = { index=(IS_OPTN|IS_NLBL), read=FFeedTrackedChanges, write=SetFeedTrackedChanges, stored = FeedTrackedChanges_Specified };
  __property Name_*      InsertedBy = { index=(IS_OPTN|IS_NLBL), read=FInsertedBy, write=SetInsertedBy, stored = InsertedBy_Specified };
  __property ID         InsertedById = { index=(IS_OPTN|IS_NLBL), read=FInsertedById, write=SetInsertedById, stored = InsertedById_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int         LikeCount = { index=(IS_OPTN|IS_NLBL), read=FLikeCount, write=SetLikeCount, stored = LikeCount_Specified };
  __property UnicodeString    LinkUrl = { index=(IS_OPTN|IS_NLBL), read=FLinkUrl, write=SetLinkUrl, stored = LinkUrl_Specified };
  __property Name_*          Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         RelatedRecordId = { index=(IS_OPTN|IS_NLBL), read=FRelatedRecordId, write=SetRelatedRecordId, stored = RelatedRecordId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : UserRole, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class UserRole : public sObject {
private:
  UnicodeString   FCaseAccessForAccountOwner;
  bool            FCaseAccessForAccountOwner_Specified;
  UnicodeString   FContactAccessForAccountOwner;
  bool            FContactAccessForAccountOwner_Specified;
  UnicodeString   FDeveloperName;
  bool            FDeveloperName_Specified;
  ID              FForecastUserId;
  bool            FForecastUserId_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  bool            FMayForecastManagerShare;
  bool            FMayForecastManagerShare_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  UnicodeString   FOpportunityAccessForAccountOwner;
  bool            FOpportunityAccessForAccountOwner_Specified;
  ID              FParentRoleId;
  bool            FParentRoleId_Specified;
  ID              FPortalAccountId;
  bool            FPortalAccountId_Specified;
  ID              FPortalAccountOwnerId;
  bool            FPortalAccountOwnerId_Specified;
  UnicodeString   FPortalType;
  bool            FPortalType_Specified;
  UnicodeString   FRollupDescription;
  bool            FRollupDescription_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  QueryResult*    FUsers;
  bool            FUsers_Specified;
  UnicodeString __fastcall GetCaseAccessForAccountOwner(int Index)
  {  return FCaseAccessForAccountOwner;  }
  void __fastcall SetCaseAccessForAccountOwner(int Index, UnicodeString _prop_val)
  {  FCaseAccessForAccountOwner = _prop_val; FCaseAccessForAccountOwner_Specified = true;  }
  bool __fastcall CaseAccessForAccountOwner_Specified(int Index)
  {  return FCaseAccessForAccountOwner_Specified;  } 
  UnicodeString __fastcall GetContactAccessForAccountOwner(int Index)
  {  return FContactAccessForAccountOwner;  }
  void __fastcall SetContactAccessForAccountOwner(int Index, UnicodeString _prop_val)
  {  FContactAccessForAccountOwner = _prop_val; FContactAccessForAccountOwner_Specified = true;  }
  bool __fastcall ContactAccessForAccountOwner_Specified(int Index)
  {  return FContactAccessForAccountOwner_Specified;  } 
  UnicodeString __fastcall GetDeveloperName(int Index)
  {  return FDeveloperName;  }
  void __fastcall SetDeveloperName(int Index, UnicodeString _prop_val)
  {  FDeveloperName = _prop_val; FDeveloperName_Specified = true;  }
  bool __fastcall DeveloperName_Specified(int Index)
  {  return FDeveloperName_Specified;  } 
  ID __fastcall GetForecastUserId(int Index)
  {  return FForecastUserId;  }
  void __fastcall SetForecastUserId(int Index, ID _prop_val)
  {  FForecastUserId = _prop_val; FForecastUserId_Specified = true;  }
  bool __fastcall ForecastUserId_Specified(int Index)
  {  return FForecastUserId_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  bool __fastcall GetMayForecastManagerShare(int Index)
  {  return FMayForecastManagerShare;  }
  void __fastcall SetMayForecastManagerShare(int Index, bool _prop_val)
  {  FMayForecastManagerShare = _prop_val; FMayForecastManagerShare_Specified = true;  }
  bool __fastcall MayForecastManagerShare_Specified(int Index)
  {  return FMayForecastManagerShare_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  UnicodeString __fastcall GetOpportunityAccessForAccountOwner(int Index)
  {  return FOpportunityAccessForAccountOwner;  }
  void __fastcall SetOpportunityAccessForAccountOwner(int Index, UnicodeString _prop_val)
  {  FOpportunityAccessForAccountOwner = _prop_val; FOpportunityAccessForAccountOwner_Specified = true;  }
  bool __fastcall OpportunityAccessForAccountOwner_Specified(int Index)
  {  return FOpportunityAccessForAccountOwner_Specified;  } 
  ID __fastcall GetParentRoleId(int Index)
  {  return FParentRoleId;  }
  void __fastcall SetParentRoleId(int Index, ID _prop_val)
  {  FParentRoleId = _prop_val; FParentRoleId_Specified = true;  }
  bool __fastcall ParentRoleId_Specified(int Index)
  {  return FParentRoleId_Specified;  } 
  ID __fastcall GetPortalAccountId(int Index)
  {  return FPortalAccountId;  }
  void __fastcall SetPortalAccountId(int Index, ID _prop_val)
  {  FPortalAccountId = _prop_val; FPortalAccountId_Specified = true;  }
  bool __fastcall PortalAccountId_Specified(int Index)
  {  return FPortalAccountId_Specified;  } 
  ID __fastcall GetPortalAccountOwnerId(int Index)
  {  return FPortalAccountOwnerId;  }
  void __fastcall SetPortalAccountOwnerId(int Index, ID _prop_val)
  {  FPortalAccountOwnerId = _prop_val; FPortalAccountOwnerId_Specified = true;  }
  bool __fastcall PortalAccountOwnerId_Specified(int Index)
  {  return FPortalAccountOwnerId_Specified;  } 
  UnicodeString __fastcall GetPortalType(int Index)
  {  return FPortalType;  }
  void __fastcall SetPortalType(int Index, UnicodeString _prop_val)
  {  FPortalType = _prop_val; FPortalType_Specified = true;  }
  bool __fastcall PortalType_Specified(int Index)
  {  return FPortalType_Specified;  } 
  UnicodeString __fastcall GetRollupDescription(int Index)
  {  return FRollupDescription;  }
  void __fastcall SetRollupDescription(int Index, UnicodeString _prop_val)
  {  FRollupDescription = _prop_val; FRollupDescription_Specified = true;  }
  bool __fastcall RollupDescription_Specified(int Index)
  {  return FRollupDescription_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  QueryResult* __fastcall GetUsers(int Index)
  {  return FUsers;  }
  void __fastcall SetUsers(int Index, QueryResult* _prop_val)
  {  FUsers = _prop_val; FUsers_Specified = true;  }
  bool __fastcall Users_Specified(int Index)
  {  return FUsers_Specified;  } 

public:
  __fastcall ~UserRole();
__published:
  __property UnicodeString CaseAccessForAccountOwner = { index=(IS_OPTN|IS_NLBL), read=FCaseAccessForAccountOwner, write=SetCaseAccessForAccountOwner, stored = CaseAccessForAccountOwner_Specified };
  __property UnicodeString ContactAccessForAccountOwner = { index=(IS_OPTN|IS_NLBL), read=FContactAccessForAccountOwner, write=SetContactAccessForAccountOwner, stored = ContactAccessForAccountOwner_Specified };
  __property UnicodeString DeveloperName = { index=(IS_OPTN|IS_NLBL), read=FDeveloperName, write=SetDeveloperName, stored = DeveloperName_Specified };
  __property ID         ForecastUserId = { index=(IS_OPTN|IS_NLBL), read=FForecastUserId, write=SetForecastUserId, stored = ForecastUserId_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property bool       MayForecastManagerShare = { index=(IS_OPTN|IS_NLBL), read=FMayForecastManagerShare, write=SetMayForecastManagerShare, stored = MayForecastManagerShare_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property UnicodeString OpportunityAccessForAccountOwner = { index=(IS_OPTN|IS_NLBL), read=FOpportunityAccessForAccountOwner, write=SetOpportunityAccessForAccountOwner, stored = OpportunityAccessForAccountOwner_Specified };
  __property ID         ParentRoleId = { index=(IS_OPTN|IS_NLBL), read=FParentRoleId, write=SetParentRoleId, stored = ParentRoleId_Specified };
  __property ID         PortalAccountId = { index=(IS_OPTN|IS_NLBL), read=FPortalAccountId, write=SetPortalAccountId, stored = PortalAccountId_Specified };
  __property ID         PortalAccountOwnerId = { index=(IS_OPTN|IS_NLBL), read=FPortalAccountOwnerId, write=SetPortalAccountOwnerId, stored = PortalAccountOwnerId_Specified };
  __property UnicodeString PortalType = { index=(IS_OPTN|IS_NLBL), read=FPortalType, write=SetPortalType, stored = PortalType_Specified };
  __property UnicodeString RollupDescription = { index=(IS_OPTN|IS_NLBL), read=FRollupDescription, write=SetRollupDescription, stored = RollupDescription_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property QueryResult*      Users = { index=(IS_OPTN|IS_NLBL), read=FUsers, write=SetUsers, stored = Users_Specified };
};




// ************************************************************************ //
// XML       : Profile, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Profile : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  ID              FDefaultApplicationId;
  bool            FDefaultApplicationId_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  bool            FPermissionsApiEnabled;
  bool            FPermissionsApiEnabled_Specified;
  bool            FPermissionsApiUserOnly;
  bool            FPermissionsApiUserOnly_Specified;
  bool            FPermissionsAuthorApex;
  bool            FPermissionsAuthorApex_Specified;
  bool            FPermissionsBulkApiHardDelete;
  bool            FPermissionsBulkApiHardDelete_Specified;
  bool            FPermissionsCanInsertFeedSystemFields;
  bool            FPermissionsCanInsertFeedSystemFields_Specified;
  bool            FPermissionsCanUseNewDashboardBuilder;
  bool            FPermissionsCanUseNewDashboardBuilder_Specified;
  bool            FPermissionsChatterFileLink;
  bool            FPermissionsChatterFileLink_Specified;
  bool            FPermissionsConvertLeads;
  bool            FPermissionsConvertLeads_Specified;
  bool            FPermissionsCreateMultiforce;
  bool            FPermissionsCreateMultiforce_Specified;
  bool            FPermissionsCustomSidebarOnAllPages;
  bool            FPermissionsCustomSidebarOnAllPages_Specified;
  bool            FPermissionsCustomizeApplication;
  bool            FPermissionsCustomizeApplication_Specified;
  bool            FPermissionsDistributeFromPersWksp;
  bool            FPermissionsDistributeFromPersWksp_Specified;
  bool            FPermissionsEditCaseComments;
  bool            FPermissionsEditCaseComments_Specified;
  bool            FPermissionsEditEvent;
  bool            FPermissionsEditEvent_Specified;
  bool            FPermissionsEditOppLineItemUnitPrice;
  bool            FPermissionsEditOppLineItemUnitPrice_Specified;
  bool            FPermissionsEditPublicDocuments;
  bool            FPermissionsEditPublicDocuments_Specified;
  bool            FPermissionsEditReadonlyFields;
  bool            FPermissionsEditReadonlyFields_Specified;
  bool            FPermissionsEditReports;
  bool            FPermissionsEditReports_Specified;
  bool            FPermissionsEditTask;
  bool            FPermissionsEditTask_Specified;
  bool            FPermissionsEmailAdministration;
  bool            FPermissionsEmailAdministration_Specified;
  bool            FPermissionsEmailTemplateManagement;
  bool            FPermissionsEmailTemplateManagement_Specified;
  bool            FPermissionsEnableNotifications;
  bool            FPermissionsEnableNotifications_Specified;
  bool            FPermissionsFlowUFLRequired;
  bool            FPermissionsFlowUFLRequired_Specified;
  bool            FPermissionsImportLeads;
  bool            FPermissionsImportLeads_Specified;
  bool            FPermissionsInboundMigrationToolsUser;
  bool            FPermissionsInboundMigrationToolsUser_Specified;
  bool            FPermissionsInstallMultiforce;
  bool            FPermissionsInstallMultiforce_Specified;
  bool            FPermissionsManageAnalyticSnapshots;
  bool            FPermissionsManageAnalyticSnapshots_Specified;
  bool            FPermissionsManageAuthProviders;
  bool            FPermissionsManageAuthProviders_Specified;
  bool            FPermissionsManageBusinessHourHolidays;
  bool            FPermissionsManageBusinessHourHolidays_Specified;
  bool            FPermissionsManageCallCenters;
  bool            FPermissionsManageCallCenters_Specified;
  bool            FPermissionsManageCases;
  bool            FPermissionsManageCases_Specified;
  bool            FPermissionsManageCategories;
  bool            FPermissionsManageCategories_Specified;
  bool            FPermissionsManageChatterMessages;
  bool            FPermissionsManageChatterMessages_Specified;
  bool            FPermissionsManageCssUsers;
  bool            FPermissionsManageCssUsers_Specified;
  bool            FPermissionsManageCustomReportTypes;
  bool            FPermissionsManageCustomReportTypes_Specified;
  bool            FPermissionsManageDashboards;
  bool            FPermissionsManageDashboards_Specified;
  bool            FPermissionsManageDataCategories;
  bool            FPermissionsManageDataCategories_Specified;
  bool            FPermissionsManageDataIntegrations;
  bool            FPermissionsManageDataIntegrations_Specified;
  bool            FPermissionsManageEmailClientConfig;
  bool            FPermissionsManageEmailClientConfig_Specified;
  bool            FPermissionsManageInteraction;
  bool            FPermissionsManageInteraction_Specified;
  bool            FPermissionsManageLeads;
  bool            FPermissionsManageLeads_Specified;
  bool            FPermissionsManageMobile;
  bool            FPermissionsManageMobile_Specified;
  bool            FPermissionsManageRemoteAccess;
  bool            FPermissionsManageRemoteAccess_Specified;
  bool            FPermissionsManageSelfService;
  bool            FPermissionsManageSelfService_Specified;
  bool            FPermissionsManageSolutions;
  bool            FPermissionsManageSolutions_Specified;
  bool            FPermissionsManageUsers;
  bool            FPermissionsManageUsers_Specified;
  bool            FPermissionsMassInlineEdit;
  bool            FPermissionsMassInlineEdit_Specified;
  bool            FPermissionsModifyAllData;
  bool            FPermissionsModifyAllData_Specified;
  bool            FPermissionsNewReportBuilder;
  bool            FPermissionsNewReportBuilder_Specified;
  bool            FPermissionsOutboundMigrationToolsUser;
  bool            FPermissionsOutboundMigrationToolsUser_Specified;
  bool            FPermissionsPasswordNeverExpires;
  bool            FPermissionsPasswordNeverExpires_Specified;
  bool            FPermissionsPublishMultiforce;
  bool            FPermissionsPublishMultiforce_Specified;
  bool            FPermissionsResetPasswords;
  bool            FPermissionsResetPasswords_Specified;
  bool            FPermissionsRunFlow;
  bool            FPermissionsRunFlow_Specified;
  bool            FPermissionsRunReports;
  bool            FPermissionsRunReports_Specified;
  bool            FPermissionsScheduleJob;
  bool            FPermissionsScheduleJob_Specified;
  bool            FPermissionsScheduleReports;
  bool            FPermissionsScheduleReports_Specified;
  bool            FPermissionsSendSitRequests;
  bool            FPermissionsSendSitRequests_Specified;
  bool            FPermissionsSolutionImport;
  bool            FPermissionsSolutionImport_Specified;
  bool            FPermissionsTransferAnyCase;
  bool            FPermissionsTransferAnyCase_Specified;
  bool            FPermissionsTransferAnyEntity;
  bool            FPermissionsTransferAnyEntity_Specified;
  bool            FPermissionsTransferAnyLead;
  bool            FPermissionsTransferAnyLead_Specified;
  bool            FPermissionsUseTeamReassignWizards;
  bool            FPermissionsUseTeamReassignWizards_Specified;
  bool            FPermissionsViewAllData;
  bool            FPermissionsViewAllData_Specified;
  bool            FPermissionsViewDataCategories;
  bool            FPermissionsViewDataCategories_Specified;
  bool            FPermissionsViewMyTeamsDashboards;
  bool            FPermissionsViewMyTeamsDashboards_Specified;
  bool            FPermissionsViewSetup;
  bool            FPermissionsViewSetup_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UserLicense*    FUserLicense;
  bool            FUserLicense_Specified;
  ID              FUserLicenseId;
  bool            FUserLicenseId_Specified;
  UnicodeString   FUserType;
  bool            FUserType_Specified;
  QueryResult*    FUsers;
  bool            FUsers_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  ID __fastcall GetDefaultApplicationId(int Index)
  {  return FDefaultApplicationId;  }
  void __fastcall SetDefaultApplicationId(int Index, ID _prop_val)
  {  FDefaultApplicationId = _prop_val; FDefaultApplicationId_Specified = true;  }
  bool __fastcall DefaultApplicationId_Specified(int Index)
  {  return FDefaultApplicationId_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  bool __fastcall GetPermissionsApiEnabled(int Index)
  {  return FPermissionsApiEnabled;  }
  void __fastcall SetPermissionsApiEnabled(int Index, bool _prop_val)
  {  FPermissionsApiEnabled = _prop_val; FPermissionsApiEnabled_Specified = true;  }
  bool __fastcall PermissionsApiEnabled_Specified(int Index)
  {  return FPermissionsApiEnabled_Specified;  } 
  bool __fastcall GetPermissionsApiUserOnly(int Index)
  {  return FPermissionsApiUserOnly;  }
  void __fastcall SetPermissionsApiUserOnly(int Index, bool _prop_val)
  {  FPermissionsApiUserOnly = _prop_val; FPermissionsApiUserOnly_Specified = true;  }
  bool __fastcall PermissionsApiUserOnly_Specified(int Index)
  {  return FPermissionsApiUserOnly_Specified;  } 
  bool __fastcall GetPermissionsAuthorApex(int Index)
  {  return FPermissionsAuthorApex;  }
  void __fastcall SetPermissionsAuthorApex(int Index, bool _prop_val)
  {  FPermissionsAuthorApex = _prop_val; FPermissionsAuthorApex_Specified = true;  }
  bool __fastcall PermissionsAuthorApex_Specified(int Index)
  {  return FPermissionsAuthorApex_Specified;  } 
  bool __fastcall GetPermissionsBulkApiHardDelete(int Index)
  {  return FPermissionsBulkApiHardDelete;  }
  void __fastcall SetPermissionsBulkApiHardDelete(int Index, bool _prop_val)
  {  FPermissionsBulkApiHardDelete = _prop_val; FPermissionsBulkApiHardDelete_Specified = true;  }
  bool __fastcall PermissionsBulkApiHardDelete_Specified(int Index)
  {  return FPermissionsBulkApiHardDelete_Specified;  } 
  bool __fastcall GetPermissionsCanInsertFeedSystemFields(int Index)
  {  return FPermissionsCanInsertFeedSystemFields;  }
  void __fastcall SetPermissionsCanInsertFeedSystemFields(int Index, bool _prop_val)
  {  FPermissionsCanInsertFeedSystemFields = _prop_val; FPermissionsCanInsertFeedSystemFields_Specified = true;  }
  bool __fastcall PermissionsCanInsertFeedSystemFields_Specified(int Index)
  {  return FPermissionsCanInsertFeedSystemFields_Specified;  } 
  bool __fastcall GetPermissionsCanUseNewDashboardBuilder(int Index)
  {  return FPermissionsCanUseNewDashboardBuilder;  }
  void __fastcall SetPermissionsCanUseNewDashboardBuilder(int Index, bool _prop_val)
  {  FPermissionsCanUseNewDashboardBuilder = _prop_val; FPermissionsCanUseNewDashboardBuilder_Specified = true;  }
  bool __fastcall PermissionsCanUseNewDashboardBuilder_Specified(int Index)
  {  return FPermissionsCanUseNewDashboardBuilder_Specified;  } 
  bool __fastcall GetPermissionsChatterFileLink(int Index)
  {  return FPermissionsChatterFileLink;  }
  void __fastcall SetPermissionsChatterFileLink(int Index, bool _prop_val)
  {  FPermissionsChatterFileLink = _prop_val; FPermissionsChatterFileLink_Specified = true;  }
  bool __fastcall PermissionsChatterFileLink_Specified(int Index)
  {  return FPermissionsChatterFileLink_Specified;  } 
  bool __fastcall GetPermissionsConvertLeads(int Index)
  {  return FPermissionsConvertLeads;  }
  void __fastcall SetPermissionsConvertLeads(int Index, bool _prop_val)
  {  FPermissionsConvertLeads = _prop_val; FPermissionsConvertLeads_Specified = true;  }
  bool __fastcall PermissionsConvertLeads_Specified(int Index)
  {  return FPermissionsConvertLeads_Specified;  } 
  bool __fastcall GetPermissionsCreateMultiforce(int Index)
  {  return FPermissionsCreateMultiforce;  }
  void __fastcall SetPermissionsCreateMultiforce(int Index, bool _prop_val)
  {  FPermissionsCreateMultiforce = _prop_val; FPermissionsCreateMultiforce_Specified = true;  }
  bool __fastcall PermissionsCreateMultiforce_Specified(int Index)
  {  return FPermissionsCreateMultiforce_Specified;  } 
  bool __fastcall GetPermissionsCustomSidebarOnAllPages(int Index)
  {  return FPermissionsCustomSidebarOnAllPages;  }
  void __fastcall SetPermissionsCustomSidebarOnAllPages(int Index, bool _prop_val)
  {  FPermissionsCustomSidebarOnAllPages = _prop_val; FPermissionsCustomSidebarOnAllPages_Specified = true;  }
  bool __fastcall PermissionsCustomSidebarOnAllPages_Specified(int Index)
  {  return FPermissionsCustomSidebarOnAllPages_Specified;  } 
  bool __fastcall GetPermissionsCustomizeApplication(int Index)
  {  return FPermissionsCustomizeApplication;  }
  void __fastcall SetPermissionsCustomizeApplication(int Index, bool _prop_val)
  {  FPermissionsCustomizeApplication = _prop_val; FPermissionsCustomizeApplication_Specified = true;  }
  bool __fastcall PermissionsCustomizeApplication_Specified(int Index)
  {  return FPermissionsCustomizeApplication_Specified;  } 
  bool __fastcall GetPermissionsDistributeFromPersWksp(int Index)
  {  return FPermissionsDistributeFromPersWksp;  }
  void __fastcall SetPermissionsDistributeFromPersWksp(int Index, bool _prop_val)
  {  FPermissionsDistributeFromPersWksp = _prop_val; FPermissionsDistributeFromPersWksp_Specified = true;  }
  bool __fastcall PermissionsDistributeFromPersWksp_Specified(int Index)
  {  return FPermissionsDistributeFromPersWksp_Specified;  } 
  bool __fastcall GetPermissionsEditCaseComments(int Index)
  {  return FPermissionsEditCaseComments;  }
  void __fastcall SetPermissionsEditCaseComments(int Index, bool _prop_val)
  {  FPermissionsEditCaseComments = _prop_val; FPermissionsEditCaseComments_Specified = true;  }
  bool __fastcall PermissionsEditCaseComments_Specified(int Index)
  {  return FPermissionsEditCaseComments_Specified;  } 
  bool __fastcall GetPermissionsEditEvent(int Index)
  {  return FPermissionsEditEvent;  }
  void __fastcall SetPermissionsEditEvent(int Index, bool _prop_val)
  {  FPermissionsEditEvent = _prop_val; FPermissionsEditEvent_Specified = true;  }
  bool __fastcall PermissionsEditEvent_Specified(int Index)
  {  return FPermissionsEditEvent_Specified;  } 
  bool __fastcall GetPermissionsEditOppLineItemUnitPrice(int Index)
  {  return FPermissionsEditOppLineItemUnitPrice;  }
  void __fastcall SetPermissionsEditOppLineItemUnitPrice(int Index, bool _prop_val)
  {  FPermissionsEditOppLineItemUnitPrice = _prop_val; FPermissionsEditOppLineItemUnitPrice_Specified = true;  }
  bool __fastcall PermissionsEditOppLineItemUnitPrice_Specified(int Index)
  {  return FPermissionsEditOppLineItemUnitPrice_Specified;  } 
  bool __fastcall GetPermissionsEditPublicDocuments(int Index)
  {  return FPermissionsEditPublicDocuments;  }
  void __fastcall SetPermissionsEditPublicDocuments(int Index, bool _prop_val)
  {  FPermissionsEditPublicDocuments = _prop_val; FPermissionsEditPublicDocuments_Specified = true;  }
  bool __fastcall PermissionsEditPublicDocuments_Specified(int Index)
  {  return FPermissionsEditPublicDocuments_Specified;  } 
  bool __fastcall GetPermissionsEditReadonlyFields(int Index)
  {  return FPermissionsEditReadonlyFields;  }
  void __fastcall SetPermissionsEditReadonlyFields(int Index, bool _prop_val)
  {  FPermissionsEditReadonlyFields = _prop_val; FPermissionsEditReadonlyFields_Specified = true;  }
  bool __fastcall PermissionsEditReadonlyFields_Specified(int Index)
  {  return FPermissionsEditReadonlyFields_Specified;  } 
  bool __fastcall GetPermissionsEditReports(int Index)
  {  return FPermissionsEditReports;  }
  void __fastcall SetPermissionsEditReports(int Index, bool _prop_val)
  {  FPermissionsEditReports = _prop_val; FPermissionsEditReports_Specified = true;  }
  bool __fastcall PermissionsEditReports_Specified(int Index)
  {  return FPermissionsEditReports_Specified;  } 
  bool __fastcall GetPermissionsEditTask(int Index)
  {  return FPermissionsEditTask;  }
  void __fastcall SetPermissionsEditTask(int Index, bool _prop_val)
  {  FPermissionsEditTask = _prop_val; FPermissionsEditTask_Specified = true;  }
  bool __fastcall PermissionsEditTask_Specified(int Index)
  {  return FPermissionsEditTask_Specified;  } 
  bool __fastcall GetPermissionsEmailAdministration(int Index)
  {  return FPermissionsEmailAdministration;  }
  void __fastcall SetPermissionsEmailAdministration(int Index, bool _prop_val)
  {  FPermissionsEmailAdministration = _prop_val; FPermissionsEmailAdministration_Specified = true;  }
  bool __fastcall PermissionsEmailAdministration_Specified(int Index)
  {  return FPermissionsEmailAdministration_Specified;  } 
  bool __fastcall GetPermissionsEmailTemplateManagement(int Index)
  {  return FPermissionsEmailTemplateManagement;  }
  void __fastcall SetPermissionsEmailTemplateManagement(int Index, bool _prop_val)
  {  FPermissionsEmailTemplateManagement = _prop_val; FPermissionsEmailTemplateManagement_Specified = true;  }
  bool __fastcall PermissionsEmailTemplateManagement_Specified(int Index)
  {  return FPermissionsEmailTemplateManagement_Specified;  } 
  bool __fastcall GetPermissionsEnableNotifications(int Index)
  {  return FPermissionsEnableNotifications;  }
  void __fastcall SetPermissionsEnableNotifications(int Index, bool _prop_val)
  {  FPermissionsEnableNotifications = _prop_val; FPermissionsEnableNotifications_Specified = true;  }
  bool __fastcall PermissionsEnableNotifications_Specified(int Index)
  {  return FPermissionsEnableNotifications_Specified;  } 
  bool __fastcall GetPermissionsFlowUFLRequired(int Index)
  {  return FPermissionsFlowUFLRequired;  }
  void __fastcall SetPermissionsFlowUFLRequired(int Index, bool _prop_val)
  {  FPermissionsFlowUFLRequired = _prop_val; FPermissionsFlowUFLRequired_Specified = true;  }
  bool __fastcall PermissionsFlowUFLRequired_Specified(int Index)
  {  return FPermissionsFlowUFLRequired_Specified;  } 
  bool __fastcall GetPermissionsImportLeads(int Index)
  {  return FPermissionsImportLeads;  }
  void __fastcall SetPermissionsImportLeads(int Index, bool _prop_val)
  {  FPermissionsImportLeads = _prop_val; FPermissionsImportLeads_Specified = true;  }
  bool __fastcall PermissionsImportLeads_Specified(int Index)
  {  return FPermissionsImportLeads_Specified;  } 
  bool __fastcall GetPermissionsInboundMigrationToolsUser(int Index)
  {  return FPermissionsInboundMigrationToolsUser;  }
  void __fastcall SetPermissionsInboundMigrationToolsUser(int Index, bool _prop_val)
  {  FPermissionsInboundMigrationToolsUser = _prop_val; FPermissionsInboundMigrationToolsUser_Specified = true;  }
  bool __fastcall PermissionsInboundMigrationToolsUser_Specified(int Index)
  {  return FPermissionsInboundMigrationToolsUser_Specified;  } 
  bool __fastcall GetPermissionsInstallMultiforce(int Index)
  {  return FPermissionsInstallMultiforce;  }
  void __fastcall SetPermissionsInstallMultiforce(int Index, bool _prop_val)
  {  FPermissionsInstallMultiforce = _prop_val; FPermissionsInstallMultiforce_Specified = true;  }
  bool __fastcall PermissionsInstallMultiforce_Specified(int Index)
  {  return FPermissionsInstallMultiforce_Specified;  } 
  bool __fastcall GetPermissionsManageAnalyticSnapshots(int Index)
  {  return FPermissionsManageAnalyticSnapshots;  }
  void __fastcall SetPermissionsManageAnalyticSnapshots(int Index, bool _prop_val)
  {  FPermissionsManageAnalyticSnapshots = _prop_val; FPermissionsManageAnalyticSnapshots_Specified = true;  }
  bool __fastcall PermissionsManageAnalyticSnapshots_Specified(int Index)
  {  return FPermissionsManageAnalyticSnapshots_Specified;  } 
  bool __fastcall GetPermissionsManageAuthProviders(int Index)
  {  return FPermissionsManageAuthProviders;  }
  void __fastcall SetPermissionsManageAuthProviders(int Index, bool _prop_val)
  {  FPermissionsManageAuthProviders = _prop_val; FPermissionsManageAuthProviders_Specified = true;  }
  bool __fastcall PermissionsManageAuthProviders_Specified(int Index)
  {  return FPermissionsManageAuthProviders_Specified;  } 
  bool __fastcall GetPermissionsManageBusinessHourHolidays(int Index)
  {  return FPermissionsManageBusinessHourHolidays;  }
  void __fastcall SetPermissionsManageBusinessHourHolidays(int Index, bool _prop_val)
  {  FPermissionsManageBusinessHourHolidays = _prop_val; FPermissionsManageBusinessHourHolidays_Specified = true;  }
  bool __fastcall PermissionsManageBusinessHourHolidays_Specified(int Index)
  {  return FPermissionsManageBusinessHourHolidays_Specified;  } 
  bool __fastcall GetPermissionsManageCallCenters(int Index)
  {  return FPermissionsManageCallCenters;  }
  void __fastcall SetPermissionsManageCallCenters(int Index, bool _prop_val)
  {  FPermissionsManageCallCenters = _prop_val; FPermissionsManageCallCenters_Specified = true;  }
  bool __fastcall PermissionsManageCallCenters_Specified(int Index)
  {  return FPermissionsManageCallCenters_Specified;  } 
  bool __fastcall GetPermissionsManageCases(int Index)
  {  return FPermissionsManageCases;  }
  void __fastcall SetPermissionsManageCases(int Index, bool _prop_val)
  {  FPermissionsManageCases = _prop_val; FPermissionsManageCases_Specified = true;  }
  bool __fastcall PermissionsManageCases_Specified(int Index)
  {  return FPermissionsManageCases_Specified;  } 
  bool __fastcall GetPermissionsManageCategories(int Index)
  {  return FPermissionsManageCategories;  }
  void __fastcall SetPermissionsManageCategories(int Index, bool _prop_val)
  {  FPermissionsManageCategories = _prop_val; FPermissionsManageCategories_Specified = true;  }
  bool __fastcall PermissionsManageCategories_Specified(int Index)
  {  return FPermissionsManageCategories_Specified;  } 
  bool __fastcall GetPermissionsManageChatterMessages(int Index)
  {  return FPermissionsManageChatterMessages;  }
  void __fastcall SetPermissionsManageChatterMessages(int Index, bool _prop_val)
  {  FPermissionsManageChatterMessages = _prop_val; FPermissionsManageChatterMessages_Specified = true;  }
  bool __fastcall PermissionsManageChatterMessages_Specified(int Index)
  {  return FPermissionsManageChatterMessages_Specified;  } 
  bool __fastcall GetPermissionsManageCssUsers(int Index)
  {  return FPermissionsManageCssUsers;  }
  void __fastcall SetPermissionsManageCssUsers(int Index, bool _prop_val)
  {  FPermissionsManageCssUsers = _prop_val; FPermissionsManageCssUsers_Specified = true;  }
  bool __fastcall PermissionsManageCssUsers_Specified(int Index)
  {  return FPermissionsManageCssUsers_Specified;  } 
  bool __fastcall GetPermissionsManageCustomReportTypes(int Index)
  {  return FPermissionsManageCustomReportTypes;  }
  void __fastcall SetPermissionsManageCustomReportTypes(int Index, bool _prop_val)
  {  FPermissionsManageCustomReportTypes = _prop_val; FPermissionsManageCustomReportTypes_Specified = true;  }
  bool __fastcall PermissionsManageCustomReportTypes_Specified(int Index)
  {  return FPermissionsManageCustomReportTypes_Specified;  } 
  bool __fastcall GetPermissionsManageDashboards(int Index)
  {  return FPermissionsManageDashboards;  }
  void __fastcall SetPermissionsManageDashboards(int Index, bool _prop_val)
  {  FPermissionsManageDashboards = _prop_val; FPermissionsManageDashboards_Specified = true;  }
  bool __fastcall PermissionsManageDashboards_Specified(int Index)
  {  return FPermissionsManageDashboards_Specified;  } 
  bool __fastcall GetPermissionsManageDataCategories(int Index)
  {  return FPermissionsManageDataCategories;  }
  void __fastcall SetPermissionsManageDataCategories(int Index, bool _prop_val)
  {  FPermissionsManageDataCategories = _prop_val; FPermissionsManageDataCategories_Specified = true;  }
  bool __fastcall PermissionsManageDataCategories_Specified(int Index)
  {  return FPermissionsManageDataCategories_Specified;  } 
  bool __fastcall GetPermissionsManageDataIntegrations(int Index)
  {  return FPermissionsManageDataIntegrations;  }
  void __fastcall SetPermissionsManageDataIntegrations(int Index, bool _prop_val)
  {  FPermissionsManageDataIntegrations = _prop_val; FPermissionsManageDataIntegrations_Specified = true;  }
  bool __fastcall PermissionsManageDataIntegrations_Specified(int Index)
  {  return FPermissionsManageDataIntegrations_Specified;  } 
  bool __fastcall GetPermissionsManageEmailClientConfig(int Index)
  {  return FPermissionsManageEmailClientConfig;  }
  void __fastcall SetPermissionsManageEmailClientConfig(int Index, bool _prop_val)
  {  FPermissionsManageEmailClientConfig = _prop_val; FPermissionsManageEmailClientConfig_Specified = true;  }
  bool __fastcall PermissionsManageEmailClientConfig_Specified(int Index)
  {  return FPermissionsManageEmailClientConfig_Specified;  } 
  bool __fastcall GetPermissionsManageInteraction(int Index)
  {  return FPermissionsManageInteraction;  }
  void __fastcall SetPermissionsManageInteraction(int Index, bool _prop_val)
  {  FPermissionsManageInteraction = _prop_val; FPermissionsManageInteraction_Specified = true;  }
  bool __fastcall PermissionsManageInteraction_Specified(int Index)
  {  return FPermissionsManageInteraction_Specified;  } 
  bool __fastcall GetPermissionsManageLeads(int Index)
  {  return FPermissionsManageLeads;  }
  void __fastcall SetPermissionsManageLeads(int Index, bool _prop_val)
  {  FPermissionsManageLeads = _prop_val; FPermissionsManageLeads_Specified = true;  }
  bool __fastcall PermissionsManageLeads_Specified(int Index)
  {  return FPermissionsManageLeads_Specified;  } 
  bool __fastcall GetPermissionsManageMobile(int Index)
  {  return FPermissionsManageMobile;  }
  void __fastcall SetPermissionsManageMobile(int Index, bool _prop_val)
  {  FPermissionsManageMobile = _prop_val; FPermissionsManageMobile_Specified = true;  }
  bool __fastcall PermissionsManageMobile_Specified(int Index)
  {  return FPermissionsManageMobile_Specified;  } 
  bool __fastcall GetPermissionsManageRemoteAccess(int Index)
  {  return FPermissionsManageRemoteAccess;  }
  void __fastcall SetPermissionsManageRemoteAccess(int Index, bool _prop_val)
  {  FPermissionsManageRemoteAccess = _prop_val; FPermissionsManageRemoteAccess_Specified = true;  }
  bool __fastcall PermissionsManageRemoteAccess_Specified(int Index)
  {  return FPermissionsManageRemoteAccess_Specified;  } 
  bool __fastcall GetPermissionsManageSelfService(int Index)
  {  return FPermissionsManageSelfService;  }
  void __fastcall SetPermissionsManageSelfService(int Index, bool _prop_val)
  {  FPermissionsManageSelfService = _prop_val; FPermissionsManageSelfService_Specified = true;  }
  bool __fastcall PermissionsManageSelfService_Specified(int Index)
  {  return FPermissionsManageSelfService_Specified;  } 
  bool __fastcall GetPermissionsManageSolutions(int Index)
  {  return FPermissionsManageSolutions;  }
  void __fastcall SetPermissionsManageSolutions(int Index, bool _prop_val)
  {  FPermissionsManageSolutions = _prop_val; FPermissionsManageSolutions_Specified = true;  }
  bool __fastcall PermissionsManageSolutions_Specified(int Index)
  {  return FPermissionsManageSolutions_Specified;  } 
  bool __fastcall GetPermissionsManageUsers(int Index)
  {  return FPermissionsManageUsers;  }
  void __fastcall SetPermissionsManageUsers(int Index, bool _prop_val)
  {  FPermissionsManageUsers = _prop_val; FPermissionsManageUsers_Specified = true;  }
  bool __fastcall PermissionsManageUsers_Specified(int Index)
  {  return FPermissionsManageUsers_Specified;  } 
  bool __fastcall GetPermissionsMassInlineEdit(int Index)
  {  return FPermissionsMassInlineEdit;  }
  void __fastcall SetPermissionsMassInlineEdit(int Index, bool _prop_val)
  {  FPermissionsMassInlineEdit = _prop_val; FPermissionsMassInlineEdit_Specified = true;  }
  bool __fastcall PermissionsMassInlineEdit_Specified(int Index)
  {  return FPermissionsMassInlineEdit_Specified;  } 
  bool __fastcall GetPermissionsModifyAllData(int Index)
  {  return FPermissionsModifyAllData;  }
  void __fastcall SetPermissionsModifyAllData(int Index, bool _prop_val)
  {  FPermissionsModifyAllData = _prop_val; FPermissionsModifyAllData_Specified = true;  }
  bool __fastcall PermissionsModifyAllData_Specified(int Index)
  {  return FPermissionsModifyAllData_Specified;  } 
  bool __fastcall GetPermissionsNewReportBuilder(int Index)
  {  return FPermissionsNewReportBuilder;  }
  void __fastcall SetPermissionsNewReportBuilder(int Index, bool _prop_val)
  {  FPermissionsNewReportBuilder = _prop_val; FPermissionsNewReportBuilder_Specified = true;  }
  bool __fastcall PermissionsNewReportBuilder_Specified(int Index)
  {  return FPermissionsNewReportBuilder_Specified;  } 
  bool __fastcall GetPermissionsOutboundMigrationToolsUser(int Index)
  {  return FPermissionsOutboundMigrationToolsUser;  }
  void __fastcall SetPermissionsOutboundMigrationToolsUser(int Index, bool _prop_val)
  {  FPermissionsOutboundMigrationToolsUser = _prop_val; FPermissionsOutboundMigrationToolsUser_Specified = true;  }
  bool __fastcall PermissionsOutboundMigrationToolsUser_Specified(int Index)
  {  return FPermissionsOutboundMigrationToolsUser_Specified;  } 
  bool __fastcall GetPermissionsPasswordNeverExpires(int Index)
  {  return FPermissionsPasswordNeverExpires;  }
  void __fastcall SetPermissionsPasswordNeverExpires(int Index, bool _prop_val)
  {  FPermissionsPasswordNeverExpires = _prop_val; FPermissionsPasswordNeverExpires_Specified = true;  }
  bool __fastcall PermissionsPasswordNeverExpires_Specified(int Index)
  {  return FPermissionsPasswordNeverExpires_Specified;  } 
  bool __fastcall GetPermissionsPublishMultiforce(int Index)
  {  return FPermissionsPublishMultiforce;  }
  void __fastcall SetPermissionsPublishMultiforce(int Index, bool _prop_val)
  {  FPermissionsPublishMultiforce = _prop_val; FPermissionsPublishMultiforce_Specified = true;  }
  bool __fastcall PermissionsPublishMultiforce_Specified(int Index)
  {  return FPermissionsPublishMultiforce_Specified;  } 
  bool __fastcall GetPermissionsResetPasswords(int Index)
  {  return FPermissionsResetPasswords;  }
  void __fastcall SetPermissionsResetPasswords(int Index, bool _prop_val)
  {  FPermissionsResetPasswords = _prop_val; FPermissionsResetPasswords_Specified = true;  }
  bool __fastcall PermissionsResetPasswords_Specified(int Index)
  {  return FPermissionsResetPasswords_Specified;  } 
  bool __fastcall GetPermissionsRunFlow(int Index)
  {  return FPermissionsRunFlow;  }
  void __fastcall SetPermissionsRunFlow(int Index, bool _prop_val)
  {  FPermissionsRunFlow = _prop_val; FPermissionsRunFlow_Specified = true;  }
  bool __fastcall PermissionsRunFlow_Specified(int Index)
  {  return FPermissionsRunFlow_Specified;  } 
  bool __fastcall GetPermissionsRunReports(int Index)
  {  return FPermissionsRunReports;  }
  void __fastcall SetPermissionsRunReports(int Index, bool _prop_val)
  {  FPermissionsRunReports = _prop_val; FPermissionsRunReports_Specified = true;  }
  bool __fastcall PermissionsRunReports_Specified(int Index)
  {  return FPermissionsRunReports_Specified;  } 
  bool __fastcall GetPermissionsScheduleJob(int Index)
  {  return FPermissionsScheduleJob;  }
  void __fastcall SetPermissionsScheduleJob(int Index, bool _prop_val)
  {  FPermissionsScheduleJob = _prop_val; FPermissionsScheduleJob_Specified = true;  }
  bool __fastcall PermissionsScheduleJob_Specified(int Index)
  {  return FPermissionsScheduleJob_Specified;  } 
  bool __fastcall GetPermissionsScheduleReports(int Index)
  {  return FPermissionsScheduleReports;  }
  void __fastcall SetPermissionsScheduleReports(int Index, bool _prop_val)
  {  FPermissionsScheduleReports = _prop_val; FPermissionsScheduleReports_Specified = true;  }
  bool __fastcall PermissionsScheduleReports_Specified(int Index)
  {  return FPermissionsScheduleReports_Specified;  } 
  bool __fastcall GetPermissionsSendSitRequests(int Index)
  {  return FPermissionsSendSitRequests;  }
  void __fastcall SetPermissionsSendSitRequests(int Index, bool _prop_val)
  {  FPermissionsSendSitRequests = _prop_val; FPermissionsSendSitRequests_Specified = true;  }
  bool __fastcall PermissionsSendSitRequests_Specified(int Index)
  {  return FPermissionsSendSitRequests_Specified;  } 
  bool __fastcall GetPermissionsSolutionImport(int Index)
  {  return FPermissionsSolutionImport;  }
  void __fastcall SetPermissionsSolutionImport(int Index, bool _prop_val)
  {  FPermissionsSolutionImport = _prop_val; FPermissionsSolutionImport_Specified = true;  }
  bool __fastcall PermissionsSolutionImport_Specified(int Index)
  {  return FPermissionsSolutionImport_Specified;  } 
  bool __fastcall GetPermissionsTransferAnyCase(int Index)
  {  return FPermissionsTransferAnyCase;  }
  void __fastcall SetPermissionsTransferAnyCase(int Index, bool _prop_val)
  {  FPermissionsTransferAnyCase = _prop_val; FPermissionsTransferAnyCase_Specified = true;  }
  bool __fastcall PermissionsTransferAnyCase_Specified(int Index)
  {  return FPermissionsTransferAnyCase_Specified;  } 
  bool __fastcall GetPermissionsTransferAnyEntity(int Index)
  {  return FPermissionsTransferAnyEntity;  }
  void __fastcall SetPermissionsTransferAnyEntity(int Index, bool _prop_val)
  {  FPermissionsTransferAnyEntity = _prop_val; FPermissionsTransferAnyEntity_Specified = true;  }
  bool __fastcall PermissionsTransferAnyEntity_Specified(int Index)
  {  return FPermissionsTransferAnyEntity_Specified;  } 
  bool __fastcall GetPermissionsTransferAnyLead(int Index)
  {  return FPermissionsTransferAnyLead;  }
  void __fastcall SetPermissionsTransferAnyLead(int Index, bool _prop_val)
  {  FPermissionsTransferAnyLead = _prop_val; FPermissionsTransferAnyLead_Specified = true;  }
  bool __fastcall PermissionsTransferAnyLead_Specified(int Index)
  {  return FPermissionsTransferAnyLead_Specified;  } 
  bool __fastcall GetPermissionsUseTeamReassignWizards(int Index)
  {  return FPermissionsUseTeamReassignWizards;  }
  void __fastcall SetPermissionsUseTeamReassignWizards(int Index, bool _prop_val)
  {  FPermissionsUseTeamReassignWizards = _prop_val; FPermissionsUseTeamReassignWizards_Specified = true;  }
  bool __fastcall PermissionsUseTeamReassignWizards_Specified(int Index)
  {  return FPermissionsUseTeamReassignWizards_Specified;  } 
  bool __fastcall GetPermissionsViewAllData(int Index)
  {  return FPermissionsViewAllData;  }
  void __fastcall SetPermissionsViewAllData(int Index, bool _prop_val)
  {  FPermissionsViewAllData = _prop_val; FPermissionsViewAllData_Specified = true;  }
  bool __fastcall PermissionsViewAllData_Specified(int Index)
  {  return FPermissionsViewAllData_Specified;  } 
  bool __fastcall GetPermissionsViewDataCategories(int Index)
  {  return FPermissionsViewDataCategories;  }
  void __fastcall SetPermissionsViewDataCategories(int Index, bool _prop_val)
  {  FPermissionsViewDataCategories = _prop_val; FPermissionsViewDataCategories_Specified = true;  }
  bool __fastcall PermissionsViewDataCategories_Specified(int Index)
  {  return FPermissionsViewDataCategories_Specified;  } 
  bool __fastcall GetPermissionsViewMyTeamsDashboards(int Index)
  {  return FPermissionsViewMyTeamsDashboards;  }
  void __fastcall SetPermissionsViewMyTeamsDashboards(int Index, bool _prop_val)
  {  FPermissionsViewMyTeamsDashboards = _prop_val; FPermissionsViewMyTeamsDashboards_Specified = true;  }
  bool __fastcall PermissionsViewMyTeamsDashboards_Specified(int Index)
  {  return FPermissionsViewMyTeamsDashboards_Specified;  } 
  bool __fastcall GetPermissionsViewSetup(int Index)
  {  return FPermissionsViewSetup;  }
  void __fastcall SetPermissionsViewSetup(int Index, bool _prop_val)
  {  FPermissionsViewSetup = _prop_val; FPermissionsViewSetup_Specified = true;  }
  bool __fastcall PermissionsViewSetup_Specified(int Index)
  {  return FPermissionsViewSetup_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UserLicense* __fastcall GetUserLicense(int Index)
  {  return FUserLicense;  }
  void __fastcall SetUserLicense(int Index, UserLicense* _prop_val)
  {  FUserLicense = _prop_val; FUserLicense_Specified = true;  }
  bool __fastcall UserLicense_Specified(int Index)
  {  return FUserLicense_Specified;  } 
  ID __fastcall GetUserLicenseId(int Index)
  {  return FUserLicenseId;  }
  void __fastcall SetUserLicenseId(int Index, ID _prop_val)
  {  FUserLicenseId = _prop_val; FUserLicenseId_Specified = true;  }
  bool __fastcall UserLicenseId_Specified(int Index)
  {  return FUserLicenseId_Specified;  } 
  UnicodeString __fastcall GetUserType(int Index)
  {  return FUserType;  }
  void __fastcall SetUserType(int Index, UnicodeString _prop_val)
  {  FUserType = _prop_val; FUserType_Specified = true;  }
  bool __fastcall UserType_Specified(int Index)
  {  return FUserType_Specified;  } 
  QueryResult* __fastcall GetUsers(int Index)
  {  return FUsers;  }
  void __fastcall SetUsers(int Index, QueryResult* _prop_val)
  {  FUsers = _prop_val; FUsers_Specified = true;  }
  bool __fastcall Users_Specified(int Index)
  {  return FUsers_Specified;  } 

public:
  __fastcall ~Profile();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property ID         DefaultApplicationId = { index=(IS_OPTN|IS_NLBL), read=FDefaultApplicationId, write=SetDefaultApplicationId, stored = DefaultApplicationId_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property bool       PermissionsApiEnabled = { index=(IS_OPTN|IS_NLBL), read=FPermissionsApiEnabled, write=SetPermissionsApiEnabled, stored = PermissionsApiEnabled_Specified };
  __property bool       PermissionsApiUserOnly = { index=(IS_OPTN|IS_NLBL), read=FPermissionsApiUserOnly, write=SetPermissionsApiUserOnly, stored = PermissionsApiUserOnly_Specified };
  __property bool       PermissionsAuthorApex = { index=(IS_OPTN|IS_NLBL), read=FPermissionsAuthorApex, write=SetPermissionsAuthorApex, stored = PermissionsAuthorApex_Specified };
  __property bool       PermissionsBulkApiHardDelete = { index=(IS_OPTN|IS_NLBL), read=FPermissionsBulkApiHardDelete, write=SetPermissionsBulkApiHardDelete, stored = PermissionsBulkApiHardDelete_Specified };
  __property bool       PermissionsCanInsertFeedSystemFields = { index=(IS_OPTN|IS_NLBL), read=FPermissionsCanInsertFeedSystemFields, write=SetPermissionsCanInsertFeedSystemFields, stored = PermissionsCanInsertFeedSystemFields_Specified };
  __property bool       PermissionsCanUseNewDashboardBuilder = { index=(IS_OPTN|IS_NLBL), read=FPermissionsCanUseNewDashboardBuilder, write=SetPermissionsCanUseNewDashboardBuilder, stored = PermissionsCanUseNewDashboardBuilder_Specified };
  __property bool       PermissionsChatterFileLink = { index=(IS_OPTN|IS_NLBL), read=FPermissionsChatterFileLink, write=SetPermissionsChatterFileLink, stored = PermissionsChatterFileLink_Specified };
  __property bool       PermissionsConvertLeads = { index=(IS_OPTN|IS_NLBL), read=FPermissionsConvertLeads, write=SetPermissionsConvertLeads, stored = PermissionsConvertLeads_Specified };
  __property bool       PermissionsCreateMultiforce = { index=(IS_OPTN|IS_NLBL), read=FPermissionsCreateMultiforce, write=SetPermissionsCreateMultiforce, stored = PermissionsCreateMultiforce_Specified };
  __property bool       PermissionsCustomSidebarOnAllPages = { index=(IS_OPTN|IS_NLBL), read=FPermissionsCustomSidebarOnAllPages, write=SetPermissionsCustomSidebarOnAllPages, stored = PermissionsCustomSidebarOnAllPages_Specified };
  __property bool       PermissionsCustomizeApplication = { index=(IS_OPTN|IS_NLBL), read=FPermissionsCustomizeApplication, write=SetPermissionsCustomizeApplication, stored = PermissionsCustomizeApplication_Specified };
  __property bool       PermissionsDistributeFromPersWksp = { index=(IS_OPTN|IS_NLBL), read=FPermissionsDistributeFromPersWksp, write=SetPermissionsDistributeFromPersWksp, stored = PermissionsDistributeFromPersWksp_Specified };
  __property bool       PermissionsEditCaseComments = { index=(IS_OPTN|IS_NLBL), read=FPermissionsEditCaseComments, write=SetPermissionsEditCaseComments, stored = PermissionsEditCaseComments_Specified };
  __property bool       PermissionsEditEvent = { index=(IS_OPTN|IS_NLBL), read=FPermissionsEditEvent, write=SetPermissionsEditEvent, stored = PermissionsEditEvent_Specified };
  __property bool       PermissionsEditOppLineItemUnitPrice = { index=(IS_OPTN|IS_NLBL), read=FPermissionsEditOppLineItemUnitPrice, write=SetPermissionsEditOppLineItemUnitPrice, stored = PermissionsEditOppLineItemUnitPrice_Specified };
  __property bool       PermissionsEditPublicDocuments = { index=(IS_OPTN|IS_NLBL), read=FPermissionsEditPublicDocuments, write=SetPermissionsEditPublicDocuments, stored = PermissionsEditPublicDocuments_Specified };
  __property bool       PermissionsEditReadonlyFields = { index=(IS_OPTN|IS_NLBL), read=FPermissionsEditReadonlyFields, write=SetPermissionsEditReadonlyFields, stored = PermissionsEditReadonlyFields_Specified };
  __property bool       PermissionsEditReports = { index=(IS_OPTN|IS_NLBL), read=FPermissionsEditReports, write=SetPermissionsEditReports, stored = PermissionsEditReports_Specified };
  __property bool       PermissionsEditTask = { index=(IS_OPTN|IS_NLBL), read=FPermissionsEditTask, write=SetPermissionsEditTask, stored = PermissionsEditTask_Specified };
  __property bool       PermissionsEmailAdministration = { index=(IS_OPTN|IS_NLBL), read=FPermissionsEmailAdministration, write=SetPermissionsEmailAdministration, stored = PermissionsEmailAdministration_Specified };
  __property bool       PermissionsEmailTemplateManagement = { index=(IS_OPTN|IS_NLBL), read=FPermissionsEmailTemplateManagement, write=SetPermissionsEmailTemplateManagement, stored = PermissionsEmailTemplateManagement_Specified };
  __property bool       PermissionsEnableNotifications = { index=(IS_OPTN|IS_NLBL), read=FPermissionsEnableNotifications, write=SetPermissionsEnableNotifications, stored = PermissionsEnableNotifications_Specified };
  __property bool       PermissionsFlowUFLRequired = { index=(IS_OPTN|IS_NLBL), read=FPermissionsFlowUFLRequired, write=SetPermissionsFlowUFLRequired, stored = PermissionsFlowUFLRequired_Specified };
  __property bool       PermissionsImportLeads = { index=(IS_OPTN|IS_NLBL), read=FPermissionsImportLeads, write=SetPermissionsImportLeads, stored = PermissionsImportLeads_Specified };
  __property bool       PermissionsInboundMigrationToolsUser = { index=(IS_OPTN|IS_NLBL), read=FPermissionsInboundMigrationToolsUser, write=SetPermissionsInboundMigrationToolsUser, stored = PermissionsInboundMigrationToolsUser_Specified };
  __property bool       PermissionsInstallMultiforce = { index=(IS_OPTN|IS_NLBL), read=FPermissionsInstallMultiforce, write=SetPermissionsInstallMultiforce, stored = PermissionsInstallMultiforce_Specified };
  __property bool       PermissionsManageAnalyticSnapshots = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageAnalyticSnapshots, write=SetPermissionsManageAnalyticSnapshots, stored = PermissionsManageAnalyticSnapshots_Specified };
  __property bool       PermissionsManageAuthProviders = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageAuthProviders, write=SetPermissionsManageAuthProviders, stored = PermissionsManageAuthProviders_Specified };
  __property bool       PermissionsManageBusinessHourHolidays = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageBusinessHourHolidays, write=SetPermissionsManageBusinessHourHolidays, stored = PermissionsManageBusinessHourHolidays_Specified };
  __property bool       PermissionsManageCallCenters = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageCallCenters, write=SetPermissionsManageCallCenters, stored = PermissionsManageCallCenters_Specified };
  __property bool       PermissionsManageCases = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageCases, write=SetPermissionsManageCases, stored = PermissionsManageCases_Specified };
  __property bool       PermissionsManageCategories = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageCategories, write=SetPermissionsManageCategories, stored = PermissionsManageCategories_Specified };
  __property bool       PermissionsManageChatterMessages = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageChatterMessages, write=SetPermissionsManageChatterMessages, stored = PermissionsManageChatterMessages_Specified };
  __property bool       PermissionsManageCssUsers = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageCssUsers, write=SetPermissionsManageCssUsers, stored = PermissionsManageCssUsers_Specified };
  __property bool       PermissionsManageCustomReportTypes = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageCustomReportTypes, write=SetPermissionsManageCustomReportTypes, stored = PermissionsManageCustomReportTypes_Specified };
  __property bool       PermissionsManageDashboards = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageDashboards, write=SetPermissionsManageDashboards, stored = PermissionsManageDashboards_Specified };
  __property bool       PermissionsManageDataCategories = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageDataCategories, write=SetPermissionsManageDataCategories, stored = PermissionsManageDataCategories_Specified };
  __property bool       PermissionsManageDataIntegrations = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageDataIntegrations, write=SetPermissionsManageDataIntegrations, stored = PermissionsManageDataIntegrations_Specified };
  __property bool       PermissionsManageEmailClientConfig = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageEmailClientConfig, write=SetPermissionsManageEmailClientConfig, stored = PermissionsManageEmailClientConfig_Specified };
  __property bool       PermissionsManageInteraction = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageInteraction, write=SetPermissionsManageInteraction, stored = PermissionsManageInteraction_Specified };
  __property bool       PermissionsManageLeads = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageLeads, write=SetPermissionsManageLeads, stored = PermissionsManageLeads_Specified };
  __property bool       PermissionsManageMobile = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageMobile, write=SetPermissionsManageMobile, stored = PermissionsManageMobile_Specified };
  __property bool       PermissionsManageRemoteAccess = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageRemoteAccess, write=SetPermissionsManageRemoteAccess, stored = PermissionsManageRemoteAccess_Specified };
  __property bool       PermissionsManageSelfService = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageSelfService, write=SetPermissionsManageSelfService, stored = PermissionsManageSelfService_Specified };
  __property bool       PermissionsManageSolutions = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageSolutions, write=SetPermissionsManageSolutions, stored = PermissionsManageSolutions_Specified };
  __property bool       PermissionsManageUsers = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageUsers, write=SetPermissionsManageUsers, stored = PermissionsManageUsers_Specified };
  __property bool       PermissionsMassInlineEdit = { index=(IS_OPTN|IS_NLBL), read=FPermissionsMassInlineEdit, write=SetPermissionsMassInlineEdit, stored = PermissionsMassInlineEdit_Specified };
  __property bool       PermissionsModifyAllData = { index=(IS_OPTN|IS_NLBL), read=FPermissionsModifyAllData, write=SetPermissionsModifyAllData, stored = PermissionsModifyAllData_Specified };
  __property bool       PermissionsNewReportBuilder = { index=(IS_OPTN|IS_NLBL), read=FPermissionsNewReportBuilder, write=SetPermissionsNewReportBuilder, stored = PermissionsNewReportBuilder_Specified };
  __property bool       PermissionsOutboundMigrationToolsUser = { index=(IS_OPTN|IS_NLBL), read=FPermissionsOutboundMigrationToolsUser, write=SetPermissionsOutboundMigrationToolsUser, stored = PermissionsOutboundMigrationToolsUser_Specified };
  __property bool       PermissionsPasswordNeverExpires = { index=(IS_OPTN|IS_NLBL), read=FPermissionsPasswordNeverExpires, write=SetPermissionsPasswordNeverExpires, stored = PermissionsPasswordNeverExpires_Specified };
  __property bool       PermissionsPublishMultiforce = { index=(IS_OPTN|IS_NLBL), read=FPermissionsPublishMultiforce, write=SetPermissionsPublishMultiforce, stored = PermissionsPublishMultiforce_Specified };
  __property bool       PermissionsResetPasswords = { index=(IS_OPTN|IS_NLBL), read=FPermissionsResetPasswords, write=SetPermissionsResetPasswords, stored = PermissionsResetPasswords_Specified };
  __property bool       PermissionsRunFlow = { index=(IS_OPTN|IS_NLBL), read=FPermissionsRunFlow, write=SetPermissionsRunFlow, stored = PermissionsRunFlow_Specified };
  __property bool       PermissionsRunReports = { index=(IS_OPTN|IS_NLBL), read=FPermissionsRunReports, write=SetPermissionsRunReports, stored = PermissionsRunReports_Specified };
  __property bool       PermissionsScheduleJob = { index=(IS_OPTN|IS_NLBL), read=FPermissionsScheduleJob, write=SetPermissionsScheduleJob, stored = PermissionsScheduleJob_Specified };
  __property bool       PermissionsScheduleReports = { index=(IS_OPTN|IS_NLBL), read=FPermissionsScheduleReports, write=SetPermissionsScheduleReports, stored = PermissionsScheduleReports_Specified };
  __property bool       PermissionsSendSitRequests = { index=(IS_OPTN|IS_NLBL), read=FPermissionsSendSitRequests, write=SetPermissionsSendSitRequests, stored = PermissionsSendSitRequests_Specified };
  __property bool       PermissionsSolutionImport = { index=(IS_OPTN|IS_NLBL), read=FPermissionsSolutionImport, write=SetPermissionsSolutionImport, stored = PermissionsSolutionImport_Specified };
  __property bool       PermissionsTransferAnyCase = { index=(IS_OPTN|IS_NLBL), read=FPermissionsTransferAnyCase, write=SetPermissionsTransferAnyCase, stored = PermissionsTransferAnyCase_Specified };
  __property bool       PermissionsTransferAnyEntity = { index=(IS_OPTN|IS_NLBL), read=FPermissionsTransferAnyEntity, write=SetPermissionsTransferAnyEntity, stored = PermissionsTransferAnyEntity_Specified };
  __property bool       PermissionsTransferAnyLead = { index=(IS_OPTN|IS_NLBL), read=FPermissionsTransferAnyLead, write=SetPermissionsTransferAnyLead, stored = PermissionsTransferAnyLead_Specified };
  __property bool       PermissionsUseTeamReassignWizards = { index=(IS_OPTN|IS_NLBL), read=FPermissionsUseTeamReassignWizards, write=SetPermissionsUseTeamReassignWizards, stored = PermissionsUseTeamReassignWizards_Specified };
  __property bool       PermissionsViewAllData = { index=(IS_OPTN|IS_NLBL), read=FPermissionsViewAllData, write=SetPermissionsViewAllData, stored = PermissionsViewAllData_Specified };
  __property bool       PermissionsViewDataCategories = { index=(IS_OPTN|IS_NLBL), read=FPermissionsViewDataCategories, write=SetPermissionsViewDataCategories, stored = PermissionsViewDataCategories_Specified };
  __property bool       PermissionsViewMyTeamsDashboards = { index=(IS_OPTN|IS_NLBL), read=FPermissionsViewMyTeamsDashboards, write=SetPermissionsViewMyTeamsDashboards, stored = PermissionsViewMyTeamsDashboards_Specified };
  __property bool       PermissionsViewSetup = { index=(IS_OPTN|IS_NLBL), read=FPermissionsViewSetup, write=SetPermissionsViewSetup, stored = PermissionsViewSetup_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UserLicense* UserLicense = { index=(IS_OPTN|IS_NLBL), read=FUserLicense, write=SetUserLicense, stored = UserLicense_Specified };
  __property ID         UserLicenseId = { index=(IS_OPTN|IS_NLBL), read=FUserLicenseId, write=SetUserLicenseId, stored = UserLicenseId_Specified };
  __property UnicodeString   UserType = { index=(IS_OPTN|IS_NLBL), read=FUserType, write=SetUserType, stored = UserType_Specified };
  __property QueryResult*      Users = { index=(IS_OPTN|IS_NLBL), read=FUsers, write=SetUsers, stored = Users_Specified };
};




// ************************************************************************ //
// XML       : Monthly_Variables__c, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Monthly_Variables__c : public sObject {
private:
  double          FA3_Click_Rate__c;
  bool            FA3_Click_Rate__c_Specified;
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  double          FAvg_Sale_Value__c;
  bool            FAvg_Sale_Value__c_Specified;
  double          FAvg_sale_value_flex__c;
  bool            FAvg_sale_value_flex__c_Specified;
  double          FCAPEX_Expansionary__c;
  bool            FCAPEX_Expansionary__c_Specified;
  double          FClient_Concessions__c;
  bool            FClient_Concessions__c_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  TXSDate*        FDate__c;
  bool            FDate__c_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  QueryResult*    FNotes;
  bool            FNotes_Specified;
  QueryResult*    FNotesAndAttachments;
  bool            FNotesAndAttachments_Specified;
  Name_*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  double          FResign_Bonus__c;
  bool            FResign_Bonus__c_Specified;
  double          FSick_Pay__c;
  bool            FSick_Pay__c_Specified;
  double          FSign_up_bonus__c;
  bool            FSign_up_bonus__c_Specified;
  ID              FSite__c_;
  bool            FSite__c__Specified;
  Site__c_*        FSite__r;
  bool            FSite__r_Specified;
  double          FStorage_Freight_Out__c;
  bool            FStorage_Freight_Out__c_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  double          FWastage__c;
  bool            FWastage__c_Specified;
  double __fastcall GetA3_Click_Rate__c(int Index)
  {  return FA3_Click_Rate__c;  }
  void __fastcall SetA3_Click_Rate__c(int Index, double _prop_val)
  {  FA3_Click_Rate__c = _prop_val; FA3_Click_Rate__c_Specified = true;  }
  bool __fastcall A3_Click_Rate__c_Specified(int Index)
  {  return FA3_Click_Rate__c_Specified;  } 
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  double __fastcall GetAvg_Sale_Value__c(int Index)
  {  return FAvg_Sale_Value__c;  }
  void __fastcall SetAvg_Sale_Value__c(int Index, double _prop_val)
  {  FAvg_Sale_Value__c = _prop_val; FAvg_Sale_Value__c_Specified = true;  }
  bool __fastcall Avg_Sale_Value__c_Specified(int Index)
  {  return FAvg_Sale_Value__c_Specified;  } 
  double __fastcall GetAvg_sale_value_flex__c(int Index)
  {  return FAvg_sale_value_flex__c;  }
  void __fastcall SetAvg_sale_value_flex__c(int Index, double _prop_val)
  {  FAvg_sale_value_flex__c = _prop_val; FAvg_sale_value_flex__c_Specified = true;  }
  bool __fastcall Avg_sale_value_flex__c_Specified(int Index)
  {  return FAvg_sale_value_flex__c_Specified;  } 
  double __fastcall GetCAPEX_Expansionary__c(int Index)
  {  return FCAPEX_Expansionary__c;  }
  void __fastcall SetCAPEX_Expansionary__c(int Index, double _prop_val)
  {  FCAPEX_Expansionary__c = _prop_val; FCAPEX_Expansionary__c_Specified = true;  }
  bool __fastcall CAPEX_Expansionary__c_Specified(int Index)
  {  return FCAPEX_Expansionary__c_Specified;  } 
  double __fastcall GetClient_Concessions__c(int Index)
  {  return FClient_Concessions__c;  }
  void __fastcall SetClient_Concessions__c(int Index, double _prop_val)
  {  FClient_Concessions__c = _prop_val; FClient_Concessions__c_Specified = true;  }
  bool __fastcall Client_Concessions__c_Specified(int Index)
  {  return FClient_Concessions__c_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  TXSDate* __fastcall GetDate__c(int Index)
  {  return FDate__c;  }
  void __fastcall SetDate__c(int Index, TXSDate* _prop_val)
  {  FDate__c = _prop_val; FDate__c_Specified = true;  }
  bool __fastcall Date__c_Specified(int Index)
  {  return FDate__c_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  QueryResult* __fastcall GetNotes(int Index)
  {  return FNotes;  }
  void __fastcall SetNotes(int Index, QueryResult* _prop_val)
  {  FNotes = _prop_val; FNotes_Specified = true;  }
  bool __fastcall Notes_Specified(int Index)
  {  return FNotes_Specified;  } 
  QueryResult* __fastcall GetNotesAndAttachments(int Index)
  {  return FNotesAndAttachments;  }
  void __fastcall SetNotesAndAttachments(int Index, QueryResult* _prop_val)
  {  FNotesAndAttachments = _prop_val; FNotesAndAttachments_Specified = true;  }
  bool __fastcall NotesAndAttachments_Specified(int Index)
  {  return FNotesAndAttachments_Specified;  } 
  Name_* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, Name_* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  double __fastcall GetResign_Bonus__c(int Index)
  {  return FResign_Bonus__c;  }
  void __fastcall SetResign_Bonus__c(int Index, double _prop_val)
  {  FResign_Bonus__c = _prop_val; FResign_Bonus__c_Specified = true;  }
  bool __fastcall Resign_Bonus__c_Specified(int Index)
  {  return FResign_Bonus__c_Specified;  } 
  double __fastcall GetSick_Pay__c(int Index)
  {  return FSick_Pay__c;  }
  void __fastcall SetSick_Pay__c(int Index, double _prop_val)
  {  FSick_Pay__c = _prop_val; FSick_Pay__c_Specified = true;  }
  bool __fastcall Sick_Pay__c_Specified(int Index)
  {  return FSick_Pay__c_Specified;  } 
  double __fastcall GetSign_up_bonus__c(int Index)
  {  return FSign_up_bonus__c;  }
  void __fastcall SetSign_up_bonus__c(int Index, double _prop_val)
  {  FSign_up_bonus__c = _prop_val; FSign_up_bonus__c_Specified = true;  }
  bool __fastcall Sign_up_bonus__c_Specified(int Index)
  {  return FSign_up_bonus__c_Specified;  } 
  ID __fastcall GetSite__c_(int Index)
  {  return FSite__c_;  }
  void __fastcall SetSite__c_(int Index, ID _prop_val)
  {  FSite__c_ = _prop_val; FSite__c__Specified = true;  }
  bool __fastcall Site__c__Specified(int Index)
  {  return FSite__c__Specified;  } 
  Site__c_* __fastcall GetSite__r(int Index)
  {  return FSite__r;  }
  void __fastcall SetSite__r(int Index, Site__c_* _prop_val)
  {  FSite__r = _prop_val; FSite__r_Specified = true;  }
  bool __fastcall Site__r_Specified(int Index)
  {  return FSite__r_Specified;  } 
  double __fastcall GetStorage_Freight_Out__c(int Index)
  {  return FStorage_Freight_Out__c;  }
  void __fastcall SetStorage_Freight_Out__c(int Index, double _prop_val)
  {  FStorage_Freight_Out__c = _prop_val; FStorage_Freight_Out__c_Specified = true;  }
  bool __fastcall Storage_Freight_Out__c_Specified(int Index)
  {  return FStorage_Freight_Out__c_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  double __fastcall GetWastage__c(int Index)
  {  return FWastage__c;  }
  void __fastcall SetWastage__c(int Index, double _prop_val)
  {  FWastage__c = _prop_val; FWastage__c_Specified = true;  }
  bool __fastcall Wastage__c_Specified(int Index)
  {  return FWastage__c_Specified;  } 

public:
  __fastcall ~Monthly_Variables__c();
__published:
  __property double     A3_Click_Rate__c = { index=(IS_OPTN|IS_NLBL), read=FA3_Click_Rate__c, write=SetA3_Click_Rate__c, stored = A3_Click_Rate__c_Specified };
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property double     Avg_Sale_Value__c = { index=(IS_OPTN|IS_NLBL), read=FAvg_Sale_Value__c, write=SetAvg_Sale_Value__c, stored = Avg_Sale_Value__c_Specified };
  __property double     Avg_sale_value_flex__c = { index=(IS_OPTN|IS_NLBL), read=FAvg_sale_value_flex__c, write=SetAvg_sale_value_flex__c, stored = Avg_sale_value_flex__c_Specified };
  __property double     CAPEX_Expansionary__c = { index=(IS_OPTN|IS_NLBL), read=FCAPEX_Expansionary__c, write=SetCAPEX_Expansionary__c, stored = CAPEX_Expansionary__c_Specified };
  __property double     Client_Concessions__c = { index=(IS_OPTN|IS_NLBL), read=FClient_Concessions__c, write=SetClient_Concessions__c, stored = Client_Concessions__c_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property TXSDate*      Date__c = { index=(IS_OPTN|IS_NLBL), read=FDate__c, write=SetDate__c, stored = Date__c_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property QueryResult*      Notes = { index=(IS_OPTN|IS_NLBL), read=FNotes, write=SetNotes, stored = Notes_Specified };
  __property QueryResult* NotesAndAttachments = { index=(IS_OPTN|IS_NLBL), read=FNotesAndAttachments, write=SetNotesAndAttachments, stored = NotesAndAttachments_Specified };
  __property Name_*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property double     Resign_Bonus__c = { index=(IS_OPTN|IS_NLBL), read=FResign_Bonus__c, write=SetResign_Bonus__c, stored = Resign_Bonus__c_Specified };
  __property double     Sick_Pay__c = { index=(IS_OPTN|IS_NLBL), read=FSick_Pay__c, write=SetSick_Pay__c, stored = Sick_Pay__c_Specified };
  __property double     Sign_up_bonus__c = { index=(IS_OPTN|IS_NLBL), read=FSign_up_bonus__c, write=SetSign_up_bonus__c, stored = Sign_up_bonus__c_Specified };
  __property ID            Site__c = { index=(IS_OPTN|IS_NLBL), read=FSite__c_, write=SetSite__c_, stored = Site__c__Specified };
  __property Site__c_*      Site__r = { index=(IS_OPTN|IS_NLBL), read=FSite__r, write=SetSite__r, stored = Site__r_Specified };
  __property double     Storage_Freight_Out__c = { index=(IS_OPTN|IS_NLBL), read=FStorage_Freight_Out__c, write=SetStorage_Freight_Out__c, stored = Storage_Freight_Out__c_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property double     Wastage__c = { index=(IS_OPTN|IS_NLBL), read=FWastage__c, write=SetWastage__c, stored = Wastage__c_Specified };
};




// ************************************************************************ //
// XML       : MailmergeTemplate, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class MailmergeTemplate : public sObject {
private:
  TByteDynArray   FBody;
  bool            FBody_Specified;
  int             FBodyLength;
  bool            FBodyLength_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  UnicodeString   FFilename;
  bool            FFilename_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  TXSDateTime*    FLastUsedDate;
  bool            FLastUsedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  TByteDynArray __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, TByteDynArray _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetBodyLength(int Index)
  {  return FBodyLength;  }
  void __fastcall SetBodyLength(int Index, int _prop_val)
  {  FBodyLength = _prop_val; FBodyLength_Specified = true;  }
  bool __fastcall BodyLength_Specified(int Index)
  {  return FBodyLength_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  UnicodeString __fastcall GetFilename(int Index)
  {  return FFilename;  }
  void __fastcall SetFilename(int Index, UnicodeString _prop_val)
  {  FFilename = _prop_val; FFilename_Specified = true;  }
  bool __fastcall Filename_Specified(int Index)
  {  return FFilename_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  TXSDateTime* __fastcall GetLastUsedDate(int Index)
  {  return FLastUsedDate;  }
  void __fastcall SetLastUsedDate(int Index, TXSDateTime* _prop_val)
  {  FLastUsedDate = _prop_val; FLastUsedDate_Specified = true;  }
  bool __fastcall LastUsedDate_Specified(int Index)
  {  return FLastUsedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~MailmergeTemplate();
__published:
  __property TByteDynArray       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        BodyLength = { index=(IS_OPTN|IS_NLBL), read=FBodyLength, write=SetBodyLength, stored = BodyLength_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property UnicodeString   Filename = { index=(IS_OPTN|IS_NLBL), read=FFilename, write=SetFilename, stored = Filename_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property TXSDateTime* LastUsedDate = { index=(IS_OPTN|IS_NLBL), read=FLastUsedDate, write=SetLastUsedDate, stored = LastUsedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : LoginHistory, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class LoginHistory : public sObject {
private:
  UnicodeString   FApiType;
  bool            FApiType_Specified;
  UnicodeString   FApiVersion;
  bool            FApiVersion_Specified;
  UnicodeString   FApplication;
  bool            FApplication_Specified;
  UnicodeString   FBrowser;
  bool            FBrowser_Specified;
  UnicodeString   FClientVersion;
  bool            FClientVersion_Specified;
  TXSDateTime*    FLoginTime;
  bool            FLoginTime_Specified;
  UnicodeString   FLoginType;
  bool            FLoginType_Specified;
  UnicodeString   FLoginUrl;
  bool            FLoginUrl_Specified;
  UnicodeString   FPlatform;
  bool            FPlatform_Specified;
  UnicodeString   FSourceIp;
  bool            FSourceIp_Specified;
  UnicodeString   FStatus;
  bool            FStatus_Specified;
  ID              FUserId;
  bool            FUserId_Specified;
  UnicodeString __fastcall GetApiType(int Index)
  {  return FApiType;  }
  void __fastcall SetApiType(int Index, UnicodeString _prop_val)
  {  FApiType = _prop_val; FApiType_Specified = true;  }
  bool __fastcall ApiType_Specified(int Index)
  {  return FApiType_Specified;  } 
  UnicodeString __fastcall GetApiVersion(int Index)
  {  return FApiVersion;  }
  void __fastcall SetApiVersion(int Index, UnicodeString _prop_val)
  {  FApiVersion = _prop_val; FApiVersion_Specified = true;  }
  bool __fastcall ApiVersion_Specified(int Index)
  {  return FApiVersion_Specified;  } 
  UnicodeString __fastcall GetApplication(int Index)
  {  return FApplication;  }
  void __fastcall SetApplication(int Index, UnicodeString _prop_val)
  {  FApplication = _prop_val; FApplication_Specified = true;  }
  bool __fastcall Application_Specified(int Index)
  {  return FApplication_Specified;  } 
  UnicodeString __fastcall GetBrowser(int Index)
  {  return FBrowser;  }
  void __fastcall SetBrowser(int Index, UnicodeString _prop_val)
  {  FBrowser = _prop_val; FBrowser_Specified = true;  }
  bool __fastcall Browser_Specified(int Index)
  {  return FBrowser_Specified;  } 
  UnicodeString __fastcall GetClientVersion(int Index)
  {  return FClientVersion;  }
  void __fastcall SetClientVersion(int Index, UnicodeString _prop_val)
  {  FClientVersion = _prop_val; FClientVersion_Specified = true;  }
  bool __fastcall ClientVersion_Specified(int Index)
  {  return FClientVersion_Specified;  } 
  TXSDateTime* __fastcall GetLoginTime(int Index)
  {  return FLoginTime;  }
  void __fastcall SetLoginTime(int Index, TXSDateTime* _prop_val)
  {  FLoginTime = _prop_val; FLoginTime_Specified = true;  }
  bool __fastcall LoginTime_Specified(int Index)
  {  return FLoginTime_Specified;  } 
  UnicodeString __fastcall GetLoginType(int Index)
  {  return FLoginType;  }
  void __fastcall SetLoginType(int Index, UnicodeString _prop_val)
  {  FLoginType = _prop_val; FLoginType_Specified = true;  }
  bool __fastcall LoginType_Specified(int Index)
  {  return FLoginType_Specified;  } 
  UnicodeString __fastcall GetLoginUrl(int Index)
  {  return FLoginUrl;  }
  void __fastcall SetLoginUrl(int Index, UnicodeString _prop_val)
  {  FLoginUrl = _prop_val; FLoginUrl_Specified = true;  }
  bool __fastcall LoginUrl_Specified(int Index)
  {  return FLoginUrl_Specified;  } 
  UnicodeString __fastcall GetPlatform(int Index)
  {  return FPlatform;  }
  void __fastcall SetPlatform(int Index, UnicodeString _prop_val)
  {  FPlatform = _prop_val; FPlatform_Specified = true;  }
  bool __fastcall Platform_Specified(int Index)
  {  return FPlatform_Specified;  } 
  UnicodeString __fastcall GetSourceIp(int Index)
  {  return FSourceIp;  }
  void __fastcall SetSourceIp(int Index, UnicodeString _prop_val)
  {  FSourceIp = _prop_val; FSourceIp_Specified = true;  }
  bool __fastcall SourceIp_Specified(int Index)
  {  return FSourceIp_Specified;  } 
  UnicodeString __fastcall GetStatus(int Index)
  {  return FStatus;  }
  void __fastcall SetStatus(int Index, UnicodeString _prop_val)
  {  FStatus = _prop_val; FStatus_Specified = true;  }
  bool __fastcall Status_Specified(int Index)
  {  return FStatus_Specified;  } 
  ID __fastcall GetUserId(int Index)
  {  return FUserId;  }
  void __fastcall SetUserId(int Index, ID _prop_val)
  {  FUserId = _prop_val; FUserId_Specified = true;  }
  bool __fastcall UserId_Specified(int Index)
  {  return FUserId_Specified;  } 

public:
  __fastcall ~LoginHistory();
__published:
  __property UnicodeString    ApiType = { index=(IS_OPTN|IS_NLBL), read=FApiType, write=SetApiType, stored = ApiType_Specified };
  __property UnicodeString ApiVersion = { index=(IS_OPTN|IS_NLBL), read=FApiVersion, write=SetApiVersion, stored = ApiVersion_Specified };
  __property UnicodeString Application = { index=(IS_OPTN|IS_NLBL), read=FApplication, write=SetApplication, stored = Application_Specified };
  __property UnicodeString    Browser = { index=(IS_OPTN|IS_NLBL), read=FBrowser, write=SetBrowser, stored = Browser_Specified };
  __property UnicodeString ClientVersion = { index=(IS_OPTN|IS_NLBL), read=FClientVersion, write=SetClientVersion, stored = ClientVersion_Specified };
  __property TXSDateTime*  LoginTime = { index=(IS_OPTN|IS_NLBL), read=FLoginTime, write=SetLoginTime, stored = LoginTime_Specified };
  __property UnicodeString  LoginType = { index=(IS_OPTN|IS_NLBL), read=FLoginType, write=SetLoginType, stored = LoginType_Specified };
  __property UnicodeString   LoginUrl = { index=(IS_OPTN|IS_NLBL), read=FLoginUrl, write=SetLoginUrl, stored = LoginUrl_Specified };
  __property UnicodeString   Platform = { index=(IS_OPTN|IS_NLBL), read=FPlatform, write=SetPlatform, stored = Platform_Specified };
  __property UnicodeString   SourceIp = { index=(IS_OPTN|IS_NLBL), read=FSourceIp, write=SetSourceIp, stored = SourceIp_Specified };
  __property UnicodeString     Status = { index=(IS_OPTN|IS_NLBL), read=FStatus, write=SetStatus, stored = Status_Specified };
  __property ID             UserId = { index=(IS_OPTN|IS_NLBL), read=FUserId, write=SetUserId, stored = UserId_Specified };
};




// ************************************************************************ //
// XML       : Transaction__c_, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Transaction__c_ : public sObject {
private:
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  TXSDateTime*    FDate__c;
  bool            FDate__c_Specified;
  ID              FDay__c_;
  bool            FDay__c__Specified;
  Day__c_*         FDay__r;
  bool            FDay__r_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  UnicodeString   FInvoice_Number__c;
  bool            FInvoice_Number__c_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  QueryResult*    FLine_Items__r;
  bool            FLine_Items__r_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  QueryResult*    FNotes;
  bool            FNotes_Specified;
  QueryResult*    FNotesAndAttachments;
  bool            FNotesAndAttachments_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  ID              FStaff__c_;
  bool            FStaff__c__Specified;
  Staff__c_*       FStaff__r;
  bool            FStaff__r_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  double          FTotal__c;
  bool            FTotal__c_Specified;
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  TXSDateTime* __fastcall GetDate__c(int Index)
  {  return FDate__c;  }
  void __fastcall SetDate__c(int Index, TXSDateTime* _prop_val)
  {  FDate__c = _prop_val; FDate__c_Specified = true;  }
  bool __fastcall Date__c_Specified(int Index)
  {  return FDate__c_Specified;  } 
  ID __fastcall GetDay__c_(int Index)
  {  return FDay__c_;  }
  void __fastcall SetDay__c_(int Index, ID _prop_val)
  {  FDay__c_ = _prop_val; FDay__c__Specified = true;  }
  bool __fastcall Day__c__Specified(int Index)
  {  return FDay__c__Specified;  } 
  Day__c_* __fastcall GetDay__r(int Index)
  {  return FDay__r;  }
  void __fastcall SetDay__r(int Index, Day__c_* _prop_val)
  {  FDay__r = _prop_val; FDay__r_Specified = true;  }
  bool __fastcall Day__r_Specified(int Index)
  {  return FDay__r_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  UnicodeString __fastcall GetInvoice_Number__c(int Index)
  {  return FInvoice_Number__c;  }
  void __fastcall SetInvoice_Number__c(int Index, UnicodeString _prop_val)
  {  FInvoice_Number__c = _prop_val; FInvoice_Number__c_Specified = true;  }
  bool __fastcall Invoice_Number__c_Specified(int Index)
  {  return FInvoice_Number__c_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  QueryResult* __fastcall GetLine_Items__r(int Index)
  {  return FLine_Items__r;  }
  void __fastcall SetLine_Items__r(int Index, QueryResult* _prop_val)
  {  FLine_Items__r = _prop_val; FLine_Items__r_Specified = true;  }
  bool __fastcall Line_Items__r_Specified(int Index)
  {  return FLine_Items__r_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  QueryResult* __fastcall GetNotes(int Index)
  {  return FNotes;  }
  void __fastcall SetNotes(int Index, QueryResult* _prop_val)
  {  FNotes = _prop_val; FNotes_Specified = true;  }
  bool __fastcall Notes_Specified(int Index)
  {  return FNotes_Specified;  } 
  QueryResult* __fastcall GetNotesAndAttachments(int Index)
  {  return FNotesAndAttachments;  }
  void __fastcall SetNotesAndAttachments(int Index, QueryResult* _prop_val)
  {  FNotesAndAttachments = _prop_val; FNotesAndAttachments_Specified = true;  }
  bool __fastcall NotesAndAttachments_Specified(int Index)
  {  return FNotesAndAttachments_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  ID __fastcall GetStaff__c_(int Index)
  {  return FStaff__c_;  }
  void __fastcall SetStaff__c_(int Index, ID _prop_val)
  {  FStaff__c_ = _prop_val; FStaff__c__Specified = true;  }
  bool __fastcall Staff__c__Specified(int Index)
  {  return FStaff__c__Specified;  } 
  Staff__c_* __fastcall GetStaff__r(int Index)
  {  return FStaff__r;  }
  void __fastcall SetStaff__r(int Index, Staff__c_* _prop_val)
  {  FStaff__r = _prop_val; FStaff__r_Specified = true;  }
  bool __fastcall Staff__r_Specified(int Index)
  {  return FStaff__r_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  double __fastcall GetTotal__c(int Index)
  {  return FTotal__c;  }
  void __fastcall SetTotal__c(int Index, double _prop_val)
  {  FTotal__c = _prop_val; FTotal__c_Specified = true;  }
  bool __fastcall Total__c_Specified(int Index)
  {  return FTotal__c_Specified;  } 

public:
  __fastcall ~Transaction__c_();
__published:
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property TXSDateTime*    Date__c = { index=(IS_OPTN|IS_NLBL), read=FDate__c, write=SetDate__c, stored = Date__c_Specified };
  __property ID             Day__c = { index=(IS_OPTN|IS_NLBL), read=FDay__c_, write=SetDay__c_, stored = Day__c__Specified };
  __property Day__c_*        Day__r = { index=(IS_OPTN|IS_NLBL), read=FDay__r, write=SetDay__r, stored = Day__r_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property UnicodeString Invoice_Number__c = { index=(IS_OPTN|IS_NLBL), read=FInvoice_Number__c, write=SetInvoice_Number__c, stored = Invoice_Number__c_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property QueryResult* Line_Items__r = { index=(IS_OPTN|IS_NLBL), read=FLine_Items__r, write=SetLine_Items__r, stored = Line_Items__r_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property QueryResult*      Notes = { index=(IS_OPTN|IS_NLBL), read=FNotes, write=SetNotes, stored = Notes_Specified };
  __property QueryResult* NotesAndAttachments = { index=(IS_OPTN|IS_NLBL), read=FNotesAndAttachments, write=SetNotesAndAttachments, stored = NotesAndAttachments_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property ID           Staff__c = { index=(IS_OPTN|IS_NLBL), read=FStaff__c_, write=SetStaff__c_, stored = Staff__c__Specified };
  __property Staff__c_*    Staff__r = { index=(IS_OPTN|IS_NLBL), read=FStaff__r, write=SetStaff__r, stored = Staff__r_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property double       Total__c = { index=(IS_OPTN|IS_NLBL), read=FTotal__c, write=SetTotal__c, stored = Total__c_Specified };
};




// ************************************************************************ //
// XML       : Product__c_, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Product__c_ : public sObject {
private:
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  QueryResult*    FLine_Items__r;
  bool            FLine_Items__r_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  QueryResult*    FNotes;
  bool            FNotes_Specified;
  QueryResult*    FNotesAndAttachments;
  bool            FNotesAndAttachments_Specified;
  Name_*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  double          FPLU__c;
  bool            FPLU__c_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  ID              FSite__c_;
  bool            FSite__c__Specified;
  Site__c_*        FSite__r;
  bool            FSite__r_Specified;
  UnicodeString   FSize__c;
  bool            FSize__c_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  QueryResult* __fastcall GetLine_Items__r(int Index)
  {  return FLine_Items__r;  }
  void __fastcall SetLine_Items__r(int Index, QueryResult* _prop_val)
  {  FLine_Items__r = _prop_val; FLine_Items__r_Specified = true;  }
  bool __fastcall Line_Items__r_Specified(int Index)
  {  return FLine_Items__r_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  QueryResult* __fastcall GetNotes(int Index)
  {  return FNotes;  }
  void __fastcall SetNotes(int Index, QueryResult* _prop_val)
  {  FNotes = _prop_val; FNotes_Specified = true;  }
  bool __fastcall Notes_Specified(int Index)
  {  return FNotes_Specified;  } 
  QueryResult* __fastcall GetNotesAndAttachments(int Index)
  {  return FNotesAndAttachments;  }
  void __fastcall SetNotesAndAttachments(int Index, QueryResult* _prop_val)
  {  FNotesAndAttachments = _prop_val; FNotesAndAttachments_Specified = true;  }
  bool __fastcall NotesAndAttachments_Specified(int Index)
  {  return FNotesAndAttachments_Specified;  } 
  Name_* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, Name_* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  double __fastcall GetPLU__c(int Index)
  {  return FPLU__c;  }
  void __fastcall SetPLU__c(int Index, double _prop_val)
  {  FPLU__c = _prop_val; FPLU__c_Specified = true;  }
  bool __fastcall PLU__c_Specified(int Index)
  {  return FPLU__c_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  ID __fastcall GetSite__c_(int Index)
  {  return FSite__c_;  }
  void __fastcall SetSite__c_(int Index, ID _prop_val)
  {  FSite__c_ = _prop_val; FSite__c__Specified = true;  }
  bool __fastcall Site__c__Specified(int Index)
  {  return FSite__c__Specified;  } 
  Site__c_* __fastcall GetSite__r(int Index)
  {  return FSite__r;  }
  void __fastcall SetSite__r(int Index, Site__c_* _prop_val)
  {  FSite__r = _prop_val; FSite__r_Specified = true;  }
  bool __fastcall Site__r_Specified(int Index)
  {  return FSite__r_Specified;  } 
  UnicodeString __fastcall GetSize__c(int Index)
  {  return FSize__c;  }
  void __fastcall SetSize__c(int Index, UnicodeString _prop_val)
  {  FSize__c = _prop_val; FSize__c_Specified = true;  }
  bool __fastcall Size__c_Specified(int Index)
  {  return FSize__c_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~Product__c_();
__published:
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property QueryResult* Line_Items__r = { index=(IS_OPTN|IS_NLBL), read=FLine_Items__r, write=SetLine_Items__r, stored = Line_Items__r_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property QueryResult*      Notes = { index=(IS_OPTN|IS_NLBL), read=FNotes, write=SetNotes, stored = Notes_Specified };
  __property QueryResult* NotesAndAttachments = { index=(IS_OPTN|IS_NLBL), read=FNotesAndAttachments, write=SetNotesAndAttachments, stored = NotesAndAttachments_Specified };
  __property Name_*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property double         PLU__c = { index=(IS_OPTN|IS_NLBL), read=FPLU__c, write=SetPLU__c, stored = PLU__c_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property ID            Site__c = { index=(IS_OPTN|IS_NLBL), read=FSite__c_, write=SetSite__c_, stored = Site__c__Specified };
  __property Site__c_*      Site__r = { index=(IS_OPTN|IS_NLBL), read=FSite__r, write=SetSite__r, stored = Site__r_Specified };
  __property UnicodeString    Size__c = { index=(IS_OPTN|IS_NLBL), read=FSize__c, write=SetSize__c, stored = Size__c_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : Line_Item__c_, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Line_Item__c_ : public sObject {
private:
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  QueryResult*    FNotes;
  bool            FNotes_Specified;
  QueryResult*    FNotesAndAttachments;
  bool            FNotesAndAttachments_Specified;
  ID              FPLU_Product__c_;
  bool            FPLU_Product__c__Specified;
  Product__c_*     FPLU_Product__r;
  bool            FPLU_Product__r_Specified;
  double          FPrice__c;
  bool            FPrice__c_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  double          FQuantity__c;
  bool            FQuantity__c_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  double          FTotal__c;
  bool            FTotal__c_Specified;
  ID              FTransaction__c_;
  bool            FTransaction__c__Specified;
  Transaction__c_* FTransaction__r;
  bool            FTransaction__r_Specified;
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  QueryResult* __fastcall GetNotes(int Index)
  {  return FNotes;  }
  void __fastcall SetNotes(int Index, QueryResult* _prop_val)
  {  FNotes = _prop_val; FNotes_Specified = true;  }
  bool __fastcall Notes_Specified(int Index)
  {  return FNotes_Specified;  } 
  QueryResult* __fastcall GetNotesAndAttachments(int Index)
  {  return FNotesAndAttachments;  }
  void __fastcall SetNotesAndAttachments(int Index, QueryResult* _prop_val)
  {  FNotesAndAttachments = _prop_val; FNotesAndAttachments_Specified = true;  }
  bool __fastcall NotesAndAttachments_Specified(int Index)
  {  return FNotesAndAttachments_Specified;  } 
  ID __fastcall GetPLU_Product__c_(int Index)
  {  return FPLU_Product__c_;  }
  void __fastcall SetPLU_Product__c_(int Index, ID _prop_val)
  {  FPLU_Product__c_ = _prop_val; FPLU_Product__c__Specified = true;  }
  bool __fastcall PLU_Product__c__Specified(int Index)
  {  return FPLU_Product__c__Specified;  } 
  Product__c_* __fastcall GetPLU_Product__r(int Index)
  {  return FPLU_Product__r;  }
  void __fastcall SetPLU_Product__r(int Index, Product__c_* _prop_val)
  {  FPLU_Product__r = _prop_val; FPLU_Product__r_Specified = true;  }
  bool __fastcall PLU_Product__r_Specified(int Index)
  {  return FPLU_Product__r_Specified;  } 
  double __fastcall GetPrice__c(int Index)
  {  return FPrice__c;  }
  void __fastcall SetPrice__c(int Index, double _prop_val)
  {  FPrice__c = _prop_val; FPrice__c_Specified = true;  }
  bool __fastcall Price__c_Specified(int Index)
  {  return FPrice__c_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  double __fastcall GetQuantity__c(int Index)
  {  return FQuantity__c;  }
  void __fastcall SetQuantity__c(int Index, double _prop_val)
  {  FQuantity__c = _prop_val; FQuantity__c_Specified = true;  }
  bool __fastcall Quantity__c_Specified(int Index)
  {  return FQuantity__c_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  double __fastcall GetTotal__c(int Index)
  {  return FTotal__c;  }
  void __fastcall SetTotal__c(int Index, double _prop_val)
  {  FTotal__c = _prop_val; FTotal__c_Specified = true;  }
  bool __fastcall Total__c_Specified(int Index)
  {  return FTotal__c_Specified;  } 
  ID __fastcall GetTransaction__c_(int Index)
  {  return FTransaction__c_;  }
  void __fastcall SetTransaction__c_(int Index, ID _prop_val)
  {  FTransaction__c_ = _prop_val; FTransaction__c__Specified = true;  }
  bool __fastcall Transaction__c__Specified(int Index)
  {  return FTransaction__c__Specified;  } 
  Transaction__c_* __fastcall GetTransaction__r(int Index)
  {  return FTransaction__r;  }
  void __fastcall SetTransaction__r(int Index, Transaction__c_* _prop_val)
  {  FTransaction__r = _prop_val; FTransaction__r_Specified = true;  }
  bool __fastcall Transaction__r_Specified(int Index)
  {  return FTransaction__r_Specified;  } 

public:
  __fastcall ~Line_Item__c_();
__published:
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property QueryResult*      Notes = { index=(IS_OPTN|IS_NLBL), read=FNotes, write=SetNotes, stored = Notes_Specified };
  __property QueryResult* NotesAndAttachments = { index=(IS_OPTN|IS_NLBL), read=FNotesAndAttachments, write=SetNotesAndAttachments, stored = NotesAndAttachments_Specified };
  __property ID         PLU_Product__c = { index=(IS_OPTN|IS_NLBL), read=FPLU_Product__c_, write=SetPLU_Product__c_, stored = PLU_Product__c__Specified };
  __property Product__c_* PLU_Product__r = { index=(IS_OPTN|IS_NLBL), read=FPLU_Product__r, write=SetPLU_Product__r, stored = PLU_Product__r_Specified };
  __property double       Price__c = { index=(IS_OPTN|IS_NLBL), read=FPrice__c, write=SetPrice__c, stored = Price__c_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property double     Quantity__c = { index=(IS_OPTN|IS_NLBL), read=FQuantity__c, write=SetQuantity__c, stored = Quantity__c_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property double       Total__c = { index=(IS_OPTN|IS_NLBL), read=FTotal__c, write=SetTotal__c, stored = Total__c_Specified };
  __property ID         Transaction__c = { index=(IS_OPTN|IS_NLBL), read=FTransaction__c_, write=SetTransaction__c_, stored = Transaction__c__Specified };
  __property Transaction__c_* Transaction__r = { index=(IS_OPTN|IS_NLBL), read=FTransaction__r, write=SetTransaction__r, stored = Transaction__r_Specified };
};




// ************************************************************************ //
// XML       : LeadStatus, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class LeadStatus : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsConverted;
  bool            FIsConverted_Specified;
  bool            FIsDefault;
  bool            FIsDefault_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FMasterLabel;
  bool            FMasterLabel_Specified;
  int             FSortOrder;
  bool            FSortOrder_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsConverted(int Index)
  {  return FIsConverted;  }
  void __fastcall SetIsConverted(int Index, bool _prop_val)
  {  FIsConverted = _prop_val; FIsConverted_Specified = true;  }
  bool __fastcall IsConverted_Specified(int Index)
  {  return FIsConverted_Specified;  } 
  bool __fastcall GetIsDefault(int Index)
  {  return FIsDefault;  }
  void __fastcall SetIsDefault(int Index, bool _prop_val)
  {  FIsDefault = _prop_val; FIsDefault_Specified = true;  }
  bool __fastcall IsDefault_Specified(int Index)
  {  return FIsDefault_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetMasterLabel(int Index)
  {  return FMasterLabel;  }
  void __fastcall SetMasterLabel(int Index, UnicodeString _prop_val)
  {  FMasterLabel = _prop_val; FMasterLabel_Specified = true;  }
  bool __fastcall MasterLabel_Specified(int Index)
  {  return FMasterLabel_Specified;  } 
  int __fastcall GetSortOrder(int Index)
  {  return FSortOrder;  }
  void __fastcall SetSortOrder(int Index, int _prop_val)
  {  FSortOrder = _prop_val; FSortOrder_Specified = true;  }
  bool __fastcall SortOrder_Specified(int Index)
  {  return FSortOrder_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~LeadStatus();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool       IsConverted = { index=(IS_OPTN|IS_NLBL), read=FIsConverted, write=SetIsConverted, stored = IsConverted_Specified };
  __property bool        IsDefault = { index=(IS_OPTN|IS_NLBL), read=FIsDefault, write=SetIsDefault, stored = IsDefault_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString MasterLabel = { index=(IS_OPTN|IS_NLBL), read=FMasterLabel, write=SetMasterLabel, stored = MasterLabel_Specified };
  __property int         SortOrder = { index=(IS_OPTN|IS_NLBL), read=FSortOrder, write=SetSortOrder, stored = SortOrder_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : LeadShare, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class LeadShare : public sObject {
private:
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  Lead*           FLead;
  bool            FLead_Specified;
  UnicodeString   FLeadAccessLevel;
  bool            FLeadAccessLevel_Specified;
  ID              FLeadId;
  bool            FLeadId_Specified;
  UnicodeString   FRowCause;
  bool            FRowCause_Specified;
  ID              FUserOrGroupId;
  bool            FUserOrGroupId_Specified;
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  Lead* __fastcall GetLead(int Index)
  {  return FLead;  }
  void __fastcall SetLead(int Index, Lead* _prop_val)
  {  FLead = _prop_val; FLead_Specified = true;  }
  bool __fastcall Lead_Specified(int Index)
  {  return FLead_Specified;  } 
  UnicodeString __fastcall GetLeadAccessLevel(int Index)
  {  return FLeadAccessLevel;  }
  void __fastcall SetLeadAccessLevel(int Index, UnicodeString _prop_val)
  {  FLeadAccessLevel = _prop_val; FLeadAccessLevel_Specified = true;  }
  bool __fastcall LeadAccessLevel_Specified(int Index)
  {  return FLeadAccessLevel_Specified;  } 
  ID __fastcall GetLeadId(int Index)
  {  return FLeadId;  }
  void __fastcall SetLeadId(int Index, ID _prop_val)
  {  FLeadId = _prop_val; FLeadId_Specified = true;  }
  bool __fastcall LeadId_Specified(int Index)
  {  return FLeadId_Specified;  } 
  UnicodeString __fastcall GetRowCause(int Index)
  {  return FRowCause;  }
  void __fastcall SetRowCause(int Index, UnicodeString _prop_val)
  {  FRowCause = _prop_val; FRowCause_Specified = true;  }
  bool __fastcall RowCause_Specified(int Index)
  {  return FRowCause_Specified;  } 
  ID __fastcall GetUserOrGroupId(int Index)
  {  return FUserOrGroupId;  }
  void __fastcall SetUserOrGroupId(int Index, ID _prop_val)
  {  FUserOrGroupId = _prop_val; FUserOrGroupId_Specified = true;  }
  bool __fastcall UserOrGroupId_Specified(int Index)
  {  return FUserOrGroupId_Specified;  } 

public:
  __fastcall ~LeadShare();
__published:
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property Lead*            Lead = { index=(IS_OPTN|IS_NLBL), read=FLead, write=SetLead, stored = Lead_Specified };
  __property UnicodeString LeadAccessLevel = { index=(IS_OPTN|IS_NLBL), read=FLeadAccessLevel, write=SetLeadAccessLevel, stored = LeadAccessLevel_Specified };
  __property ID             LeadId = { index=(IS_OPTN|IS_NLBL), read=FLeadId, write=SetLeadId, stored = LeadId_Specified };
  __property UnicodeString   RowCause = { index=(IS_OPTN|IS_NLBL), read=FRowCause, write=SetRowCause, stored = RowCause_Specified };
  __property ID         UserOrGroupId = { index=(IS_OPTN|IS_NLBL), read=FUserOrGroupId, write=SetUserOrGroupId, stored = UserOrGroupId_Specified };
};




// ************************************************************************ //
// XML       : LeadHistory, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class LeadHistory : public sObject {
private:
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FField;
  bool            FField_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  Lead*           FLead;
  bool            FLead_Specified;
  ID              FLeadId;
  bool            FLeadId_Specified;
  Variant         FNewValue;
  bool            FNewValue_Specified;
  Variant         FOldValue;
  bool            FOldValue_Specified;
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetField(int Index)
  {  return FField;  }
  void __fastcall SetField(int Index, UnicodeString _prop_val)
  {  FField = _prop_val; FField_Specified = true;  }
  bool __fastcall Field_Specified(int Index)
  {  return FField_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  Lead* __fastcall GetLead(int Index)
  {  return FLead;  }
  void __fastcall SetLead(int Index, Lead* _prop_val)
  {  FLead = _prop_val; FLead_Specified = true;  }
  bool __fastcall Lead_Specified(int Index)
  {  return FLead_Specified;  } 
  ID __fastcall GetLeadId(int Index)
  {  return FLeadId;  }
  void __fastcall SetLeadId(int Index, ID _prop_val)
  {  FLeadId = _prop_val; FLeadId_Specified = true;  }
  bool __fastcall LeadId_Specified(int Index)
  {  return FLeadId_Specified;  } 
  Variant __fastcall GetNewValue(int Index)
  {  return FNewValue;  }
  void __fastcall SetNewValue(int Index, Variant _prop_val)
  {  FNewValue = _prop_val; FNewValue_Specified = true;  }
  bool __fastcall NewValue_Specified(int Index)
  {  return FNewValue_Specified;  } 
  Variant __fastcall GetOldValue(int Index)
  {  return FOldValue;  }
  void __fastcall SetOldValue(int Index, Variant _prop_val)
  {  FOldValue = _prop_val; FOldValue_Specified = true;  }
  bool __fastcall OldValue_Specified(int Index)
  {  return FOldValue_Specified;  } 

public:
  __fastcall ~LeadHistory();
__published:
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString      Field = { index=(IS_OPTN|IS_NLBL), read=FField, write=SetField, stored = Field_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property Lead*            Lead = { index=(IS_OPTN|IS_NLBL), read=FLead, write=SetLead, stored = Lead_Specified };
  __property ID             LeadId = { index=(IS_OPTN|IS_NLBL), read=FLeadId, write=SetLeadId, stored = LeadId_Specified };
  __property Variant      NewValue = { index=(IS_OPTN|IS_NLBL), read=FNewValue, write=SetNewValue, stored = NewValue_Specified };
  __property Variant      OldValue = { index=(IS_OPTN|IS_NLBL), read=FOldValue, write=SetOldValue, stored = OldValue_Specified };
};




// ************************************************************************ //
// XML       : LeadFeed, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class LeadFeed : public sObject {
private:
  UnicodeString   FBody;
  bool            FBody_Specified;
  int             FCommentCount;
  bool            FCommentCount_Specified;
  TByteDynArray   FContentData;
  bool            FContentData_Specified;
  UnicodeString   FContentDescription;
  bool            FContentDescription_Specified;
  UnicodeString   FContentFileName;
  bool            FContentFileName_Specified;
  int             FContentSize;
  bool            FContentSize_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedComments;
  bool            FFeedComments_Specified;
  QueryResult*    FFeedLikes;
  bool            FFeedLikes_Specified;
  QueryResult*    FFeedTrackedChanges;
  bool            FFeedTrackedChanges_Specified;
  Name_*           FInsertedBy;
  bool            FInsertedBy_Specified;
  ID              FInsertedById;
  bool            FInsertedById_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLikeCount;
  bool            FLikeCount_Specified;
  UnicodeString   FLinkUrl;
  bool            FLinkUrl_Specified;
  Lead*           FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FRelatedRecordId;
  bool            FRelatedRecordId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetCommentCount(int Index)
  {  return FCommentCount;  }
  void __fastcall SetCommentCount(int Index, int _prop_val)
  {  FCommentCount = _prop_val; FCommentCount_Specified = true;  }
  bool __fastcall CommentCount_Specified(int Index)
  {  return FCommentCount_Specified;  } 
  TByteDynArray __fastcall GetContentData(int Index)
  {  return FContentData;  }
  void __fastcall SetContentData(int Index, TByteDynArray _prop_val)
  {  FContentData = _prop_val; FContentData_Specified = true;  }
  bool __fastcall ContentData_Specified(int Index)
  {  return FContentData_Specified;  } 
  UnicodeString __fastcall GetContentDescription(int Index)
  {  return FContentDescription;  }
  void __fastcall SetContentDescription(int Index, UnicodeString _prop_val)
  {  FContentDescription = _prop_val; FContentDescription_Specified = true;  }
  bool __fastcall ContentDescription_Specified(int Index)
  {  return FContentDescription_Specified;  } 
  UnicodeString __fastcall GetContentFileName(int Index)
  {  return FContentFileName;  }
  void __fastcall SetContentFileName(int Index, UnicodeString _prop_val)
  {  FContentFileName = _prop_val; FContentFileName_Specified = true;  }
  bool __fastcall ContentFileName_Specified(int Index)
  {  return FContentFileName_Specified;  } 
  int __fastcall GetContentSize(int Index)
  {  return FContentSize;  }
  void __fastcall SetContentSize(int Index, int _prop_val)
  {  FContentSize = _prop_val; FContentSize_Specified = true;  }
  bool __fastcall ContentSize_Specified(int Index)
  {  return FContentSize_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedComments(int Index)
  {  return FFeedComments;  }
  void __fastcall SetFeedComments(int Index, QueryResult* _prop_val)
  {  FFeedComments = _prop_val; FFeedComments_Specified = true;  }
  bool __fastcall FeedComments_Specified(int Index)
  {  return FFeedComments_Specified;  } 
  QueryResult* __fastcall GetFeedLikes(int Index)
  {  return FFeedLikes;  }
  void __fastcall SetFeedLikes(int Index, QueryResult* _prop_val)
  {  FFeedLikes = _prop_val; FFeedLikes_Specified = true;  }
  bool __fastcall FeedLikes_Specified(int Index)
  {  return FFeedLikes_Specified;  } 
  QueryResult* __fastcall GetFeedTrackedChanges(int Index)
  {  return FFeedTrackedChanges;  }
  void __fastcall SetFeedTrackedChanges(int Index, QueryResult* _prop_val)
  {  FFeedTrackedChanges = _prop_val; FFeedTrackedChanges_Specified = true;  }
  bool __fastcall FeedTrackedChanges_Specified(int Index)
  {  return FFeedTrackedChanges_Specified;  } 
  Name_* __fastcall GetInsertedBy(int Index)
  {  return FInsertedBy;  }
  void __fastcall SetInsertedBy(int Index, Name_* _prop_val)
  {  FInsertedBy = _prop_val; FInsertedBy_Specified = true;  }
  bool __fastcall InsertedBy_Specified(int Index)
  {  return FInsertedBy_Specified;  } 
  ID __fastcall GetInsertedById(int Index)
  {  return FInsertedById;  }
  void __fastcall SetInsertedById(int Index, ID _prop_val)
  {  FInsertedById = _prop_val; FInsertedById_Specified = true;  }
  bool __fastcall InsertedById_Specified(int Index)
  {  return FInsertedById_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLikeCount(int Index)
  {  return FLikeCount;  }
  void __fastcall SetLikeCount(int Index, int _prop_val)
  {  FLikeCount = _prop_val; FLikeCount_Specified = true;  }
  bool __fastcall LikeCount_Specified(int Index)
  {  return FLikeCount_Specified;  } 
  UnicodeString __fastcall GetLinkUrl(int Index)
  {  return FLinkUrl;  }
  void __fastcall SetLinkUrl(int Index, UnicodeString _prop_val)
  {  FLinkUrl = _prop_val; FLinkUrl_Specified = true;  }
  bool __fastcall LinkUrl_Specified(int Index)
  {  return FLinkUrl_Specified;  } 
  Lead* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Lead* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetRelatedRecordId(int Index)
  {  return FRelatedRecordId;  }
  void __fastcall SetRelatedRecordId(int Index, ID _prop_val)
  {  FRelatedRecordId = _prop_val; FRelatedRecordId_Specified = true;  }
  bool __fastcall RelatedRecordId_Specified(int Index)
  {  return FRelatedRecordId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~LeadFeed();
__published:
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        CommentCount = { index=(IS_OPTN|IS_NLBL), read=FCommentCount, write=SetCommentCount, stored = CommentCount_Specified };
  __property TByteDynArray ContentData = { index=(IS_OPTN|IS_NLBL), read=FContentData, write=SetContentData, stored = ContentData_Specified };
  __property UnicodeString ContentDescription = { index=(IS_OPTN|IS_NLBL), read=FContentDescription, write=SetContentDescription, stored = ContentDescription_Specified };
  __property UnicodeString ContentFileName = { index=(IS_OPTN|IS_NLBL), read=FContentFileName, write=SetContentFileName, stored = ContentFileName_Specified };
  __property int        ContentSize = { index=(IS_OPTN|IS_NLBL), read=FContentSize, write=SetContentSize, stored = ContentSize_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedComments = { index=(IS_OPTN|IS_NLBL), read=FFeedComments, write=SetFeedComments, stored = FeedComments_Specified };
  __property QueryResult*  FeedLikes = { index=(IS_OPTN|IS_NLBL), read=FFeedLikes, write=SetFeedLikes, stored = FeedLikes_Specified };
  __property QueryResult* FeedTrackedChanges = { index=(IS_OPTN|IS_NLBL), read=FFeedTrackedChanges, write=SetFeedTrackedChanges, stored = FeedTrackedChanges_Specified };
  __property Name_*      InsertedBy = { index=(IS_OPTN|IS_NLBL), read=FInsertedBy, write=SetInsertedBy, stored = InsertedBy_Specified };
  __property ID         InsertedById = { index=(IS_OPTN|IS_NLBL), read=FInsertedById, write=SetInsertedById, stored = InsertedById_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int         LikeCount = { index=(IS_OPTN|IS_NLBL), read=FLikeCount, write=SetLikeCount, stored = LikeCount_Specified };
  __property UnicodeString    LinkUrl = { index=(IS_OPTN|IS_NLBL), read=FLinkUrl, write=SetLinkUrl, stored = LinkUrl_Specified };
  __property Lead*          Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         RelatedRecordId = { index=(IS_OPTN|IS_NLBL), read=FRelatedRecordId, write=SetRelatedRecordId, stored = RelatedRecordId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : Lead, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Lead : public sObject {
private:
  QueryResult*    FActivityHistories;
  bool            FActivityHistories_Specified;
  double          FAnnualRevenue;
  bool            FAnnualRevenue_Specified;
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  UnicodeString   FCity;
  bool            FCity_Specified;
  UnicodeString   FCompany;
  bool            FCompany_Specified;
  Account*        FConvertedAccount;
  bool            FConvertedAccount_Specified;
  ID              FConvertedAccountId;
  bool            FConvertedAccountId_Specified;
  Contact*        FConvertedContact;
  bool            FConvertedContact_Specified;
  ID              FConvertedContactId;
  bool            FConvertedContactId_Specified;
  TXSDate*        FConvertedDate;
  bool            FConvertedDate_Specified;
  Opportunity*    FConvertedOpportunity;
  bool            FConvertedOpportunity_Specified;
  ID              FConvertedOpportunityId;
  bool            FConvertedOpportunityId_Specified;
  UnicodeString   FCountry;
  bool            FCountry_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  UnicodeString   FEmail;
  bool            FEmail_Specified;
  TXSDateTime*    FEmailBouncedDate;
  bool            FEmailBouncedDate_Specified;
  UnicodeString   FEmailBouncedReason;
  bool            FEmailBouncedReason_Specified;
  QueryResult*    FEmailStatuses;
  bool            FEmailStatuses_Specified;
  QueryResult*    FEvents;
  bool            FEvents_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  QueryResult*    FFeeds;
  bool            FFeeds_Specified;
  UnicodeString   FFirstName;
  bool            FFirstName_Specified;
  QueryResult*    FHistories;
  bool            FHistories_Specified;
  UnicodeString   FIndustry;
  bool            FIndustry_Specified;
  bool            FIsConverted;
  bool            FIsConverted_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsUnreadByOwner;
  bool            FIsUnreadByOwner_Specified;
  UnicodeString   FJigsaw;
  bool            FJigsaw_Specified;
  UnicodeString   FJigsawContactId;
  bool            FJigsawContactId_Specified;
  TXSDate*        FLastActivityDate;
  bool            FLastActivityDate_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FLastName;
  bool            FLastName_Specified;
  UnicodeString   FLeadSource;
  bool            FLeadSource_Specified;
  Lead*           FMasterRecord;
  bool            FMasterRecord_Specified;
  ID              FMasterRecordId;
  bool            FMasterRecordId_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  QueryResult*    FNotes;
  bool            FNotes_Specified;
  QueryResult*    FNotesAndAttachments;
  bool            FNotesAndAttachments_Specified;
  int             FNumberOfEmployees;
  bool            FNumberOfEmployees_Specified;
  QueryResult*    FOpenActivities;
  bool            FOpenActivities_Specified;
  Name_*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  UnicodeString   FPhone;
  bool            FPhone_Specified;
  UnicodeString   FPostalCode;
  bool            FPostalCode_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  UnicodeString   FRating;
  bool            FRating_Specified;
  UnicodeString   FSalutation;
  bool            FSalutation_Specified;
  QueryResult*    FShares;
  bool            FShares_Specified;
  UnicodeString   FState;
  bool            FState_Specified;
  UnicodeString   FStatus;
  bool            FStatus_Specified;
  UnicodeString   FStreet;
  bool            FStreet_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  QueryResult*    FTasks;
  bool            FTasks_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString   FWebsite;
  bool            FWebsite_Specified;
  QueryResult* __fastcall GetActivityHistories(int Index)
  {  return FActivityHistories;  }
  void __fastcall SetActivityHistories(int Index, QueryResult* _prop_val)
  {  FActivityHistories = _prop_val; FActivityHistories_Specified = true;  }
  bool __fastcall ActivityHistories_Specified(int Index)
  {  return FActivityHistories_Specified;  } 
  double __fastcall GetAnnualRevenue(int Index)
  {  return FAnnualRevenue;  }
  void __fastcall SetAnnualRevenue(int Index, double _prop_val)
  {  FAnnualRevenue = _prop_val; FAnnualRevenue_Specified = true;  }
  bool __fastcall AnnualRevenue_Specified(int Index)
  {  return FAnnualRevenue_Specified;  } 
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  UnicodeString __fastcall GetCity(int Index)
  {  return FCity;  }
  void __fastcall SetCity(int Index, UnicodeString _prop_val)
  {  FCity = _prop_val; FCity_Specified = true;  }
  bool __fastcall City_Specified(int Index)
  {  return FCity_Specified;  } 
  UnicodeString __fastcall GetCompany(int Index)
  {  return FCompany;  }
  void __fastcall SetCompany(int Index, UnicodeString _prop_val)
  {  FCompany = _prop_val; FCompany_Specified = true;  }
  bool __fastcall Company_Specified(int Index)
  {  return FCompany_Specified;  } 
  Account* __fastcall GetConvertedAccount(int Index)
  {  return FConvertedAccount;  }
  void __fastcall SetConvertedAccount(int Index, Account* _prop_val)
  {  FConvertedAccount = _prop_val; FConvertedAccount_Specified = true;  }
  bool __fastcall ConvertedAccount_Specified(int Index)
  {  return FConvertedAccount_Specified;  } 
  ID __fastcall GetConvertedAccountId(int Index)
  {  return FConvertedAccountId;  }
  void __fastcall SetConvertedAccountId(int Index, ID _prop_val)
  {  FConvertedAccountId = _prop_val; FConvertedAccountId_Specified = true;  }
  bool __fastcall ConvertedAccountId_Specified(int Index)
  {  return FConvertedAccountId_Specified;  } 
  Contact* __fastcall GetConvertedContact(int Index)
  {  return FConvertedContact;  }
  void __fastcall SetConvertedContact(int Index, Contact* _prop_val)
  {  FConvertedContact = _prop_val; FConvertedContact_Specified = true;  }
  bool __fastcall ConvertedContact_Specified(int Index)
  {  return FConvertedContact_Specified;  } 
  ID __fastcall GetConvertedContactId(int Index)
  {  return FConvertedContactId;  }
  void __fastcall SetConvertedContactId(int Index, ID _prop_val)
  {  FConvertedContactId = _prop_val; FConvertedContactId_Specified = true;  }
  bool __fastcall ConvertedContactId_Specified(int Index)
  {  return FConvertedContactId_Specified;  } 
  TXSDate* __fastcall GetConvertedDate(int Index)
  {  return FConvertedDate;  }
  void __fastcall SetConvertedDate(int Index, TXSDate* _prop_val)
  {  FConvertedDate = _prop_val; FConvertedDate_Specified = true;  }
  bool __fastcall ConvertedDate_Specified(int Index)
  {  return FConvertedDate_Specified;  } 
  Opportunity* __fastcall GetConvertedOpportunity(int Index)
  {  return FConvertedOpportunity;  }
  void __fastcall SetConvertedOpportunity(int Index, Opportunity* _prop_val)
  {  FConvertedOpportunity = _prop_val; FConvertedOpportunity_Specified = true;  }
  bool __fastcall ConvertedOpportunity_Specified(int Index)
  {  return FConvertedOpportunity_Specified;  } 
  ID __fastcall GetConvertedOpportunityId(int Index)
  {  return FConvertedOpportunityId;  }
  void __fastcall SetConvertedOpportunityId(int Index, ID _prop_val)
  {  FConvertedOpportunityId = _prop_val; FConvertedOpportunityId_Specified = true;  }
  bool __fastcall ConvertedOpportunityId_Specified(int Index)
  {  return FConvertedOpportunityId_Specified;  } 
  UnicodeString __fastcall GetCountry(int Index)
  {  return FCountry;  }
  void __fastcall SetCountry(int Index, UnicodeString _prop_val)
  {  FCountry = _prop_val; FCountry_Specified = true;  }
  bool __fastcall Country_Specified(int Index)
  {  return FCountry_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  UnicodeString __fastcall GetEmail(int Index)
  {  return FEmail;  }
  void __fastcall SetEmail(int Index, UnicodeString _prop_val)
  {  FEmail = _prop_val; FEmail_Specified = true;  }
  bool __fastcall Email_Specified(int Index)
  {  return FEmail_Specified;  } 
  TXSDateTime* __fastcall GetEmailBouncedDate(int Index)
  {  return FEmailBouncedDate;  }
  void __fastcall SetEmailBouncedDate(int Index, TXSDateTime* _prop_val)
  {  FEmailBouncedDate = _prop_val; FEmailBouncedDate_Specified = true;  }
  bool __fastcall EmailBouncedDate_Specified(int Index)
  {  return FEmailBouncedDate_Specified;  } 
  UnicodeString __fastcall GetEmailBouncedReason(int Index)
  {  return FEmailBouncedReason;  }
  void __fastcall SetEmailBouncedReason(int Index, UnicodeString _prop_val)
  {  FEmailBouncedReason = _prop_val; FEmailBouncedReason_Specified = true;  }
  bool __fastcall EmailBouncedReason_Specified(int Index)
  {  return FEmailBouncedReason_Specified;  } 
  QueryResult* __fastcall GetEmailStatuses(int Index)
  {  return FEmailStatuses;  }
  void __fastcall SetEmailStatuses(int Index, QueryResult* _prop_val)
  {  FEmailStatuses = _prop_val; FEmailStatuses_Specified = true;  }
  bool __fastcall EmailStatuses_Specified(int Index)
  {  return FEmailStatuses_Specified;  } 
  QueryResult* __fastcall GetEvents(int Index)
  {  return FEvents;  }
  void __fastcall SetEvents(int Index, QueryResult* _prop_val)
  {  FEvents = _prop_val; FEvents_Specified = true;  }
  bool __fastcall Events_Specified(int Index)
  {  return FEvents_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  QueryResult* __fastcall GetFeeds(int Index)
  {  return FFeeds;  }
  void __fastcall SetFeeds(int Index, QueryResult* _prop_val)
  {  FFeeds = _prop_val; FFeeds_Specified = true;  }
  bool __fastcall Feeds_Specified(int Index)
  {  return FFeeds_Specified;  } 
  UnicodeString __fastcall GetFirstName(int Index)
  {  return FFirstName;  }
  void __fastcall SetFirstName(int Index, UnicodeString _prop_val)
  {  FFirstName = _prop_val; FFirstName_Specified = true;  }
  bool __fastcall FirstName_Specified(int Index)
  {  return FFirstName_Specified;  } 
  QueryResult* __fastcall GetHistories(int Index)
  {  return FHistories;  }
  void __fastcall SetHistories(int Index, QueryResult* _prop_val)
  {  FHistories = _prop_val; FHistories_Specified = true;  }
  bool __fastcall Histories_Specified(int Index)
  {  return FHistories_Specified;  } 
  UnicodeString __fastcall GetIndustry(int Index)
  {  return FIndustry;  }
  void __fastcall SetIndustry(int Index, UnicodeString _prop_val)
  {  FIndustry = _prop_val; FIndustry_Specified = true;  }
  bool __fastcall Industry_Specified(int Index)
  {  return FIndustry_Specified;  } 
  bool __fastcall GetIsConverted(int Index)
  {  return FIsConverted;  }
  void __fastcall SetIsConverted(int Index, bool _prop_val)
  {  FIsConverted = _prop_val; FIsConverted_Specified = true;  }
  bool __fastcall IsConverted_Specified(int Index)
  {  return FIsConverted_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsUnreadByOwner(int Index)
  {  return FIsUnreadByOwner;  }
  void __fastcall SetIsUnreadByOwner(int Index, bool _prop_val)
  {  FIsUnreadByOwner = _prop_val; FIsUnreadByOwner_Specified = true;  }
  bool __fastcall IsUnreadByOwner_Specified(int Index)
  {  return FIsUnreadByOwner_Specified;  } 
  UnicodeString __fastcall GetJigsaw(int Index)
  {  return FJigsaw;  }
  void __fastcall SetJigsaw(int Index, UnicodeString _prop_val)
  {  FJigsaw = _prop_val; FJigsaw_Specified = true;  }
  bool __fastcall Jigsaw_Specified(int Index)
  {  return FJigsaw_Specified;  } 
  UnicodeString __fastcall GetJigsawContactId(int Index)
  {  return FJigsawContactId;  }
  void __fastcall SetJigsawContactId(int Index, UnicodeString _prop_val)
  {  FJigsawContactId = _prop_val; FJigsawContactId_Specified = true;  }
  bool __fastcall JigsawContactId_Specified(int Index)
  {  return FJigsawContactId_Specified;  } 
  TXSDate* __fastcall GetLastActivityDate(int Index)
  {  return FLastActivityDate;  }
  void __fastcall SetLastActivityDate(int Index, TXSDate* _prop_val)
  {  FLastActivityDate = _prop_val; FLastActivityDate_Specified = true;  }
  bool __fastcall LastActivityDate_Specified(int Index)
  {  return FLastActivityDate_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetLastName(int Index)
  {  return FLastName;  }
  void __fastcall SetLastName(int Index, UnicodeString _prop_val)
  {  FLastName = _prop_val; FLastName_Specified = true;  }
  bool __fastcall LastName_Specified(int Index)
  {  return FLastName_Specified;  } 
  UnicodeString __fastcall GetLeadSource(int Index)
  {  return FLeadSource;  }
  void __fastcall SetLeadSource(int Index, UnicodeString _prop_val)
  {  FLeadSource = _prop_val; FLeadSource_Specified = true;  }
  bool __fastcall LeadSource_Specified(int Index)
  {  return FLeadSource_Specified;  } 
  Lead* __fastcall GetMasterRecord(int Index)
  {  return FMasterRecord;  }
  void __fastcall SetMasterRecord(int Index, Lead* _prop_val)
  {  FMasterRecord = _prop_val; FMasterRecord_Specified = true;  }
  bool __fastcall MasterRecord_Specified(int Index)
  {  return FMasterRecord_Specified;  } 
  ID __fastcall GetMasterRecordId(int Index)
  {  return FMasterRecordId;  }
  void __fastcall SetMasterRecordId(int Index, ID _prop_val)
  {  FMasterRecordId = _prop_val; FMasterRecordId_Specified = true;  }
  bool __fastcall MasterRecordId_Specified(int Index)
  {  return FMasterRecordId_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  QueryResult* __fastcall GetNotes(int Index)
  {  return FNotes;  }
  void __fastcall SetNotes(int Index, QueryResult* _prop_val)
  {  FNotes = _prop_val; FNotes_Specified = true;  }
  bool __fastcall Notes_Specified(int Index)
  {  return FNotes_Specified;  } 
  QueryResult* __fastcall GetNotesAndAttachments(int Index)
  {  return FNotesAndAttachments;  }
  void __fastcall SetNotesAndAttachments(int Index, QueryResult* _prop_val)
  {  FNotesAndAttachments = _prop_val; FNotesAndAttachments_Specified = true;  }
  bool __fastcall NotesAndAttachments_Specified(int Index)
  {  return FNotesAndAttachments_Specified;  } 
  int __fastcall GetNumberOfEmployees(int Index)
  {  return FNumberOfEmployees;  }
  void __fastcall SetNumberOfEmployees(int Index, int _prop_val)
  {  FNumberOfEmployees = _prop_val; FNumberOfEmployees_Specified = true;  }
  bool __fastcall NumberOfEmployees_Specified(int Index)
  {  return FNumberOfEmployees_Specified;  } 
  QueryResult* __fastcall GetOpenActivities(int Index)
  {  return FOpenActivities;  }
  void __fastcall SetOpenActivities(int Index, QueryResult* _prop_val)
  {  FOpenActivities = _prop_val; FOpenActivities_Specified = true;  }
  bool __fastcall OpenActivities_Specified(int Index)
  {  return FOpenActivities_Specified;  } 
  Name_* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, Name_* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  UnicodeString __fastcall GetPhone(int Index)
  {  return FPhone;  }
  void __fastcall SetPhone(int Index, UnicodeString _prop_val)
  {  FPhone = _prop_val; FPhone_Specified = true;  }
  bool __fastcall Phone_Specified(int Index)
  {  return FPhone_Specified;  } 
  UnicodeString __fastcall GetPostalCode(int Index)
  {  return FPostalCode;  }
  void __fastcall SetPostalCode(int Index, UnicodeString _prop_val)
  {  FPostalCode = _prop_val; FPostalCode_Specified = true;  }
  bool __fastcall PostalCode_Specified(int Index)
  {  return FPostalCode_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  UnicodeString __fastcall GetRating(int Index)
  {  return FRating;  }
  void __fastcall SetRating(int Index, UnicodeString _prop_val)
  {  FRating = _prop_val; FRating_Specified = true;  }
  bool __fastcall Rating_Specified(int Index)
  {  return FRating_Specified;  } 
  UnicodeString __fastcall GetSalutation(int Index)
  {  return FSalutation;  }
  void __fastcall SetSalutation(int Index, UnicodeString _prop_val)
  {  FSalutation = _prop_val; FSalutation_Specified = true;  }
  bool __fastcall Salutation_Specified(int Index)
  {  return FSalutation_Specified;  } 
  QueryResult* __fastcall GetShares(int Index)
  {  return FShares;  }
  void __fastcall SetShares(int Index, QueryResult* _prop_val)
  {  FShares = _prop_val; FShares_Specified = true;  }
  bool __fastcall Shares_Specified(int Index)
  {  return FShares_Specified;  } 
  UnicodeString __fastcall GetState(int Index)
  {  return FState;  }
  void __fastcall SetState(int Index, UnicodeString _prop_val)
  {  FState = _prop_val; FState_Specified = true;  }
  bool __fastcall State_Specified(int Index)
  {  return FState_Specified;  } 
  UnicodeString __fastcall GetStatus(int Index)
  {  return FStatus;  }
  void __fastcall SetStatus(int Index, UnicodeString _prop_val)
  {  FStatus = _prop_val; FStatus_Specified = true;  }
  bool __fastcall Status_Specified(int Index)
  {  return FStatus_Specified;  } 
  UnicodeString __fastcall GetStreet(int Index)
  {  return FStreet;  }
  void __fastcall SetStreet(int Index, UnicodeString _prop_val)
  {  FStreet = _prop_val; FStreet_Specified = true;  }
  bool __fastcall Street_Specified(int Index)
  {  return FStreet_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  QueryResult* __fastcall GetTasks(int Index)
  {  return FTasks;  }
  void __fastcall SetTasks(int Index, QueryResult* _prop_val)
  {  FTasks = _prop_val; FTasks_Specified = true;  }
  bool __fastcall Tasks_Specified(int Index)
  {  return FTasks_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  UnicodeString __fastcall GetWebsite(int Index)
  {  return FWebsite;  }
  void __fastcall SetWebsite(int Index, UnicodeString _prop_val)
  {  FWebsite = _prop_val; FWebsite_Specified = true;  }
  bool __fastcall Website_Specified(int Index)
  {  return FWebsite_Specified;  } 

public:
  __fastcall ~Lead();
__published:
  __property QueryResult* ActivityHistories = { index=(IS_OPTN|IS_NLBL), read=FActivityHistories, write=SetActivityHistories, stored = ActivityHistories_Specified };
  __property double     AnnualRevenue = { index=(IS_OPTN|IS_NLBL), read=FAnnualRevenue, write=SetAnnualRevenue, stored = AnnualRevenue_Specified };
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property UnicodeString       City = { index=(IS_OPTN|IS_NLBL), read=FCity, write=SetCity, stored = City_Specified };
  __property UnicodeString    Company = { index=(IS_OPTN|IS_NLBL), read=FCompany, write=SetCompany, stored = Company_Specified };
  __property Account*   ConvertedAccount = { index=(IS_OPTN|IS_NLBL), read=FConvertedAccount, write=SetConvertedAccount, stored = ConvertedAccount_Specified };
  __property ID         ConvertedAccountId = { index=(IS_OPTN|IS_NLBL), read=FConvertedAccountId, write=SetConvertedAccountId, stored = ConvertedAccountId_Specified };
  __property Contact*   ConvertedContact = { index=(IS_OPTN|IS_NLBL), read=FConvertedContact, write=SetConvertedContact, stored = ConvertedContact_Specified };
  __property ID         ConvertedContactId = { index=(IS_OPTN|IS_NLBL), read=FConvertedContactId, write=SetConvertedContactId, stored = ConvertedContactId_Specified };
  __property TXSDate*   ConvertedDate = { index=(IS_OPTN|IS_NLBL), read=FConvertedDate, write=SetConvertedDate, stored = ConvertedDate_Specified };
  __property Opportunity* ConvertedOpportunity = { index=(IS_OPTN|IS_NLBL), read=FConvertedOpportunity, write=SetConvertedOpportunity, stored = ConvertedOpportunity_Specified };
  __property ID         ConvertedOpportunityId = { index=(IS_OPTN|IS_NLBL), read=FConvertedOpportunityId, write=SetConvertedOpportunityId, stored = ConvertedOpportunityId_Specified };
  __property UnicodeString    Country = { index=(IS_OPTN|IS_NLBL), read=FCountry, write=SetCountry, stored = Country_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property UnicodeString      Email = { index=(IS_OPTN|IS_NLBL), read=FEmail, write=SetEmail, stored = Email_Specified };
  __property TXSDateTime* EmailBouncedDate = { index=(IS_OPTN|IS_NLBL), read=FEmailBouncedDate, write=SetEmailBouncedDate, stored = EmailBouncedDate_Specified };
  __property UnicodeString EmailBouncedReason = { index=(IS_OPTN|IS_NLBL), read=FEmailBouncedReason, write=SetEmailBouncedReason, stored = EmailBouncedReason_Specified };
  __property QueryResult* EmailStatuses = { index=(IS_OPTN|IS_NLBL), read=FEmailStatuses, write=SetEmailStatuses, stored = EmailStatuses_Specified };
  __property QueryResult*     Events = { index=(IS_OPTN|IS_NLBL), read=FEvents, write=SetEvents, stored = Events_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property QueryResult*      Feeds = { index=(IS_OPTN|IS_NLBL), read=FFeeds, write=SetFeeds, stored = Feeds_Specified };
  __property UnicodeString  FirstName = { index=(IS_OPTN|IS_NLBL), read=FFirstName, write=SetFirstName, stored = FirstName_Specified };
  __property QueryResult*  Histories = { index=(IS_OPTN|IS_NLBL), read=FHistories, write=SetHistories, stored = Histories_Specified };
  __property UnicodeString   Industry = { index=(IS_OPTN|IS_NLBL), read=FIndustry, write=SetIndustry, stored = Industry_Specified };
  __property bool       IsConverted = { index=(IS_OPTN|IS_NLBL), read=FIsConverted, write=SetIsConverted, stored = IsConverted_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool       IsUnreadByOwner = { index=(IS_OPTN|IS_NLBL), read=FIsUnreadByOwner, write=SetIsUnreadByOwner, stored = IsUnreadByOwner_Specified };
  __property UnicodeString     Jigsaw = { index=(IS_OPTN|IS_NLBL), read=FJigsaw, write=SetJigsaw, stored = Jigsaw_Specified };
  __property UnicodeString JigsawContactId = { index=(IS_OPTN|IS_NLBL), read=FJigsawContactId, write=SetJigsawContactId, stored = JigsawContactId_Specified };
  __property TXSDate*   LastActivityDate = { index=(IS_OPTN|IS_NLBL), read=FLastActivityDate, write=SetLastActivityDate, stored = LastActivityDate_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString   LastName = { index=(IS_OPTN|IS_NLBL), read=FLastName, write=SetLastName, stored = LastName_Specified };
  __property UnicodeString LeadSource = { index=(IS_OPTN|IS_NLBL), read=FLeadSource, write=SetLeadSource, stored = LeadSource_Specified };
  __property Lead*      MasterRecord = { index=(IS_OPTN|IS_NLBL), read=FMasterRecord, write=SetMasterRecord, stored = MasterRecord_Specified };
  __property ID         MasterRecordId = { index=(IS_OPTN|IS_NLBL), read=FMasterRecordId, write=SetMasterRecordId, stored = MasterRecordId_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property QueryResult*      Notes = { index=(IS_OPTN|IS_NLBL), read=FNotes, write=SetNotes, stored = Notes_Specified };
  __property QueryResult* NotesAndAttachments = { index=(IS_OPTN|IS_NLBL), read=FNotesAndAttachments, write=SetNotesAndAttachments, stored = NotesAndAttachments_Specified };
  __property int        NumberOfEmployees = { index=(IS_OPTN|IS_NLBL), read=FNumberOfEmployees, write=SetNumberOfEmployees, stored = NumberOfEmployees_Specified };
  __property QueryResult* OpenActivities = { index=(IS_OPTN|IS_NLBL), read=FOpenActivities, write=SetOpenActivities, stored = OpenActivities_Specified };
  __property Name_*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property UnicodeString      Phone = { index=(IS_OPTN|IS_NLBL), read=FPhone, write=SetPhone, stored = Phone_Specified };
  __property UnicodeString PostalCode = { index=(IS_OPTN|IS_NLBL), read=FPostalCode, write=SetPostalCode, stored = PostalCode_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property UnicodeString     Rating = { index=(IS_OPTN|IS_NLBL), read=FRating, write=SetRating, stored = Rating_Specified };
  __property UnicodeString Salutation = { index=(IS_OPTN|IS_NLBL), read=FSalutation, write=SetSalutation, stored = Salutation_Specified };
  __property QueryResult*     Shares = { index=(IS_OPTN|IS_NLBL), read=FShares, write=SetShares, stored = Shares_Specified };
  __property UnicodeString      State = { index=(IS_OPTN|IS_NLBL), read=FState, write=SetState, stored = State_Specified };
  __property UnicodeString     Status = { index=(IS_OPTN|IS_NLBL), read=FStatus, write=SetStatus, stored = Status_Specified };
  __property UnicodeString     Street = { index=(IS_OPTN|IS_NLBL), read=FStreet, write=SetStreet, stored = Street_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property QueryResult*      Tasks = { index=(IS_OPTN|IS_NLBL), read=FTasks, write=SetTasks, stored = Tasks_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property UnicodeString    Website = { index=(IS_OPTN|IS_NLBL), read=FWebsite, write=SetWebsite, stored = Website_Specified };
};




// ************************************************************************ //
// XML       : RecordType, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class RecordType : public sObject {
private:
  ID              FBusinessProcessId;
  bool            FBusinessProcessId_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  UnicodeString   FDeveloperName;
  bool            FDeveloperName_Specified;
  bool            FIsActive;
  bool            FIsActive_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  UnicodeString   FNamespacePrefix;
  bool            FNamespacePrefix_Specified;
  UnicodeString   FSobjectType;
  bool            FSobjectType_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  ID __fastcall GetBusinessProcessId(int Index)
  {  return FBusinessProcessId;  }
  void __fastcall SetBusinessProcessId(int Index, ID _prop_val)
  {  FBusinessProcessId = _prop_val; FBusinessProcessId_Specified = true;  }
  bool __fastcall BusinessProcessId_Specified(int Index)
  {  return FBusinessProcessId_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  UnicodeString __fastcall GetDeveloperName(int Index)
  {  return FDeveloperName;  }
  void __fastcall SetDeveloperName(int Index, UnicodeString _prop_val)
  {  FDeveloperName = _prop_val; FDeveloperName_Specified = true;  }
  bool __fastcall DeveloperName_Specified(int Index)
  {  return FDeveloperName_Specified;  } 
  bool __fastcall GetIsActive(int Index)
  {  return FIsActive;  }
  void __fastcall SetIsActive(int Index, bool _prop_val)
  {  FIsActive = _prop_val; FIsActive_Specified = true;  }
  bool __fastcall IsActive_Specified(int Index)
  {  return FIsActive_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  UnicodeString __fastcall GetNamespacePrefix(int Index)
  {  return FNamespacePrefix;  }
  void __fastcall SetNamespacePrefix(int Index, UnicodeString _prop_val)
  {  FNamespacePrefix = _prop_val; FNamespacePrefix_Specified = true;  }
  bool __fastcall NamespacePrefix_Specified(int Index)
  {  return FNamespacePrefix_Specified;  } 
  UnicodeString __fastcall GetSobjectType(int Index)
  {  return FSobjectType;  }
  void __fastcall SetSobjectType(int Index, UnicodeString _prop_val)
  {  FSobjectType = _prop_val; FSobjectType_Specified = true;  }
  bool __fastcall SobjectType_Specified(int Index)
  {  return FSobjectType_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~RecordType();
__published:
  __property ID         BusinessProcessId = { index=(IS_OPTN|IS_NLBL), read=FBusinessProcessId, write=SetBusinessProcessId, stored = BusinessProcessId_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property UnicodeString DeveloperName = { index=(IS_OPTN|IS_NLBL), read=FDeveloperName, write=SetDeveloperName, stored = DeveloperName_Specified };
  __property bool         IsActive = { index=(IS_OPTN|IS_NLBL), read=FIsActive, write=SetIsActive, stored = IsActive_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property UnicodeString NamespacePrefix = { index=(IS_OPTN|IS_NLBL), read=FNamespacePrefix, write=SetNamespacePrefix, stored = NamespacePrefix_Specified };
  __property UnicodeString SobjectType = { index=(IS_OPTN|IS_NLBL), read=FSobjectType, write=SetSobjectType, stored = SobjectType_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : KPI__c_, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class KPI__c_ : public sObject {
private:
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIs_Summary__c;
  bool            FIs_Summary__c_Specified;
  QueryResult*    FKPI_Values__r;
  bool            FKPI_Values__r_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  QueryResult*    FNotes;
  bool            FNotes_Specified;
  QueryResult*    FNotesAndAttachments;
  bool            FNotesAndAttachments_Specified;
  Name_*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIs_Summary__c(int Index)
  {  return FIs_Summary__c;  }
  void __fastcall SetIs_Summary__c(int Index, bool _prop_val)
  {  FIs_Summary__c = _prop_val; FIs_Summary__c_Specified = true;  }
  bool __fastcall Is_Summary__c_Specified(int Index)
  {  return FIs_Summary__c_Specified;  } 
  QueryResult* __fastcall GetKPI_Values__r(int Index)
  {  return FKPI_Values__r;  }
  void __fastcall SetKPI_Values__r(int Index, QueryResult* _prop_val)
  {  FKPI_Values__r = _prop_val; FKPI_Values__r_Specified = true;  }
  bool __fastcall KPI_Values__r_Specified(int Index)
  {  return FKPI_Values__r_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  QueryResult* __fastcall GetNotes(int Index)
  {  return FNotes;  }
  void __fastcall SetNotes(int Index, QueryResult* _prop_val)
  {  FNotes = _prop_val; FNotes_Specified = true;  }
  bool __fastcall Notes_Specified(int Index)
  {  return FNotes_Specified;  } 
  QueryResult* __fastcall GetNotesAndAttachments(int Index)
  {  return FNotesAndAttachments;  }
  void __fastcall SetNotesAndAttachments(int Index, QueryResult* _prop_val)
  {  FNotesAndAttachments = _prop_val; FNotesAndAttachments_Specified = true;  }
  bool __fastcall NotesAndAttachments_Specified(int Index)
  {  return FNotesAndAttachments_Specified;  } 
  Name_* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, Name_* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~KPI__c_();
__published:
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool       Is_Summary__c = { index=(IS_OPTN|IS_NLBL), read=FIs_Summary__c, write=SetIs_Summary__c, stored = Is_Summary__c_Specified };
  __property QueryResult* KPI_Values__r = { index=(IS_OPTN|IS_NLBL), read=FKPI_Values__r, write=SetKPI_Values__r, stored = KPI_Values__r_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property QueryResult*      Notes = { index=(IS_OPTN|IS_NLBL), read=FNotes, write=SetNotes, stored = Notes_Specified };
  __property QueryResult* NotesAndAttachments = { index=(IS_OPTN|IS_NLBL), read=FNotesAndAttachments, write=SetNotesAndAttachments, stored = NotesAndAttachments_Specified };
  __property Name_*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : KPI_Value__c_, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class KPI_Value__c_ : public sObject {
private:
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  ID              FDay__c_;
  bool            FDay__c__Specified;
  Day__c_*         FDay__r;
  bool            FDay__r_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  ID              FKPI__c_;
  bool            FKPI__c__Specified;
  KPI__c_*         FKPI__r;
  bool            FKPI__r_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  QueryResult*    FNotes;
  bool            FNotes_Specified;
  QueryResult*    FNotesAndAttachments;
  bool            FNotesAndAttachments_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  RecordType*     FRecordType;
  bool            FRecordType_Specified;
  ID              FRecordTypeId;
  bool            FRecordTypeId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  double          FValue__c;
  bool            FValue__c_Specified;
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  ID __fastcall GetDay__c_(int Index)
  {  return FDay__c_;  }
  void __fastcall SetDay__c_(int Index, ID _prop_val)
  {  FDay__c_ = _prop_val; FDay__c__Specified = true;  }
  bool __fastcall Day__c__Specified(int Index)
  {  return FDay__c__Specified;  } 
  Day__c_* __fastcall GetDay__r(int Index)
  {  return FDay__r;  }
  void __fastcall SetDay__r(int Index, Day__c_* _prop_val)
  {  FDay__r = _prop_val; FDay__r_Specified = true;  }
  bool __fastcall Day__r_Specified(int Index)
  {  return FDay__r_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  ID __fastcall GetKPI__c_(int Index)
  {  return FKPI__c_;  }
  void __fastcall SetKPI__c_(int Index, ID _prop_val)
  {  FKPI__c_ = _prop_val; FKPI__c__Specified = true;  }
  bool __fastcall KPI__c__Specified(int Index)
  {  return FKPI__c__Specified;  } 
  KPI__c_* __fastcall GetKPI__r(int Index)
  {  return FKPI__r;  }
  void __fastcall SetKPI__r(int Index, KPI__c_* _prop_val)
  {  FKPI__r = _prop_val; FKPI__r_Specified = true;  }
  bool __fastcall KPI__r_Specified(int Index)
  {  return FKPI__r_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  QueryResult* __fastcall GetNotes(int Index)
  {  return FNotes;  }
  void __fastcall SetNotes(int Index, QueryResult* _prop_val)
  {  FNotes = _prop_val; FNotes_Specified = true;  }
  bool __fastcall Notes_Specified(int Index)
  {  return FNotes_Specified;  } 
  QueryResult* __fastcall GetNotesAndAttachments(int Index)
  {  return FNotesAndAttachments;  }
  void __fastcall SetNotesAndAttachments(int Index, QueryResult* _prop_val)
  {  FNotesAndAttachments = _prop_val; FNotesAndAttachments_Specified = true;  }
  bool __fastcall NotesAndAttachments_Specified(int Index)
  {  return FNotesAndAttachments_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  RecordType* __fastcall GetRecordType(int Index)
  {  return FRecordType;  }
  void __fastcall SetRecordType(int Index, RecordType* _prop_val)
  {  FRecordType = _prop_val; FRecordType_Specified = true;  }
  bool __fastcall RecordType_Specified(int Index)
  {  return FRecordType_Specified;  } 
  ID __fastcall GetRecordTypeId(int Index)
  {  return FRecordTypeId;  }
  void __fastcall SetRecordTypeId(int Index, ID _prop_val)
  {  FRecordTypeId = _prop_val; FRecordTypeId_Specified = true;  }
  bool __fastcall RecordTypeId_Specified(int Index)
  {  return FRecordTypeId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  double __fastcall GetValue__c(int Index)
  {  return FValue__c;  }
  void __fastcall SetValue__c(int Index, double _prop_val)
  {  FValue__c = _prop_val; FValue__c_Specified = true;  }
  bool __fastcall Value__c_Specified(int Index)
  {  return FValue__c_Specified;  } 

public:
  __fastcall ~KPI_Value__c_();
__published:
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property ID             Day__c = { index=(IS_OPTN|IS_NLBL), read=FDay__c_, write=SetDay__c_, stored = Day__c__Specified };
  __property Day__c_*        Day__r = { index=(IS_OPTN|IS_NLBL), read=FDay__r, write=SetDay__r, stored = Day__r_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property ID             KPI__c = { index=(IS_OPTN|IS_NLBL), read=FKPI__c_, write=SetKPI__c_, stored = KPI__c__Specified };
  __property KPI__c_*        KPI__r = { index=(IS_OPTN|IS_NLBL), read=FKPI__r, write=SetKPI__r, stored = KPI__r_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property QueryResult*      Notes = { index=(IS_OPTN|IS_NLBL), read=FNotes, write=SetNotes, stored = Notes_Specified };
  __property QueryResult* NotesAndAttachments = { index=(IS_OPTN|IS_NLBL), read=FNotesAndAttachments, write=SetNotesAndAttachments, stored = NotesAndAttachments_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property RecordType* RecordType = { index=(IS_OPTN|IS_NLBL), read=FRecordType, write=SetRecordType, stored = RecordType_Specified };
  __property ID         RecordTypeId = { index=(IS_OPTN|IS_NLBL), read=FRecordTypeId, write=SetRecordTypeId, stored = RecordTypeId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property double       Value__c = { index=(IS_OPTN|IS_NLBL), read=FValue__c, write=SetValue__c, stored = Value__c_Specified };
};




// ************************************************************************ //
// XML       : IdeaComment, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class IdeaComment : public sObject {
private:
  UnicodeString   FCommentBody;
  bool            FCommentBody_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  Idea*           FIdea;
  bool            FIdea_Specified;
  ID              FIdeaId;
  bool            FIdeaId_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsHtml;
  bool            FIsHtml_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString __fastcall GetCommentBody(int Index)
  {  return FCommentBody;  }
  void __fastcall SetCommentBody(int Index, UnicodeString _prop_val)
  {  FCommentBody = _prop_val; FCommentBody_Specified = true;  }
  bool __fastcall CommentBody_Specified(int Index)
  {  return FCommentBody_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  Idea* __fastcall GetIdea(int Index)
  {  return FIdea;  }
  void __fastcall SetIdea(int Index, Idea* _prop_val)
  {  FIdea = _prop_val; FIdea_Specified = true;  }
  bool __fastcall Idea_Specified(int Index)
  {  return FIdea_Specified;  } 
  ID __fastcall GetIdeaId(int Index)
  {  return FIdeaId;  }
  void __fastcall SetIdeaId(int Index, ID _prop_val)
  {  FIdeaId = _prop_val; FIdeaId_Specified = true;  }
  bool __fastcall IdeaId_Specified(int Index)
  {  return FIdeaId_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsHtml(int Index)
  {  return FIsHtml;  }
  void __fastcall SetIsHtml(int Index, bool _prop_val)
  {  FIsHtml = _prop_val; FIsHtml_Specified = true;  }
  bool __fastcall IsHtml_Specified(int Index)
  {  return FIsHtml_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~IdeaComment();
__published:
  __property UnicodeString CommentBody = { index=(IS_OPTN|IS_NLBL), read=FCommentBody, write=SetCommentBody, stored = CommentBody_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property Idea*            Idea = { index=(IS_OPTN|IS_NLBL), read=FIdea, write=SetIdea, stored = Idea_Specified };
  __property ID             IdeaId = { index=(IS_OPTN|IS_NLBL), read=FIdeaId, write=SetIdeaId, stored = IdeaId_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool           IsHtml = { index=(IS_OPTN|IS_NLBL), read=FIsHtml, write=SetIsHtml, stored = IsHtml_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : Idea, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Idea : public sObject {
private:
  UnicodeString   FBody;
  bool            FBody_Specified;
  UnicodeString   FCategories;
  bool            FCategories_Specified;
  QueryResult*    FComments;
  bool            FComments_Specified;
  Community*      FCommunity;
  bool            FCommunity_Specified;
  ID              FCommunityId;
  bool            FCommunityId_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsHtml;
  bool            FIsHtml_Specified;
  bool            FIsLocked;
  bool            FIsLocked_Specified;
  IdeaComment*    FLastComment;
  bool            FLastComment_Specified;
  TXSDateTime*    FLastCommentDate;
  bool            FLastCommentDate_Specified;
  ID              FLastCommentId;
  bool            FLastCommentId_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FNumComments;
  bool            FNumComments_Specified;
  ID              FParentIdeaId;
  bool            FParentIdeaId_Specified;
  UnicodeString   FStatus;
  bool            FStatus_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  double          FVoteScore;
  bool            FVoteScore_Specified;
  double          FVoteTotal;
  bool            FVoteTotal_Specified;
  QueryResult*    FVotes;
  bool            FVotes_Specified;
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  UnicodeString __fastcall GetCategories(int Index)
  {  return FCategories;  }
  void __fastcall SetCategories(int Index, UnicodeString _prop_val)
  {  FCategories = _prop_val; FCategories_Specified = true;  }
  bool __fastcall Categories_Specified(int Index)
  {  return FCategories_Specified;  } 
  QueryResult* __fastcall GetComments(int Index)
  {  return FComments;  }
  void __fastcall SetComments(int Index, QueryResult* _prop_val)
  {  FComments = _prop_val; FComments_Specified = true;  }
  bool __fastcall Comments_Specified(int Index)
  {  return FComments_Specified;  } 
  Community* __fastcall GetCommunity(int Index)
  {  return FCommunity;  }
  void __fastcall SetCommunity(int Index, Community* _prop_val)
  {  FCommunity = _prop_val; FCommunity_Specified = true;  }
  bool __fastcall Community_Specified(int Index)
  {  return FCommunity_Specified;  } 
  ID __fastcall GetCommunityId(int Index)
  {  return FCommunityId;  }
  void __fastcall SetCommunityId(int Index, ID _prop_val)
  {  FCommunityId = _prop_val; FCommunityId_Specified = true;  }
  bool __fastcall CommunityId_Specified(int Index)
  {  return FCommunityId_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsHtml(int Index)
  {  return FIsHtml;  }
  void __fastcall SetIsHtml(int Index, bool _prop_val)
  {  FIsHtml = _prop_val; FIsHtml_Specified = true;  }
  bool __fastcall IsHtml_Specified(int Index)
  {  return FIsHtml_Specified;  } 
  bool __fastcall GetIsLocked(int Index)
  {  return FIsLocked;  }
  void __fastcall SetIsLocked(int Index, bool _prop_val)
  {  FIsLocked = _prop_val; FIsLocked_Specified = true;  }
  bool __fastcall IsLocked_Specified(int Index)
  {  return FIsLocked_Specified;  } 
  IdeaComment* __fastcall GetLastComment(int Index)
  {  return FLastComment;  }
  void __fastcall SetLastComment(int Index, IdeaComment* _prop_val)
  {  FLastComment = _prop_val; FLastComment_Specified = true;  }
  bool __fastcall LastComment_Specified(int Index)
  {  return FLastComment_Specified;  } 
  TXSDateTime* __fastcall GetLastCommentDate(int Index)
  {  return FLastCommentDate;  }
  void __fastcall SetLastCommentDate(int Index, TXSDateTime* _prop_val)
  {  FLastCommentDate = _prop_val; FLastCommentDate_Specified = true;  }
  bool __fastcall LastCommentDate_Specified(int Index)
  {  return FLastCommentDate_Specified;  } 
  ID __fastcall GetLastCommentId(int Index)
  {  return FLastCommentId;  }
  void __fastcall SetLastCommentId(int Index, ID _prop_val)
  {  FLastCommentId = _prop_val; FLastCommentId_Specified = true;  }
  bool __fastcall LastCommentId_Specified(int Index)
  {  return FLastCommentId_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetNumComments(int Index)
  {  return FNumComments;  }
  void __fastcall SetNumComments(int Index, int _prop_val)
  {  FNumComments = _prop_val; FNumComments_Specified = true;  }
  bool __fastcall NumComments_Specified(int Index)
  {  return FNumComments_Specified;  } 
  ID __fastcall GetParentIdeaId(int Index)
  {  return FParentIdeaId;  }
  void __fastcall SetParentIdeaId(int Index, ID _prop_val)
  {  FParentIdeaId = _prop_val; FParentIdeaId_Specified = true;  }
  bool __fastcall ParentIdeaId_Specified(int Index)
  {  return FParentIdeaId_Specified;  } 
  UnicodeString __fastcall GetStatus(int Index)
  {  return FStatus;  }
  void __fastcall SetStatus(int Index, UnicodeString _prop_val)
  {  FStatus = _prop_val; FStatus_Specified = true;  }
  bool __fastcall Status_Specified(int Index)
  {  return FStatus_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  double __fastcall GetVoteScore(int Index)
  {  return FVoteScore;  }
  void __fastcall SetVoteScore(int Index, double _prop_val)
  {  FVoteScore = _prop_val; FVoteScore_Specified = true;  }
  bool __fastcall VoteScore_Specified(int Index)
  {  return FVoteScore_Specified;  } 
  double __fastcall GetVoteTotal(int Index)
  {  return FVoteTotal;  }
  void __fastcall SetVoteTotal(int Index, double _prop_val)
  {  FVoteTotal = _prop_val; FVoteTotal_Specified = true;  }
  bool __fastcall VoteTotal_Specified(int Index)
  {  return FVoteTotal_Specified;  } 
  QueryResult* __fastcall GetVotes(int Index)
  {  return FVotes;  }
  void __fastcall SetVotes(int Index, QueryResult* _prop_val)
  {  FVotes = _prop_val; FVotes_Specified = true;  }
  bool __fastcall Votes_Specified(int Index)
  {  return FVotes_Specified;  } 

public:
  __fastcall ~Idea();
__published:
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property UnicodeString Categories = { index=(IS_OPTN|IS_NLBL), read=FCategories, write=SetCategories, stored = Categories_Specified };
  __property QueryResult*   Comments = { index=(IS_OPTN|IS_NLBL), read=FComments, write=SetComments, stored = Comments_Specified };
  __property Community*  Community = { index=(IS_OPTN|IS_NLBL), read=FCommunity, write=SetCommunity, stored = Community_Specified };
  __property ID         CommunityId = { index=(IS_OPTN|IS_NLBL), read=FCommunityId, write=SetCommunityId, stored = CommunityId_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool           IsHtml = { index=(IS_OPTN|IS_NLBL), read=FIsHtml, write=SetIsHtml, stored = IsHtml_Specified };
  __property bool         IsLocked = { index=(IS_OPTN|IS_NLBL), read=FIsLocked, write=SetIsLocked, stored = IsLocked_Specified };
  __property IdeaComment* LastComment = { index=(IS_OPTN|IS_NLBL), read=FLastComment, write=SetLastComment, stored = LastComment_Specified };
  __property TXSDateTime* LastCommentDate = { index=(IS_OPTN|IS_NLBL), read=FLastCommentDate, write=SetLastCommentDate, stored = LastCommentDate_Specified };
  __property ID         LastCommentId = { index=(IS_OPTN|IS_NLBL), read=FLastCommentId, write=SetLastCommentId, stored = LastCommentId_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int        NumComments = { index=(IS_OPTN|IS_NLBL), read=FNumComments, write=SetNumComments, stored = NumComments_Specified };
  __property ID         ParentIdeaId = { index=(IS_OPTN|IS_NLBL), read=FParentIdeaId, write=SetParentIdeaId, stored = ParentIdeaId_Specified };
  __property UnicodeString     Status = { index=(IS_OPTN|IS_NLBL), read=FStatus, write=SetStatus, stored = Status_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property double      VoteScore = { index=(IS_OPTN|IS_NLBL), read=FVoteScore, write=SetVoteScore, stored = VoteScore_Specified };
  __property double      VoteTotal = { index=(IS_OPTN|IS_NLBL), read=FVoteTotal, write=SetVoteTotal, stored = VoteTotal_Specified };
  __property QueryResult*      Votes = { index=(IS_OPTN|IS_NLBL), read=FVotes, write=SetVotes, stored = Votes_Specified };
};




// ************************************************************************ //
// XML       : IDEWorkspace, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class IDEWorkspace : public sObject {
private:
  UnicodeString   FContent;
  bool            FContent_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  User*           FUser;
  bool            FUser_Specified;
  ID              FUserId;
  bool            FUserId_Specified;
  UnicodeString __fastcall GetContent(int Index)
  {  return FContent;  }
  void __fastcall SetContent(int Index, UnicodeString _prop_val)
  {  FContent = _prop_val; FContent_Specified = true;  }
  bool __fastcall Content_Specified(int Index)
  {  return FContent_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  User* __fastcall GetUser(int Index)
  {  return FUser;  }
  void __fastcall SetUser(int Index, User* _prop_val)
  {  FUser = _prop_val; FUser_Specified = true;  }
  bool __fastcall User_Specified(int Index)
  {  return FUser_Specified;  } 
  ID __fastcall GetUserId(int Index)
  {  return FUserId;  }
  void __fastcall SetUserId(int Index, ID _prop_val)
  {  FUserId = _prop_val; FUserId_Specified = true;  }
  bool __fastcall UserId_Specified(int Index)
  {  return FUserId_Specified;  } 

public:
  __fastcall ~IDEWorkspace();
__published:
  __property UnicodeString    Content = { index=(IS_OPTN|IS_NLBL), read=FContent, write=SetContent, stored = Content_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property User*            User = { index=(IS_OPTN|IS_NLBL), read=FUser, write=SetUser, stored = User_Specified };
  __property ID             UserId = { index=(IS_OPTN|IS_NLBL), read=FUserId, write=SetUserId, stored = UserId_Specified };
};




// ************************************************************************ //
// XML       : IDEPerspective, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class IDEPerspective : public sObject {
private:
  UnicodeString   FContent;
  bool            FContent_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  User*           FUser;
  bool            FUser_Specified;
  ID              FUserId;
  bool            FUserId_Specified;
  UnicodeString __fastcall GetContent(int Index)
  {  return FContent;  }
  void __fastcall SetContent(int Index, UnicodeString _prop_val)
  {  FContent = _prop_val; FContent_Specified = true;  }
  bool __fastcall Content_Specified(int Index)
  {  return FContent_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  User* __fastcall GetUser(int Index)
  {  return FUser;  }
  void __fastcall SetUser(int Index, User* _prop_val)
  {  FUser = _prop_val; FUser_Specified = true;  }
  bool __fastcall User_Specified(int Index)
  {  return FUser_Specified;  } 
  ID __fastcall GetUserId(int Index)
  {  return FUserId;  }
  void __fastcall SetUserId(int Index, ID _prop_val)
  {  FUserId = _prop_val; FUserId_Specified = true;  }
  bool __fastcall UserId_Specified(int Index)
  {  return FUserId_Specified;  } 

public:
  __fastcall ~IDEPerspective();
__published:
  __property UnicodeString    Content = { index=(IS_OPTN|IS_NLBL), read=FContent, write=SetContent, stored = Content_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property User*            User = { index=(IS_OPTN|IS_NLBL), read=FUser, write=SetUser, stored = User_Specified };
  __property ID             UserId = { index=(IS_OPTN|IS_NLBL), read=FUserId, write=SetUserId, stored = UserId_Specified };
};




// ************************************************************************ //
// XML       : Holiday, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Holiday : public sObject {
private:
  TXSDate*        FActivityDate;
  bool            FActivityDate_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  int             FEndTimeInMinutes;
  bool            FEndTimeInMinutes_Specified;
  bool            FIsAllDay;
  bool            FIsAllDay_Specified;
  bool            FIsRecurrence;
  bool            FIsRecurrence_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  int             FRecurrenceDayOfMonth;
  bool            FRecurrenceDayOfMonth_Specified;
  int             FRecurrenceDayOfWeekMask;
  bool            FRecurrenceDayOfWeekMask_Specified;
  TXSDate*        FRecurrenceEndDateOnly;
  bool            FRecurrenceEndDateOnly_Specified;
  UnicodeString   FRecurrenceInstance;
  bool            FRecurrenceInstance_Specified;
  int             FRecurrenceInterval;
  bool            FRecurrenceInterval_Specified;
  UnicodeString   FRecurrenceMonthOfYear;
  bool            FRecurrenceMonthOfYear_Specified;
  TXSDate*        FRecurrenceStartDate;
  bool            FRecurrenceStartDate_Specified;
  UnicodeString   FRecurrenceType;
  bool            FRecurrenceType_Specified;
  int             FStartTimeInMinutes;
  bool            FStartTimeInMinutes_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  TXSDate* __fastcall GetActivityDate(int Index)
  {  return FActivityDate;  }
  void __fastcall SetActivityDate(int Index, TXSDate* _prop_val)
  {  FActivityDate = _prop_val; FActivityDate_Specified = true;  }
  bool __fastcall ActivityDate_Specified(int Index)
  {  return FActivityDate_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  int __fastcall GetEndTimeInMinutes(int Index)
  {  return FEndTimeInMinutes;  }
  void __fastcall SetEndTimeInMinutes(int Index, int _prop_val)
  {  FEndTimeInMinutes = _prop_val; FEndTimeInMinutes_Specified = true;  }
  bool __fastcall EndTimeInMinutes_Specified(int Index)
  {  return FEndTimeInMinutes_Specified;  } 
  bool __fastcall GetIsAllDay(int Index)
  {  return FIsAllDay;  }
  void __fastcall SetIsAllDay(int Index, bool _prop_val)
  {  FIsAllDay = _prop_val; FIsAllDay_Specified = true;  }
  bool __fastcall IsAllDay_Specified(int Index)
  {  return FIsAllDay_Specified;  } 
  bool __fastcall GetIsRecurrence(int Index)
  {  return FIsRecurrence;  }
  void __fastcall SetIsRecurrence(int Index, bool _prop_val)
  {  FIsRecurrence = _prop_val; FIsRecurrence_Specified = true;  }
  bool __fastcall IsRecurrence_Specified(int Index)
  {  return FIsRecurrence_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  int __fastcall GetRecurrenceDayOfMonth(int Index)
  {  return FRecurrenceDayOfMonth;  }
  void __fastcall SetRecurrenceDayOfMonth(int Index, int _prop_val)
  {  FRecurrenceDayOfMonth = _prop_val; FRecurrenceDayOfMonth_Specified = true;  }
  bool __fastcall RecurrenceDayOfMonth_Specified(int Index)
  {  return FRecurrenceDayOfMonth_Specified;  } 
  int __fastcall GetRecurrenceDayOfWeekMask(int Index)
  {  return FRecurrenceDayOfWeekMask;  }
  void __fastcall SetRecurrenceDayOfWeekMask(int Index, int _prop_val)
  {  FRecurrenceDayOfWeekMask = _prop_val; FRecurrenceDayOfWeekMask_Specified = true;  }
  bool __fastcall RecurrenceDayOfWeekMask_Specified(int Index)
  {  return FRecurrenceDayOfWeekMask_Specified;  } 
  TXSDate* __fastcall GetRecurrenceEndDateOnly(int Index)
  {  return FRecurrenceEndDateOnly;  }
  void __fastcall SetRecurrenceEndDateOnly(int Index, TXSDate* _prop_val)
  {  FRecurrenceEndDateOnly = _prop_val; FRecurrenceEndDateOnly_Specified = true;  }
  bool __fastcall RecurrenceEndDateOnly_Specified(int Index)
  {  return FRecurrenceEndDateOnly_Specified;  } 
  UnicodeString __fastcall GetRecurrenceInstance(int Index)
  {  return FRecurrenceInstance;  }
  void __fastcall SetRecurrenceInstance(int Index, UnicodeString _prop_val)
  {  FRecurrenceInstance = _prop_val; FRecurrenceInstance_Specified = true;  }
  bool __fastcall RecurrenceInstance_Specified(int Index)
  {  return FRecurrenceInstance_Specified;  } 
  int __fastcall GetRecurrenceInterval(int Index)
  {  return FRecurrenceInterval;  }
  void __fastcall SetRecurrenceInterval(int Index, int _prop_val)
  {  FRecurrenceInterval = _prop_val; FRecurrenceInterval_Specified = true;  }
  bool __fastcall RecurrenceInterval_Specified(int Index)
  {  return FRecurrenceInterval_Specified;  } 
  UnicodeString __fastcall GetRecurrenceMonthOfYear(int Index)
  {  return FRecurrenceMonthOfYear;  }
  void __fastcall SetRecurrenceMonthOfYear(int Index, UnicodeString _prop_val)
  {  FRecurrenceMonthOfYear = _prop_val; FRecurrenceMonthOfYear_Specified = true;  }
  bool __fastcall RecurrenceMonthOfYear_Specified(int Index)
  {  return FRecurrenceMonthOfYear_Specified;  } 
  TXSDate* __fastcall GetRecurrenceStartDate(int Index)
  {  return FRecurrenceStartDate;  }
  void __fastcall SetRecurrenceStartDate(int Index, TXSDate* _prop_val)
  {  FRecurrenceStartDate = _prop_val; FRecurrenceStartDate_Specified = true;  }
  bool __fastcall RecurrenceStartDate_Specified(int Index)
  {  return FRecurrenceStartDate_Specified;  } 
  UnicodeString __fastcall GetRecurrenceType(int Index)
  {  return FRecurrenceType;  }
  void __fastcall SetRecurrenceType(int Index, UnicodeString _prop_val)
  {  FRecurrenceType = _prop_val; FRecurrenceType_Specified = true;  }
  bool __fastcall RecurrenceType_Specified(int Index)
  {  return FRecurrenceType_Specified;  } 
  int __fastcall GetStartTimeInMinutes(int Index)
  {  return FStartTimeInMinutes;  }
  void __fastcall SetStartTimeInMinutes(int Index, int _prop_val)
  {  FStartTimeInMinutes = _prop_val; FStartTimeInMinutes_Specified = true;  }
  bool __fastcall StartTimeInMinutes_Specified(int Index)
  {  return FStartTimeInMinutes_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~Holiday();
__published:
  __property TXSDate*   ActivityDate = { index=(IS_OPTN|IS_NLBL), read=FActivityDate, write=SetActivityDate, stored = ActivityDate_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property int        EndTimeInMinutes = { index=(IS_OPTN|IS_NLBL), read=FEndTimeInMinutes, write=SetEndTimeInMinutes, stored = EndTimeInMinutes_Specified };
  __property bool         IsAllDay = { index=(IS_OPTN|IS_NLBL), read=FIsAllDay, write=SetIsAllDay, stored = IsAllDay_Specified };
  __property bool       IsRecurrence = { index=(IS_OPTN|IS_NLBL), read=FIsRecurrence, write=SetIsRecurrence, stored = IsRecurrence_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property int        RecurrenceDayOfMonth = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceDayOfMonth, write=SetRecurrenceDayOfMonth, stored = RecurrenceDayOfMonth_Specified };
  __property int        RecurrenceDayOfWeekMask = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceDayOfWeekMask, write=SetRecurrenceDayOfWeekMask, stored = RecurrenceDayOfWeekMask_Specified };
  __property TXSDate*   RecurrenceEndDateOnly = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceEndDateOnly, write=SetRecurrenceEndDateOnly, stored = RecurrenceEndDateOnly_Specified };
  __property UnicodeString RecurrenceInstance = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceInstance, write=SetRecurrenceInstance, stored = RecurrenceInstance_Specified };
  __property int        RecurrenceInterval = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceInterval, write=SetRecurrenceInterval, stored = RecurrenceInterval_Specified };
  __property UnicodeString RecurrenceMonthOfYear = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceMonthOfYear, write=SetRecurrenceMonthOfYear, stored = RecurrenceMonthOfYear_Specified };
  __property TXSDate*   RecurrenceStartDate = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceStartDate, write=SetRecurrenceStartDate, stored = RecurrenceStartDate_Specified };
  __property UnicodeString RecurrenceType = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceType, write=SetRecurrenceType, stored = RecurrenceType_Specified };
  __property int        StartTimeInMinutes = { index=(IS_OPTN|IS_NLBL), read=FStartTimeInMinutes, write=SetStartTimeInMinutes, stored = StartTimeInMinutes_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : GroupMember, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class GroupMember : public sObject {
private:
  Group*          FGroup;
  bool            FGroup_Specified;
  ID              FGroupId;
  bool            FGroupId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  ID              FUserOrGroupId;
  bool            FUserOrGroupId_Specified;
  Group* __fastcall GetGroup(int Index)
  {  return FGroup;  }
  void __fastcall SetGroup(int Index, Group* _prop_val)
  {  FGroup = _prop_val; FGroup_Specified = true;  }
  bool __fastcall Group_Specified(int Index)
  {  return FGroup_Specified;  } 
  ID __fastcall GetGroupId(int Index)
  {  return FGroupId;  }
  void __fastcall SetGroupId(int Index, ID _prop_val)
  {  FGroupId = _prop_val; FGroupId_Specified = true;  }
  bool __fastcall GroupId_Specified(int Index)
  {  return FGroupId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  ID __fastcall GetUserOrGroupId(int Index)
  {  return FUserOrGroupId;  }
  void __fastcall SetUserOrGroupId(int Index, ID _prop_val)
  {  FUserOrGroupId = _prop_val; FUserOrGroupId_Specified = true;  }
  bool __fastcall UserOrGroupId_Specified(int Index)
  {  return FUserOrGroupId_Specified;  } 

public:
  __fastcall ~GroupMember();
__published:
  __property Group*          Group = { index=(IS_OPTN|IS_NLBL), read=FGroup, write=SetGroup, stored = Group_Specified };
  __property ID            GroupId = { index=(IS_OPTN|IS_NLBL), read=FGroupId, write=SetGroupId, stored = GroupId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property ID         UserOrGroupId = { index=(IS_OPTN|IS_NLBL), read=FUserOrGroupId, write=SetUserOrGroupId, stored = UserOrGroupId_Specified };
};




// ************************************************************************ //
// XML       : Group, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Group : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FDelegatedUsers;
  bool            FDelegatedUsers_Specified;
  UnicodeString   FDeveloperName;
  bool            FDeveloperName_Specified;
  bool            FDoesIncludeBosses;
  bool            FDoesIncludeBosses_Specified;
  bool            FDoesSendEmailToMembers;
  bool            FDoesSendEmailToMembers_Specified;
  UnicodeString   FEmail;
  bool            FEmail_Specified;
  QueryResult*    FGroupMembers;
  bool            FGroupMembers_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  Name_*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  QueryResult*    FQueueSobjects;
  bool            FQueueSobjects_Specified;
  ID              FRelatedId;
  bool            FRelatedId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetDelegatedUsers(int Index)
  {  return FDelegatedUsers;  }
  void __fastcall SetDelegatedUsers(int Index, QueryResult* _prop_val)
  {  FDelegatedUsers = _prop_val; FDelegatedUsers_Specified = true;  }
  bool __fastcall DelegatedUsers_Specified(int Index)
  {  return FDelegatedUsers_Specified;  } 
  UnicodeString __fastcall GetDeveloperName(int Index)
  {  return FDeveloperName;  }
  void __fastcall SetDeveloperName(int Index, UnicodeString _prop_val)
  {  FDeveloperName = _prop_val; FDeveloperName_Specified = true;  }
  bool __fastcall DeveloperName_Specified(int Index)
  {  return FDeveloperName_Specified;  } 
  bool __fastcall GetDoesIncludeBosses(int Index)
  {  return FDoesIncludeBosses;  }
  void __fastcall SetDoesIncludeBosses(int Index, bool _prop_val)
  {  FDoesIncludeBosses = _prop_val; FDoesIncludeBosses_Specified = true;  }
  bool __fastcall DoesIncludeBosses_Specified(int Index)
  {  return FDoesIncludeBosses_Specified;  } 
  bool __fastcall GetDoesSendEmailToMembers(int Index)
  {  return FDoesSendEmailToMembers;  }
  void __fastcall SetDoesSendEmailToMembers(int Index, bool _prop_val)
  {  FDoesSendEmailToMembers = _prop_val; FDoesSendEmailToMembers_Specified = true;  }
  bool __fastcall DoesSendEmailToMembers_Specified(int Index)
  {  return FDoesSendEmailToMembers_Specified;  } 
  UnicodeString __fastcall GetEmail(int Index)
  {  return FEmail;  }
  void __fastcall SetEmail(int Index, UnicodeString _prop_val)
  {  FEmail = _prop_val; FEmail_Specified = true;  }
  bool __fastcall Email_Specified(int Index)
  {  return FEmail_Specified;  } 
  QueryResult* __fastcall GetGroupMembers(int Index)
  {  return FGroupMembers;  }
  void __fastcall SetGroupMembers(int Index, QueryResult* _prop_val)
  {  FGroupMembers = _prop_val; FGroupMembers_Specified = true;  }
  bool __fastcall GroupMembers_Specified(int Index)
  {  return FGroupMembers_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  Name_* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, Name_* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  QueryResult* __fastcall GetQueueSobjects(int Index)
  {  return FQueueSobjects;  }
  void __fastcall SetQueueSobjects(int Index, QueryResult* _prop_val)
  {  FQueueSobjects = _prop_val; FQueueSobjects_Specified = true;  }
  bool __fastcall QueueSobjects_Specified(int Index)
  {  return FQueueSobjects_Specified;  } 
  ID __fastcall GetRelatedId(int Index)
  {  return FRelatedId;  }
  void __fastcall SetRelatedId(int Index, ID _prop_val)
  {  FRelatedId = _prop_val; FRelatedId_Specified = true;  }
  bool __fastcall RelatedId_Specified(int Index)
  {  return FRelatedId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~Group();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* DelegatedUsers = { index=(IS_OPTN|IS_NLBL), read=FDelegatedUsers, write=SetDelegatedUsers, stored = DelegatedUsers_Specified };
  __property UnicodeString DeveloperName = { index=(IS_OPTN|IS_NLBL), read=FDeveloperName, write=SetDeveloperName, stored = DeveloperName_Specified };
  __property bool       DoesIncludeBosses = { index=(IS_OPTN|IS_NLBL), read=FDoesIncludeBosses, write=SetDoesIncludeBosses, stored = DoesIncludeBosses_Specified };
  __property bool       DoesSendEmailToMembers = { index=(IS_OPTN|IS_NLBL), read=FDoesSendEmailToMembers, write=SetDoesSendEmailToMembers, stored = DoesSendEmailToMembers_Specified };
  __property UnicodeString      Email = { index=(IS_OPTN|IS_NLBL), read=FEmail, write=SetEmail, stored = Email_Specified };
  __property QueryResult* GroupMembers = { index=(IS_OPTN|IS_NLBL), read=FGroupMembers, write=SetGroupMembers, stored = GroupMembers_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property Name_*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property QueryResult* QueueSobjects = { index=(IS_OPTN|IS_NLBL), read=FQueueSobjects, write=SetQueueSobjects, stored = QueueSobjects_Specified };
  __property ID          RelatedId = { index=(IS_OPTN|IS_NLBL), read=FRelatedId, write=SetRelatedId, stored = RelatedId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : ForecastingQuota, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ForecastingQuota : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  ID              FPeriodId;
  bool            FPeriodId_Specified;
  double          FQuotaAmount;
  bool            FQuotaAmount_Specified;
  User*           FQuotaOwner;
  bool            FQuotaOwner_Specified;
  ID              FQuotaOwnerId;
  bool            FQuotaOwnerId_Specified;
  TXSDate*        FStartDate;
  bool            FStartDate_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  ID __fastcall GetPeriodId(int Index)
  {  return FPeriodId;  }
  void __fastcall SetPeriodId(int Index, ID _prop_val)
  {  FPeriodId = _prop_val; FPeriodId_Specified = true;  }
  bool __fastcall PeriodId_Specified(int Index)
  {  return FPeriodId_Specified;  } 
  double __fastcall GetQuotaAmount(int Index)
  {  return FQuotaAmount;  }
  void __fastcall SetQuotaAmount(int Index, double _prop_val)
  {  FQuotaAmount = _prop_val; FQuotaAmount_Specified = true;  }
  bool __fastcall QuotaAmount_Specified(int Index)
  {  return FQuotaAmount_Specified;  } 
  User* __fastcall GetQuotaOwner(int Index)
  {  return FQuotaOwner;  }
  void __fastcall SetQuotaOwner(int Index, User* _prop_val)
  {  FQuotaOwner = _prop_val; FQuotaOwner_Specified = true;  }
  bool __fastcall QuotaOwner_Specified(int Index)
  {  return FQuotaOwner_Specified;  } 
  ID __fastcall GetQuotaOwnerId(int Index)
  {  return FQuotaOwnerId;  }
  void __fastcall SetQuotaOwnerId(int Index, ID _prop_val)
  {  FQuotaOwnerId = _prop_val; FQuotaOwnerId_Specified = true;  }
  bool __fastcall QuotaOwnerId_Specified(int Index)
  {  return FQuotaOwnerId_Specified;  } 
  TXSDate* __fastcall GetStartDate(int Index)
  {  return FStartDate;  }
  void __fastcall SetStartDate(int Index, TXSDate* _prop_val)
  {  FStartDate = _prop_val; FStartDate_Specified = true;  }
  bool __fastcall StartDate_Specified(int Index)
  {  return FStartDate_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~ForecastingQuota();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property ID           PeriodId = { index=(IS_OPTN|IS_NLBL), read=FPeriodId, write=SetPeriodId, stored = PeriodId_Specified };
  __property double     QuotaAmount = { index=(IS_OPTN|IS_NLBL), read=FQuotaAmount, write=SetQuotaAmount, stored = QuotaAmount_Specified };
  __property User*      QuotaOwner = { index=(IS_OPTN|IS_NLBL), read=FQuotaOwner, write=SetQuotaOwner, stored = QuotaOwner_Specified };
  __property ID         QuotaOwnerId = { index=(IS_OPTN|IS_NLBL), read=FQuotaOwnerId, write=SetQuotaOwnerId, stored = QuotaOwnerId_Specified };
  __property TXSDate*    StartDate = { index=(IS_OPTN|IS_NLBL), read=FStartDate, write=SetStartDate, stored = StartDate_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : ForecastShare, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ForecastShare : public sObject {
private:
  UnicodeString   FAccessLevel;
  bool            FAccessLevel_Specified;
  bool            FCanSubmit;
  bool            FCanSubmit_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FRowCause;
  bool            FRowCause_Specified;
  ID              FUserOrGroupId;
  bool            FUserOrGroupId_Specified;
  ID              FUserRoleId;
  bool            FUserRoleId_Specified;
  UnicodeString __fastcall GetAccessLevel(int Index)
  {  return FAccessLevel;  }
  void __fastcall SetAccessLevel(int Index, UnicodeString _prop_val)
  {  FAccessLevel = _prop_val; FAccessLevel_Specified = true;  }
  bool __fastcall AccessLevel_Specified(int Index)
  {  return FAccessLevel_Specified;  } 
  bool __fastcall GetCanSubmit(int Index)
  {  return FCanSubmit;  }
  void __fastcall SetCanSubmit(int Index, bool _prop_val)
  {  FCanSubmit = _prop_val; FCanSubmit_Specified = true;  }
  bool __fastcall CanSubmit_Specified(int Index)
  {  return FCanSubmit_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetRowCause(int Index)
  {  return FRowCause;  }
  void __fastcall SetRowCause(int Index, UnicodeString _prop_val)
  {  FRowCause = _prop_val; FRowCause_Specified = true;  }
  bool __fastcall RowCause_Specified(int Index)
  {  return FRowCause_Specified;  } 
  ID __fastcall GetUserOrGroupId(int Index)
  {  return FUserOrGroupId;  }
  void __fastcall SetUserOrGroupId(int Index, ID _prop_val)
  {  FUserOrGroupId = _prop_val; FUserOrGroupId_Specified = true;  }
  bool __fastcall UserOrGroupId_Specified(int Index)
  {  return FUserOrGroupId_Specified;  } 
  ID __fastcall GetUserRoleId(int Index)
  {  return FUserRoleId;  }
  void __fastcall SetUserRoleId(int Index, ID _prop_val)
  {  FUserRoleId = _prop_val; FUserRoleId_Specified = true;  }
  bool __fastcall UserRoleId_Specified(int Index)
  {  return FUserRoleId_Specified;  } 

public:
  __fastcall ~ForecastShare();
__published:
  __property UnicodeString AccessLevel = { index=(IS_OPTN|IS_NLBL), read=FAccessLevel, write=SetAccessLevel, stored = AccessLevel_Specified };
  __property bool        CanSubmit = { index=(IS_OPTN|IS_NLBL), read=FCanSubmit, write=SetCanSubmit, stored = CanSubmit_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString   RowCause = { index=(IS_OPTN|IS_NLBL), read=FRowCause, write=SetRowCause, stored = RowCause_Specified };
  __property ID         UserOrGroupId = { index=(IS_OPTN|IS_NLBL), read=FUserOrGroupId, write=SetUserOrGroupId, stored = UserOrGroupId_Specified };
  __property ID         UserRoleId = { index=(IS_OPTN|IS_NLBL), read=FUserRoleId, write=SetUserRoleId, stored = UserRoleId_Specified };
};




// ************************************************************************ //
// XML       : FiscalYearSettings, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class FiscalYearSettings : public sObject {
private:
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  TXSDate*        FEndDate;
  bool            FEndDate_Specified;
  bool            FIsStandardYear;
  bool            FIsStandardYear_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  ID              FPeriodId;
  bool            FPeriodId_Specified;
  UnicodeString   FPeriodLabelScheme;
  bool            FPeriodLabelScheme_Specified;
  UnicodeString   FPeriodPrefix;
  bool            FPeriodPrefix_Specified;
  QueryResult*    FPeriods;
  bool            FPeriods_Specified;
  UnicodeString   FQuarterLabelScheme;
  bool            FQuarterLabelScheme_Specified;
  UnicodeString   FQuarterPrefix;
  bool            FQuarterPrefix_Specified;
  TXSDate*        FStartDate;
  bool            FStartDate_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FWeekLabelScheme;
  bool            FWeekLabelScheme_Specified;
  int             FWeekStartDay;
  bool            FWeekStartDay_Specified;
  UnicodeString   FYearType;
  bool            FYearType_Specified;
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  TXSDate* __fastcall GetEndDate(int Index)
  {  return FEndDate;  }
  void __fastcall SetEndDate(int Index, TXSDate* _prop_val)
  {  FEndDate = _prop_val; FEndDate_Specified = true;  }
  bool __fastcall EndDate_Specified(int Index)
  {  return FEndDate_Specified;  } 
  bool __fastcall GetIsStandardYear(int Index)
  {  return FIsStandardYear;  }
  void __fastcall SetIsStandardYear(int Index, bool _prop_val)
  {  FIsStandardYear = _prop_val; FIsStandardYear_Specified = true;  }
  bool __fastcall IsStandardYear_Specified(int Index)
  {  return FIsStandardYear_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  ID __fastcall GetPeriodId(int Index)
  {  return FPeriodId;  }
  void __fastcall SetPeriodId(int Index, ID _prop_val)
  {  FPeriodId = _prop_val; FPeriodId_Specified = true;  }
  bool __fastcall PeriodId_Specified(int Index)
  {  return FPeriodId_Specified;  } 
  UnicodeString __fastcall GetPeriodLabelScheme(int Index)
  {  return FPeriodLabelScheme;  }
  void __fastcall SetPeriodLabelScheme(int Index, UnicodeString _prop_val)
  {  FPeriodLabelScheme = _prop_val; FPeriodLabelScheme_Specified = true;  }
  bool __fastcall PeriodLabelScheme_Specified(int Index)
  {  return FPeriodLabelScheme_Specified;  } 
  UnicodeString __fastcall GetPeriodPrefix(int Index)
  {  return FPeriodPrefix;  }
  void __fastcall SetPeriodPrefix(int Index, UnicodeString _prop_val)
  {  FPeriodPrefix = _prop_val; FPeriodPrefix_Specified = true;  }
  bool __fastcall PeriodPrefix_Specified(int Index)
  {  return FPeriodPrefix_Specified;  } 
  QueryResult* __fastcall GetPeriods(int Index)
  {  return FPeriods;  }
  void __fastcall SetPeriods(int Index, QueryResult* _prop_val)
  {  FPeriods = _prop_val; FPeriods_Specified = true;  }
  bool __fastcall Periods_Specified(int Index)
  {  return FPeriods_Specified;  } 
  UnicodeString __fastcall GetQuarterLabelScheme(int Index)
  {  return FQuarterLabelScheme;  }
  void __fastcall SetQuarterLabelScheme(int Index, UnicodeString _prop_val)
  {  FQuarterLabelScheme = _prop_val; FQuarterLabelScheme_Specified = true;  }
  bool __fastcall QuarterLabelScheme_Specified(int Index)
  {  return FQuarterLabelScheme_Specified;  } 
  UnicodeString __fastcall GetQuarterPrefix(int Index)
  {  return FQuarterPrefix;  }
  void __fastcall SetQuarterPrefix(int Index, UnicodeString _prop_val)
  {  FQuarterPrefix = _prop_val; FQuarterPrefix_Specified = true;  }
  bool __fastcall QuarterPrefix_Specified(int Index)
  {  return FQuarterPrefix_Specified;  } 
  TXSDate* __fastcall GetStartDate(int Index)
  {  return FStartDate;  }
  void __fastcall SetStartDate(int Index, TXSDate* _prop_val)
  {  FStartDate = _prop_val; FStartDate_Specified = true;  }
  bool __fastcall StartDate_Specified(int Index)
  {  return FStartDate_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetWeekLabelScheme(int Index)
  {  return FWeekLabelScheme;  }
  void __fastcall SetWeekLabelScheme(int Index, UnicodeString _prop_val)
  {  FWeekLabelScheme = _prop_val; FWeekLabelScheme_Specified = true;  }
  bool __fastcall WeekLabelScheme_Specified(int Index)
  {  return FWeekLabelScheme_Specified;  } 
  int __fastcall GetWeekStartDay(int Index)
  {  return FWeekStartDay;  }
  void __fastcall SetWeekStartDay(int Index, int _prop_val)
  {  FWeekStartDay = _prop_val; FWeekStartDay_Specified = true;  }
  bool __fastcall WeekStartDay_Specified(int Index)
  {  return FWeekStartDay_Specified;  } 
  UnicodeString __fastcall GetYearType(int Index)
  {  return FYearType;  }
  void __fastcall SetYearType(int Index, UnicodeString _prop_val)
  {  FYearType = _prop_val; FYearType_Specified = true;  }
  bool __fastcall YearType_Specified(int Index)
  {  return FYearType_Specified;  } 

public:
  __fastcall ~FiscalYearSettings();
__published:
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property TXSDate*      EndDate = { index=(IS_OPTN|IS_NLBL), read=FEndDate, write=SetEndDate, stored = EndDate_Specified };
  __property bool       IsStandardYear = { index=(IS_OPTN|IS_NLBL), read=FIsStandardYear, write=SetIsStandardYear, stored = IsStandardYear_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property ID           PeriodId = { index=(IS_OPTN|IS_NLBL), read=FPeriodId, write=SetPeriodId, stored = PeriodId_Specified };
  __property UnicodeString PeriodLabelScheme = { index=(IS_OPTN|IS_NLBL), read=FPeriodLabelScheme, write=SetPeriodLabelScheme, stored = PeriodLabelScheme_Specified };
  __property UnicodeString PeriodPrefix = { index=(IS_OPTN|IS_NLBL), read=FPeriodPrefix, write=SetPeriodPrefix, stored = PeriodPrefix_Specified };
  __property QueryResult*    Periods = { index=(IS_OPTN|IS_NLBL), read=FPeriods, write=SetPeriods, stored = Periods_Specified };
  __property UnicodeString QuarterLabelScheme = { index=(IS_OPTN|IS_NLBL), read=FQuarterLabelScheme, write=SetQuarterLabelScheme, stored = QuarterLabelScheme_Specified };
  __property UnicodeString QuarterPrefix = { index=(IS_OPTN|IS_NLBL), read=FQuarterPrefix, write=SetQuarterPrefix, stored = QuarterPrefix_Specified };
  __property TXSDate*    StartDate = { index=(IS_OPTN|IS_NLBL), read=FStartDate, write=SetStartDate, stored = StartDate_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString WeekLabelScheme = { index=(IS_OPTN|IS_NLBL), read=FWeekLabelScheme, write=SetWeekLabelScheme, stored = WeekLabelScheme_Specified };
  __property int        WeekStartDay = { index=(IS_OPTN|IS_NLBL), read=FWeekStartDay, write=SetWeekStartDay, stored = WeekStartDay_Specified };
  __property UnicodeString   YearType = { index=(IS_OPTN|IS_NLBL), read=FYearType, write=SetYearType, stored = YearType_Specified };
};




// ************************************************************************ //
// XML       : PermissionSet, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class PermissionSet : public sObject {
private:
  QueryResult*    FAssignments;
  bool            FAssignments_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  QueryResult*    FFieldPerms;
  bool            FFieldPerms_Specified;
  bool            FIsOwnedByProfile;
  bool            FIsOwnedByProfile_Specified;
  UnicodeString   FLabel;
  bool            FLabel_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  UnicodeString   FNamespacePrefix;
  bool            FNamespacePrefix_Specified;
  QueryResult*    FObjectPerms;
  bool            FObjectPerms_Specified;
  bool            FPermissionsApiEnabled;
  bool            FPermissionsApiEnabled_Specified;
  bool            FPermissionsApiUserOnly;
  bool            FPermissionsApiUserOnly_Specified;
  bool            FPermissionsAuthorApex;
  bool            FPermissionsAuthorApex_Specified;
  bool            FPermissionsBulkApiHardDelete;
  bool            FPermissionsBulkApiHardDelete_Specified;
  bool            FPermissionsCanInsertFeedSystemFields;
  bool            FPermissionsCanInsertFeedSystemFields_Specified;
  bool            FPermissionsCanUseNewDashboardBuilder;
  bool            FPermissionsCanUseNewDashboardBuilder_Specified;
  bool            FPermissionsChatterFileLink;
  bool            FPermissionsChatterFileLink_Specified;
  bool            FPermissionsConvertLeads;
  bool            FPermissionsConvertLeads_Specified;
  bool            FPermissionsCreatePackaging;
  bool            FPermissionsCreatePackaging_Specified;
  bool            FPermissionsCustomSidebarOnAllPages;
  bool            FPermissionsCustomSidebarOnAllPages_Specified;
  bool            FPermissionsCustomizeApplication;
  bool            FPermissionsCustomizeApplication_Specified;
  bool            FPermissionsDistributeFromPersWksp;
  bool            FPermissionsDistributeFromPersWksp_Specified;
  bool            FPermissionsEditCaseComments;
  bool            FPermissionsEditCaseComments_Specified;
  bool            FPermissionsEditEvent;
  bool            FPermissionsEditEvent_Specified;
  bool            FPermissionsEditOppLineItemUnitPrice;
  bool            FPermissionsEditOppLineItemUnitPrice_Specified;
  bool            FPermissionsEditPublicDocuments;
  bool            FPermissionsEditPublicDocuments_Specified;
  bool            FPermissionsEditReadonlyFields;
  bool            FPermissionsEditReadonlyFields_Specified;
  bool            FPermissionsEditReports;
  bool            FPermissionsEditReports_Specified;
  bool            FPermissionsEditTask;
  bool            FPermissionsEditTask_Specified;
  bool            FPermissionsEmailAdministration;
  bool            FPermissionsEmailAdministration_Specified;
  bool            FPermissionsEmailTemplateManagement;
  bool            FPermissionsEmailTemplateManagement_Specified;
  bool            FPermissionsEnableNotifications;
  bool            FPermissionsEnableNotifications_Specified;
  bool            FPermissionsFlowUFLRequired;
  bool            FPermissionsFlowUFLRequired_Specified;
  bool            FPermissionsImportLeads;
  bool            FPermissionsImportLeads_Specified;
  bool            FPermissionsInboundMigrationToolsUser;
  bool            FPermissionsInboundMigrationToolsUser_Specified;
  bool            FPermissionsInstallPackaging;
  bool            FPermissionsInstallPackaging_Specified;
  bool            FPermissionsManageAnalyticSnapshots;
  bool            FPermissionsManageAnalyticSnapshots_Specified;
  bool            FPermissionsManageAuthProviders;
  bool            FPermissionsManageAuthProviders_Specified;
  bool            FPermissionsManageBusinessHourHolidays;
  bool            FPermissionsManageBusinessHourHolidays_Specified;
  bool            FPermissionsManageCallCenters;
  bool            FPermissionsManageCallCenters_Specified;
  bool            FPermissionsManageCases;
  bool            FPermissionsManageCases_Specified;
  bool            FPermissionsManageCategories;
  bool            FPermissionsManageCategories_Specified;
  bool            FPermissionsManageChatterMessages;
  bool            FPermissionsManageChatterMessages_Specified;
  bool            FPermissionsManageCssUsers;
  bool            FPermissionsManageCssUsers_Specified;
  bool            FPermissionsManageCustomReportTypes;
  bool            FPermissionsManageCustomReportTypes_Specified;
  bool            FPermissionsManageDashboards;
  bool            FPermissionsManageDashboards_Specified;
  bool            FPermissionsManageDataCategories;
  bool            FPermissionsManageDataCategories_Specified;
  bool            FPermissionsManageDataIntegrations;
  bool            FPermissionsManageDataIntegrations_Specified;
  bool            FPermissionsManageEmailClientConfig;
  bool            FPermissionsManageEmailClientConfig_Specified;
  bool            FPermissionsManageInteraction;
  bool            FPermissionsManageInteraction_Specified;
  bool            FPermissionsManageLeads;
  bool            FPermissionsManageLeads_Specified;
  bool            FPermissionsManageMobile;
  bool            FPermissionsManageMobile_Specified;
  bool            FPermissionsManageRemoteAccess;
  bool            FPermissionsManageRemoteAccess_Specified;
  bool            FPermissionsManageSelfService;
  bool            FPermissionsManageSelfService_Specified;
  bool            FPermissionsManageSolutions;
  bool            FPermissionsManageSolutions_Specified;
  bool            FPermissionsManageUsers;
  bool            FPermissionsManageUsers_Specified;
  bool            FPermissionsMassInlineEdit;
  bool            FPermissionsMassInlineEdit_Specified;
  bool            FPermissionsModifyAllData;
  bool            FPermissionsModifyAllData_Specified;
  bool            FPermissionsNewReportBuilder;
  bool            FPermissionsNewReportBuilder_Specified;
  bool            FPermissionsOutboundMigrationToolsUser;
  bool            FPermissionsOutboundMigrationToolsUser_Specified;
  bool            FPermissionsPasswordNeverExpires;
  bool            FPermissionsPasswordNeverExpires_Specified;
  bool            FPermissionsPublishPackaging;
  bool            FPermissionsPublishPackaging_Specified;
  bool            FPermissionsResetPasswords;
  bool            FPermissionsResetPasswords_Specified;
  bool            FPermissionsRunFlow;
  bool            FPermissionsRunFlow_Specified;
  bool            FPermissionsRunReports;
  bool            FPermissionsRunReports_Specified;
  bool            FPermissionsScheduleJob;
  bool            FPermissionsScheduleJob_Specified;
  bool            FPermissionsScheduleReports;
  bool            FPermissionsScheduleReports_Specified;
  bool            FPermissionsSendSitRequests;
  bool            FPermissionsSendSitRequests_Specified;
  bool            FPermissionsSolutionImport;
  bool            FPermissionsSolutionImport_Specified;
  bool            FPermissionsTransferAnyCase;
  bool            FPermissionsTransferAnyCase_Specified;
  bool            FPermissionsTransferAnyEntity;
  bool            FPermissionsTransferAnyEntity_Specified;
  bool            FPermissionsTransferAnyLead;
  bool            FPermissionsTransferAnyLead_Specified;
  bool            FPermissionsUseTeamReassignWizards;
  bool            FPermissionsUseTeamReassignWizards_Specified;
  bool            FPermissionsViewAllData;
  bool            FPermissionsViewAllData_Specified;
  bool            FPermissionsViewDataCategories;
  bool            FPermissionsViewDataCategories_Specified;
  bool            FPermissionsViewMyTeamsDashboards;
  bool            FPermissionsViewMyTeamsDashboards_Specified;
  bool            FPermissionsViewSetup;
  bool            FPermissionsViewSetup_Specified;
  Profile*        FProfile;
  bool            FProfile_Specified;
  ID              FProfileId;
  bool            FProfileId_Specified;
  QueryResult*    FSetupEntityAccessItems;
  bool            FSetupEntityAccessItems_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UserLicense*    FUserLicense;
  bool            FUserLicense_Specified;
  ID              FUserLicenseId;
  bool            FUserLicenseId_Specified;
  QueryResult* __fastcall GetAssignments(int Index)
  {  return FAssignments;  }
  void __fastcall SetAssignments(int Index, QueryResult* _prop_val)
  {  FAssignments = _prop_val; FAssignments_Specified = true;  }
  bool __fastcall Assignments_Specified(int Index)
  {  return FAssignments_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  QueryResult* __fastcall GetFieldPerms(int Index)
  {  return FFieldPerms;  }
  void __fastcall SetFieldPerms(int Index, QueryResult* _prop_val)
  {  FFieldPerms = _prop_val; FFieldPerms_Specified = true;  }
  bool __fastcall FieldPerms_Specified(int Index)
  {  return FFieldPerms_Specified;  } 
  bool __fastcall GetIsOwnedByProfile(int Index)
  {  return FIsOwnedByProfile;  }
  void __fastcall SetIsOwnedByProfile(int Index, bool _prop_val)
  {  FIsOwnedByProfile = _prop_val; FIsOwnedByProfile_Specified = true;  }
  bool __fastcall IsOwnedByProfile_Specified(int Index)
  {  return FIsOwnedByProfile_Specified;  } 
  UnicodeString __fastcall GetLabel(int Index)
  {  return FLabel;  }
  void __fastcall SetLabel(int Index, UnicodeString _prop_val)
  {  FLabel = _prop_val; FLabel_Specified = true;  }
  bool __fastcall Label_Specified(int Index)
  {  return FLabel_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  UnicodeString __fastcall GetNamespacePrefix(int Index)
  {  return FNamespacePrefix;  }
  void __fastcall SetNamespacePrefix(int Index, UnicodeString _prop_val)
  {  FNamespacePrefix = _prop_val; FNamespacePrefix_Specified = true;  }
  bool __fastcall NamespacePrefix_Specified(int Index)
  {  return FNamespacePrefix_Specified;  } 
  QueryResult* __fastcall GetObjectPerms(int Index)
  {  return FObjectPerms;  }
  void __fastcall SetObjectPerms(int Index, QueryResult* _prop_val)
  {  FObjectPerms = _prop_val; FObjectPerms_Specified = true;  }
  bool __fastcall ObjectPerms_Specified(int Index)
  {  return FObjectPerms_Specified;  } 
  bool __fastcall GetPermissionsApiEnabled(int Index)
  {  return FPermissionsApiEnabled;  }
  void __fastcall SetPermissionsApiEnabled(int Index, bool _prop_val)
  {  FPermissionsApiEnabled = _prop_val; FPermissionsApiEnabled_Specified = true;  }
  bool __fastcall PermissionsApiEnabled_Specified(int Index)
  {  return FPermissionsApiEnabled_Specified;  } 
  bool __fastcall GetPermissionsApiUserOnly(int Index)
  {  return FPermissionsApiUserOnly;  }
  void __fastcall SetPermissionsApiUserOnly(int Index, bool _prop_val)
  {  FPermissionsApiUserOnly = _prop_val; FPermissionsApiUserOnly_Specified = true;  }
  bool __fastcall PermissionsApiUserOnly_Specified(int Index)
  {  return FPermissionsApiUserOnly_Specified;  } 
  bool __fastcall GetPermissionsAuthorApex(int Index)
  {  return FPermissionsAuthorApex;  }
  void __fastcall SetPermissionsAuthorApex(int Index, bool _prop_val)
  {  FPermissionsAuthorApex = _prop_val; FPermissionsAuthorApex_Specified = true;  }
  bool __fastcall PermissionsAuthorApex_Specified(int Index)
  {  return FPermissionsAuthorApex_Specified;  } 
  bool __fastcall GetPermissionsBulkApiHardDelete(int Index)
  {  return FPermissionsBulkApiHardDelete;  }
  void __fastcall SetPermissionsBulkApiHardDelete(int Index, bool _prop_val)
  {  FPermissionsBulkApiHardDelete = _prop_val; FPermissionsBulkApiHardDelete_Specified = true;  }
  bool __fastcall PermissionsBulkApiHardDelete_Specified(int Index)
  {  return FPermissionsBulkApiHardDelete_Specified;  } 
  bool __fastcall GetPermissionsCanInsertFeedSystemFields(int Index)
  {  return FPermissionsCanInsertFeedSystemFields;  }
  void __fastcall SetPermissionsCanInsertFeedSystemFields(int Index, bool _prop_val)
  {  FPermissionsCanInsertFeedSystemFields = _prop_val; FPermissionsCanInsertFeedSystemFields_Specified = true;  }
  bool __fastcall PermissionsCanInsertFeedSystemFields_Specified(int Index)
  {  return FPermissionsCanInsertFeedSystemFields_Specified;  } 
  bool __fastcall GetPermissionsCanUseNewDashboardBuilder(int Index)
  {  return FPermissionsCanUseNewDashboardBuilder;  }
  void __fastcall SetPermissionsCanUseNewDashboardBuilder(int Index, bool _prop_val)
  {  FPermissionsCanUseNewDashboardBuilder = _prop_val; FPermissionsCanUseNewDashboardBuilder_Specified = true;  }
  bool __fastcall PermissionsCanUseNewDashboardBuilder_Specified(int Index)
  {  return FPermissionsCanUseNewDashboardBuilder_Specified;  } 
  bool __fastcall GetPermissionsChatterFileLink(int Index)
  {  return FPermissionsChatterFileLink;  }
  void __fastcall SetPermissionsChatterFileLink(int Index, bool _prop_val)
  {  FPermissionsChatterFileLink = _prop_val; FPermissionsChatterFileLink_Specified = true;  }
  bool __fastcall PermissionsChatterFileLink_Specified(int Index)
  {  return FPermissionsChatterFileLink_Specified;  } 
  bool __fastcall GetPermissionsConvertLeads(int Index)
  {  return FPermissionsConvertLeads;  }
  void __fastcall SetPermissionsConvertLeads(int Index, bool _prop_val)
  {  FPermissionsConvertLeads = _prop_val; FPermissionsConvertLeads_Specified = true;  }
  bool __fastcall PermissionsConvertLeads_Specified(int Index)
  {  return FPermissionsConvertLeads_Specified;  } 
  bool __fastcall GetPermissionsCreatePackaging(int Index)
  {  return FPermissionsCreatePackaging;  }
  void __fastcall SetPermissionsCreatePackaging(int Index, bool _prop_val)
  {  FPermissionsCreatePackaging = _prop_val; FPermissionsCreatePackaging_Specified = true;  }
  bool __fastcall PermissionsCreatePackaging_Specified(int Index)
  {  return FPermissionsCreatePackaging_Specified;  } 
  bool __fastcall GetPermissionsCustomSidebarOnAllPages(int Index)
  {  return FPermissionsCustomSidebarOnAllPages;  }
  void __fastcall SetPermissionsCustomSidebarOnAllPages(int Index, bool _prop_val)
  {  FPermissionsCustomSidebarOnAllPages = _prop_val; FPermissionsCustomSidebarOnAllPages_Specified = true;  }
  bool __fastcall PermissionsCustomSidebarOnAllPages_Specified(int Index)
  {  return FPermissionsCustomSidebarOnAllPages_Specified;  } 
  bool __fastcall GetPermissionsCustomizeApplication(int Index)
  {  return FPermissionsCustomizeApplication;  }
  void __fastcall SetPermissionsCustomizeApplication(int Index, bool _prop_val)
  {  FPermissionsCustomizeApplication = _prop_val; FPermissionsCustomizeApplication_Specified = true;  }
  bool __fastcall PermissionsCustomizeApplication_Specified(int Index)
  {  return FPermissionsCustomizeApplication_Specified;  } 
  bool __fastcall GetPermissionsDistributeFromPersWksp(int Index)
  {  return FPermissionsDistributeFromPersWksp;  }
  void __fastcall SetPermissionsDistributeFromPersWksp(int Index, bool _prop_val)
  {  FPermissionsDistributeFromPersWksp = _prop_val; FPermissionsDistributeFromPersWksp_Specified = true;  }
  bool __fastcall PermissionsDistributeFromPersWksp_Specified(int Index)
  {  return FPermissionsDistributeFromPersWksp_Specified;  } 
  bool __fastcall GetPermissionsEditCaseComments(int Index)
  {  return FPermissionsEditCaseComments;  }
  void __fastcall SetPermissionsEditCaseComments(int Index, bool _prop_val)
  {  FPermissionsEditCaseComments = _prop_val; FPermissionsEditCaseComments_Specified = true;  }
  bool __fastcall PermissionsEditCaseComments_Specified(int Index)
  {  return FPermissionsEditCaseComments_Specified;  } 
  bool __fastcall GetPermissionsEditEvent(int Index)
  {  return FPermissionsEditEvent;  }
  void __fastcall SetPermissionsEditEvent(int Index, bool _prop_val)
  {  FPermissionsEditEvent = _prop_val; FPermissionsEditEvent_Specified = true;  }
  bool __fastcall PermissionsEditEvent_Specified(int Index)
  {  return FPermissionsEditEvent_Specified;  } 
  bool __fastcall GetPermissionsEditOppLineItemUnitPrice(int Index)
  {  return FPermissionsEditOppLineItemUnitPrice;  }
  void __fastcall SetPermissionsEditOppLineItemUnitPrice(int Index, bool _prop_val)
  {  FPermissionsEditOppLineItemUnitPrice = _prop_val; FPermissionsEditOppLineItemUnitPrice_Specified = true;  }
  bool __fastcall PermissionsEditOppLineItemUnitPrice_Specified(int Index)
  {  return FPermissionsEditOppLineItemUnitPrice_Specified;  } 
  bool __fastcall GetPermissionsEditPublicDocuments(int Index)
  {  return FPermissionsEditPublicDocuments;  }
  void __fastcall SetPermissionsEditPublicDocuments(int Index, bool _prop_val)
  {  FPermissionsEditPublicDocuments = _prop_val; FPermissionsEditPublicDocuments_Specified = true;  }
  bool __fastcall PermissionsEditPublicDocuments_Specified(int Index)
  {  return FPermissionsEditPublicDocuments_Specified;  } 
  bool __fastcall GetPermissionsEditReadonlyFields(int Index)
  {  return FPermissionsEditReadonlyFields;  }
  void __fastcall SetPermissionsEditReadonlyFields(int Index, bool _prop_val)
  {  FPermissionsEditReadonlyFields = _prop_val; FPermissionsEditReadonlyFields_Specified = true;  }
  bool __fastcall PermissionsEditReadonlyFields_Specified(int Index)
  {  return FPermissionsEditReadonlyFields_Specified;  } 
  bool __fastcall GetPermissionsEditReports(int Index)
  {  return FPermissionsEditReports;  }
  void __fastcall SetPermissionsEditReports(int Index, bool _prop_val)
  {  FPermissionsEditReports = _prop_val; FPermissionsEditReports_Specified = true;  }
  bool __fastcall PermissionsEditReports_Specified(int Index)
  {  return FPermissionsEditReports_Specified;  } 
  bool __fastcall GetPermissionsEditTask(int Index)
  {  return FPermissionsEditTask;  }
  void __fastcall SetPermissionsEditTask(int Index, bool _prop_val)
  {  FPermissionsEditTask = _prop_val; FPermissionsEditTask_Specified = true;  }
  bool __fastcall PermissionsEditTask_Specified(int Index)
  {  return FPermissionsEditTask_Specified;  } 
  bool __fastcall GetPermissionsEmailAdministration(int Index)
  {  return FPermissionsEmailAdministration;  }
  void __fastcall SetPermissionsEmailAdministration(int Index, bool _prop_val)
  {  FPermissionsEmailAdministration = _prop_val; FPermissionsEmailAdministration_Specified = true;  }
  bool __fastcall PermissionsEmailAdministration_Specified(int Index)
  {  return FPermissionsEmailAdministration_Specified;  } 
  bool __fastcall GetPermissionsEmailTemplateManagement(int Index)
  {  return FPermissionsEmailTemplateManagement;  }
  void __fastcall SetPermissionsEmailTemplateManagement(int Index, bool _prop_val)
  {  FPermissionsEmailTemplateManagement = _prop_val; FPermissionsEmailTemplateManagement_Specified = true;  }
  bool __fastcall PermissionsEmailTemplateManagement_Specified(int Index)
  {  return FPermissionsEmailTemplateManagement_Specified;  } 
  bool __fastcall GetPermissionsEnableNotifications(int Index)
  {  return FPermissionsEnableNotifications;  }
  void __fastcall SetPermissionsEnableNotifications(int Index, bool _prop_val)
  {  FPermissionsEnableNotifications = _prop_val; FPermissionsEnableNotifications_Specified = true;  }
  bool __fastcall PermissionsEnableNotifications_Specified(int Index)
  {  return FPermissionsEnableNotifications_Specified;  } 
  bool __fastcall GetPermissionsFlowUFLRequired(int Index)
  {  return FPermissionsFlowUFLRequired;  }
  void __fastcall SetPermissionsFlowUFLRequired(int Index, bool _prop_val)
  {  FPermissionsFlowUFLRequired = _prop_val; FPermissionsFlowUFLRequired_Specified = true;  }
  bool __fastcall PermissionsFlowUFLRequired_Specified(int Index)
  {  return FPermissionsFlowUFLRequired_Specified;  } 
  bool __fastcall GetPermissionsImportLeads(int Index)
  {  return FPermissionsImportLeads;  }
  void __fastcall SetPermissionsImportLeads(int Index, bool _prop_val)
  {  FPermissionsImportLeads = _prop_val; FPermissionsImportLeads_Specified = true;  }
  bool __fastcall PermissionsImportLeads_Specified(int Index)
  {  return FPermissionsImportLeads_Specified;  } 
  bool __fastcall GetPermissionsInboundMigrationToolsUser(int Index)
  {  return FPermissionsInboundMigrationToolsUser;  }
  void __fastcall SetPermissionsInboundMigrationToolsUser(int Index, bool _prop_val)
  {  FPermissionsInboundMigrationToolsUser = _prop_val; FPermissionsInboundMigrationToolsUser_Specified = true;  }
  bool __fastcall PermissionsInboundMigrationToolsUser_Specified(int Index)
  {  return FPermissionsInboundMigrationToolsUser_Specified;  } 
  bool __fastcall GetPermissionsInstallPackaging(int Index)
  {  return FPermissionsInstallPackaging;  }
  void __fastcall SetPermissionsInstallPackaging(int Index, bool _prop_val)
  {  FPermissionsInstallPackaging = _prop_val; FPermissionsInstallPackaging_Specified = true;  }
  bool __fastcall PermissionsInstallPackaging_Specified(int Index)
  {  return FPermissionsInstallPackaging_Specified;  } 
  bool __fastcall GetPermissionsManageAnalyticSnapshots(int Index)
  {  return FPermissionsManageAnalyticSnapshots;  }
  void __fastcall SetPermissionsManageAnalyticSnapshots(int Index, bool _prop_val)
  {  FPermissionsManageAnalyticSnapshots = _prop_val; FPermissionsManageAnalyticSnapshots_Specified = true;  }
  bool __fastcall PermissionsManageAnalyticSnapshots_Specified(int Index)
  {  return FPermissionsManageAnalyticSnapshots_Specified;  } 
  bool __fastcall GetPermissionsManageAuthProviders(int Index)
  {  return FPermissionsManageAuthProviders;  }
  void __fastcall SetPermissionsManageAuthProviders(int Index, bool _prop_val)
  {  FPermissionsManageAuthProviders = _prop_val; FPermissionsManageAuthProviders_Specified = true;  }
  bool __fastcall PermissionsManageAuthProviders_Specified(int Index)
  {  return FPermissionsManageAuthProviders_Specified;  } 
  bool __fastcall GetPermissionsManageBusinessHourHolidays(int Index)
  {  return FPermissionsManageBusinessHourHolidays;  }
  void __fastcall SetPermissionsManageBusinessHourHolidays(int Index, bool _prop_val)
  {  FPermissionsManageBusinessHourHolidays = _prop_val; FPermissionsManageBusinessHourHolidays_Specified = true;  }
  bool __fastcall PermissionsManageBusinessHourHolidays_Specified(int Index)
  {  return FPermissionsManageBusinessHourHolidays_Specified;  } 
  bool __fastcall GetPermissionsManageCallCenters(int Index)
  {  return FPermissionsManageCallCenters;  }
  void __fastcall SetPermissionsManageCallCenters(int Index, bool _prop_val)
  {  FPermissionsManageCallCenters = _prop_val; FPermissionsManageCallCenters_Specified = true;  }
  bool __fastcall PermissionsManageCallCenters_Specified(int Index)
  {  return FPermissionsManageCallCenters_Specified;  } 
  bool __fastcall GetPermissionsManageCases(int Index)
  {  return FPermissionsManageCases;  }
  void __fastcall SetPermissionsManageCases(int Index, bool _prop_val)
  {  FPermissionsManageCases = _prop_val; FPermissionsManageCases_Specified = true;  }
  bool __fastcall PermissionsManageCases_Specified(int Index)
  {  return FPermissionsManageCases_Specified;  } 
  bool __fastcall GetPermissionsManageCategories(int Index)
  {  return FPermissionsManageCategories;  }
  void __fastcall SetPermissionsManageCategories(int Index, bool _prop_val)
  {  FPermissionsManageCategories = _prop_val; FPermissionsManageCategories_Specified = true;  }
  bool __fastcall PermissionsManageCategories_Specified(int Index)
  {  return FPermissionsManageCategories_Specified;  } 
  bool __fastcall GetPermissionsManageChatterMessages(int Index)
  {  return FPermissionsManageChatterMessages;  }
  void __fastcall SetPermissionsManageChatterMessages(int Index, bool _prop_val)
  {  FPermissionsManageChatterMessages = _prop_val; FPermissionsManageChatterMessages_Specified = true;  }
  bool __fastcall PermissionsManageChatterMessages_Specified(int Index)
  {  return FPermissionsManageChatterMessages_Specified;  } 
  bool __fastcall GetPermissionsManageCssUsers(int Index)
  {  return FPermissionsManageCssUsers;  }
  void __fastcall SetPermissionsManageCssUsers(int Index, bool _prop_val)
  {  FPermissionsManageCssUsers = _prop_val; FPermissionsManageCssUsers_Specified = true;  }
  bool __fastcall PermissionsManageCssUsers_Specified(int Index)
  {  return FPermissionsManageCssUsers_Specified;  } 
  bool __fastcall GetPermissionsManageCustomReportTypes(int Index)
  {  return FPermissionsManageCustomReportTypes;  }
  void __fastcall SetPermissionsManageCustomReportTypes(int Index, bool _prop_val)
  {  FPermissionsManageCustomReportTypes = _prop_val; FPermissionsManageCustomReportTypes_Specified = true;  }
  bool __fastcall PermissionsManageCustomReportTypes_Specified(int Index)
  {  return FPermissionsManageCustomReportTypes_Specified;  } 
  bool __fastcall GetPermissionsManageDashboards(int Index)
  {  return FPermissionsManageDashboards;  }
  void __fastcall SetPermissionsManageDashboards(int Index, bool _prop_val)
  {  FPermissionsManageDashboards = _prop_val; FPermissionsManageDashboards_Specified = true;  }
  bool __fastcall PermissionsManageDashboards_Specified(int Index)
  {  return FPermissionsManageDashboards_Specified;  } 
  bool __fastcall GetPermissionsManageDataCategories(int Index)
  {  return FPermissionsManageDataCategories;  }
  void __fastcall SetPermissionsManageDataCategories(int Index, bool _prop_val)
  {  FPermissionsManageDataCategories = _prop_val; FPermissionsManageDataCategories_Specified = true;  }
  bool __fastcall PermissionsManageDataCategories_Specified(int Index)
  {  return FPermissionsManageDataCategories_Specified;  } 
  bool __fastcall GetPermissionsManageDataIntegrations(int Index)
  {  return FPermissionsManageDataIntegrations;  }
  void __fastcall SetPermissionsManageDataIntegrations(int Index, bool _prop_val)
  {  FPermissionsManageDataIntegrations = _prop_val; FPermissionsManageDataIntegrations_Specified = true;  }
  bool __fastcall PermissionsManageDataIntegrations_Specified(int Index)
  {  return FPermissionsManageDataIntegrations_Specified;  } 
  bool __fastcall GetPermissionsManageEmailClientConfig(int Index)
  {  return FPermissionsManageEmailClientConfig;  }
  void __fastcall SetPermissionsManageEmailClientConfig(int Index, bool _prop_val)
  {  FPermissionsManageEmailClientConfig = _prop_val; FPermissionsManageEmailClientConfig_Specified = true;  }
  bool __fastcall PermissionsManageEmailClientConfig_Specified(int Index)
  {  return FPermissionsManageEmailClientConfig_Specified;  } 
  bool __fastcall GetPermissionsManageInteraction(int Index)
  {  return FPermissionsManageInteraction;  }
  void __fastcall SetPermissionsManageInteraction(int Index, bool _prop_val)
  {  FPermissionsManageInteraction = _prop_val; FPermissionsManageInteraction_Specified = true;  }
  bool __fastcall PermissionsManageInteraction_Specified(int Index)
  {  return FPermissionsManageInteraction_Specified;  } 
  bool __fastcall GetPermissionsManageLeads(int Index)
  {  return FPermissionsManageLeads;  }
  void __fastcall SetPermissionsManageLeads(int Index, bool _prop_val)
  {  FPermissionsManageLeads = _prop_val; FPermissionsManageLeads_Specified = true;  }
  bool __fastcall PermissionsManageLeads_Specified(int Index)
  {  return FPermissionsManageLeads_Specified;  } 
  bool __fastcall GetPermissionsManageMobile(int Index)
  {  return FPermissionsManageMobile;  }
  void __fastcall SetPermissionsManageMobile(int Index, bool _prop_val)
  {  FPermissionsManageMobile = _prop_val; FPermissionsManageMobile_Specified = true;  }
  bool __fastcall PermissionsManageMobile_Specified(int Index)
  {  return FPermissionsManageMobile_Specified;  } 
  bool __fastcall GetPermissionsManageRemoteAccess(int Index)
  {  return FPermissionsManageRemoteAccess;  }
  void __fastcall SetPermissionsManageRemoteAccess(int Index, bool _prop_val)
  {  FPermissionsManageRemoteAccess = _prop_val; FPermissionsManageRemoteAccess_Specified = true;  }
  bool __fastcall PermissionsManageRemoteAccess_Specified(int Index)
  {  return FPermissionsManageRemoteAccess_Specified;  } 
  bool __fastcall GetPermissionsManageSelfService(int Index)
  {  return FPermissionsManageSelfService;  }
  void __fastcall SetPermissionsManageSelfService(int Index, bool _prop_val)
  {  FPermissionsManageSelfService = _prop_val; FPermissionsManageSelfService_Specified = true;  }
  bool __fastcall PermissionsManageSelfService_Specified(int Index)
  {  return FPermissionsManageSelfService_Specified;  } 
  bool __fastcall GetPermissionsManageSolutions(int Index)
  {  return FPermissionsManageSolutions;  }
  void __fastcall SetPermissionsManageSolutions(int Index, bool _prop_val)
  {  FPermissionsManageSolutions = _prop_val; FPermissionsManageSolutions_Specified = true;  }
  bool __fastcall PermissionsManageSolutions_Specified(int Index)
  {  return FPermissionsManageSolutions_Specified;  } 
  bool __fastcall GetPermissionsManageUsers(int Index)
  {  return FPermissionsManageUsers;  }
  void __fastcall SetPermissionsManageUsers(int Index, bool _prop_val)
  {  FPermissionsManageUsers = _prop_val; FPermissionsManageUsers_Specified = true;  }
  bool __fastcall PermissionsManageUsers_Specified(int Index)
  {  return FPermissionsManageUsers_Specified;  } 
  bool __fastcall GetPermissionsMassInlineEdit(int Index)
  {  return FPermissionsMassInlineEdit;  }
  void __fastcall SetPermissionsMassInlineEdit(int Index, bool _prop_val)
  {  FPermissionsMassInlineEdit = _prop_val; FPermissionsMassInlineEdit_Specified = true;  }
  bool __fastcall PermissionsMassInlineEdit_Specified(int Index)
  {  return FPermissionsMassInlineEdit_Specified;  } 
  bool __fastcall GetPermissionsModifyAllData(int Index)
  {  return FPermissionsModifyAllData;  }
  void __fastcall SetPermissionsModifyAllData(int Index, bool _prop_val)
  {  FPermissionsModifyAllData = _prop_val; FPermissionsModifyAllData_Specified = true;  }
  bool __fastcall PermissionsModifyAllData_Specified(int Index)
  {  return FPermissionsModifyAllData_Specified;  } 
  bool __fastcall GetPermissionsNewReportBuilder(int Index)
  {  return FPermissionsNewReportBuilder;  }
  void __fastcall SetPermissionsNewReportBuilder(int Index, bool _prop_val)
  {  FPermissionsNewReportBuilder = _prop_val; FPermissionsNewReportBuilder_Specified = true;  }
  bool __fastcall PermissionsNewReportBuilder_Specified(int Index)
  {  return FPermissionsNewReportBuilder_Specified;  } 
  bool __fastcall GetPermissionsOutboundMigrationToolsUser(int Index)
  {  return FPermissionsOutboundMigrationToolsUser;  }
  void __fastcall SetPermissionsOutboundMigrationToolsUser(int Index, bool _prop_val)
  {  FPermissionsOutboundMigrationToolsUser = _prop_val; FPermissionsOutboundMigrationToolsUser_Specified = true;  }
  bool __fastcall PermissionsOutboundMigrationToolsUser_Specified(int Index)
  {  return FPermissionsOutboundMigrationToolsUser_Specified;  } 
  bool __fastcall GetPermissionsPasswordNeverExpires(int Index)
  {  return FPermissionsPasswordNeverExpires;  }
  void __fastcall SetPermissionsPasswordNeverExpires(int Index, bool _prop_val)
  {  FPermissionsPasswordNeverExpires = _prop_val; FPermissionsPasswordNeverExpires_Specified = true;  }
  bool __fastcall PermissionsPasswordNeverExpires_Specified(int Index)
  {  return FPermissionsPasswordNeverExpires_Specified;  } 
  bool __fastcall GetPermissionsPublishPackaging(int Index)
  {  return FPermissionsPublishPackaging;  }
  void __fastcall SetPermissionsPublishPackaging(int Index, bool _prop_val)
  {  FPermissionsPublishPackaging = _prop_val; FPermissionsPublishPackaging_Specified = true;  }
  bool __fastcall PermissionsPublishPackaging_Specified(int Index)
  {  return FPermissionsPublishPackaging_Specified;  } 
  bool __fastcall GetPermissionsResetPasswords(int Index)
  {  return FPermissionsResetPasswords;  }
  void __fastcall SetPermissionsResetPasswords(int Index, bool _prop_val)
  {  FPermissionsResetPasswords = _prop_val; FPermissionsResetPasswords_Specified = true;  }
  bool __fastcall PermissionsResetPasswords_Specified(int Index)
  {  return FPermissionsResetPasswords_Specified;  } 
  bool __fastcall GetPermissionsRunFlow(int Index)
  {  return FPermissionsRunFlow;  }
  void __fastcall SetPermissionsRunFlow(int Index, bool _prop_val)
  {  FPermissionsRunFlow = _prop_val; FPermissionsRunFlow_Specified = true;  }
  bool __fastcall PermissionsRunFlow_Specified(int Index)
  {  return FPermissionsRunFlow_Specified;  } 
  bool __fastcall GetPermissionsRunReports(int Index)
  {  return FPermissionsRunReports;  }
  void __fastcall SetPermissionsRunReports(int Index, bool _prop_val)
  {  FPermissionsRunReports = _prop_val; FPermissionsRunReports_Specified = true;  }
  bool __fastcall PermissionsRunReports_Specified(int Index)
  {  return FPermissionsRunReports_Specified;  } 
  bool __fastcall GetPermissionsScheduleJob(int Index)
  {  return FPermissionsScheduleJob;  }
  void __fastcall SetPermissionsScheduleJob(int Index, bool _prop_val)
  {  FPermissionsScheduleJob = _prop_val; FPermissionsScheduleJob_Specified = true;  }
  bool __fastcall PermissionsScheduleJob_Specified(int Index)
  {  return FPermissionsScheduleJob_Specified;  } 
  bool __fastcall GetPermissionsScheduleReports(int Index)
  {  return FPermissionsScheduleReports;  }
  void __fastcall SetPermissionsScheduleReports(int Index, bool _prop_val)
  {  FPermissionsScheduleReports = _prop_val; FPermissionsScheduleReports_Specified = true;  }
  bool __fastcall PermissionsScheduleReports_Specified(int Index)
  {  return FPermissionsScheduleReports_Specified;  } 
  bool __fastcall GetPermissionsSendSitRequests(int Index)
  {  return FPermissionsSendSitRequests;  }
  void __fastcall SetPermissionsSendSitRequests(int Index, bool _prop_val)
  {  FPermissionsSendSitRequests = _prop_val; FPermissionsSendSitRequests_Specified = true;  }
  bool __fastcall PermissionsSendSitRequests_Specified(int Index)
  {  return FPermissionsSendSitRequests_Specified;  } 
  bool __fastcall GetPermissionsSolutionImport(int Index)
  {  return FPermissionsSolutionImport;  }
  void __fastcall SetPermissionsSolutionImport(int Index, bool _prop_val)
  {  FPermissionsSolutionImport = _prop_val; FPermissionsSolutionImport_Specified = true;  }
  bool __fastcall PermissionsSolutionImport_Specified(int Index)
  {  return FPermissionsSolutionImport_Specified;  } 
  bool __fastcall GetPermissionsTransferAnyCase(int Index)
  {  return FPermissionsTransferAnyCase;  }
  void __fastcall SetPermissionsTransferAnyCase(int Index, bool _prop_val)
  {  FPermissionsTransferAnyCase = _prop_val; FPermissionsTransferAnyCase_Specified = true;  }
  bool __fastcall PermissionsTransferAnyCase_Specified(int Index)
  {  return FPermissionsTransferAnyCase_Specified;  } 
  bool __fastcall GetPermissionsTransferAnyEntity(int Index)
  {  return FPermissionsTransferAnyEntity;  }
  void __fastcall SetPermissionsTransferAnyEntity(int Index, bool _prop_val)
  {  FPermissionsTransferAnyEntity = _prop_val; FPermissionsTransferAnyEntity_Specified = true;  }
  bool __fastcall PermissionsTransferAnyEntity_Specified(int Index)
  {  return FPermissionsTransferAnyEntity_Specified;  } 
  bool __fastcall GetPermissionsTransferAnyLead(int Index)
  {  return FPermissionsTransferAnyLead;  }
  void __fastcall SetPermissionsTransferAnyLead(int Index, bool _prop_val)
  {  FPermissionsTransferAnyLead = _prop_val; FPermissionsTransferAnyLead_Specified = true;  }
  bool __fastcall PermissionsTransferAnyLead_Specified(int Index)
  {  return FPermissionsTransferAnyLead_Specified;  } 
  bool __fastcall GetPermissionsUseTeamReassignWizards(int Index)
  {  return FPermissionsUseTeamReassignWizards;  }
  void __fastcall SetPermissionsUseTeamReassignWizards(int Index, bool _prop_val)
  {  FPermissionsUseTeamReassignWizards = _prop_val; FPermissionsUseTeamReassignWizards_Specified = true;  }
  bool __fastcall PermissionsUseTeamReassignWizards_Specified(int Index)
  {  return FPermissionsUseTeamReassignWizards_Specified;  } 
  bool __fastcall GetPermissionsViewAllData(int Index)
  {  return FPermissionsViewAllData;  }
  void __fastcall SetPermissionsViewAllData(int Index, bool _prop_val)
  {  FPermissionsViewAllData = _prop_val; FPermissionsViewAllData_Specified = true;  }
  bool __fastcall PermissionsViewAllData_Specified(int Index)
  {  return FPermissionsViewAllData_Specified;  } 
  bool __fastcall GetPermissionsViewDataCategories(int Index)
  {  return FPermissionsViewDataCategories;  }
  void __fastcall SetPermissionsViewDataCategories(int Index, bool _prop_val)
  {  FPermissionsViewDataCategories = _prop_val; FPermissionsViewDataCategories_Specified = true;  }
  bool __fastcall PermissionsViewDataCategories_Specified(int Index)
  {  return FPermissionsViewDataCategories_Specified;  } 
  bool __fastcall GetPermissionsViewMyTeamsDashboards(int Index)
  {  return FPermissionsViewMyTeamsDashboards;  }
  void __fastcall SetPermissionsViewMyTeamsDashboards(int Index, bool _prop_val)
  {  FPermissionsViewMyTeamsDashboards = _prop_val; FPermissionsViewMyTeamsDashboards_Specified = true;  }
  bool __fastcall PermissionsViewMyTeamsDashboards_Specified(int Index)
  {  return FPermissionsViewMyTeamsDashboards_Specified;  } 
  bool __fastcall GetPermissionsViewSetup(int Index)
  {  return FPermissionsViewSetup;  }
  void __fastcall SetPermissionsViewSetup(int Index, bool _prop_val)
  {  FPermissionsViewSetup = _prop_val; FPermissionsViewSetup_Specified = true;  }
  bool __fastcall PermissionsViewSetup_Specified(int Index)
  {  return FPermissionsViewSetup_Specified;  } 
  Profile* __fastcall GetProfile(int Index)
  {  return FProfile;  }
  void __fastcall SetProfile(int Index, Profile* _prop_val)
  {  FProfile = _prop_val; FProfile_Specified = true;  }
  bool __fastcall Profile_Specified(int Index)
  {  return FProfile_Specified;  } 
  ID __fastcall GetProfileId(int Index)
  {  return FProfileId;  }
  void __fastcall SetProfileId(int Index, ID _prop_val)
  {  FProfileId = _prop_val; FProfileId_Specified = true;  }
  bool __fastcall ProfileId_Specified(int Index)
  {  return FProfileId_Specified;  } 
  QueryResult* __fastcall GetSetupEntityAccessItems(int Index)
  {  return FSetupEntityAccessItems;  }
  void __fastcall SetSetupEntityAccessItems(int Index, QueryResult* _prop_val)
  {  FSetupEntityAccessItems = _prop_val; FSetupEntityAccessItems_Specified = true;  }
  bool __fastcall SetupEntityAccessItems_Specified(int Index)
  {  return FSetupEntityAccessItems_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UserLicense* __fastcall GetUserLicense(int Index)
  {  return FUserLicense;  }
  void __fastcall SetUserLicense(int Index, UserLicense* _prop_val)
  {  FUserLicense = _prop_val; FUserLicense_Specified = true;  }
  bool __fastcall UserLicense_Specified(int Index)
  {  return FUserLicense_Specified;  } 
  ID __fastcall GetUserLicenseId(int Index)
  {  return FUserLicenseId;  }
  void __fastcall SetUserLicenseId(int Index, ID _prop_val)
  {  FUserLicenseId = _prop_val; FUserLicenseId_Specified = true;  }
  bool __fastcall UserLicenseId_Specified(int Index)
  {  return FUserLicenseId_Specified;  } 

public:
  __fastcall ~PermissionSet();
__published:
  __property QueryResult* Assignments = { index=(IS_OPTN|IS_NLBL), read=FAssignments, write=SetAssignments, stored = Assignments_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property QueryResult* FieldPerms = { index=(IS_OPTN|IS_NLBL), read=FFieldPerms, write=SetFieldPerms, stored = FieldPerms_Specified };
  __property bool       IsOwnedByProfile = { index=(IS_OPTN|IS_NLBL), read=FIsOwnedByProfile, write=SetIsOwnedByProfile, stored = IsOwnedByProfile_Specified };
  __property UnicodeString      Label = { index=(IS_OPTN|IS_NLBL), read=FLabel, write=SetLabel, stored = Label_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property UnicodeString NamespacePrefix = { index=(IS_OPTN|IS_NLBL), read=FNamespacePrefix, write=SetNamespacePrefix, stored = NamespacePrefix_Specified };
  __property QueryResult* ObjectPerms = { index=(IS_OPTN|IS_NLBL), read=FObjectPerms, write=SetObjectPerms, stored = ObjectPerms_Specified };
  __property bool       PermissionsApiEnabled = { index=(IS_OPTN|IS_NLBL), read=FPermissionsApiEnabled, write=SetPermissionsApiEnabled, stored = PermissionsApiEnabled_Specified };
  __property bool       PermissionsApiUserOnly = { index=(IS_OPTN|IS_NLBL), read=FPermissionsApiUserOnly, write=SetPermissionsApiUserOnly, stored = PermissionsApiUserOnly_Specified };
  __property bool       PermissionsAuthorApex = { index=(IS_OPTN|IS_NLBL), read=FPermissionsAuthorApex, write=SetPermissionsAuthorApex, stored = PermissionsAuthorApex_Specified };
  __property bool       PermissionsBulkApiHardDelete = { index=(IS_OPTN|IS_NLBL), read=FPermissionsBulkApiHardDelete, write=SetPermissionsBulkApiHardDelete, stored = PermissionsBulkApiHardDelete_Specified };
  __property bool       PermissionsCanInsertFeedSystemFields = { index=(IS_OPTN|IS_NLBL), read=FPermissionsCanInsertFeedSystemFields, write=SetPermissionsCanInsertFeedSystemFields, stored = PermissionsCanInsertFeedSystemFields_Specified };
  __property bool       PermissionsCanUseNewDashboardBuilder = { index=(IS_OPTN|IS_NLBL), read=FPermissionsCanUseNewDashboardBuilder, write=SetPermissionsCanUseNewDashboardBuilder, stored = PermissionsCanUseNewDashboardBuilder_Specified };
  __property bool       PermissionsChatterFileLink = { index=(IS_OPTN|IS_NLBL), read=FPermissionsChatterFileLink, write=SetPermissionsChatterFileLink, stored = PermissionsChatterFileLink_Specified };
  __property bool       PermissionsConvertLeads = { index=(IS_OPTN|IS_NLBL), read=FPermissionsConvertLeads, write=SetPermissionsConvertLeads, stored = PermissionsConvertLeads_Specified };
  __property bool       PermissionsCreatePackaging = { index=(IS_OPTN|IS_NLBL), read=FPermissionsCreatePackaging, write=SetPermissionsCreatePackaging, stored = PermissionsCreatePackaging_Specified };
  __property bool       PermissionsCustomSidebarOnAllPages = { index=(IS_OPTN|IS_NLBL), read=FPermissionsCustomSidebarOnAllPages, write=SetPermissionsCustomSidebarOnAllPages, stored = PermissionsCustomSidebarOnAllPages_Specified };
  __property bool       PermissionsCustomizeApplication = { index=(IS_OPTN|IS_NLBL), read=FPermissionsCustomizeApplication, write=SetPermissionsCustomizeApplication, stored = PermissionsCustomizeApplication_Specified };
  __property bool       PermissionsDistributeFromPersWksp = { index=(IS_OPTN|IS_NLBL), read=FPermissionsDistributeFromPersWksp, write=SetPermissionsDistributeFromPersWksp, stored = PermissionsDistributeFromPersWksp_Specified };
  __property bool       PermissionsEditCaseComments = { index=(IS_OPTN|IS_NLBL), read=FPermissionsEditCaseComments, write=SetPermissionsEditCaseComments, stored = PermissionsEditCaseComments_Specified };
  __property bool       PermissionsEditEvent = { index=(IS_OPTN|IS_NLBL), read=FPermissionsEditEvent, write=SetPermissionsEditEvent, stored = PermissionsEditEvent_Specified };
  __property bool       PermissionsEditOppLineItemUnitPrice = { index=(IS_OPTN|IS_NLBL), read=FPermissionsEditOppLineItemUnitPrice, write=SetPermissionsEditOppLineItemUnitPrice, stored = PermissionsEditOppLineItemUnitPrice_Specified };
  __property bool       PermissionsEditPublicDocuments = { index=(IS_OPTN|IS_NLBL), read=FPermissionsEditPublicDocuments, write=SetPermissionsEditPublicDocuments, stored = PermissionsEditPublicDocuments_Specified };
  __property bool       PermissionsEditReadonlyFields = { index=(IS_OPTN|IS_NLBL), read=FPermissionsEditReadonlyFields, write=SetPermissionsEditReadonlyFields, stored = PermissionsEditReadonlyFields_Specified };
  __property bool       PermissionsEditReports = { index=(IS_OPTN|IS_NLBL), read=FPermissionsEditReports, write=SetPermissionsEditReports, stored = PermissionsEditReports_Specified };
  __property bool       PermissionsEditTask = { index=(IS_OPTN|IS_NLBL), read=FPermissionsEditTask, write=SetPermissionsEditTask, stored = PermissionsEditTask_Specified };
  __property bool       PermissionsEmailAdministration = { index=(IS_OPTN|IS_NLBL), read=FPermissionsEmailAdministration, write=SetPermissionsEmailAdministration, stored = PermissionsEmailAdministration_Specified };
  __property bool       PermissionsEmailTemplateManagement = { index=(IS_OPTN|IS_NLBL), read=FPermissionsEmailTemplateManagement, write=SetPermissionsEmailTemplateManagement, stored = PermissionsEmailTemplateManagement_Specified };
  __property bool       PermissionsEnableNotifications = { index=(IS_OPTN|IS_NLBL), read=FPermissionsEnableNotifications, write=SetPermissionsEnableNotifications, stored = PermissionsEnableNotifications_Specified };
  __property bool       PermissionsFlowUFLRequired = { index=(IS_OPTN|IS_NLBL), read=FPermissionsFlowUFLRequired, write=SetPermissionsFlowUFLRequired, stored = PermissionsFlowUFLRequired_Specified };
  __property bool       PermissionsImportLeads = { index=(IS_OPTN|IS_NLBL), read=FPermissionsImportLeads, write=SetPermissionsImportLeads, stored = PermissionsImportLeads_Specified };
  __property bool       PermissionsInboundMigrationToolsUser = { index=(IS_OPTN|IS_NLBL), read=FPermissionsInboundMigrationToolsUser, write=SetPermissionsInboundMigrationToolsUser, stored = PermissionsInboundMigrationToolsUser_Specified };
  __property bool       PermissionsInstallPackaging = { index=(IS_OPTN|IS_NLBL), read=FPermissionsInstallPackaging, write=SetPermissionsInstallPackaging, stored = PermissionsInstallPackaging_Specified };
  __property bool       PermissionsManageAnalyticSnapshots = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageAnalyticSnapshots, write=SetPermissionsManageAnalyticSnapshots, stored = PermissionsManageAnalyticSnapshots_Specified };
  __property bool       PermissionsManageAuthProviders = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageAuthProviders, write=SetPermissionsManageAuthProviders, stored = PermissionsManageAuthProviders_Specified };
  __property bool       PermissionsManageBusinessHourHolidays = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageBusinessHourHolidays, write=SetPermissionsManageBusinessHourHolidays, stored = PermissionsManageBusinessHourHolidays_Specified };
  __property bool       PermissionsManageCallCenters = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageCallCenters, write=SetPermissionsManageCallCenters, stored = PermissionsManageCallCenters_Specified };
  __property bool       PermissionsManageCases = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageCases, write=SetPermissionsManageCases, stored = PermissionsManageCases_Specified };
  __property bool       PermissionsManageCategories = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageCategories, write=SetPermissionsManageCategories, stored = PermissionsManageCategories_Specified };
  __property bool       PermissionsManageChatterMessages = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageChatterMessages, write=SetPermissionsManageChatterMessages, stored = PermissionsManageChatterMessages_Specified };
  __property bool       PermissionsManageCssUsers = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageCssUsers, write=SetPermissionsManageCssUsers, stored = PermissionsManageCssUsers_Specified };
  __property bool       PermissionsManageCustomReportTypes = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageCustomReportTypes, write=SetPermissionsManageCustomReportTypes, stored = PermissionsManageCustomReportTypes_Specified };
  __property bool       PermissionsManageDashboards = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageDashboards, write=SetPermissionsManageDashboards, stored = PermissionsManageDashboards_Specified };
  __property bool       PermissionsManageDataCategories = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageDataCategories, write=SetPermissionsManageDataCategories, stored = PermissionsManageDataCategories_Specified };
  __property bool       PermissionsManageDataIntegrations = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageDataIntegrations, write=SetPermissionsManageDataIntegrations, stored = PermissionsManageDataIntegrations_Specified };
  __property bool       PermissionsManageEmailClientConfig = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageEmailClientConfig, write=SetPermissionsManageEmailClientConfig, stored = PermissionsManageEmailClientConfig_Specified };
  __property bool       PermissionsManageInteraction = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageInteraction, write=SetPermissionsManageInteraction, stored = PermissionsManageInteraction_Specified };
  __property bool       PermissionsManageLeads = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageLeads, write=SetPermissionsManageLeads, stored = PermissionsManageLeads_Specified };
  __property bool       PermissionsManageMobile = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageMobile, write=SetPermissionsManageMobile, stored = PermissionsManageMobile_Specified };
  __property bool       PermissionsManageRemoteAccess = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageRemoteAccess, write=SetPermissionsManageRemoteAccess, stored = PermissionsManageRemoteAccess_Specified };
  __property bool       PermissionsManageSelfService = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageSelfService, write=SetPermissionsManageSelfService, stored = PermissionsManageSelfService_Specified };
  __property bool       PermissionsManageSolutions = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageSolutions, write=SetPermissionsManageSolutions, stored = PermissionsManageSolutions_Specified };
  __property bool       PermissionsManageUsers = { index=(IS_OPTN|IS_NLBL), read=FPermissionsManageUsers, write=SetPermissionsManageUsers, stored = PermissionsManageUsers_Specified };
  __property bool       PermissionsMassInlineEdit = { index=(IS_OPTN|IS_NLBL), read=FPermissionsMassInlineEdit, write=SetPermissionsMassInlineEdit, stored = PermissionsMassInlineEdit_Specified };
  __property bool       PermissionsModifyAllData = { index=(IS_OPTN|IS_NLBL), read=FPermissionsModifyAllData, write=SetPermissionsModifyAllData, stored = PermissionsModifyAllData_Specified };
  __property bool       PermissionsNewReportBuilder = { index=(IS_OPTN|IS_NLBL), read=FPermissionsNewReportBuilder, write=SetPermissionsNewReportBuilder, stored = PermissionsNewReportBuilder_Specified };
  __property bool       PermissionsOutboundMigrationToolsUser = { index=(IS_OPTN|IS_NLBL), read=FPermissionsOutboundMigrationToolsUser, write=SetPermissionsOutboundMigrationToolsUser, stored = PermissionsOutboundMigrationToolsUser_Specified };
  __property bool       PermissionsPasswordNeverExpires = { index=(IS_OPTN|IS_NLBL), read=FPermissionsPasswordNeverExpires, write=SetPermissionsPasswordNeverExpires, stored = PermissionsPasswordNeverExpires_Specified };
  __property bool       PermissionsPublishPackaging = { index=(IS_OPTN|IS_NLBL), read=FPermissionsPublishPackaging, write=SetPermissionsPublishPackaging, stored = PermissionsPublishPackaging_Specified };
  __property bool       PermissionsResetPasswords = { index=(IS_OPTN|IS_NLBL), read=FPermissionsResetPasswords, write=SetPermissionsResetPasswords, stored = PermissionsResetPasswords_Specified };
  __property bool       PermissionsRunFlow = { index=(IS_OPTN|IS_NLBL), read=FPermissionsRunFlow, write=SetPermissionsRunFlow, stored = PermissionsRunFlow_Specified };
  __property bool       PermissionsRunReports = { index=(IS_OPTN|IS_NLBL), read=FPermissionsRunReports, write=SetPermissionsRunReports, stored = PermissionsRunReports_Specified };
  __property bool       PermissionsScheduleJob = { index=(IS_OPTN|IS_NLBL), read=FPermissionsScheduleJob, write=SetPermissionsScheduleJob, stored = PermissionsScheduleJob_Specified };
  __property bool       PermissionsScheduleReports = { index=(IS_OPTN|IS_NLBL), read=FPermissionsScheduleReports, write=SetPermissionsScheduleReports, stored = PermissionsScheduleReports_Specified };
  __property bool       PermissionsSendSitRequests = { index=(IS_OPTN|IS_NLBL), read=FPermissionsSendSitRequests, write=SetPermissionsSendSitRequests, stored = PermissionsSendSitRequests_Specified };
  __property bool       PermissionsSolutionImport = { index=(IS_OPTN|IS_NLBL), read=FPermissionsSolutionImport, write=SetPermissionsSolutionImport, stored = PermissionsSolutionImport_Specified };
  __property bool       PermissionsTransferAnyCase = { index=(IS_OPTN|IS_NLBL), read=FPermissionsTransferAnyCase, write=SetPermissionsTransferAnyCase, stored = PermissionsTransferAnyCase_Specified };
  __property bool       PermissionsTransferAnyEntity = { index=(IS_OPTN|IS_NLBL), read=FPermissionsTransferAnyEntity, write=SetPermissionsTransferAnyEntity, stored = PermissionsTransferAnyEntity_Specified };
  __property bool       PermissionsTransferAnyLead = { index=(IS_OPTN|IS_NLBL), read=FPermissionsTransferAnyLead, write=SetPermissionsTransferAnyLead, stored = PermissionsTransferAnyLead_Specified };
  __property bool       PermissionsUseTeamReassignWizards = { index=(IS_OPTN|IS_NLBL), read=FPermissionsUseTeamReassignWizards, write=SetPermissionsUseTeamReassignWizards, stored = PermissionsUseTeamReassignWizards_Specified };
  __property bool       PermissionsViewAllData = { index=(IS_OPTN|IS_NLBL), read=FPermissionsViewAllData, write=SetPermissionsViewAllData, stored = PermissionsViewAllData_Specified };
  __property bool       PermissionsViewDataCategories = { index=(IS_OPTN|IS_NLBL), read=FPermissionsViewDataCategories, write=SetPermissionsViewDataCategories, stored = PermissionsViewDataCategories_Specified };
  __property bool       PermissionsViewMyTeamsDashboards = { index=(IS_OPTN|IS_NLBL), read=FPermissionsViewMyTeamsDashboards, write=SetPermissionsViewMyTeamsDashboards, stored = PermissionsViewMyTeamsDashboards_Specified };
  __property bool       PermissionsViewSetup = { index=(IS_OPTN|IS_NLBL), read=FPermissionsViewSetup, write=SetPermissionsViewSetup, stored = PermissionsViewSetup_Specified };
  __property Profile*      Profile = { index=(IS_OPTN|IS_NLBL), read=FProfile, write=SetProfile, stored = Profile_Specified };
  __property ID          ProfileId = { index=(IS_OPTN|IS_NLBL), read=FProfileId, write=SetProfileId, stored = ProfileId_Specified };
  __property QueryResult* SetupEntityAccessItems = { index=(IS_OPTN|IS_NLBL), read=FSetupEntityAccessItems, write=SetSetupEntityAccessItems, stored = SetupEntityAccessItems_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UserLicense* UserLicense = { index=(IS_OPTN|IS_NLBL), read=FUserLicense, write=SetUserLicense, stored = UserLicense_Specified };
  __property ID         UserLicenseId = { index=(IS_OPTN|IS_NLBL), read=FUserLicenseId, write=SetUserLicenseId, stored = UserLicenseId_Specified };
};




// ************************************************************************ //
// XML       : FieldPermissions, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class FieldPermissions : public sObject {
private:
  UnicodeString   FField;
  bool            FField_Specified;
  PermissionSet*  FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  bool            FPermissionsEdit;
  bool            FPermissionsEdit_Specified;
  bool            FPermissionsRead;
  bool            FPermissionsRead_Specified;
  UnicodeString   FSobjectType;
  bool            FSobjectType_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString __fastcall GetField(int Index)
  {  return FField;  }
  void __fastcall SetField(int Index, UnicodeString _prop_val)
  {  FField = _prop_val; FField_Specified = true;  }
  bool __fastcall Field_Specified(int Index)
  {  return FField_Specified;  } 
  PermissionSet* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, PermissionSet* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  bool __fastcall GetPermissionsEdit(int Index)
  {  return FPermissionsEdit;  }
  void __fastcall SetPermissionsEdit(int Index, bool _prop_val)
  {  FPermissionsEdit = _prop_val; FPermissionsEdit_Specified = true;  }
  bool __fastcall PermissionsEdit_Specified(int Index)
  {  return FPermissionsEdit_Specified;  } 
  bool __fastcall GetPermissionsRead(int Index)
  {  return FPermissionsRead;  }
  void __fastcall SetPermissionsRead(int Index, bool _prop_val)
  {  FPermissionsRead = _prop_val; FPermissionsRead_Specified = true;  }
  bool __fastcall PermissionsRead_Specified(int Index)
  {  return FPermissionsRead_Specified;  } 
  UnicodeString __fastcall GetSobjectType(int Index)
  {  return FSobjectType;  }
  void __fastcall SetSobjectType(int Index, UnicodeString _prop_val)
  {  FSobjectType = _prop_val; FSobjectType_Specified = true;  }
  bool __fastcall SobjectType_Specified(int Index)
  {  return FSobjectType_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~FieldPermissions();
__published:
  __property UnicodeString      Field = { index=(IS_OPTN|IS_NLBL), read=FField, write=SetField, stored = Field_Specified };
  __property PermissionSet*     Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property bool       PermissionsEdit = { index=(IS_OPTN|IS_NLBL), read=FPermissionsEdit, write=SetPermissionsEdit, stored = PermissionsEdit_Specified };
  __property bool       PermissionsRead = { index=(IS_OPTN|IS_NLBL), read=FPermissionsRead, write=SetPermissionsRead, stored = PermissionsRead_Specified };
  __property UnicodeString SobjectType = { index=(IS_OPTN|IS_NLBL), read=FSobjectType, write=SetSobjectType, stored = SobjectType_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : FeedTrackedChange, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class FeedTrackedChange : public sObject {
private:
  ID              FFeedItemId;
  bool            FFeedItemId_Specified;
  UnicodeString   FFieldName;
  bool            FFieldName_Specified;
  Variant         FNewValue;
  bool            FNewValue_Specified;
  Variant         FOldValue;
  bool            FOldValue_Specified;
  ID __fastcall GetFeedItemId(int Index)
  {  return FFeedItemId;  }
  void __fastcall SetFeedItemId(int Index, ID _prop_val)
  {  FFeedItemId = _prop_val; FFeedItemId_Specified = true;  }
  bool __fastcall FeedItemId_Specified(int Index)
  {  return FFeedItemId_Specified;  } 
  UnicodeString __fastcall GetFieldName(int Index)
  {  return FFieldName;  }
  void __fastcall SetFieldName(int Index, UnicodeString _prop_val)
  {  FFieldName = _prop_val; FFieldName_Specified = true;  }
  bool __fastcall FieldName_Specified(int Index)
  {  return FFieldName_Specified;  } 
  Variant __fastcall GetNewValue(int Index)
  {  return FNewValue;  }
  void __fastcall SetNewValue(int Index, Variant _prop_val)
  {  FNewValue = _prop_val; FNewValue_Specified = true;  }
  bool __fastcall NewValue_Specified(int Index)
  {  return FNewValue_Specified;  } 
  Variant __fastcall GetOldValue(int Index)
  {  return FOldValue;  }
  void __fastcall SetOldValue(int Index, Variant _prop_val)
  {  FOldValue = _prop_val; FOldValue_Specified = true;  }
  bool __fastcall OldValue_Specified(int Index)
  {  return FOldValue_Specified;  } 
__published:
  __property ID         FeedItemId = { index=(IS_OPTN|IS_NLBL), read=FFeedItemId, write=SetFeedItemId, stored = FeedItemId_Specified };
  __property UnicodeString  FieldName = { index=(IS_OPTN|IS_NLBL), read=FFieldName, write=SetFieldName, stored = FieldName_Specified };
  __property Variant      NewValue = { index=(IS_OPTN|IS_NLBL), read=FNewValue, write=SetNewValue, stored = NewValue_Specified };
  __property Variant      OldValue = { index=(IS_OPTN|IS_NLBL), read=FOldValue, write=SetOldValue, stored = OldValue_Specified };
};




// ************************************************************************ //
// XML       : FeedLike, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class FeedLike : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  ID              FFeedEntityId;
  bool            FFeedEntityId_Specified;
  ID              FFeedItemId;
  bool            FFeedItemId_Specified;
  User*           FInsertedBy;
  bool            FInsertedBy_Specified;
  ID              FInsertedById;
  bool            FInsertedById_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  ID __fastcall GetFeedEntityId(int Index)
  {  return FFeedEntityId;  }
  void __fastcall SetFeedEntityId(int Index, ID _prop_val)
  {  FFeedEntityId = _prop_val; FFeedEntityId_Specified = true;  }
  bool __fastcall FeedEntityId_Specified(int Index)
  {  return FFeedEntityId_Specified;  } 
  ID __fastcall GetFeedItemId(int Index)
  {  return FFeedItemId;  }
  void __fastcall SetFeedItemId(int Index, ID _prop_val)
  {  FFeedItemId = _prop_val; FFeedItemId_Specified = true;  }
  bool __fastcall FeedItemId_Specified(int Index)
  {  return FFeedItemId_Specified;  } 
  User* __fastcall GetInsertedBy(int Index)
  {  return FInsertedBy;  }
  void __fastcall SetInsertedBy(int Index, User* _prop_val)
  {  FInsertedBy = _prop_val; FInsertedBy_Specified = true;  }
  bool __fastcall InsertedBy_Specified(int Index)
  {  return FInsertedBy_Specified;  } 
  ID __fastcall GetInsertedById(int Index)
  {  return FInsertedById;  }
  void __fastcall SetInsertedById(int Index, ID _prop_val)
  {  FInsertedById = _prop_val; FInsertedById_Specified = true;  }
  bool __fastcall InsertedById_Specified(int Index)
  {  return FInsertedById_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 

public:
  __fastcall ~FeedLike();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property ID         FeedEntityId = { index=(IS_OPTN|IS_NLBL), read=FFeedEntityId, write=SetFeedEntityId, stored = FeedEntityId_Specified };
  __property ID         FeedItemId = { index=(IS_OPTN|IS_NLBL), read=FFeedItemId, write=SetFeedItemId, stored = FeedItemId_Specified };
  __property User*      InsertedBy = { index=(IS_OPTN|IS_NLBL), read=FInsertedBy, write=SetInsertedBy, stored = InsertedBy_Specified };
  __property ID         InsertedById = { index=(IS_OPTN|IS_NLBL), read=FInsertedById, write=SetInsertedById, stored = InsertedById_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
};




// ************************************************************************ //
// XML       : FeedItem, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class FeedItem : public sObject {
private:
  UnicodeString   FBody;
  bool            FBody_Specified;
  int             FCommentCount;
  bool            FCommentCount_Specified;
  TByteDynArray   FContentData;
  bool            FContentData_Specified;
  UnicodeString   FContentDescription;
  bool            FContentDescription_Specified;
  UnicodeString   FContentFileName;
  bool            FContentFileName_Specified;
  int             FContentSize;
  bool            FContentSize_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedComments;
  bool            FFeedComments_Specified;
  QueryResult*    FFeedLikes;
  bool            FFeedLikes_Specified;
  QueryResult*    FFeedTrackedChanges;
  bool            FFeedTrackedChanges_Specified;
  Name_*           FInsertedBy;
  bool            FInsertedBy_Specified;
  ID              FInsertedById;
  bool            FInsertedById_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLikeCount;
  bool            FLikeCount_Specified;
  UnicodeString   FLinkUrl;
  bool            FLinkUrl_Specified;
  Name_*           FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FRelatedRecordId;
  bool            FRelatedRecordId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetCommentCount(int Index)
  {  return FCommentCount;  }
  void __fastcall SetCommentCount(int Index, int _prop_val)
  {  FCommentCount = _prop_val; FCommentCount_Specified = true;  }
  bool __fastcall CommentCount_Specified(int Index)
  {  return FCommentCount_Specified;  } 
  TByteDynArray __fastcall GetContentData(int Index)
  {  return FContentData;  }
  void __fastcall SetContentData(int Index, TByteDynArray _prop_val)
  {  FContentData = _prop_val; FContentData_Specified = true;  }
  bool __fastcall ContentData_Specified(int Index)
  {  return FContentData_Specified;  } 
  UnicodeString __fastcall GetContentDescription(int Index)
  {  return FContentDescription;  }
  void __fastcall SetContentDescription(int Index, UnicodeString _prop_val)
  {  FContentDescription = _prop_val; FContentDescription_Specified = true;  }
  bool __fastcall ContentDescription_Specified(int Index)
  {  return FContentDescription_Specified;  } 
  UnicodeString __fastcall GetContentFileName(int Index)
  {  return FContentFileName;  }
  void __fastcall SetContentFileName(int Index, UnicodeString _prop_val)
  {  FContentFileName = _prop_val; FContentFileName_Specified = true;  }
  bool __fastcall ContentFileName_Specified(int Index)
  {  return FContentFileName_Specified;  } 
  int __fastcall GetContentSize(int Index)
  {  return FContentSize;  }
  void __fastcall SetContentSize(int Index, int _prop_val)
  {  FContentSize = _prop_val; FContentSize_Specified = true;  }
  bool __fastcall ContentSize_Specified(int Index)
  {  return FContentSize_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedComments(int Index)
  {  return FFeedComments;  }
  void __fastcall SetFeedComments(int Index, QueryResult* _prop_val)
  {  FFeedComments = _prop_val; FFeedComments_Specified = true;  }
  bool __fastcall FeedComments_Specified(int Index)
  {  return FFeedComments_Specified;  } 
  QueryResult* __fastcall GetFeedLikes(int Index)
  {  return FFeedLikes;  }
  void __fastcall SetFeedLikes(int Index, QueryResult* _prop_val)
  {  FFeedLikes = _prop_val; FFeedLikes_Specified = true;  }
  bool __fastcall FeedLikes_Specified(int Index)
  {  return FFeedLikes_Specified;  } 
  QueryResult* __fastcall GetFeedTrackedChanges(int Index)
  {  return FFeedTrackedChanges;  }
  void __fastcall SetFeedTrackedChanges(int Index, QueryResult* _prop_val)
  {  FFeedTrackedChanges = _prop_val; FFeedTrackedChanges_Specified = true;  }
  bool __fastcall FeedTrackedChanges_Specified(int Index)
  {  return FFeedTrackedChanges_Specified;  } 
  Name_* __fastcall GetInsertedBy(int Index)
  {  return FInsertedBy;  }
  void __fastcall SetInsertedBy(int Index, Name_* _prop_val)
  {  FInsertedBy = _prop_val; FInsertedBy_Specified = true;  }
  bool __fastcall InsertedBy_Specified(int Index)
  {  return FInsertedBy_Specified;  } 
  ID __fastcall GetInsertedById(int Index)
  {  return FInsertedById;  }
  void __fastcall SetInsertedById(int Index, ID _prop_val)
  {  FInsertedById = _prop_val; FInsertedById_Specified = true;  }
  bool __fastcall InsertedById_Specified(int Index)
  {  return FInsertedById_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLikeCount(int Index)
  {  return FLikeCount;  }
  void __fastcall SetLikeCount(int Index, int _prop_val)
  {  FLikeCount = _prop_val; FLikeCount_Specified = true;  }
  bool __fastcall LikeCount_Specified(int Index)
  {  return FLikeCount_Specified;  } 
  UnicodeString __fastcall GetLinkUrl(int Index)
  {  return FLinkUrl;  }
  void __fastcall SetLinkUrl(int Index, UnicodeString _prop_val)
  {  FLinkUrl = _prop_val; FLinkUrl_Specified = true;  }
  bool __fastcall LinkUrl_Specified(int Index)
  {  return FLinkUrl_Specified;  } 
  Name_* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Name_* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetRelatedRecordId(int Index)
  {  return FRelatedRecordId;  }
  void __fastcall SetRelatedRecordId(int Index, ID _prop_val)
  {  FRelatedRecordId = _prop_val; FRelatedRecordId_Specified = true;  }
  bool __fastcall RelatedRecordId_Specified(int Index)
  {  return FRelatedRecordId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~FeedItem();
__published:
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        CommentCount = { index=(IS_OPTN|IS_NLBL), read=FCommentCount, write=SetCommentCount, stored = CommentCount_Specified };
  __property TByteDynArray ContentData = { index=(IS_OPTN|IS_NLBL), read=FContentData, write=SetContentData, stored = ContentData_Specified };
  __property UnicodeString ContentDescription = { index=(IS_OPTN|IS_NLBL), read=FContentDescription, write=SetContentDescription, stored = ContentDescription_Specified };
  __property UnicodeString ContentFileName = { index=(IS_OPTN|IS_NLBL), read=FContentFileName, write=SetContentFileName, stored = ContentFileName_Specified };
  __property int        ContentSize = { index=(IS_OPTN|IS_NLBL), read=FContentSize, write=SetContentSize, stored = ContentSize_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedComments = { index=(IS_OPTN|IS_NLBL), read=FFeedComments, write=SetFeedComments, stored = FeedComments_Specified };
  __property QueryResult*  FeedLikes = { index=(IS_OPTN|IS_NLBL), read=FFeedLikes, write=SetFeedLikes, stored = FeedLikes_Specified };
  __property QueryResult* FeedTrackedChanges = { index=(IS_OPTN|IS_NLBL), read=FFeedTrackedChanges, write=SetFeedTrackedChanges, stored = FeedTrackedChanges_Specified };
  __property Name_*      InsertedBy = { index=(IS_OPTN|IS_NLBL), read=FInsertedBy, write=SetInsertedBy, stored = InsertedBy_Specified };
  __property ID         InsertedById = { index=(IS_OPTN|IS_NLBL), read=FInsertedById, write=SetInsertedById, stored = InsertedById_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int         LikeCount = { index=(IS_OPTN|IS_NLBL), read=FLikeCount, write=SetLikeCount, stored = LikeCount_Specified };
  __property UnicodeString    LinkUrl = { index=(IS_OPTN|IS_NLBL), read=FLinkUrl, write=SetLinkUrl, stored = LinkUrl_Specified };
  __property Name_*          Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         RelatedRecordId = { index=(IS_OPTN|IS_NLBL), read=FRelatedRecordId, write=SetRelatedRecordId, stored = RelatedRecordId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : FeedComment, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class FeedComment : public sObject {
private:
  UnicodeString   FCommentBody;
  bool            FCommentBody_Specified;
  UnicodeString   FCommentType;
  bool            FCommentType_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  ID              FFeedItemId;
  bool            FFeedItemId_Specified;
  User*           FInsertedBy;
  bool            FInsertedBy_Specified;
  ID              FInsertedById;
  bool            FInsertedById_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FRelatedRecordId;
  bool            FRelatedRecordId_Specified;
  UnicodeString __fastcall GetCommentBody(int Index)
  {  return FCommentBody;  }
  void __fastcall SetCommentBody(int Index, UnicodeString _prop_val)
  {  FCommentBody = _prop_val; FCommentBody_Specified = true;  }
  bool __fastcall CommentBody_Specified(int Index)
  {  return FCommentBody_Specified;  } 
  UnicodeString __fastcall GetCommentType(int Index)
  {  return FCommentType;  }
  void __fastcall SetCommentType(int Index, UnicodeString _prop_val)
  {  FCommentType = _prop_val; FCommentType_Specified = true;  }
  bool __fastcall CommentType_Specified(int Index)
  {  return FCommentType_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  ID __fastcall GetFeedItemId(int Index)
  {  return FFeedItemId;  }
  void __fastcall SetFeedItemId(int Index, ID _prop_val)
  {  FFeedItemId = _prop_val; FFeedItemId_Specified = true;  }
  bool __fastcall FeedItemId_Specified(int Index)
  {  return FFeedItemId_Specified;  } 
  User* __fastcall GetInsertedBy(int Index)
  {  return FInsertedBy;  }
  void __fastcall SetInsertedBy(int Index, User* _prop_val)
  {  FInsertedBy = _prop_val; FInsertedBy_Specified = true;  }
  bool __fastcall InsertedBy_Specified(int Index)
  {  return FInsertedBy_Specified;  } 
  ID __fastcall GetInsertedById(int Index)
  {  return FInsertedById;  }
  void __fastcall SetInsertedById(int Index, ID _prop_val)
  {  FInsertedById = _prop_val; FInsertedById_Specified = true;  }
  bool __fastcall InsertedById_Specified(int Index)
  {  return FInsertedById_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetRelatedRecordId(int Index)
  {  return FRelatedRecordId;  }
  void __fastcall SetRelatedRecordId(int Index, ID _prop_val)
  {  FRelatedRecordId = _prop_val; FRelatedRecordId_Specified = true;  }
  bool __fastcall RelatedRecordId_Specified(int Index)
  {  return FRelatedRecordId_Specified;  } 

public:
  __fastcall ~FeedComment();
__published:
  __property UnicodeString CommentBody = { index=(IS_OPTN|IS_NLBL), read=FCommentBody, write=SetCommentBody, stored = CommentBody_Specified };
  __property UnicodeString CommentType = { index=(IS_OPTN|IS_NLBL), read=FCommentType, write=SetCommentType, stored = CommentType_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property ID         FeedItemId = { index=(IS_OPTN|IS_NLBL), read=FFeedItemId, write=SetFeedItemId, stored = FeedItemId_Specified };
  __property User*      InsertedBy = { index=(IS_OPTN|IS_NLBL), read=FInsertedBy, write=SetInsertedBy, stored = InsertedBy_Specified };
  __property ID         InsertedById = { index=(IS_OPTN|IS_NLBL), read=FInsertedById, write=SetInsertedById, stored = InsertedById_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         RelatedRecordId = { index=(IS_OPTN|IS_NLBL), read=FRelatedRecordId, write=SetRelatedRecordId, stored = RelatedRecordId_Specified };
};




// ************************************************************************ //
// XML       : EventFeed, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class EventFeed : public sObject {
private:
  UnicodeString   FBody;
  bool            FBody_Specified;
  int             FCommentCount;
  bool            FCommentCount_Specified;
  TByteDynArray   FContentData;
  bool            FContentData_Specified;
  UnicodeString   FContentDescription;
  bool            FContentDescription_Specified;
  UnicodeString   FContentFileName;
  bool            FContentFileName_Specified;
  int             FContentSize;
  bool            FContentSize_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedComments;
  bool            FFeedComments_Specified;
  QueryResult*    FFeedLikes;
  bool            FFeedLikes_Specified;
  QueryResult*    FFeedTrackedChanges;
  bool            FFeedTrackedChanges_Specified;
  Name_*           FInsertedBy;
  bool            FInsertedBy_Specified;
  ID              FInsertedById;
  bool            FInsertedById_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLikeCount;
  bool            FLikeCount_Specified;
  UnicodeString   FLinkUrl;
  bool            FLinkUrl_Specified;
  Event*          FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FRelatedRecordId;
  bool            FRelatedRecordId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetCommentCount(int Index)
  {  return FCommentCount;  }
  void __fastcall SetCommentCount(int Index, int _prop_val)
  {  FCommentCount = _prop_val; FCommentCount_Specified = true;  }
  bool __fastcall CommentCount_Specified(int Index)
  {  return FCommentCount_Specified;  } 
  TByteDynArray __fastcall GetContentData(int Index)
  {  return FContentData;  }
  void __fastcall SetContentData(int Index, TByteDynArray _prop_val)
  {  FContentData = _prop_val; FContentData_Specified = true;  }
  bool __fastcall ContentData_Specified(int Index)
  {  return FContentData_Specified;  } 
  UnicodeString __fastcall GetContentDescription(int Index)
  {  return FContentDescription;  }
  void __fastcall SetContentDescription(int Index, UnicodeString _prop_val)
  {  FContentDescription = _prop_val; FContentDescription_Specified = true;  }
  bool __fastcall ContentDescription_Specified(int Index)
  {  return FContentDescription_Specified;  } 
  UnicodeString __fastcall GetContentFileName(int Index)
  {  return FContentFileName;  }
  void __fastcall SetContentFileName(int Index, UnicodeString _prop_val)
  {  FContentFileName = _prop_val; FContentFileName_Specified = true;  }
  bool __fastcall ContentFileName_Specified(int Index)
  {  return FContentFileName_Specified;  } 
  int __fastcall GetContentSize(int Index)
  {  return FContentSize;  }
  void __fastcall SetContentSize(int Index, int _prop_val)
  {  FContentSize = _prop_val; FContentSize_Specified = true;  }
  bool __fastcall ContentSize_Specified(int Index)
  {  return FContentSize_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedComments(int Index)
  {  return FFeedComments;  }
  void __fastcall SetFeedComments(int Index, QueryResult* _prop_val)
  {  FFeedComments = _prop_val; FFeedComments_Specified = true;  }
  bool __fastcall FeedComments_Specified(int Index)
  {  return FFeedComments_Specified;  } 
  QueryResult* __fastcall GetFeedLikes(int Index)
  {  return FFeedLikes;  }
  void __fastcall SetFeedLikes(int Index, QueryResult* _prop_val)
  {  FFeedLikes = _prop_val; FFeedLikes_Specified = true;  }
  bool __fastcall FeedLikes_Specified(int Index)
  {  return FFeedLikes_Specified;  } 
  QueryResult* __fastcall GetFeedTrackedChanges(int Index)
  {  return FFeedTrackedChanges;  }
  void __fastcall SetFeedTrackedChanges(int Index, QueryResult* _prop_val)
  {  FFeedTrackedChanges = _prop_val; FFeedTrackedChanges_Specified = true;  }
  bool __fastcall FeedTrackedChanges_Specified(int Index)
  {  return FFeedTrackedChanges_Specified;  } 
  Name_* __fastcall GetInsertedBy(int Index)
  {  return FInsertedBy;  }
  void __fastcall SetInsertedBy(int Index, Name_* _prop_val)
  {  FInsertedBy = _prop_val; FInsertedBy_Specified = true;  }
  bool __fastcall InsertedBy_Specified(int Index)
  {  return FInsertedBy_Specified;  } 
  ID __fastcall GetInsertedById(int Index)
  {  return FInsertedById;  }
  void __fastcall SetInsertedById(int Index, ID _prop_val)
  {  FInsertedById = _prop_val; FInsertedById_Specified = true;  }
  bool __fastcall InsertedById_Specified(int Index)
  {  return FInsertedById_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLikeCount(int Index)
  {  return FLikeCount;  }
  void __fastcall SetLikeCount(int Index, int _prop_val)
  {  FLikeCount = _prop_val; FLikeCount_Specified = true;  }
  bool __fastcall LikeCount_Specified(int Index)
  {  return FLikeCount_Specified;  } 
  UnicodeString __fastcall GetLinkUrl(int Index)
  {  return FLinkUrl;  }
  void __fastcall SetLinkUrl(int Index, UnicodeString _prop_val)
  {  FLinkUrl = _prop_val; FLinkUrl_Specified = true;  }
  bool __fastcall LinkUrl_Specified(int Index)
  {  return FLinkUrl_Specified;  } 
  Event* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Event* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetRelatedRecordId(int Index)
  {  return FRelatedRecordId;  }
  void __fastcall SetRelatedRecordId(int Index, ID _prop_val)
  {  FRelatedRecordId = _prop_val; FRelatedRecordId_Specified = true;  }
  bool __fastcall RelatedRecordId_Specified(int Index)
  {  return FRelatedRecordId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~EventFeed();
__published:
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        CommentCount = { index=(IS_OPTN|IS_NLBL), read=FCommentCount, write=SetCommentCount, stored = CommentCount_Specified };
  __property TByteDynArray ContentData = { index=(IS_OPTN|IS_NLBL), read=FContentData, write=SetContentData, stored = ContentData_Specified };
  __property UnicodeString ContentDescription = { index=(IS_OPTN|IS_NLBL), read=FContentDescription, write=SetContentDescription, stored = ContentDescription_Specified };
  __property UnicodeString ContentFileName = { index=(IS_OPTN|IS_NLBL), read=FContentFileName, write=SetContentFileName, stored = ContentFileName_Specified };
  __property int        ContentSize = { index=(IS_OPTN|IS_NLBL), read=FContentSize, write=SetContentSize, stored = ContentSize_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedComments = { index=(IS_OPTN|IS_NLBL), read=FFeedComments, write=SetFeedComments, stored = FeedComments_Specified };
  __property QueryResult*  FeedLikes = { index=(IS_OPTN|IS_NLBL), read=FFeedLikes, write=SetFeedLikes, stored = FeedLikes_Specified };
  __property QueryResult* FeedTrackedChanges = { index=(IS_OPTN|IS_NLBL), read=FFeedTrackedChanges, write=SetFeedTrackedChanges, stored = FeedTrackedChanges_Specified };
  __property Name_*      InsertedBy = { index=(IS_OPTN|IS_NLBL), read=FInsertedBy, write=SetInsertedBy, stored = InsertedBy_Specified };
  __property ID         InsertedById = { index=(IS_OPTN|IS_NLBL), read=FInsertedById, write=SetInsertedById, stored = InsertedById_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int         LikeCount = { index=(IS_OPTN|IS_NLBL), read=FLikeCount, write=SetLikeCount, stored = LikeCount_Specified };
  __property UnicodeString    LinkUrl = { index=(IS_OPTN|IS_NLBL), read=FLinkUrl, write=SetLinkUrl, stored = LinkUrl_Specified };
  __property Event*         Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         RelatedRecordId = { index=(IS_OPTN|IS_NLBL), read=FRelatedRecordId, write=SetRelatedRecordId, stored = RelatedRecordId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : EventAttendee, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class EventAttendee : public sObject {
private:
  Name_*           FAttendee;
  bool            FAttendee_Specified;
  ID              FAttendeeId;
  bool            FAttendeeId_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  Event*          FEvent;
  bool            FEvent_Specified;
  ID              FEventId;
  bool            FEventId_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  TXSDateTime*    FRespondedDate;
  bool            FRespondedDate_Specified;
  UnicodeString   FResponse;
  bool            FResponse_Specified;
  UnicodeString   FStatus;
  bool            FStatus_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  Name_* __fastcall GetAttendee(int Index)
  {  return FAttendee;  }
  void __fastcall SetAttendee(int Index, Name_* _prop_val)
  {  FAttendee = _prop_val; FAttendee_Specified = true;  }
  bool __fastcall Attendee_Specified(int Index)
  {  return FAttendee_Specified;  } 
  ID __fastcall GetAttendeeId(int Index)
  {  return FAttendeeId;  }
  void __fastcall SetAttendeeId(int Index, ID _prop_val)
  {  FAttendeeId = _prop_val; FAttendeeId_Specified = true;  }
  bool __fastcall AttendeeId_Specified(int Index)
  {  return FAttendeeId_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  Event* __fastcall GetEvent(int Index)
  {  return FEvent;  }
  void __fastcall SetEvent(int Index, Event* _prop_val)
  {  FEvent = _prop_val; FEvent_Specified = true;  }
  bool __fastcall Event_Specified(int Index)
  {  return FEvent_Specified;  } 
  ID __fastcall GetEventId(int Index)
  {  return FEventId;  }
  void __fastcall SetEventId(int Index, ID _prop_val)
  {  FEventId = _prop_val; FEventId_Specified = true;  }
  bool __fastcall EventId_Specified(int Index)
  {  return FEventId_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  TXSDateTime* __fastcall GetRespondedDate(int Index)
  {  return FRespondedDate;  }
  void __fastcall SetRespondedDate(int Index, TXSDateTime* _prop_val)
  {  FRespondedDate = _prop_val; FRespondedDate_Specified = true;  }
  bool __fastcall RespondedDate_Specified(int Index)
  {  return FRespondedDate_Specified;  } 
  UnicodeString __fastcall GetResponse(int Index)
  {  return FResponse;  }
  void __fastcall SetResponse(int Index, UnicodeString _prop_val)
  {  FResponse = _prop_val; FResponse_Specified = true;  }
  bool __fastcall Response_Specified(int Index)
  {  return FResponse_Specified;  } 
  UnicodeString __fastcall GetStatus(int Index)
  {  return FStatus;  }
  void __fastcall SetStatus(int Index, UnicodeString _prop_val)
  {  FStatus = _prop_val; FStatus_Specified = true;  }
  bool __fastcall Status_Specified(int Index)
  {  return FStatus_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~EventAttendee();
__published:
  __property Name_*        Attendee = { index=(IS_OPTN|IS_NLBL), read=FAttendee, write=SetAttendee, stored = Attendee_Specified };
  __property ID         AttendeeId = { index=(IS_OPTN|IS_NLBL), read=FAttendeeId, write=SetAttendeeId, stored = AttendeeId_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property Event*          Event = { index=(IS_OPTN|IS_NLBL), read=FEvent, write=SetEvent, stored = Event_Specified };
  __property ID            EventId = { index=(IS_OPTN|IS_NLBL), read=FEventId, write=SetEventId, stored = EventId_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property TXSDateTime* RespondedDate = { index=(IS_OPTN|IS_NLBL), read=FRespondedDate, write=SetRespondedDate, stored = RespondedDate_Specified };
  __property UnicodeString   Response = { index=(IS_OPTN|IS_NLBL), read=FResponse, write=SetResponse, stored = Response_Specified };
  __property UnicodeString     Status = { index=(IS_OPTN|IS_NLBL), read=FStatus, write=SetStatus, stored = Status_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : Event, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Event : public sObject {
private:
  Account*        FAccount;
  bool            FAccount_Specified;
  ID              FAccountId;
  bool            FAccountId_Specified;
  TXSDate*        FActivityDate;
  bool            FActivityDate_Specified;
  TXSDateTime*    FActivityDateTime;
  bool            FActivityDateTime_Specified;
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  int             FDurationInMinutes;
  bool            FDurationInMinutes_Specified;
  TXSDateTime*    FEndDateTime;
  bool            FEndDateTime_Specified;
  QueryResult*    FEventAttendees;
  bool            FEventAttendees_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  QueryResult*    FFeeds;
  bool            FFeeds_Specified;
  UnicodeString   FGroupEventType;
  bool            FGroupEventType_Specified;
  bool            FIsAllDayEvent;
  bool            FIsAllDayEvent_Specified;
  bool            FIsArchived;
  bool            FIsArchived_Specified;
  bool            FIsChild;
  bool            FIsChild_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsGroupEvent;
  bool            FIsGroupEvent_Specified;
  bool            FIsPrivate;
  bool            FIsPrivate_Specified;
  bool            FIsRecurrence;
  bool            FIsRecurrence_Specified;
  bool            FIsReminderSet;
  bool            FIsReminderSet_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FLocation;
  bool            FLocation_Specified;
  Name_*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  ID              FRecurrenceActivityId;
  bool            FRecurrenceActivityId_Specified;
  int             FRecurrenceDayOfMonth;
  bool            FRecurrenceDayOfMonth_Specified;
  int             FRecurrenceDayOfWeekMask;
  bool            FRecurrenceDayOfWeekMask_Specified;
  TXSDate*        FRecurrenceEndDateOnly;
  bool            FRecurrenceEndDateOnly_Specified;
  UnicodeString   FRecurrenceInstance;
  bool            FRecurrenceInstance_Specified;
  int             FRecurrenceInterval;
  bool            FRecurrenceInterval_Specified;
  UnicodeString   FRecurrenceMonthOfYear;
  bool            FRecurrenceMonthOfYear_Specified;
  TXSDateTime*    FRecurrenceStartDateTime;
  bool            FRecurrenceStartDateTime_Specified;
  UnicodeString   FRecurrenceTimeZoneSidKey;
  bool            FRecurrenceTimeZoneSidKey_Specified;
  UnicodeString   FRecurrenceType;
  bool            FRecurrenceType_Specified;
  QueryResult*    FRecurringEvents;
  bool            FRecurringEvents_Specified;
  TXSDateTime*    FReminderDateTime;
  bool            FReminderDateTime_Specified;
  UnicodeString   FShowAs;
  bool            FShowAs_Specified;
  TXSDateTime*    FStartDateTime;
  bool            FStartDateTime_Specified;
  UnicodeString   FSubject;
  bool            FSubject_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  Name_*           FWhat;
  bool            FWhat_Specified;
  ID              FWhatId;
  bool            FWhatId_Specified;
  Name_*           FWho;
  bool            FWho_Specified;
  ID              FWhoId;
  bool            FWhoId_Specified;
  Account* __fastcall GetAccount(int Index)
  {  return FAccount;  }
  void __fastcall SetAccount(int Index, Account* _prop_val)
  {  FAccount = _prop_val; FAccount_Specified = true;  }
  bool __fastcall Account_Specified(int Index)
  {  return FAccount_Specified;  } 
  ID __fastcall GetAccountId(int Index)
  {  return FAccountId;  }
  void __fastcall SetAccountId(int Index, ID _prop_val)
  {  FAccountId = _prop_val; FAccountId_Specified = true;  }
  bool __fastcall AccountId_Specified(int Index)
  {  return FAccountId_Specified;  } 
  TXSDate* __fastcall GetActivityDate(int Index)
  {  return FActivityDate;  }
  void __fastcall SetActivityDate(int Index, TXSDate* _prop_val)
  {  FActivityDate = _prop_val; FActivityDate_Specified = true;  }
  bool __fastcall ActivityDate_Specified(int Index)
  {  return FActivityDate_Specified;  } 
  TXSDateTime* __fastcall GetActivityDateTime(int Index)
  {  return FActivityDateTime;  }
  void __fastcall SetActivityDateTime(int Index, TXSDateTime* _prop_val)
  {  FActivityDateTime = _prop_val; FActivityDateTime_Specified = true;  }
  bool __fastcall ActivityDateTime_Specified(int Index)
  {  return FActivityDateTime_Specified;  } 
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  int __fastcall GetDurationInMinutes(int Index)
  {  return FDurationInMinutes;  }
  void __fastcall SetDurationInMinutes(int Index, int _prop_val)
  {  FDurationInMinutes = _prop_val; FDurationInMinutes_Specified = true;  }
  bool __fastcall DurationInMinutes_Specified(int Index)
  {  return FDurationInMinutes_Specified;  } 
  TXSDateTime* __fastcall GetEndDateTime(int Index)
  {  return FEndDateTime;  }
  void __fastcall SetEndDateTime(int Index, TXSDateTime* _prop_val)
  {  FEndDateTime = _prop_val; FEndDateTime_Specified = true;  }
  bool __fastcall EndDateTime_Specified(int Index)
  {  return FEndDateTime_Specified;  } 
  QueryResult* __fastcall GetEventAttendees(int Index)
  {  return FEventAttendees;  }
  void __fastcall SetEventAttendees(int Index, QueryResult* _prop_val)
  {  FEventAttendees = _prop_val; FEventAttendees_Specified = true;  }
  bool __fastcall EventAttendees_Specified(int Index)
  {  return FEventAttendees_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  QueryResult* __fastcall GetFeeds(int Index)
  {  return FFeeds;  }
  void __fastcall SetFeeds(int Index, QueryResult* _prop_val)
  {  FFeeds = _prop_val; FFeeds_Specified = true;  }
  bool __fastcall Feeds_Specified(int Index)
  {  return FFeeds_Specified;  } 
  UnicodeString __fastcall GetGroupEventType(int Index)
  {  return FGroupEventType;  }
  void __fastcall SetGroupEventType(int Index, UnicodeString _prop_val)
  {  FGroupEventType = _prop_val; FGroupEventType_Specified = true;  }
  bool __fastcall GroupEventType_Specified(int Index)
  {  return FGroupEventType_Specified;  } 
  bool __fastcall GetIsAllDayEvent(int Index)
  {  return FIsAllDayEvent;  }
  void __fastcall SetIsAllDayEvent(int Index, bool _prop_val)
  {  FIsAllDayEvent = _prop_val; FIsAllDayEvent_Specified = true;  }
  bool __fastcall IsAllDayEvent_Specified(int Index)
  {  return FIsAllDayEvent_Specified;  } 
  bool __fastcall GetIsArchived(int Index)
  {  return FIsArchived;  }
  void __fastcall SetIsArchived(int Index, bool _prop_val)
  {  FIsArchived = _prop_val; FIsArchived_Specified = true;  }
  bool __fastcall IsArchived_Specified(int Index)
  {  return FIsArchived_Specified;  } 
  bool __fastcall GetIsChild(int Index)
  {  return FIsChild;  }
  void __fastcall SetIsChild(int Index, bool _prop_val)
  {  FIsChild = _prop_val; FIsChild_Specified = true;  }
  bool __fastcall IsChild_Specified(int Index)
  {  return FIsChild_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsGroupEvent(int Index)
  {  return FIsGroupEvent;  }
  void __fastcall SetIsGroupEvent(int Index, bool _prop_val)
  {  FIsGroupEvent = _prop_val; FIsGroupEvent_Specified = true;  }
  bool __fastcall IsGroupEvent_Specified(int Index)
  {  return FIsGroupEvent_Specified;  } 
  bool __fastcall GetIsPrivate(int Index)
  {  return FIsPrivate;  }
  void __fastcall SetIsPrivate(int Index, bool _prop_val)
  {  FIsPrivate = _prop_val; FIsPrivate_Specified = true;  }
  bool __fastcall IsPrivate_Specified(int Index)
  {  return FIsPrivate_Specified;  } 
  bool __fastcall GetIsRecurrence(int Index)
  {  return FIsRecurrence;  }
  void __fastcall SetIsRecurrence(int Index, bool _prop_val)
  {  FIsRecurrence = _prop_val; FIsRecurrence_Specified = true;  }
  bool __fastcall IsRecurrence_Specified(int Index)
  {  return FIsRecurrence_Specified;  } 
  bool __fastcall GetIsReminderSet(int Index)
  {  return FIsReminderSet;  }
  void __fastcall SetIsReminderSet(int Index, bool _prop_val)
  {  FIsReminderSet = _prop_val; FIsReminderSet_Specified = true;  }
  bool __fastcall IsReminderSet_Specified(int Index)
  {  return FIsReminderSet_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetLocation(int Index)
  {  return FLocation;  }
  void __fastcall SetLocation(int Index, UnicodeString _prop_val)
  {  FLocation = _prop_val; FLocation_Specified = true;  }
  bool __fastcall Location_Specified(int Index)
  {  return FLocation_Specified;  } 
  Name_* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, Name_* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  ID __fastcall GetRecurrenceActivityId(int Index)
  {  return FRecurrenceActivityId;  }
  void __fastcall SetRecurrenceActivityId(int Index, ID _prop_val)
  {  FRecurrenceActivityId = _prop_val; FRecurrenceActivityId_Specified = true;  }
  bool __fastcall RecurrenceActivityId_Specified(int Index)
  {  return FRecurrenceActivityId_Specified;  } 
  int __fastcall GetRecurrenceDayOfMonth(int Index)
  {  return FRecurrenceDayOfMonth;  }
  void __fastcall SetRecurrenceDayOfMonth(int Index, int _prop_val)
  {  FRecurrenceDayOfMonth = _prop_val; FRecurrenceDayOfMonth_Specified = true;  }
  bool __fastcall RecurrenceDayOfMonth_Specified(int Index)
  {  return FRecurrenceDayOfMonth_Specified;  } 
  int __fastcall GetRecurrenceDayOfWeekMask(int Index)
  {  return FRecurrenceDayOfWeekMask;  }
  void __fastcall SetRecurrenceDayOfWeekMask(int Index, int _prop_val)
  {  FRecurrenceDayOfWeekMask = _prop_val; FRecurrenceDayOfWeekMask_Specified = true;  }
  bool __fastcall RecurrenceDayOfWeekMask_Specified(int Index)
  {  return FRecurrenceDayOfWeekMask_Specified;  } 
  TXSDate* __fastcall GetRecurrenceEndDateOnly(int Index)
  {  return FRecurrenceEndDateOnly;  }
  void __fastcall SetRecurrenceEndDateOnly(int Index, TXSDate* _prop_val)
  {  FRecurrenceEndDateOnly = _prop_val; FRecurrenceEndDateOnly_Specified = true;  }
  bool __fastcall RecurrenceEndDateOnly_Specified(int Index)
  {  return FRecurrenceEndDateOnly_Specified;  } 
  UnicodeString __fastcall GetRecurrenceInstance(int Index)
  {  return FRecurrenceInstance;  }
  void __fastcall SetRecurrenceInstance(int Index, UnicodeString _prop_val)
  {  FRecurrenceInstance = _prop_val; FRecurrenceInstance_Specified = true;  }
  bool __fastcall RecurrenceInstance_Specified(int Index)
  {  return FRecurrenceInstance_Specified;  } 
  int __fastcall GetRecurrenceInterval(int Index)
  {  return FRecurrenceInterval;  }
  void __fastcall SetRecurrenceInterval(int Index, int _prop_val)
  {  FRecurrenceInterval = _prop_val; FRecurrenceInterval_Specified = true;  }
  bool __fastcall RecurrenceInterval_Specified(int Index)
  {  return FRecurrenceInterval_Specified;  } 
  UnicodeString __fastcall GetRecurrenceMonthOfYear(int Index)
  {  return FRecurrenceMonthOfYear;  }
  void __fastcall SetRecurrenceMonthOfYear(int Index, UnicodeString _prop_val)
  {  FRecurrenceMonthOfYear = _prop_val; FRecurrenceMonthOfYear_Specified = true;  }
  bool __fastcall RecurrenceMonthOfYear_Specified(int Index)
  {  return FRecurrenceMonthOfYear_Specified;  } 
  TXSDateTime* __fastcall GetRecurrenceStartDateTime(int Index)
  {  return FRecurrenceStartDateTime;  }
  void __fastcall SetRecurrenceStartDateTime(int Index, TXSDateTime* _prop_val)
  {  FRecurrenceStartDateTime = _prop_val; FRecurrenceStartDateTime_Specified = true;  }
  bool __fastcall RecurrenceStartDateTime_Specified(int Index)
  {  return FRecurrenceStartDateTime_Specified;  } 
  UnicodeString __fastcall GetRecurrenceTimeZoneSidKey(int Index)
  {  return FRecurrenceTimeZoneSidKey;  }
  void __fastcall SetRecurrenceTimeZoneSidKey(int Index, UnicodeString _prop_val)
  {  FRecurrenceTimeZoneSidKey = _prop_val; FRecurrenceTimeZoneSidKey_Specified = true;  }
  bool __fastcall RecurrenceTimeZoneSidKey_Specified(int Index)
  {  return FRecurrenceTimeZoneSidKey_Specified;  } 
  UnicodeString __fastcall GetRecurrenceType(int Index)
  {  return FRecurrenceType;  }
  void __fastcall SetRecurrenceType(int Index, UnicodeString _prop_val)
  {  FRecurrenceType = _prop_val; FRecurrenceType_Specified = true;  }
  bool __fastcall RecurrenceType_Specified(int Index)
  {  return FRecurrenceType_Specified;  } 
  QueryResult* __fastcall GetRecurringEvents(int Index)
  {  return FRecurringEvents;  }
  void __fastcall SetRecurringEvents(int Index, QueryResult* _prop_val)
  {  FRecurringEvents = _prop_val; FRecurringEvents_Specified = true;  }
  bool __fastcall RecurringEvents_Specified(int Index)
  {  return FRecurringEvents_Specified;  } 
  TXSDateTime* __fastcall GetReminderDateTime(int Index)
  {  return FReminderDateTime;  }
  void __fastcall SetReminderDateTime(int Index, TXSDateTime* _prop_val)
  {  FReminderDateTime = _prop_val; FReminderDateTime_Specified = true;  }
  bool __fastcall ReminderDateTime_Specified(int Index)
  {  return FReminderDateTime_Specified;  } 
  UnicodeString __fastcall GetShowAs(int Index)
  {  return FShowAs;  }
  void __fastcall SetShowAs(int Index, UnicodeString _prop_val)
  {  FShowAs = _prop_val; FShowAs_Specified = true;  }
  bool __fastcall ShowAs_Specified(int Index)
  {  return FShowAs_Specified;  } 
  TXSDateTime* __fastcall GetStartDateTime(int Index)
  {  return FStartDateTime;  }
  void __fastcall SetStartDateTime(int Index, TXSDateTime* _prop_val)
  {  FStartDateTime = _prop_val; FStartDateTime_Specified = true;  }
  bool __fastcall StartDateTime_Specified(int Index)
  {  return FStartDateTime_Specified;  } 
  UnicodeString __fastcall GetSubject(int Index)
  {  return FSubject;  }
  void __fastcall SetSubject(int Index, UnicodeString _prop_val)
  {  FSubject = _prop_val; FSubject_Specified = true;  }
  bool __fastcall Subject_Specified(int Index)
  {  return FSubject_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  Name_* __fastcall GetWhat(int Index)
  {  return FWhat;  }
  void __fastcall SetWhat(int Index, Name_* _prop_val)
  {  FWhat = _prop_val; FWhat_Specified = true;  }
  bool __fastcall What_Specified(int Index)
  {  return FWhat_Specified;  } 
  ID __fastcall GetWhatId(int Index)
  {  return FWhatId;  }
  void __fastcall SetWhatId(int Index, ID _prop_val)
  {  FWhatId = _prop_val; FWhatId_Specified = true;  }
  bool __fastcall WhatId_Specified(int Index)
  {  return FWhatId_Specified;  } 
  Name_* __fastcall GetWho(int Index)
  {  return FWho;  }
  void __fastcall SetWho(int Index, Name_* _prop_val)
  {  FWho = _prop_val; FWho_Specified = true;  }
  bool __fastcall Who_Specified(int Index)
  {  return FWho_Specified;  } 
  ID __fastcall GetWhoId(int Index)
  {  return FWhoId;  }
  void __fastcall SetWhoId(int Index, ID _prop_val)
  {  FWhoId = _prop_val; FWhoId_Specified = true;  }
  bool __fastcall WhoId_Specified(int Index)
  {  return FWhoId_Specified;  } 

public:
  __fastcall ~Event();
__published:
  __property Account*      Account = { index=(IS_OPTN|IS_NLBL), read=FAccount, write=SetAccount, stored = Account_Specified };
  __property ID          AccountId = { index=(IS_OPTN|IS_NLBL), read=FAccountId, write=SetAccountId, stored = AccountId_Specified };
  __property TXSDate*   ActivityDate = { index=(IS_OPTN|IS_NLBL), read=FActivityDate, write=SetActivityDate, stored = ActivityDate_Specified };
  __property TXSDateTime* ActivityDateTime = { index=(IS_OPTN|IS_NLBL), read=FActivityDateTime, write=SetActivityDateTime, stored = ActivityDateTime_Specified };
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property int        DurationInMinutes = { index=(IS_OPTN|IS_NLBL), read=FDurationInMinutes, write=SetDurationInMinutes, stored = DurationInMinutes_Specified };
  __property TXSDateTime* EndDateTime = { index=(IS_OPTN|IS_NLBL), read=FEndDateTime, write=SetEndDateTime, stored = EndDateTime_Specified };
  __property QueryResult* EventAttendees = { index=(IS_OPTN|IS_NLBL), read=FEventAttendees, write=SetEventAttendees, stored = EventAttendees_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property QueryResult*      Feeds = { index=(IS_OPTN|IS_NLBL), read=FFeeds, write=SetFeeds, stored = Feeds_Specified };
  __property UnicodeString GroupEventType = { index=(IS_OPTN|IS_NLBL), read=FGroupEventType, write=SetGroupEventType, stored = GroupEventType_Specified };
  __property bool       IsAllDayEvent = { index=(IS_OPTN|IS_NLBL), read=FIsAllDayEvent, write=SetIsAllDayEvent, stored = IsAllDayEvent_Specified };
  __property bool       IsArchived = { index=(IS_OPTN|IS_NLBL), read=FIsArchived, write=SetIsArchived, stored = IsArchived_Specified };
  __property bool          IsChild = { index=(IS_OPTN|IS_NLBL), read=FIsChild, write=SetIsChild, stored = IsChild_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool       IsGroupEvent = { index=(IS_OPTN|IS_NLBL), read=FIsGroupEvent, write=SetIsGroupEvent, stored = IsGroupEvent_Specified };
  __property bool        IsPrivate = { index=(IS_OPTN|IS_NLBL), read=FIsPrivate, write=SetIsPrivate, stored = IsPrivate_Specified };
  __property bool       IsRecurrence = { index=(IS_OPTN|IS_NLBL), read=FIsRecurrence, write=SetIsRecurrence, stored = IsRecurrence_Specified };
  __property bool       IsReminderSet = { index=(IS_OPTN|IS_NLBL), read=FIsReminderSet, write=SetIsReminderSet, stored = IsReminderSet_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString   Location = { index=(IS_OPTN|IS_NLBL), read=FLocation, write=SetLocation, stored = Location_Specified };
  __property Name_*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property ID         RecurrenceActivityId = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceActivityId, write=SetRecurrenceActivityId, stored = RecurrenceActivityId_Specified };
  __property int        RecurrenceDayOfMonth = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceDayOfMonth, write=SetRecurrenceDayOfMonth, stored = RecurrenceDayOfMonth_Specified };
  __property int        RecurrenceDayOfWeekMask = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceDayOfWeekMask, write=SetRecurrenceDayOfWeekMask, stored = RecurrenceDayOfWeekMask_Specified };
  __property TXSDate*   RecurrenceEndDateOnly = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceEndDateOnly, write=SetRecurrenceEndDateOnly, stored = RecurrenceEndDateOnly_Specified };
  __property UnicodeString RecurrenceInstance = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceInstance, write=SetRecurrenceInstance, stored = RecurrenceInstance_Specified };
  __property int        RecurrenceInterval = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceInterval, write=SetRecurrenceInterval, stored = RecurrenceInterval_Specified };
  __property UnicodeString RecurrenceMonthOfYear = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceMonthOfYear, write=SetRecurrenceMonthOfYear, stored = RecurrenceMonthOfYear_Specified };
  __property TXSDateTime* RecurrenceStartDateTime = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceStartDateTime, write=SetRecurrenceStartDateTime, stored = RecurrenceStartDateTime_Specified };
  __property UnicodeString RecurrenceTimeZoneSidKey = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceTimeZoneSidKey, write=SetRecurrenceTimeZoneSidKey, stored = RecurrenceTimeZoneSidKey_Specified };
  __property UnicodeString RecurrenceType = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceType, write=SetRecurrenceType, stored = RecurrenceType_Specified };
  __property QueryResult* RecurringEvents = { index=(IS_OPTN|IS_NLBL), read=FRecurringEvents, write=SetRecurringEvents, stored = RecurringEvents_Specified };
  __property TXSDateTime* ReminderDateTime = { index=(IS_OPTN|IS_NLBL), read=FReminderDateTime, write=SetReminderDateTime, stored = ReminderDateTime_Specified };
  __property UnicodeString     ShowAs = { index=(IS_OPTN|IS_NLBL), read=FShowAs, write=SetShowAs, stored = ShowAs_Specified };
  __property TXSDateTime* StartDateTime = { index=(IS_OPTN|IS_NLBL), read=FStartDateTime, write=SetStartDateTime, stored = StartDateTime_Specified };
  __property UnicodeString    Subject = { index=(IS_OPTN|IS_NLBL), read=FSubject, write=SetSubject, stored = Subject_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property Name_*            What = { index=(IS_OPTN|IS_NLBL), read=FWhat, write=SetWhat, stored = What_Specified };
  __property ID             WhatId = { index=(IS_OPTN|IS_NLBL), read=FWhatId, write=SetWhatId, stored = WhatId_Specified };
  __property Name_*             Who = { index=(IS_OPTN|IS_NLBL), read=FWho, write=SetWho, stored = Who_Specified };
  __property ID              WhoId = { index=(IS_OPTN|IS_NLBL), read=FWhoId, write=SetWhoId, stored = WhoId_Specified };
};




// ************************************************************************ //
// XML       : EntitySubscription, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class EntitySubscription : public sObject {
private:
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  Name_*           FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  User*           FSubscriber;
  bool            FSubscriber_Specified;
  ID              FSubscriberId;
  bool            FSubscriberId_Specified;
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  Name_* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Name_* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  User* __fastcall GetSubscriber(int Index)
  {  return FSubscriber;  }
  void __fastcall SetSubscriber(int Index, User* _prop_val)
  {  FSubscriber = _prop_val; FSubscriber_Specified = true;  }
  bool __fastcall Subscriber_Specified(int Index)
  {  return FSubscriber_Specified;  } 
  ID __fastcall GetSubscriberId(int Index)
  {  return FSubscriberId;  }
  void __fastcall SetSubscriberId(int Index, ID _prop_val)
  {  FSubscriberId = _prop_val; FSubscriberId_Specified = true;  }
  bool __fastcall SubscriberId_Specified(int Index)
  {  return FSubscriberId_Specified;  } 

public:
  __fastcall ~EntitySubscription();
__published:
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property Name_*          Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property User*      Subscriber = { index=(IS_OPTN|IS_NLBL), read=FSubscriber, write=SetSubscriber, stored = Subscriber_Specified };
  __property ID         SubscriberId = { index=(IS_OPTN|IS_NLBL), read=FSubscriberId, write=SetSubscriberId, stored = SubscriberId_Specified };
};




// ************************************************************************ //
// XML       : EmailTemplate, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class EmailTemplate : public sObject {
private:
  double          FApiVersion;
  bool            FApiVersion_Specified;
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  UnicodeString   FBody;
  bool            FBody_Specified;
  ID              FBrandTemplateId;
  bool            FBrandTemplateId_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  UnicodeString   FDeveloperName;
  bool            FDeveloperName_Specified;
  UnicodeString   FEncoding;
  bool            FEncoding_Specified;
  Folder*         FFolder;
  bool            FFolder_Specified;
  ID              FFolderId;
  bool            FFolderId_Specified;
  UnicodeString   FHtmlValue;
  bool            FHtmlValue_Specified;
  bool            FIsActive;
  bool            FIsActive_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  TXSDateTime*    FLastUsedDate;
  bool            FLastUsedDate_Specified;
  UnicodeString   FMarkup;
  bool            FMarkup_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  UnicodeString   FNamespacePrefix;
  bool            FNamespacePrefix_Specified;
  User*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  UnicodeString   FSubject;
  bool            FSubject_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTemplateStyle;
  bool            FTemplateStyle_Specified;
  UnicodeString   FTemplateType;
  bool            FTemplateType_Specified;
  int             FTimesUsed;
  bool            FTimesUsed_Specified;
  double __fastcall GetApiVersion(int Index)
  {  return FApiVersion;  }
  void __fastcall SetApiVersion(int Index, double _prop_val)
  {  FApiVersion = _prop_val; FApiVersion_Specified = true;  }
  bool __fastcall ApiVersion_Specified(int Index)
  {  return FApiVersion_Specified;  } 
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  ID __fastcall GetBrandTemplateId(int Index)
  {  return FBrandTemplateId;  }
  void __fastcall SetBrandTemplateId(int Index, ID _prop_val)
  {  FBrandTemplateId = _prop_val; FBrandTemplateId_Specified = true;  }
  bool __fastcall BrandTemplateId_Specified(int Index)
  {  return FBrandTemplateId_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  UnicodeString __fastcall GetDeveloperName(int Index)
  {  return FDeveloperName;  }
  void __fastcall SetDeveloperName(int Index, UnicodeString _prop_val)
  {  FDeveloperName = _prop_val; FDeveloperName_Specified = true;  }
  bool __fastcall DeveloperName_Specified(int Index)
  {  return FDeveloperName_Specified;  } 
  UnicodeString __fastcall GetEncoding(int Index)
  {  return FEncoding;  }
  void __fastcall SetEncoding(int Index, UnicodeString _prop_val)
  {  FEncoding = _prop_val; FEncoding_Specified = true;  }
  bool __fastcall Encoding_Specified(int Index)
  {  return FEncoding_Specified;  } 
  Folder* __fastcall GetFolder(int Index)
  {  return FFolder;  }
  void __fastcall SetFolder(int Index, Folder* _prop_val)
  {  FFolder = _prop_val; FFolder_Specified = true;  }
  bool __fastcall Folder_Specified(int Index)
  {  return FFolder_Specified;  } 
  ID __fastcall GetFolderId(int Index)
  {  return FFolderId;  }
  void __fastcall SetFolderId(int Index, ID _prop_val)
  {  FFolderId = _prop_val; FFolderId_Specified = true;  }
  bool __fastcall FolderId_Specified(int Index)
  {  return FFolderId_Specified;  } 
  UnicodeString __fastcall GetHtmlValue(int Index)
  {  return FHtmlValue;  }
  void __fastcall SetHtmlValue(int Index, UnicodeString _prop_val)
  {  FHtmlValue = _prop_val; FHtmlValue_Specified = true;  }
  bool __fastcall HtmlValue_Specified(int Index)
  {  return FHtmlValue_Specified;  } 
  bool __fastcall GetIsActive(int Index)
  {  return FIsActive;  }
  void __fastcall SetIsActive(int Index, bool _prop_val)
  {  FIsActive = _prop_val; FIsActive_Specified = true;  }
  bool __fastcall IsActive_Specified(int Index)
  {  return FIsActive_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  TXSDateTime* __fastcall GetLastUsedDate(int Index)
  {  return FLastUsedDate;  }
  void __fastcall SetLastUsedDate(int Index, TXSDateTime* _prop_val)
  {  FLastUsedDate = _prop_val; FLastUsedDate_Specified = true;  }
  bool __fastcall LastUsedDate_Specified(int Index)
  {  return FLastUsedDate_Specified;  } 
  UnicodeString __fastcall GetMarkup(int Index)
  {  return FMarkup;  }
  void __fastcall SetMarkup(int Index, UnicodeString _prop_val)
  {  FMarkup = _prop_val; FMarkup_Specified = true;  }
  bool __fastcall Markup_Specified(int Index)
  {  return FMarkup_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  UnicodeString __fastcall GetNamespacePrefix(int Index)
  {  return FNamespacePrefix;  }
  void __fastcall SetNamespacePrefix(int Index, UnicodeString _prop_val)
  {  FNamespacePrefix = _prop_val; FNamespacePrefix_Specified = true;  }
  bool __fastcall NamespacePrefix_Specified(int Index)
  {  return FNamespacePrefix_Specified;  } 
  User* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, User* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  UnicodeString __fastcall GetSubject(int Index)
  {  return FSubject;  }
  void __fastcall SetSubject(int Index, UnicodeString _prop_val)
  {  FSubject = _prop_val; FSubject_Specified = true;  }
  bool __fastcall Subject_Specified(int Index)
  {  return FSubject_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTemplateStyle(int Index)
  {  return FTemplateStyle;  }
  void __fastcall SetTemplateStyle(int Index, UnicodeString _prop_val)
  {  FTemplateStyle = _prop_val; FTemplateStyle_Specified = true;  }
  bool __fastcall TemplateStyle_Specified(int Index)
  {  return FTemplateStyle_Specified;  } 
  UnicodeString __fastcall GetTemplateType(int Index)
  {  return FTemplateType;  }
  void __fastcall SetTemplateType(int Index, UnicodeString _prop_val)
  {  FTemplateType = _prop_val; FTemplateType_Specified = true;  }
  bool __fastcall TemplateType_Specified(int Index)
  {  return FTemplateType_Specified;  } 
  int __fastcall GetTimesUsed(int Index)
  {  return FTimesUsed;  }
  void __fastcall SetTimesUsed(int Index, int _prop_val)
  {  FTimesUsed = _prop_val; FTimesUsed_Specified = true;  }
  bool __fastcall TimesUsed_Specified(int Index)
  {  return FTimesUsed_Specified;  } 

public:
  __fastcall ~EmailTemplate();
__published:
  __property double     ApiVersion = { index=(IS_OPTN|IS_NLBL), read=FApiVersion, write=SetApiVersion, stored = ApiVersion_Specified };
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property ID         BrandTemplateId = { index=(IS_OPTN|IS_NLBL), read=FBrandTemplateId, write=SetBrandTemplateId, stored = BrandTemplateId_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property UnicodeString DeveloperName = { index=(IS_OPTN|IS_NLBL), read=FDeveloperName, write=SetDeveloperName, stored = DeveloperName_Specified };
  __property UnicodeString   Encoding = { index=(IS_OPTN|IS_NLBL), read=FEncoding, write=SetEncoding, stored = Encoding_Specified };
  __property Folder*        Folder = { index=(IS_OPTN|IS_NLBL), read=FFolder, write=SetFolder, stored = Folder_Specified };
  __property ID           FolderId = { index=(IS_OPTN|IS_NLBL), read=FFolderId, write=SetFolderId, stored = FolderId_Specified };
  __property UnicodeString  HtmlValue = { index=(IS_OPTN|IS_NLBL), read=FHtmlValue, write=SetHtmlValue, stored = HtmlValue_Specified };
  __property bool         IsActive = { index=(IS_OPTN|IS_NLBL), read=FIsActive, write=SetIsActive, stored = IsActive_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property TXSDateTime* LastUsedDate = { index=(IS_OPTN|IS_NLBL), read=FLastUsedDate, write=SetLastUsedDate, stored = LastUsedDate_Specified };
  __property UnicodeString     Markup = { index=(IS_OPTN|IS_NLBL), read=FMarkup, write=SetMarkup, stored = Markup_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property UnicodeString NamespacePrefix = { index=(IS_OPTN|IS_NLBL), read=FNamespacePrefix, write=SetNamespacePrefix, stored = NamespacePrefix_Specified };
  __property User*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property UnicodeString    Subject = { index=(IS_OPTN|IS_NLBL), read=FSubject, write=SetSubject, stored = Subject_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString TemplateStyle = { index=(IS_OPTN|IS_NLBL), read=FTemplateStyle, write=SetTemplateStyle, stored = TemplateStyle_Specified };
  __property UnicodeString TemplateType = { index=(IS_OPTN|IS_NLBL), read=FTemplateType, write=SetTemplateType, stored = TemplateType_Specified };
  __property int         TimesUsed = { index=(IS_OPTN|IS_NLBL), read=FTimesUsed, write=SetTimesUsed, stored = TimesUsed_Specified };
};




// ************************************************************************ //
// XML       : Task, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Task : public sObject {
private:
  Account*        FAccount;
  bool            FAccount_Specified;
  ID              FAccountId;
  bool            FAccountId_Specified;
  TXSDate*        FActivityDate;
  bool            FActivityDate_Specified;
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  UnicodeString   FCallDisposition;
  bool            FCallDisposition_Specified;
  int             FCallDurationInSeconds;
  bool            FCallDurationInSeconds_Specified;
  UnicodeString   FCallObject;
  bool            FCallObject_Specified;
  UnicodeString   FCallType;
  bool            FCallType_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  QueryResult*    FFeeds;
  bool            FFeeds_Specified;
  bool            FIsArchived;
  bool            FIsArchived_Specified;
  bool            FIsClosed;
  bool            FIsClosed_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsRecurrence;
  bool            FIsRecurrence_Specified;
  bool            FIsReminderSet;
  bool            FIsReminderSet_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  Name_*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  UnicodeString   FPriority;
  bool            FPriority_Specified;
  ID              FRecurrenceActivityId;
  bool            FRecurrenceActivityId_Specified;
  int             FRecurrenceDayOfMonth;
  bool            FRecurrenceDayOfMonth_Specified;
  int             FRecurrenceDayOfWeekMask;
  bool            FRecurrenceDayOfWeekMask_Specified;
  TXSDate*        FRecurrenceEndDateOnly;
  bool            FRecurrenceEndDateOnly_Specified;
  UnicodeString   FRecurrenceInstance;
  bool            FRecurrenceInstance_Specified;
  int             FRecurrenceInterval;
  bool            FRecurrenceInterval_Specified;
  UnicodeString   FRecurrenceMonthOfYear;
  bool            FRecurrenceMonthOfYear_Specified;
  TXSDate*        FRecurrenceStartDateOnly;
  bool            FRecurrenceStartDateOnly_Specified;
  UnicodeString   FRecurrenceTimeZoneSidKey;
  bool            FRecurrenceTimeZoneSidKey_Specified;
  UnicodeString   FRecurrenceType;
  bool            FRecurrenceType_Specified;
  QueryResult*    FRecurringTasks;
  bool            FRecurringTasks_Specified;
  TXSDateTime*    FReminderDateTime;
  bool            FReminderDateTime_Specified;
  UnicodeString   FStatus;
  bool            FStatus_Specified;
  UnicodeString   FSubject;
  bool            FSubject_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  Name_*           FWhat;
  bool            FWhat_Specified;
  ID              FWhatId;
  bool            FWhatId_Specified;
  Name_*           FWho;
  bool            FWho_Specified;
  ID              FWhoId;
  bool            FWhoId_Specified;
  Account* __fastcall GetAccount(int Index)
  {  return FAccount;  }
  void __fastcall SetAccount(int Index, Account* _prop_val)
  {  FAccount = _prop_val; FAccount_Specified = true;  }
  bool __fastcall Account_Specified(int Index)
  {  return FAccount_Specified;  } 
  ID __fastcall GetAccountId(int Index)
  {  return FAccountId;  }
  void __fastcall SetAccountId(int Index, ID _prop_val)
  {  FAccountId = _prop_val; FAccountId_Specified = true;  }
  bool __fastcall AccountId_Specified(int Index)
  {  return FAccountId_Specified;  } 
  TXSDate* __fastcall GetActivityDate(int Index)
  {  return FActivityDate;  }
  void __fastcall SetActivityDate(int Index, TXSDate* _prop_val)
  {  FActivityDate = _prop_val; FActivityDate_Specified = true;  }
  bool __fastcall ActivityDate_Specified(int Index)
  {  return FActivityDate_Specified;  } 
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  UnicodeString __fastcall GetCallDisposition(int Index)
  {  return FCallDisposition;  }
  void __fastcall SetCallDisposition(int Index, UnicodeString _prop_val)
  {  FCallDisposition = _prop_val; FCallDisposition_Specified = true;  }
  bool __fastcall CallDisposition_Specified(int Index)
  {  return FCallDisposition_Specified;  } 
  int __fastcall GetCallDurationInSeconds(int Index)
  {  return FCallDurationInSeconds;  }
  void __fastcall SetCallDurationInSeconds(int Index, int _prop_val)
  {  FCallDurationInSeconds = _prop_val; FCallDurationInSeconds_Specified = true;  }
  bool __fastcall CallDurationInSeconds_Specified(int Index)
  {  return FCallDurationInSeconds_Specified;  } 
  UnicodeString __fastcall GetCallObject(int Index)
  {  return FCallObject;  }
  void __fastcall SetCallObject(int Index, UnicodeString _prop_val)
  {  FCallObject = _prop_val; FCallObject_Specified = true;  }
  bool __fastcall CallObject_Specified(int Index)
  {  return FCallObject_Specified;  } 
  UnicodeString __fastcall GetCallType(int Index)
  {  return FCallType;  }
  void __fastcall SetCallType(int Index, UnicodeString _prop_val)
  {  FCallType = _prop_val; FCallType_Specified = true;  }
  bool __fastcall CallType_Specified(int Index)
  {  return FCallType_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  QueryResult* __fastcall GetFeeds(int Index)
  {  return FFeeds;  }
  void __fastcall SetFeeds(int Index, QueryResult* _prop_val)
  {  FFeeds = _prop_val; FFeeds_Specified = true;  }
  bool __fastcall Feeds_Specified(int Index)
  {  return FFeeds_Specified;  } 
  bool __fastcall GetIsArchived(int Index)
  {  return FIsArchived;  }
  void __fastcall SetIsArchived(int Index, bool _prop_val)
  {  FIsArchived = _prop_val; FIsArchived_Specified = true;  }
  bool __fastcall IsArchived_Specified(int Index)
  {  return FIsArchived_Specified;  } 
  bool __fastcall GetIsClosed(int Index)
  {  return FIsClosed;  }
  void __fastcall SetIsClosed(int Index, bool _prop_val)
  {  FIsClosed = _prop_val; FIsClosed_Specified = true;  }
  bool __fastcall IsClosed_Specified(int Index)
  {  return FIsClosed_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsRecurrence(int Index)
  {  return FIsRecurrence;  }
  void __fastcall SetIsRecurrence(int Index, bool _prop_val)
  {  FIsRecurrence = _prop_val; FIsRecurrence_Specified = true;  }
  bool __fastcall IsRecurrence_Specified(int Index)
  {  return FIsRecurrence_Specified;  } 
  bool __fastcall GetIsReminderSet(int Index)
  {  return FIsReminderSet;  }
  void __fastcall SetIsReminderSet(int Index, bool _prop_val)
  {  FIsReminderSet = _prop_val; FIsReminderSet_Specified = true;  }
  bool __fastcall IsReminderSet_Specified(int Index)
  {  return FIsReminderSet_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  Name_* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, Name_* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  UnicodeString __fastcall GetPriority(int Index)
  {  return FPriority;  }
  void __fastcall SetPriority(int Index, UnicodeString _prop_val)
  {  FPriority = _prop_val; FPriority_Specified = true;  }
  bool __fastcall Priority_Specified(int Index)
  {  return FPriority_Specified;  } 
  ID __fastcall GetRecurrenceActivityId(int Index)
  {  return FRecurrenceActivityId;  }
  void __fastcall SetRecurrenceActivityId(int Index, ID _prop_val)
  {  FRecurrenceActivityId = _prop_val; FRecurrenceActivityId_Specified = true;  }
  bool __fastcall RecurrenceActivityId_Specified(int Index)
  {  return FRecurrenceActivityId_Specified;  } 
  int __fastcall GetRecurrenceDayOfMonth(int Index)
  {  return FRecurrenceDayOfMonth;  }
  void __fastcall SetRecurrenceDayOfMonth(int Index, int _prop_val)
  {  FRecurrenceDayOfMonth = _prop_val; FRecurrenceDayOfMonth_Specified = true;  }
  bool __fastcall RecurrenceDayOfMonth_Specified(int Index)
  {  return FRecurrenceDayOfMonth_Specified;  } 
  int __fastcall GetRecurrenceDayOfWeekMask(int Index)
  {  return FRecurrenceDayOfWeekMask;  }
  void __fastcall SetRecurrenceDayOfWeekMask(int Index, int _prop_val)
  {  FRecurrenceDayOfWeekMask = _prop_val; FRecurrenceDayOfWeekMask_Specified = true;  }
  bool __fastcall RecurrenceDayOfWeekMask_Specified(int Index)
  {  return FRecurrenceDayOfWeekMask_Specified;  } 
  TXSDate* __fastcall GetRecurrenceEndDateOnly(int Index)
  {  return FRecurrenceEndDateOnly;  }
  void __fastcall SetRecurrenceEndDateOnly(int Index, TXSDate* _prop_val)
  {  FRecurrenceEndDateOnly = _prop_val; FRecurrenceEndDateOnly_Specified = true;  }
  bool __fastcall RecurrenceEndDateOnly_Specified(int Index)
  {  return FRecurrenceEndDateOnly_Specified;  } 
  UnicodeString __fastcall GetRecurrenceInstance(int Index)
  {  return FRecurrenceInstance;  }
  void __fastcall SetRecurrenceInstance(int Index, UnicodeString _prop_val)
  {  FRecurrenceInstance = _prop_val; FRecurrenceInstance_Specified = true;  }
  bool __fastcall RecurrenceInstance_Specified(int Index)
  {  return FRecurrenceInstance_Specified;  } 
  int __fastcall GetRecurrenceInterval(int Index)
  {  return FRecurrenceInterval;  }
  void __fastcall SetRecurrenceInterval(int Index, int _prop_val)
  {  FRecurrenceInterval = _prop_val; FRecurrenceInterval_Specified = true;  }
  bool __fastcall RecurrenceInterval_Specified(int Index)
  {  return FRecurrenceInterval_Specified;  } 
  UnicodeString __fastcall GetRecurrenceMonthOfYear(int Index)
  {  return FRecurrenceMonthOfYear;  }
  void __fastcall SetRecurrenceMonthOfYear(int Index, UnicodeString _prop_val)
  {  FRecurrenceMonthOfYear = _prop_val; FRecurrenceMonthOfYear_Specified = true;  }
  bool __fastcall RecurrenceMonthOfYear_Specified(int Index)
  {  return FRecurrenceMonthOfYear_Specified;  } 
  TXSDate* __fastcall GetRecurrenceStartDateOnly(int Index)
  {  return FRecurrenceStartDateOnly;  }
  void __fastcall SetRecurrenceStartDateOnly(int Index, TXSDate* _prop_val)
  {  FRecurrenceStartDateOnly = _prop_val; FRecurrenceStartDateOnly_Specified = true;  }
  bool __fastcall RecurrenceStartDateOnly_Specified(int Index)
  {  return FRecurrenceStartDateOnly_Specified;  } 
  UnicodeString __fastcall GetRecurrenceTimeZoneSidKey(int Index)
  {  return FRecurrenceTimeZoneSidKey;  }
  void __fastcall SetRecurrenceTimeZoneSidKey(int Index, UnicodeString _prop_val)
  {  FRecurrenceTimeZoneSidKey = _prop_val; FRecurrenceTimeZoneSidKey_Specified = true;  }
  bool __fastcall RecurrenceTimeZoneSidKey_Specified(int Index)
  {  return FRecurrenceTimeZoneSidKey_Specified;  } 
  UnicodeString __fastcall GetRecurrenceType(int Index)
  {  return FRecurrenceType;  }
  void __fastcall SetRecurrenceType(int Index, UnicodeString _prop_val)
  {  FRecurrenceType = _prop_val; FRecurrenceType_Specified = true;  }
  bool __fastcall RecurrenceType_Specified(int Index)
  {  return FRecurrenceType_Specified;  } 
  QueryResult* __fastcall GetRecurringTasks(int Index)
  {  return FRecurringTasks;  }
  void __fastcall SetRecurringTasks(int Index, QueryResult* _prop_val)
  {  FRecurringTasks = _prop_val; FRecurringTasks_Specified = true;  }
  bool __fastcall RecurringTasks_Specified(int Index)
  {  return FRecurringTasks_Specified;  } 
  TXSDateTime* __fastcall GetReminderDateTime(int Index)
  {  return FReminderDateTime;  }
  void __fastcall SetReminderDateTime(int Index, TXSDateTime* _prop_val)
  {  FReminderDateTime = _prop_val; FReminderDateTime_Specified = true;  }
  bool __fastcall ReminderDateTime_Specified(int Index)
  {  return FReminderDateTime_Specified;  } 
  UnicodeString __fastcall GetStatus(int Index)
  {  return FStatus;  }
  void __fastcall SetStatus(int Index, UnicodeString _prop_val)
  {  FStatus = _prop_val; FStatus_Specified = true;  }
  bool __fastcall Status_Specified(int Index)
  {  return FStatus_Specified;  } 
  UnicodeString __fastcall GetSubject(int Index)
  {  return FSubject;  }
  void __fastcall SetSubject(int Index, UnicodeString _prop_val)
  {  FSubject = _prop_val; FSubject_Specified = true;  }
  bool __fastcall Subject_Specified(int Index)
  {  return FSubject_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  Name_* __fastcall GetWhat(int Index)
  {  return FWhat;  }
  void __fastcall SetWhat(int Index, Name_* _prop_val)
  {  FWhat = _prop_val; FWhat_Specified = true;  }
  bool __fastcall What_Specified(int Index)
  {  return FWhat_Specified;  } 
  ID __fastcall GetWhatId(int Index)
  {  return FWhatId;  }
  void __fastcall SetWhatId(int Index, ID _prop_val)
  {  FWhatId = _prop_val; FWhatId_Specified = true;  }
  bool __fastcall WhatId_Specified(int Index)
  {  return FWhatId_Specified;  } 
  Name_* __fastcall GetWho(int Index)
  {  return FWho;  }
  void __fastcall SetWho(int Index, Name_* _prop_val)
  {  FWho = _prop_val; FWho_Specified = true;  }
  bool __fastcall Who_Specified(int Index)
  {  return FWho_Specified;  } 
  ID __fastcall GetWhoId(int Index)
  {  return FWhoId;  }
  void __fastcall SetWhoId(int Index, ID _prop_val)
  {  FWhoId = _prop_val; FWhoId_Specified = true;  }
  bool __fastcall WhoId_Specified(int Index)
  {  return FWhoId_Specified;  } 

public:
  __fastcall ~Task();
__published:
  __property Account*      Account = { index=(IS_OPTN|IS_NLBL), read=FAccount, write=SetAccount, stored = Account_Specified };
  __property ID          AccountId = { index=(IS_OPTN|IS_NLBL), read=FAccountId, write=SetAccountId, stored = AccountId_Specified };
  __property TXSDate*   ActivityDate = { index=(IS_OPTN|IS_NLBL), read=FActivityDate, write=SetActivityDate, stored = ActivityDate_Specified };
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property UnicodeString CallDisposition = { index=(IS_OPTN|IS_NLBL), read=FCallDisposition, write=SetCallDisposition, stored = CallDisposition_Specified };
  __property int        CallDurationInSeconds = { index=(IS_OPTN|IS_NLBL), read=FCallDurationInSeconds, write=SetCallDurationInSeconds, stored = CallDurationInSeconds_Specified };
  __property UnicodeString CallObject = { index=(IS_OPTN|IS_NLBL), read=FCallObject, write=SetCallObject, stored = CallObject_Specified };
  __property UnicodeString   CallType = { index=(IS_OPTN|IS_NLBL), read=FCallType, write=SetCallType, stored = CallType_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property QueryResult*      Feeds = { index=(IS_OPTN|IS_NLBL), read=FFeeds, write=SetFeeds, stored = Feeds_Specified };
  __property bool       IsArchived = { index=(IS_OPTN|IS_NLBL), read=FIsArchived, write=SetIsArchived, stored = IsArchived_Specified };
  __property bool         IsClosed = { index=(IS_OPTN|IS_NLBL), read=FIsClosed, write=SetIsClosed, stored = IsClosed_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool       IsRecurrence = { index=(IS_OPTN|IS_NLBL), read=FIsRecurrence, write=SetIsRecurrence, stored = IsRecurrence_Specified };
  __property bool       IsReminderSet = { index=(IS_OPTN|IS_NLBL), read=FIsReminderSet, write=SetIsReminderSet, stored = IsReminderSet_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property Name_*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property UnicodeString   Priority = { index=(IS_OPTN|IS_NLBL), read=FPriority, write=SetPriority, stored = Priority_Specified };
  __property ID         RecurrenceActivityId = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceActivityId, write=SetRecurrenceActivityId, stored = RecurrenceActivityId_Specified };
  __property int        RecurrenceDayOfMonth = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceDayOfMonth, write=SetRecurrenceDayOfMonth, stored = RecurrenceDayOfMonth_Specified };
  __property int        RecurrenceDayOfWeekMask = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceDayOfWeekMask, write=SetRecurrenceDayOfWeekMask, stored = RecurrenceDayOfWeekMask_Specified };
  __property TXSDate*   RecurrenceEndDateOnly = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceEndDateOnly, write=SetRecurrenceEndDateOnly, stored = RecurrenceEndDateOnly_Specified };
  __property UnicodeString RecurrenceInstance = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceInstance, write=SetRecurrenceInstance, stored = RecurrenceInstance_Specified };
  __property int        RecurrenceInterval = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceInterval, write=SetRecurrenceInterval, stored = RecurrenceInterval_Specified };
  __property UnicodeString RecurrenceMonthOfYear = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceMonthOfYear, write=SetRecurrenceMonthOfYear, stored = RecurrenceMonthOfYear_Specified };
  __property TXSDate*   RecurrenceStartDateOnly = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceStartDateOnly, write=SetRecurrenceStartDateOnly, stored = RecurrenceStartDateOnly_Specified };
  __property UnicodeString RecurrenceTimeZoneSidKey = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceTimeZoneSidKey, write=SetRecurrenceTimeZoneSidKey, stored = RecurrenceTimeZoneSidKey_Specified };
  __property UnicodeString RecurrenceType = { index=(IS_OPTN|IS_NLBL), read=FRecurrenceType, write=SetRecurrenceType, stored = RecurrenceType_Specified };
  __property QueryResult* RecurringTasks = { index=(IS_OPTN|IS_NLBL), read=FRecurringTasks, write=SetRecurringTasks, stored = RecurringTasks_Specified };
  __property TXSDateTime* ReminderDateTime = { index=(IS_OPTN|IS_NLBL), read=FReminderDateTime, write=SetReminderDateTime, stored = ReminderDateTime_Specified };
  __property UnicodeString     Status = { index=(IS_OPTN|IS_NLBL), read=FStatus, write=SetStatus, stored = Status_Specified };
  __property UnicodeString    Subject = { index=(IS_OPTN|IS_NLBL), read=FSubject, write=SetSubject, stored = Subject_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property Name_*            What = { index=(IS_OPTN|IS_NLBL), read=FWhat, write=SetWhat, stored = What_Specified };
  __property ID             WhatId = { index=(IS_OPTN|IS_NLBL), read=FWhatId, write=SetWhatId, stored = WhatId_Specified };
  __property Name_*             Who = { index=(IS_OPTN|IS_NLBL), read=FWho, write=SetWho, stored = Who_Specified };
  __property ID              WhoId = { index=(IS_OPTN|IS_NLBL), read=FWhoId, write=SetWhoId, stored = WhoId_Specified };
};




// ************************************************************************ //
// XML       : EmailStatus, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class EmailStatus : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FEmailTemplateName;
  bool            FEmailTemplateName_Specified;
  TXSDateTime*    FFirstOpenDate;
  bool            FFirstOpenDate_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  TXSDateTime*    FLastOpenDate;
  bool            FLastOpenDate_Specified;
  Task*           FTask;
  bool            FTask_Specified;
  ID              FTaskId;
  bool            FTaskId_Specified;
  int             FTimesOpened;
  bool            FTimesOpened_Specified;
  Name_*           FWho;
  bool            FWho_Specified;
  ID              FWhoId;
  bool            FWhoId_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetEmailTemplateName(int Index)
  {  return FEmailTemplateName;  }
  void __fastcall SetEmailTemplateName(int Index, UnicodeString _prop_val)
  {  FEmailTemplateName = _prop_val; FEmailTemplateName_Specified = true;  }
  bool __fastcall EmailTemplateName_Specified(int Index)
  {  return FEmailTemplateName_Specified;  } 
  TXSDateTime* __fastcall GetFirstOpenDate(int Index)
  {  return FFirstOpenDate;  }
  void __fastcall SetFirstOpenDate(int Index, TXSDateTime* _prop_val)
  {  FFirstOpenDate = _prop_val; FFirstOpenDate_Specified = true;  }
  bool __fastcall FirstOpenDate_Specified(int Index)
  {  return FFirstOpenDate_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  TXSDateTime* __fastcall GetLastOpenDate(int Index)
  {  return FLastOpenDate;  }
  void __fastcall SetLastOpenDate(int Index, TXSDateTime* _prop_val)
  {  FLastOpenDate = _prop_val; FLastOpenDate_Specified = true;  }
  bool __fastcall LastOpenDate_Specified(int Index)
  {  return FLastOpenDate_Specified;  } 
  Task* __fastcall GetTask(int Index)
  {  return FTask;  }
  void __fastcall SetTask(int Index, Task* _prop_val)
  {  FTask = _prop_val; FTask_Specified = true;  }
  bool __fastcall Task_Specified(int Index)
  {  return FTask_Specified;  } 
  ID __fastcall GetTaskId(int Index)
  {  return FTaskId;  }
  void __fastcall SetTaskId(int Index, ID _prop_val)
  {  FTaskId = _prop_val; FTaskId_Specified = true;  }
  bool __fastcall TaskId_Specified(int Index)
  {  return FTaskId_Specified;  } 
  int __fastcall GetTimesOpened(int Index)
  {  return FTimesOpened;  }
  void __fastcall SetTimesOpened(int Index, int _prop_val)
  {  FTimesOpened = _prop_val; FTimesOpened_Specified = true;  }
  bool __fastcall TimesOpened_Specified(int Index)
  {  return FTimesOpened_Specified;  } 
  Name_* __fastcall GetWho(int Index)
  {  return FWho;  }
  void __fastcall SetWho(int Index, Name_* _prop_val)
  {  FWho = _prop_val; FWho_Specified = true;  }
  bool __fastcall Who_Specified(int Index)
  {  return FWho_Specified;  } 
  ID __fastcall GetWhoId(int Index)
  {  return FWhoId;  }
  void __fastcall SetWhoId(int Index, ID _prop_val)
  {  FWhoId = _prop_val; FWhoId_Specified = true;  }
  bool __fastcall WhoId_Specified(int Index)
  {  return FWhoId_Specified;  } 

public:
  __fastcall ~EmailStatus();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString EmailTemplateName = { index=(IS_OPTN|IS_NLBL), read=FEmailTemplateName, write=SetEmailTemplateName, stored = EmailTemplateName_Specified };
  __property TXSDateTime* FirstOpenDate = { index=(IS_OPTN|IS_NLBL), read=FFirstOpenDate, write=SetFirstOpenDate, stored = FirstOpenDate_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property TXSDateTime* LastOpenDate = { index=(IS_OPTN|IS_NLBL), read=FLastOpenDate, write=SetLastOpenDate, stored = LastOpenDate_Specified };
  __property Task*            Task = { index=(IS_OPTN|IS_NLBL), read=FTask, write=SetTask, stored = Task_Specified };
  __property ID             TaskId = { index=(IS_OPTN|IS_NLBL), read=FTaskId, write=SetTaskId, stored = TaskId_Specified };
  __property int        TimesOpened = { index=(IS_OPTN|IS_NLBL), read=FTimesOpened, write=SetTimesOpened, stored = TimesOpened_Specified };
  __property Name_*             Who = { index=(IS_OPTN|IS_NLBL), read=FWho, write=SetWho, stored = Who_Specified };
  __property ID              WhoId = { index=(IS_OPTN|IS_NLBL), read=FWhoId, write=SetWhoId, stored = WhoId_Specified };
};




// ************************************************************************ //
// XML       : EmailServicesFunction, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class EmailServicesFunction : public sObject {
private:
  UnicodeString   FAddressInactiveAction;
  bool            FAddressInactiveAction_Specified;
  QueryResult*    FAddresses;
  bool            FAddresses_Specified;
  ID              FApexClassId;
  bool            FApexClassId_Specified;
  UnicodeString   FAttachmentOption;
  bool            FAttachmentOption_Specified;
  UnicodeString   FAuthenticationFailureAction;
  bool            FAuthenticationFailureAction_Specified;
  UnicodeString   FAuthorizationFailureAction;
  bool            FAuthorizationFailureAction_Specified;
  UnicodeString   FAuthorizedSenders;
  bool            FAuthorizedSenders_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FErrorRoutingAddress;
  bool            FErrorRoutingAddress_Specified;
  UnicodeString   FFunctionInactiveAction;
  bool            FFunctionInactiveAction_Specified;
  UnicodeString   FFunctionName;
  bool            FFunctionName_Specified;
  bool            FIsActive;
  bool            FIsActive_Specified;
  bool            FIsAuthenticationRequired;
  bool            FIsAuthenticationRequired_Specified;
  bool            FIsErrorRoutingEnabled;
  bool            FIsErrorRoutingEnabled_Specified;
  bool            FIsTextAttachmentsAsBinary;
  bool            FIsTextAttachmentsAsBinary_Specified;
  bool            FIsTlsRequired;
  bool            FIsTlsRequired_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FOverLimitAction;
  bool            FOverLimitAction_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString __fastcall GetAddressInactiveAction(int Index)
  {  return FAddressInactiveAction;  }
  void __fastcall SetAddressInactiveAction(int Index, UnicodeString _prop_val)
  {  FAddressInactiveAction = _prop_val; FAddressInactiveAction_Specified = true;  }
  bool __fastcall AddressInactiveAction_Specified(int Index)
  {  return FAddressInactiveAction_Specified;  } 
  QueryResult* __fastcall GetAddresses(int Index)
  {  return FAddresses;  }
  void __fastcall SetAddresses(int Index, QueryResult* _prop_val)
  {  FAddresses = _prop_val; FAddresses_Specified = true;  }
  bool __fastcall Addresses_Specified(int Index)
  {  return FAddresses_Specified;  } 
  ID __fastcall GetApexClassId(int Index)
  {  return FApexClassId;  }
  void __fastcall SetApexClassId(int Index, ID _prop_val)
  {  FApexClassId = _prop_val; FApexClassId_Specified = true;  }
  bool __fastcall ApexClassId_Specified(int Index)
  {  return FApexClassId_Specified;  } 
  UnicodeString __fastcall GetAttachmentOption(int Index)
  {  return FAttachmentOption;  }
  void __fastcall SetAttachmentOption(int Index, UnicodeString _prop_val)
  {  FAttachmentOption = _prop_val; FAttachmentOption_Specified = true;  }
  bool __fastcall AttachmentOption_Specified(int Index)
  {  return FAttachmentOption_Specified;  } 
  UnicodeString __fastcall GetAuthenticationFailureAction(int Index)
  {  return FAuthenticationFailureAction;  }
  void __fastcall SetAuthenticationFailureAction(int Index, UnicodeString _prop_val)
  {  FAuthenticationFailureAction = _prop_val; FAuthenticationFailureAction_Specified = true;  }
  bool __fastcall AuthenticationFailureAction_Specified(int Index)
  {  return FAuthenticationFailureAction_Specified;  } 
  UnicodeString __fastcall GetAuthorizationFailureAction(int Index)
  {  return FAuthorizationFailureAction;  }
  void __fastcall SetAuthorizationFailureAction(int Index, UnicodeString _prop_val)
  {  FAuthorizationFailureAction = _prop_val; FAuthorizationFailureAction_Specified = true;  }
  bool __fastcall AuthorizationFailureAction_Specified(int Index)
  {  return FAuthorizationFailureAction_Specified;  } 
  UnicodeString __fastcall GetAuthorizedSenders(int Index)
  {  return FAuthorizedSenders;  }
  void __fastcall SetAuthorizedSenders(int Index, UnicodeString _prop_val)
  {  FAuthorizedSenders = _prop_val; FAuthorizedSenders_Specified = true;  }
  bool __fastcall AuthorizedSenders_Specified(int Index)
  {  return FAuthorizedSenders_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetErrorRoutingAddress(int Index)
  {  return FErrorRoutingAddress;  }
  void __fastcall SetErrorRoutingAddress(int Index, UnicodeString _prop_val)
  {  FErrorRoutingAddress = _prop_val; FErrorRoutingAddress_Specified = true;  }
  bool __fastcall ErrorRoutingAddress_Specified(int Index)
  {  return FErrorRoutingAddress_Specified;  } 
  UnicodeString __fastcall GetFunctionInactiveAction(int Index)
  {  return FFunctionInactiveAction;  }
  void __fastcall SetFunctionInactiveAction(int Index, UnicodeString _prop_val)
  {  FFunctionInactiveAction = _prop_val; FFunctionInactiveAction_Specified = true;  }
  bool __fastcall FunctionInactiveAction_Specified(int Index)
  {  return FFunctionInactiveAction_Specified;  } 
  UnicodeString __fastcall GetFunctionName(int Index)
  {  return FFunctionName;  }
  void __fastcall SetFunctionName(int Index, UnicodeString _prop_val)
  {  FFunctionName = _prop_val; FFunctionName_Specified = true;  }
  bool __fastcall FunctionName_Specified(int Index)
  {  return FFunctionName_Specified;  } 
  bool __fastcall GetIsActive(int Index)
  {  return FIsActive;  }
  void __fastcall SetIsActive(int Index, bool _prop_val)
  {  FIsActive = _prop_val; FIsActive_Specified = true;  }
  bool __fastcall IsActive_Specified(int Index)
  {  return FIsActive_Specified;  } 
  bool __fastcall GetIsAuthenticationRequired(int Index)
  {  return FIsAuthenticationRequired;  }
  void __fastcall SetIsAuthenticationRequired(int Index, bool _prop_val)
  {  FIsAuthenticationRequired = _prop_val; FIsAuthenticationRequired_Specified = true;  }
  bool __fastcall IsAuthenticationRequired_Specified(int Index)
  {  return FIsAuthenticationRequired_Specified;  } 
  bool __fastcall GetIsErrorRoutingEnabled(int Index)
  {  return FIsErrorRoutingEnabled;  }
  void __fastcall SetIsErrorRoutingEnabled(int Index, bool _prop_val)
  {  FIsErrorRoutingEnabled = _prop_val; FIsErrorRoutingEnabled_Specified = true;  }
  bool __fastcall IsErrorRoutingEnabled_Specified(int Index)
  {  return FIsErrorRoutingEnabled_Specified;  } 
  bool __fastcall GetIsTextAttachmentsAsBinary(int Index)
  {  return FIsTextAttachmentsAsBinary;  }
  void __fastcall SetIsTextAttachmentsAsBinary(int Index, bool _prop_val)
  {  FIsTextAttachmentsAsBinary = _prop_val; FIsTextAttachmentsAsBinary_Specified = true;  }
  bool __fastcall IsTextAttachmentsAsBinary_Specified(int Index)
  {  return FIsTextAttachmentsAsBinary_Specified;  } 
  bool __fastcall GetIsTlsRequired(int Index)
  {  return FIsTlsRequired;  }
  void __fastcall SetIsTlsRequired(int Index, bool _prop_val)
  {  FIsTlsRequired = _prop_val; FIsTlsRequired_Specified = true;  }
  bool __fastcall IsTlsRequired_Specified(int Index)
  {  return FIsTlsRequired_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetOverLimitAction(int Index)
  {  return FOverLimitAction;  }
  void __fastcall SetOverLimitAction(int Index, UnicodeString _prop_val)
  {  FOverLimitAction = _prop_val; FOverLimitAction_Specified = true;  }
  bool __fastcall OverLimitAction_Specified(int Index)
  {  return FOverLimitAction_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~EmailServicesFunction();
__published:
  __property UnicodeString AddressInactiveAction = { index=(IS_OPTN|IS_NLBL), read=FAddressInactiveAction, write=SetAddressInactiveAction, stored = AddressInactiveAction_Specified };
  __property QueryResult*  Addresses = { index=(IS_OPTN|IS_NLBL), read=FAddresses, write=SetAddresses, stored = Addresses_Specified };
  __property ID         ApexClassId = { index=(IS_OPTN|IS_NLBL), read=FApexClassId, write=SetApexClassId, stored = ApexClassId_Specified };
  __property UnicodeString AttachmentOption = { index=(IS_OPTN|IS_NLBL), read=FAttachmentOption, write=SetAttachmentOption, stored = AttachmentOption_Specified };
  __property UnicodeString AuthenticationFailureAction = { index=(IS_OPTN|IS_NLBL), read=FAuthenticationFailureAction, write=SetAuthenticationFailureAction, stored = AuthenticationFailureAction_Specified };
  __property UnicodeString AuthorizationFailureAction = { index=(IS_OPTN|IS_NLBL), read=FAuthorizationFailureAction, write=SetAuthorizationFailureAction, stored = AuthorizationFailureAction_Specified };
  __property UnicodeString AuthorizedSenders = { index=(IS_OPTN|IS_NLBL), read=FAuthorizedSenders, write=SetAuthorizedSenders, stored = AuthorizedSenders_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString ErrorRoutingAddress = { index=(IS_OPTN|IS_NLBL), read=FErrorRoutingAddress, write=SetErrorRoutingAddress, stored = ErrorRoutingAddress_Specified };
  __property UnicodeString FunctionInactiveAction = { index=(IS_OPTN|IS_NLBL), read=FFunctionInactiveAction, write=SetFunctionInactiveAction, stored = FunctionInactiveAction_Specified };
  __property UnicodeString FunctionName = { index=(IS_OPTN|IS_NLBL), read=FFunctionName, write=SetFunctionName, stored = FunctionName_Specified };
  __property bool         IsActive = { index=(IS_OPTN|IS_NLBL), read=FIsActive, write=SetIsActive, stored = IsActive_Specified };
  __property bool       IsAuthenticationRequired = { index=(IS_OPTN|IS_NLBL), read=FIsAuthenticationRequired, write=SetIsAuthenticationRequired, stored = IsAuthenticationRequired_Specified };
  __property bool       IsErrorRoutingEnabled = { index=(IS_OPTN|IS_NLBL), read=FIsErrorRoutingEnabled, write=SetIsErrorRoutingEnabled, stored = IsErrorRoutingEnabled_Specified };
  __property bool       IsTextAttachmentsAsBinary = { index=(IS_OPTN|IS_NLBL), read=FIsTextAttachmentsAsBinary, write=SetIsTextAttachmentsAsBinary, stored = IsTextAttachmentsAsBinary_Specified };
  __property bool       IsTlsRequired = { index=(IS_OPTN|IS_NLBL), read=FIsTlsRequired, write=SetIsTlsRequired, stored = IsTlsRequired_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString OverLimitAction = { index=(IS_OPTN|IS_NLBL), read=FOverLimitAction, write=SetOverLimitAction, stored = OverLimitAction_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : EmailServicesAddress, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class EmailServicesAddress : public sObject {
private:
  UnicodeString   FAuthorizedSenders;
  bool            FAuthorizedSenders_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FEmailDomainName;
  bool            FEmailDomainName_Specified;
  EmailServicesFunction* FFunction;
  bool            FFunction_Specified;
  ID              FFunctionId;
  bool            FFunctionId_Specified;
  bool            FIsActive;
  bool            FIsActive_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FLocalPart;
  bool            FLocalPart_Specified;
  ID              FRunAsUserId;
  bool            FRunAsUserId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString __fastcall GetAuthorizedSenders(int Index)
  {  return FAuthorizedSenders;  }
  void __fastcall SetAuthorizedSenders(int Index, UnicodeString _prop_val)
  {  FAuthorizedSenders = _prop_val; FAuthorizedSenders_Specified = true;  }
  bool __fastcall AuthorizedSenders_Specified(int Index)
  {  return FAuthorizedSenders_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetEmailDomainName(int Index)
  {  return FEmailDomainName;  }
  void __fastcall SetEmailDomainName(int Index, UnicodeString _prop_val)
  {  FEmailDomainName = _prop_val; FEmailDomainName_Specified = true;  }
  bool __fastcall EmailDomainName_Specified(int Index)
  {  return FEmailDomainName_Specified;  } 
  EmailServicesFunction* __fastcall GetFunction(int Index)
  {  return FFunction;  }
  void __fastcall SetFunction(int Index, EmailServicesFunction* _prop_val)
  {  FFunction = _prop_val; FFunction_Specified = true;  }
  bool __fastcall Function_Specified(int Index)
  {  return FFunction_Specified;  } 
  ID __fastcall GetFunctionId(int Index)
  {  return FFunctionId;  }
  void __fastcall SetFunctionId(int Index, ID _prop_val)
  {  FFunctionId = _prop_val; FFunctionId_Specified = true;  }
  bool __fastcall FunctionId_Specified(int Index)
  {  return FFunctionId_Specified;  } 
  bool __fastcall GetIsActive(int Index)
  {  return FIsActive;  }
  void __fastcall SetIsActive(int Index, bool _prop_val)
  {  FIsActive = _prop_val; FIsActive_Specified = true;  }
  bool __fastcall IsActive_Specified(int Index)
  {  return FIsActive_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetLocalPart(int Index)
  {  return FLocalPart;  }
  void __fastcall SetLocalPart(int Index, UnicodeString _prop_val)
  {  FLocalPart = _prop_val; FLocalPart_Specified = true;  }
  bool __fastcall LocalPart_Specified(int Index)
  {  return FLocalPart_Specified;  } 
  ID __fastcall GetRunAsUserId(int Index)
  {  return FRunAsUserId;  }
  void __fastcall SetRunAsUserId(int Index, ID _prop_val)
  {  FRunAsUserId = _prop_val; FRunAsUserId_Specified = true;  }
  bool __fastcall RunAsUserId_Specified(int Index)
  {  return FRunAsUserId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~EmailServicesAddress();
__published:
  __property UnicodeString AuthorizedSenders = { index=(IS_OPTN|IS_NLBL), read=FAuthorizedSenders, write=SetAuthorizedSenders, stored = AuthorizedSenders_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString EmailDomainName = { index=(IS_OPTN|IS_NLBL), read=FEmailDomainName, write=SetEmailDomainName, stored = EmailDomainName_Specified };
  __property EmailServicesFunction*   Function = { index=(IS_OPTN|IS_NLBL), read=FFunction, write=SetFunction, stored = Function_Specified };
  __property ID         FunctionId = { index=(IS_OPTN|IS_NLBL), read=FFunctionId, write=SetFunctionId, stored = FunctionId_Specified };
  __property bool         IsActive = { index=(IS_OPTN|IS_NLBL), read=FIsActive, write=SetIsActive, stored = IsActive_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString  LocalPart = { index=(IS_OPTN|IS_NLBL), read=FLocalPart, write=SetLocalPart, stored = LocalPart_Specified };
  __property ID         RunAsUserId = { index=(IS_OPTN|IS_NLBL), read=FRunAsUserId, write=SetRunAsUserId, stored = RunAsUserId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : DocumentAttachmentMap, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class DocumentAttachmentMap : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  ID              FDocumentId;
  bool            FDocumentId_Specified;
  int             FDocumentSequence;
  bool            FDocumentSequence_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  ID __fastcall GetDocumentId(int Index)
  {  return FDocumentId;  }
  void __fastcall SetDocumentId(int Index, ID _prop_val)
  {  FDocumentId = _prop_val; FDocumentId_Specified = true;  }
  bool __fastcall DocumentId_Specified(int Index)
  {  return FDocumentId_Specified;  } 
  int __fastcall GetDocumentSequence(int Index)
  {  return FDocumentSequence;  }
  void __fastcall SetDocumentSequence(int Index, int _prop_val)
  {  FDocumentSequence = _prop_val; FDocumentSequence_Specified = true;  }
  bool __fastcall DocumentSequence_Specified(int Index)
  {  return FDocumentSequence_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 

public:
  __fastcall ~DocumentAttachmentMap();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property ID         DocumentId = { index=(IS_OPTN|IS_NLBL), read=FDocumentId, write=SetDocumentId, stored = DocumentId_Specified };
  __property int        DocumentSequence = { index=(IS_OPTN|IS_NLBL), read=FDocumentSequence, write=SetDocumentSequence, stored = DocumentSequence_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
};




// ************************************************************************ //
// XML       : Document, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Document : public sObject {
private:
  User*           FAuthor;
  bool            FAuthor_Specified;
  ID              FAuthorId;
  bool            FAuthorId_Specified;
  TByteDynArray   FBody;
  bool            FBody_Specified;
  int             FBodyLength;
  bool            FBodyLength_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  UnicodeString   FDeveloperName;
  bool            FDeveloperName_Specified;
  Folder*         FFolder;
  bool            FFolder_Specified;
  ID              FFolderId;
  bool            FFolderId_Specified;
  bool            FIsBodySearchable;
  bool            FIsBodySearchable_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsInternalUseOnly;
  bool            FIsInternalUseOnly_Specified;
  bool            FIsPublic;
  bool            FIsPublic_Specified;
  UnicodeString   FKeywords;
  bool            FKeywords_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  UnicodeString   FNamespacePrefix;
  bool            FNamespacePrefix_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString   FUrl;
  bool            FUrl_Specified;
  User* __fastcall GetAuthor(int Index)
  {  return FAuthor;  }
  void __fastcall SetAuthor(int Index, User* _prop_val)
  {  FAuthor = _prop_val; FAuthor_Specified = true;  }
  bool __fastcall Author_Specified(int Index)
  {  return FAuthor_Specified;  } 
  ID __fastcall GetAuthorId(int Index)
  {  return FAuthorId;  }
  void __fastcall SetAuthorId(int Index, ID _prop_val)
  {  FAuthorId = _prop_val; FAuthorId_Specified = true;  }
  bool __fastcall AuthorId_Specified(int Index)
  {  return FAuthorId_Specified;  } 
  TByteDynArray __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, TByteDynArray _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetBodyLength(int Index)
  {  return FBodyLength;  }
  void __fastcall SetBodyLength(int Index, int _prop_val)
  {  FBodyLength = _prop_val; FBodyLength_Specified = true;  }
  bool __fastcall BodyLength_Specified(int Index)
  {  return FBodyLength_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  UnicodeString __fastcall GetDeveloperName(int Index)
  {  return FDeveloperName;  }
  void __fastcall SetDeveloperName(int Index, UnicodeString _prop_val)
  {  FDeveloperName = _prop_val; FDeveloperName_Specified = true;  }
  bool __fastcall DeveloperName_Specified(int Index)
  {  return FDeveloperName_Specified;  } 
  Folder* __fastcall GetFolder(int Index)
  {  return FFolder;  }
  void __fastcall SetFolder(int Index, Folder* _prop_val)
  {  FFolder = _prop_val; FFolder_Specified = true;  }
  bool __fastcall Folder_Specified(int Index)
  {  return FFolder_Specified;  } 
  ID __fastcall GetFolderId(int Index)
  {  return FFolderId;  }
  void __fastcall SetFolderId(int Index, ID _prop_val)
  {  FFolderId = _prop_val; FFolderId_Specified = true;  }
  bool __fastcall FolderId_Specified(int Index)
  {  return FFolderId_Specified;  } 
  bool __fastcall GetIsBodySearchable(int Index)
  {  return FIsBodySearchable;  }
  void __fastcall SetIsBodySearchable(int Index, bool _prop_val)
  {  FIsBodySearchable = _prop_val; FIsBodySearchable_Specified = true;  }
  bool __fastcall IsBodySearchable_Specified(int Index)
  {  return FIsBodySearchable_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsInternalUseOnly(int Index)
  {  return FIsInternalUseOnly;  }
  void __fastcall SetIsInternalUseOnly(int Index, bool _prop_val)
  {  FIsInternalUseOnly = _prop_val; FIsInternalUseOnly_Specified = true;  }
  bool __fastcall IsInternalUseOnly_Specified(int Index)
  {  return FIsInternalUseOnly_Specified;  } 
  bool __fastcall GetIsPublic(int Index)
  {  return FIsPublic;  }
  void __fastcall SetIsPublic(int Index, bool _prop_val)
  {  FIsPublic = _prop_val; FIsPublic_Specified = true;  }
  bool __fastcall IsPublic_Specified(int Index)
  {  return FIsPublic_Specified;  } 
  UnicodeString __fastcall GetKeywords(int Index)
  {  return FKeywords;  }
  void __fastcall SetKeywords(int Index, UnicodeString _prop_val)
  {  FKeywords = _prop_val; FKeywords_Specified = true;  }
  bool __fastcall Keywords_Specified(int Index)
  {  return FKeywords_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  UnicodeString __fastcall GetNamespacePrefix(int Index)
  {  return FNamespacePrefix;  }
  void __fastcall SetNamespacePrefix(int Index, UnicodeString _prop_val)
  {  FNamespacePrefix = _prop_val; FNamespacePrefix_Specified = true;  }
  bool __fastcall NamespacePrefix_Specified(int Index)
  {  return FNamespacePrefix_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 
  UnicodeString __fastcall GetUrl(int Index)
  {  return FUrl;  }
  void __fastcall SetUrl(int Index, UnicodeString _prop_val)
  {  FUrl = _prop_val; FUrl_Specified = true;  }
  bool __fastcall Url_Specified(int Index)
  {  return FUrl_Specified;  } 

public:
  __fastcall ~Document();
__published:
  __property User*          Author = { index=(IS_OPTN|IS_NLBL), read=FAuthor, write=SetAuthor, stored = Author_Specified };
  __property ID           AuthorId = { index=(IS_OPTN|IS_NLBL), read=FAuthorId, write=SetAuthorId, stored = AuthorId_Specified };
  __property TByteDynArray       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        BodyLength = { index=(IS_OPTN|IS_NLBL), read=FBodyLength, write=SetBodyLength, stored = BodyLength_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property UnicodeString DeveloperName = { index=(IS_OPTN|IS_NLBL), read=FDeveloperName, write=SetDeveloperName, stored = DeveloperName_Specified };
  __property Folder*        Folder = { index=(IS_OPTN|IS_NLBL), read=FFolder, write=SetFolder, stored = Folder_Specified };
  __property ID           FolderId = { index=(IS_OPTN|IS_NLBL), read=FFolderId, write=SetFolderId, stored = FolderId_Specified };
  __property bool       IsBodySearchable = { index=(IS_OPTN|IS_NLBL), read=FIsBodySearchable, write=SetIsBodySearchable, stored = IsBodySearchable_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool       IsInternalUseOnly = { index=(IS_OPTN|IS_NLBL), read=FIsInternalUseOnly, write=SetIsInternalUseOnly, stored = IsInternalUseOnly_Specified };
  __property bool         IsPublic = { index=(IS_OPTN|IS_NLBL), read=FIsPublic, write=SetIsPublic, stored = IsPublic_Specified };
  __property UnicodeString   Keywords = { index=(IS_OPTN|IS_NLBL), read=FKeywords, write=SetKeywords, stored = Keywords_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property UnicodeString NamespacePrefix = { index=(IS_OPTN|IS_NLBL), read=FNamespacePrefix, write=SetNamespacePrefix, stored = NamespacePrefix_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
  __property UnicodeString        Url = { index=(IS_OPTN|IS_NLBL), read=FUrl, write=SetUrl, stored = Url_Specified };
};




// ************************************************************************ //
// XML       : Payment_Type__c_, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Payment_Type__c_ : public sObject {
private:
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FDeposit_Details__r;
  bool            FDeposit_Details__r_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  QueryResult*    FNotes;
  bool            FNotes_Specified;
  QueryResult*    FNotesAndAttachments;
  bool            FNotesAndAttachments_Specified;
  Name_*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetDeposit_Details__r(int Index)
  {  return FDeposit_Details__r;  }
  void __fastcall SetDeposit_Details__r(int Index, QueryResult* _prop_val)
  {  FDeposit_Details__r = _prop_val; FDeposit_Details__r_Specified = true;  }
  bool __fastcall Deposit_Details__r_Specified(int Index)
  {  return FDeposit_Details__r_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  QueryResult* __fastcall GetNotes(int Index)
  {  return FNotes;  }
  void __fastcall SetNotes(int Index, QueryResult* _prop_val)
  {  FNotes = _prop_val; FNotes_Specified = true;  }
  bool __fastcall Notes_Specified(int Index)
  {  return FNotes_Specified;  } 
  QueryResult* __fastcall GetNotesAndAttachments(int Index)
  {  return FNotesAndAttachments;  }
  void __fastcall SetNotesAndAttachments(int Index, QueryResult* _prop_val)
  {  FNotesAndAttachments = _prop_val; FNotesAndAttachments_Specified = true;  }
  bool __fastcall NotesAndAttachments_Specified(int Index)
  {  return FNotesAndAttachments_Specified;  } 
  Name_* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, Name_* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~Payment_Type__c_();
__published:
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* Deposit_Details__r = { index=(IS_OPTN|IS_NLBL), read=FDeposit_Details__r, write=SetDeposit_Details__r, stored = Deposit_Details__r_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property QueryResult*      Notes = { index=(IS_OPTN|IS_NLBL), read=FNotes, write=SetNotes, stored = Notes_Specified };
  __property QueryResult* NotesAndAttachments = { index=(IS_OPTN|IS_NLBL), read=FNotesAndAttachments, write=SetNotesAndAttachments, stored = NotesAndAttachments_Specified };
  __property Name_*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : Deposit__c_, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Deposit__c_ : public sObject {
private:
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  ID              FDay__c_;
  bool            FDay__c__Specified;
  Day__c_*         FDay__r;
  bool            FDay__r_Specified;
  QueryResult*    FDeposit_Details__r;
  bool            FDeposit_Details__r_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  QueryResult*    FNotes;
  bool            FNotes_Specified;
  QueryResult*    FNotesAndAttachments;
  bool            FNotesAndAttachments_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  ID __fastcall GetDay__c_(int Index)
  {  return FDay__c_;  }
  void __fastcall SetDay__c_(int Index, ID _prop_val)
  {  FDay__c_ = _prop_val; FDay__c__Specified = true;  }
  bool __fastcall Day__c__Specified(int Index)
  {  return FDay__c__Specified;  } 
  Day__c_* __fastcall GetDay__r(int Index)
  {  return FDay__r;  }
  void __fastcall SetDay__r(int Index, Day__c_* _prop_val)
  {  FDay__r = _prop_val; FDay__r_Specified = true;  }
  bool __fastcall Day__r_Specified(int Index)
  {  return FDay__r_Specified;  } 
  QueryResult* __fastcall GetDeposit_Details__r(int Index)
  {  return FDeposit_Details__r;  }
  void __fastcall SetDeposit_Details__r(int Index, QueryResult* _prop_val)
  {  FDeposit_Details__r = _prop_val; FDeposit_Details__r_Specified = true;  }
  bool __fastcall Deposit_Details__r_Specified(int Index)
  {  return FDeposit_Details__r_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  QueryResult* __fastcall GetNotes(int Index)
  {  return FNotes;  }
  void __fastcall SetNotes(int Index, QueryResult* _prop_val)
  {  FNotes = _prop_val; FNotes_Specified = true;  }
  bool __fastcall Notes_Specified(int Index)
  {  return FNotes_Specified;  } 
  QueryResult* __fastcall GetNotesAndAttachments(int Index)
  {  return FNotesAndAttachments;  }
  void __fastcall SetNotesAndAttachments(int Index, QueryResult* _prop_val)
  {  FNotesAndAttachments = _prop_val; FNotesAndAttachments_Specified = true;  }
  bool __fastcall NotesAndAttachments_Specified(int Index)
  {  return FNotesAndAttachments_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~Deposit__c_();
__published:
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property ID             Day__c = { index=(IS_OPTN|IS_NLBL), read=FDay__c_, write=SetDay__c_, stored = Day__c__Specified };
  __property Day__c_*        Day__r = { index=(IS_OPTN|IS_NLBL), read=FDay__r, write=SetDay__r, stored = Day__r_Specified };
  __property QueryResult* Deposit_Details__r = { index=(IS_OPTN|IS_NLBL), read=FDeposit_Details__r, write=SetDeposit_Details__r, stored = Deposit_Details__r_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property QueryResult*      Notes = { index=(IS_OPTN|IS_NLBL), read=FNotes, write=SetNotes, stored = Notes_Specified };
  __property QueryResult* NotesAndAttachments = { index=(IS_OPTN|IS_NLBL), read=FNotesAndAttachments, write=SetNotesAndAttachments, stored = NotesAndAttachments_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : Deposit_Detail__c_, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Deposit_Detail__c_ : public sObject {
private:
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  double          FDeposit_Value__c;
  bool            FDeposit_Value__c_Specified;
  ID              FDeposit__c_;
  bool            FDeposit__c__Specified;
  Deposit__c_*     FDeposit__r;
  bool            FDeposit__r_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  double          FMenumate_Value__c;
  bool            FMenumate_Value__c_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  QueryResult*    FNotes;
  bool            FNotes_Specified;
  QueryResult*    FNotesAndAttachments;
  bool            FNotesAndAttachments_Specified;
  ID              FPayment_Type__c_;
  bool            FPayment_Type__c__Specified;
  Payment_Type__c_* FPayment_Type__r;
  bool            FPayment_Type__r_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  double __fastcall GetDeposit_Value__c(int Index)
  {  return FDeposit_Value__c;  }
  void __fastcall SetDeposit_Value__c(int Index, double _prop_val)
  {  FDeposit_Value__c = _prop_val; FDeposit_Value__c_Specified = true;  }
  bool __fastcall Deposit_Value__c_Specified(int Index)
  {  return FDeposit_Value__c_Specified;  } 
  ID __fastcall GetDeposit__c_(int Index)
  {  return FDeposit__c_;  }
  void __fastcall SetDeposit__c_(int Index, ID _prop_val)
  {  FDeposit__c_ = _prop_val; FDeposit__c__Specified = true;  }
  bool __fastcall Deposit__c__Specified(int Index)
  {  return FDeposit__c__Specified;  } 
  Deposit__c_* __fastcall GetDeposit__r(int Index)
  {  return FDeposit__r;  }
  void __fastcall SetDeposit__r(int Index, Deposit__c_* _prop_val)
  {  FDeposit__r = _prop_val; FDeposit__r_Specified = true;  }
  bool __fastcall Deposit__r_Specified(int Index)
  {  return FDeposit__r_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  double __fastcall GetMenumate_Value__c(int Index)
  {  return FMenumate_Value__c;  }
  void __fastcall SetMenumate_Value__c(int Index, double _prop_val)
  {  FMenumate_Value__c = _prop_val; FMenumate_Value__c_Specified = true;  }
  bool __fastcall Menumate_Value__c_Specified(int Index)
  {  return FMenumate_Value__c_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  QueryResult* __fastcall GetNotes(int Index)
  {  return FNotes;  }
  void __fastcall SetNotes(int Index, QueryResult* _prop_val)
  {  FNotes = _prop_val; FNotes_Specified = true;  }
  bool __fastcall Notes_Specified(int Index)
  {  return FNotes_Specified;  } 
  QueryResult* __fastcall GetNotesAndAttachments(int Index)
  {  return FNotesAndAttachments;  }
  void __fastcall SetNotesAndAttachments(int Index, QueryResult* _prop_val)
  {  FNotesAndAttachments = _prop_val; FNotesAndAttachments_Specified = true;  }
  bool __fastcall NotesAndAttachments_Specified(int Index)
  {  return FNotesAndAttachments_Specified;  } 
  ID __fastcall GetPayment_Type__c_(int Index)
  {  return FPayment_Type__c_;  }
  void __fastcall SetPayment_Type__c_(int Index, ID _prop_val)
  {  FPayment_Type__c_ = _prop_val; FPayment_Type__c__Specified = true;  }
  bool __fastcall Payment_Type__c__Specified(int Index)
  {  return FPayment_Type__c__Specified;  } 
  Payment_Type__c_* __fastcall GetPayment_Type__r(int Index)
  {  return FPayment_Type__r;  }
  void __fastcall SetPayment_Type__r(int Index, Payment_Type__c_* _prop_val)
  {  FPayment_Type__r = _prop_val; FPayment_Type__r_Specified = true;  }
  bool __fastcall Payment_Type__r_Specified(int Index)
  {  return FPayment_Type__r_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~Deposit_Detail__c_();
__published:
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property double     Deposit_Value__c = { index=(IS_OPTN|IS_NLBL), read=FDeposit_Value__c, write=SetDeposit_Value__c, stored = Deposit_Value__c_Specified };
  __property ID         Deposit__c = { index=(IS_OPTN|IS_NLBL), read=FDeposit__c_, write=SetDeposit__c_, stored = Deposit__c__Specified };
  __property Deposit__c_* Deposit__r = { index=(IS_OPTN|IS_NLBL), read=FDeposit__r, write=SetDeposit__r, stored = Deposit__r_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property double     Menumate_Value__c = { index=(IS_OPTN|IS_NLBL), read=FMenumate_Value__c, write=SetMenumate_Value__c, stored = Menumate_Value__c_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property QueryResult*      Notes = { index=(IS_OPTN|IS_NLBL), read=FNotes, write=SetNotes, stored = Notes_Specified };
  __property QueryResult* NotesAndAttachments = { index=(IS_OPTN|IS_NLBL), read=FNotesAndAttachments, write=SetNotesAndAttachments, stored = NotesAndAttachments_Specified };
  __property ID         Payment_Type__c = { index=(IS_OPTN|IS_NLBL), read=FPayment_Type__c_, write=SetPayment_Type__c_, stored = Payment_Type__c__Specified };
  __property Payment_Type__c_* Payment_Type__r = { index=(IS_OPTN|IS_NLBL), read=FPayment_Type__r, write=SetPayment_Type__r, stored = Payment_Type__r_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : Site__c_, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Site__c_ : public sObject {
private:
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  UnicodeString   FCountry__c;
  bool            FCountry__c_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FCurrency__c;
  bool            FCurrency__c_Specified;
  QueryResult*    FDays__r;
  bool            FDays__r_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  double          FMonth_Average_Sale_Value__c;
  bool            FMonth_Average_Sale_Value__c_Specified;
  double          FMonth_Capture_Rate__c;
  bool            FMonth_Capture_Rate__c_Specified;
  double          FMonth_Hit_Rate__c;
  bool            FMonth_Hit_Rate__c_Specified;
  double          FMonth_Per_Print_Value__c;
  bool            FMonth_Per_Print_Value__c_Specified;
  double          FMonth_Spend_per_head__c;
  bool            FMonth_Spend_per_head__c_Specified;
  double          FMonth_Total_Revenue__c;
  bool            FMonth_Total_Revenue__c_Specified;
  double          FMonth_Total_Transactions__c;
  bool            FMonth_Total_Transactions__c_Specified;
  QueryResult*    FMonthly_Variables__r;
  bool            FMonthly_Variables__r_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  QueryResult*    FNotes;
  bool            FNotes_Specified;
  QueryResult*    FNotesAndAttachments;
  bool            FNotesAndAttachments_Specified;
  Name_*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  QueryResult*    FProducts__r;
  bool            FProducts__r_Specified;
  QueryResult*    FStaff_Titles__r;
  bool            FStaff_Titles__r_Specified;
  QueryResult*    FStaff__r;
  bool            FStaff__r_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  UnicodeString __fastcall GetCountry__c(int Index)
  {  return FCountry__c;  }
  void __fastcall SetCountry__c(int Index, UnicodeString _prop_val)
  {  FCountry__c = _prop_val; FCountry__c_Specified = true;  }
  bool __fastcall Country__c_Specified(int Index)
  {  return FCountry__c_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetCurrency__c(int Index)
  {  return FCurrency__c;  }
  void __fastcall SetCurrency__c(int Index, UnicodeString _prop_val)
  {  FCurrency__c = _prop_val; FCurrency__c_Specified = true;  }
  bool __fastcall Currency__c_Specified(int Index)
  {  return FCurrency__c_Specified;  } 
  QueryResult* __fastcall GetDays__r(int Index)
  {  return FDays__r;  }
  void __fastcall SetDays__r(int Index, QueryResult* _prop_val)
  {  FDays__r = _prop_val; FDays__r_Specified = true;  }
  bool __fastcall Days__r_Specified(int Index)
  {  return FDays__r_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  double __fastcall GetMonth_Average_Sale_Value__c(int Index)
  {  return FMonth_Average_Sale_Value__c;  }
  void __fastcall SetMonth_Average_Sale_Value__c(int Index, double _prop_val)
  {  FMonth_Average_Sale_Value__c = _prop_val; FMonth_Average_Sale_Value__c_Specified = true;  }
  bool __fastcall Month_Average_Sale_Value__c_Specified(int Index)
  {  return FMonth_Average_Sale_Value__c_Specified;  } 
  double __fastcall GetMonth_Capture_Rate__c(int Index)
  {  return FMonth_Capture_Rate__c;  }
  void __fastcall SetMonth_Capture_Rate__c(int Index, double _prop_val)
  {  FMonth_Capture_Rate__c = _prop_val; FMonth_Capture_Rate__c_Specified = true;  }
  bool __fastcall Month_Capture_Rate__c_Specified(int Index)
  {  return FMonth_Capture_Rate__c_Specified;  } 
  double __fastcall GetMonth_Hit_Rate__c(int Index)
  {  return FMonth_Hit_Rate__c;  }
  void __fastcall SetMonth_Hit_Rate__c(int Index, double _prop_val)
  {  FMonth_Hit_Rate__c = _prop_val; FMonth_Hit_Rate__c_Specified = true;  }
  bool __fastcall Month_Hit_Rate__c_Specified(int Index)
  {  return FMonth_Hit_Rate__c_Specified;  } 
  double __fastcall GetMonth_Per_Print_Value__c(int Index)
  {  return FMonth_Per_Print_Value__c;  }
  void __fastcall SetMonth_Per_Print_Value__c(int Index, double _prop_val)
  {  FMonth_Per_Print_Value__c = _prop_val; FMonth_Per_Print_Value__c_Specified = true;  }
  bool __fastcall Month_Per_Print_Value__c_Specified(int Index)
  {  return FMonth_Per_Print_Value__c_Specified;  } 
  double __fastcall GetMonth_Spend_per_head__c(int Index)
  {  return FMonth_Spend_per_head__c;  }
  void __fastcall SetMonth_Spend_per_head__c(int Index, double _prop_val)
  {  FMonth_Spend_per_head__c = _prop_val; FMonth_Spend_per_head__c_Specified = true;  }
  bool __fastcall Month_Spend_per_head__c_Specified(int Index)
  {  return FMonth_Spend_per_head__c_Specified;  } 
  double __fastcall GetMonth_Total_Revenue__c(int Index)
  {  return FMonth_Total_Revenue__c;  }
  void __fastcall SetMonth_Total_Revenue__c(int Index, double _prop_val)
  {  FMonth_Total_Revenue__c = _prop_val; FMonth_Total_Revenue__c_Specified = true;  }
  bool __fastcall Month_Total_Revenue__c_Specified(int Index)
  {  return FMonth_Total_Revenue__c_Specified;  } 
  double __fastcall GetMonth_Total_Transactions__c(int Index)
  {  return FMonth_Total_Transactions__c;  }
  void __fastcall SetMonth_Total_Transactions__c(int Index, double _prop_val)
  {  FMonth_Total_Transactions__c = _prop_val; FMonth_Total_Transactions__c_Specified = true;  }
  bool __fastcall Month_Total_Transactions__c_Specified(int Index)
  {  return FMonth_Total_Transactions__c_Specified;  } 
  QueryResult* __fastcall GetMonthly_Variables__r(int Index)
  {  return FMonthly_Variables__r;  }
  void __fastcall SetMonthly_Variables__r(int Index, QueryResult* _prop_val)
  {  FMonthly_Variables__r = _prop_val; FMonthly_Variables__r_Specified = true;  }
  bool __fastcall Monthly_Variables__r_Specified(int Index)
  {  return FMonthly_Variables__r_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  QueryResult* __fastcall GetNotes(int Index)
  {  return FNotes;  }
  void __fastcall SetNotes(int Index, QueryResult* _prop_val)
  {  FNotes = _prop_val; FNotes_Specified = true;  }
  bool __fastcall Notes_Specified(int Index)
  {  return FNotes_Specified;  } 
  QueryResult* __fastcall GetNotesAndAttachments(int Index)
  {  return FNotesAndAttachments;  }
  void __fastcall SetNotesAndAttachments(int Index, QueryResult* _prop_val)
  {  FNotesAndAttachments = _prop_val; FNotesAndAttachments_Specified = true;  }
  bool __fastcall NotesAndAttachments_Specified(int Index)
  {  return FNotesAndAttachments_Specified;  } 
  Name_* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, Name_* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  QueryResult* __fastcall GetProducts__r(int Index)
  {  return FProducts__r;  }
  void __fastcall SetProducts__r(int Index, QueryResult* _prop_val)
  {  FProducts__r = _prop_val; FProducts__r_Specified = true;  }
  bool __fastcall Products__r_Specified(int Index)
  {  return FProducts__r_Specified;  } 
  QueryResult* __fastcall GetStaff_Titles__r(int Index)
  {  return FStaff_Titles__r;  }
  void __fastcall SetStaff_Titles__r(int Index, QueryResult* _prop_val)
  {  FStaff_Titles__r = _prop_val; FStaff_Titles__r_Specified = true;  }
  bool __fastcall Staff_Titles__r_Specified(int Index)
  {  return FStaff_Titles__r_Specified;  } 
  QueryResult* __fastcall GetStaff__r(int Index)
  {  return FStaff__r;  }
  void __fastcall SetStaff__r(int Index, QueryResult* _prop_val)
  {  FStaff__r = _prop_val; FStaff__r_Specified = true;  }
  bool __fastcall Staff__r_Specified(int Index)
  {  return FStaff__r_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~Site__c_();
__published:
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property UnicodeString Country__c = { index=(IS_OPTN|IS_NLBL), read=FCountry__c, write=SetCountry__c, stored = Country__c_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Currency__c = { index=(IS_OPTN|IS_NLBL), read=FCurrency__c, write=SetCurrency__c, stored = Currency__c_Specified };
  __property QueryResult*    Days__r = { index=(IS_OPTN|IS_NLBL), read=FDays__r, write=SetDays__r, stored = Days__r_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property double     Month_Average_Sale_Value__c = { index=(IS_OPTN|IS_NLBL), read=FMonth_Average_Sale_Value__c, write=SetMonth_Average_Sale_Value__c, stored = Month_Average_Sale_Value__c_Specified };
  __property double     Month_Capture_Rate__c = { index=(IS_OPTN|IS_NLBL), read=FMonth_Capture_Rate__c, write=SetMonth_Capture_Rate__c, stored = Month_Capture_Rate__c_Specified };
  __property double     Month_Hit_Rate__c = { index=(IS_OPTN|IS_NLBL), read=FMonth_Hit_Rate__c, write=SetMonth_Hit_Rate__c, stored = Month_Hit_Rate__c_Specified };
  __property double     Month_Per_Print_Value__c = { index=(IS_OPTN|IS_NLBL), read=FMonth_Per_Print_Value__c, write=SetMonth_Per_Print_Value__c, stored = Month_Per_Print_Value__c_Specified };
  __property double     Month_Spend_per_head__c = { index=(IS_OPTN|IS_NLBL), read=FMonth_Spend_per_head__c, write=SetMonth_Spend_per_head__c, stored = Month_Spend_per_head__c_Specified };
  __property double     Month_Total_Revenue__c = { index=(IS_OPTN|IS_NLBL), read=FMonth_Total_Revenue__c, write=SetMonth_Total_Revenue__c, stored = Month_Total_Revenue__c_Specified };
  __property double     Month_Total_Transactions__c = { index=(IS_OPTN|IS_NLBL), read=FMonth_Total_Transactions__c, write=SetMonth_Total_Transactions__c, stored = Month_Total_Transactions__c_Specified };
  __property QueryResult* Monthly_Variables__r = { index=(IS_OPTN|IS_NLBL), read=FMonthly_Variables__r, write=SetMonthly_Variables__r, stored = Monthly_Variables__r_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property QueryResult*      Notes = { index=(IS_OPTN|IS_NLBL), read=FNotes, write=SetNotes, stored = Notes_Specified };
  __property QueryResult* NotesAndAttachments = { index=(IS_OPTN|IS_NLBL), read=FNotesAndAttachments, write=SetNotesAndAttachments, stored = NotesAndAttachments_Specified };
  __property Name_*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property QueryResult* Products__r = { index=(IS_OPTN|IS_NLBL), read=FProducts__r, write=SetProducts__r, stored = Products__r_Specified };
  __property QueryResult* Staff_Titles__r = { index=(IS_OPTN|IS_NLBL), read=FStaff_Titles__r, write=SetStaff_Titles__r, stored = Staff_Titles__r_Specified };
  __property QueryResult*   Staff__r = { index=(IS_OPTN|IS_NLBL), read=FStaff__r, write=SetStaff__r, stored = Staff__r_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : Day__c_, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Day__c_ : public sObject {
private:
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  double          FAverage_Sale_Value__c;
  bool            FAverage_Sale_Value__c_Specified;
  double          FCapture_Rate__c;
  bool            FCapture_Rate__c_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  TXSDate*        FDate__c;
  bool            FDate__c_Specified;
  QueryResult*    FDeposits__r;
  bool            FDeposits__r_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  double          FHit_Rate__c;
  bool            FHit_Rate__c_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  QueryResult*    FKPI_Values__r;
  bool            FKPI_Values__r_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  QueryResult*    FNotes;
  bool            FNotes_Specified;
  QueryResult*    FNotesAndAttachments;
  bool            FNotesAndAttachments_Specified;
  QueryResult*    FPLU_Stocks__r;
  bool            FPLU_Stocks__r_Specified;
  double          FPer_Print_Value__c;
  bool            FPer_Print_Value__c_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  ID              FSite__c_;
  bool            FSite__c__Specified;
  Site__c_*        FSite__r;
  bool            FSite__r_Specified;
  double          FSpend_per_head__c;
  bool            FSpend_per_head__c_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  QueryResult*    FTimes__r;
  bool            FTimes__r_Specified;
  double          FTotal_Revenue__c;
  bool            FTotal_Revenue__c_Specified;
  double          FTotal_Transactions__c;
  bool            FTotal_Transactions__c_Specified;
  QueryResult*    FTransactions__r;
  bool            FTransactions__r_Specified;
  double          FWage_Percent__c;
  bool            FWage_Percent__c_Specified;
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  double __fastcall GetAverage_Sale_Value__c(int Index)
  {  return FAverage_Sale_Value__c;  }
  void __fastcall SetAverage_Sale_Value__c(int Index, double _prop_val)
  {  FAverage_Sale_Value__c = _prop_val; FAverage_Sale_Value__c_Specified = true;  }
  bool __fastcall Average_Sale_Value__c_Specified(int Index)
  {  return FAverage_Sale_Value__c_Specified;  } 
  double __fastcall GetCapture_Rate__c(int Index)
  {  return FCapture_Rate__c;  }
  void __fastcall SetCapture_Rate__c(int Index, double _prop_val)
  {  FCapture_Rate__c = _prop_val; FCapture_Rate__c_Specified = true;  }
  bool __fastcall Capture_Rate__c_Specified(int Index)
  {  return FCapture_Rate__c_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  TXSDate* __fastcall GetDate__c(int Index)
  {  return FDate__c;  }
  void __fastcall SetDate__c(int Index, TXSDate* _prop_val)
  {  FDate__c = _prop_val; FDate__c_Specified = true;  }
  bool __fastcall Date__c_Specified(int Index)
  {  return FDate__c_Specified;  } 
  QueryResult* __fastcall GetDeposits__r(int Index)
  {  return FDeposits__r;  }
  void __fastcall SetDeposits__r(int Index, QueryResult* _prop_val)
  {  FDeposits__r = _prop_val; FDeposits__r_Specified = true;  }
  bool __fastcall Deposits__r_Specified(int Index)
  {  return FDeposits__r_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  double __fastcall GetHit_Rate__c(int Index)
  {  return FHit_Rate__c;  }
  void __fastcall SetHit_Rate__c(int Index, double _prop_val)
  {  FHit_Rate__c = _prop_val; FHit_Rate__c_Specified = true;  }
  bool __fastcall Hit_Rate__c_Specified(int Index)
  {  return FHit_Rate__c_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  QueryResult* __fastcall GetKPI_Values__r(int Index)
  {  return FKPI_Values__r;  }
  void __fastcall SetKPI_Values__r(int Index, QueryResult* _prop_val)
  {  FKPI_Values__r = _prop_val; FKPI_Values__r_Specified = true;  }
  bool __fastcall KPI_Values__r_Specified(int Index)
  {  return FKPI_Values__r_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  QueryResult* __fastcall GetNotes(int Index)
  {  return FNotes;  }
  void __fastcall SetNotes(int Index, QueryResult* _prop_val)
  {  FNotes = _prop_val; FNotes_Specified = true;  }
  bool __fastcall Notes_Specified(int Index)
  {  return FNotes_Specified;  } 
  QueryResult* __fastcall GetNotesAndAttachments(int Index)
  {  return FNotesAndAttachments;  }
  void __fastcall SetNotesAndAttachments(int Index, QueryResult* _prop_val)
  {  FNotesAndAttachments = _prop_val; FNotesAndAttachments_Specified = true;  }
  bool __fastcall NotesAndAttachments_Specified(int Index)
  {  return FNotesAndAttachments_Specified;  } 
  QueryResult* __fastcall GetPLU_Stocks__r(int Index)
  {  return FPLU_Stocks__r;  }
  void __fastcall SetPLU_Stocks__r(int Index, QueryResult* _prop_val)
  {  FPLU_Stocks__r = _prop_val; FPLU_Stocks__r_Specified = true;  }
  bool __fastcall PLU_Stocks__r_Specified(int Index)
  {  return FPLU_Stocks__r_Specified;  } 
  double __fastcall GetPer_Print_Value__c(int Index)
  {  return FPer_Print_Value__c;  }
  void __fastcall SetPer_Print_Value__c(int Index, double _prop_val)
  {  FPer_Print_Value__c = _prop_val; FPer_Print_Value__c_Specified = true;  }
  bool __fastcall Per_Print_Value__c_Specified(int Index)
  {  return FPer_Print_Value__c_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  ID __fastcall GetSite__c_(int Index)
  {  return FSite__c_;  }
  void __fastcall SetSite__c_(int Index, ID _prop_val)
  {  FSite__c_ = _prop_val; FSite__c__Specified = true;  }
  bool __fastcall Site__c__Specified(int Index)
  {  return FSite__c__Specified;  } 
  Site__c_* __fastcall GetSite__r(int Index)
  {  return FSite__r;  }
  void __fastcall SetSite__r(int Index, Site__c_* _prop_val)
  {  FSite__r = _prop_val; FSite__r_Specified = true;  }
  bool __fastcall Site__r_Specified(int Index)
  {  return FSite__r_Specified;  } 
  double __fastcall GetSpend_per_head__c(int Index)
  {  return FSpend_per_head__c;  }
  void __fastcall SetSpend_per_head__c(int Index, double _prop_val)
  {  FSpend_per_head__c = _prop_val; FSpend_per_head__c_Specified = true;  }
  bool __fastcall Spend_per_head__c_Specified(int Index)
  {  return FSpend_per_head__c_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  QueryResult* __fastcall GetTimes__r(int Index)
  {  return FTimes__r;  }
  void __fastcall SetTimes__r(int Index, QueryResult* _prop_val)
  {  FTimes__r = _prop_val; FTimes__r_Specified = true;  }
  bool __fastcall Times__r_Specified(int Index)
  {  return FTimes__r_Specified;  } 
  double __fastcall GetTotal_Revenue__c(int Index)
  {  return FTotal_Revenue__c;  }
  void __fastcall SetTotal_Revenue__c(int Index, double _prop_val)
  {  FTotal_Revenue__c = _prop_val; FTotal_Revenue__c_Specified = true;  }
  bool __fastcall Total_Revenue__c_Specified(int Index)
  {  return FTotal_Revenue__c_Specified;  } 
  double __fastcall GetTotal_Transactions__c(int Index)
  {  return FTotal_Transactions__c;  }
  void __fastcall SetTotal_Transactions__c(int Index, double _prop_val)
  {  FTotal_Transactions__c = _prop_val; FTotal_Transactions__c_Specified = true;  }
  bool __fastcall Total_Transactions__c_Specified(int Index)
  {  return FTotal_Transactions__c_Specified;  } 
  QueryResult* __fastcall GetTransactions__r(int Index)
  {  return FTransactions__r;  }
  void __fastcall SetTransactions__r(int Index, QueryResult* _prop_val)
  {  FTransactions__r = _prop_val; FTransactions__r_Specified = true;  }
  bool __fastcall Transactions__r_Specified(int Index)
  {  return FTransactions__r_Specified;  } 
  double __fastcall GetWage_Percent__c(int Index)
  {  return FWage_Percent__c;  }
  void __fastcall SetWage_Percent__c(int Index, double _prop_val)
  {  FWage_Percent__c = _prop_val; FWage_Percent__c_Specified = true;  }
  bool __fastcall Wage_Percent__c_Specified(int Index)
  {  return FWage_Percent__c_Specified;  } 

public:
  __fastcall ~Day__c_();
__published:
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property double     Average_Sale_Value__c = { index=(IS_OPTN|IS_NLBL), read=FAverage_Sale_Value__c, write=SetAverage_Sale_Value__c, stored = Average_Sale_Value__c_Specified };
  __property double     Capture_Rate__c = { index=(IS_OPTN|IS_NLBL), read=FCapture_Rate__c, write=SetCapture_Rate__c, stored = Capture_Rate__c_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property TXSDate*      Date__c = { index=(IS_OPTN|IS_NLBL), read=FDate__c, write=SetDate__c, stored = Date__c_Specified };
  __property QueryResult* Deposits__r = { index=(IS_OPTN|IS_NLBL), read=FDeposits__r, write=SetDeposits__r, stored = Deposits__r_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property double     Hit_Rate__c = { index=(IS_OPTN|IS_NLBL), read=FHit_Rate__c, write=SetHit_Rate__c, stored = Hit_Rate__c_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property QueryResult* KPI_Values__r = { index=(IS_OPTN|IS_NLBL), read=FKPI_Values__r, write=SetKPI_Values__r, stored = KPI_Values__r_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property QueryResult*      Notes = { index=(IS_OPTN|IS_NLBL), read=FNotes, write=SetNotes, stored = Notes_Specified };
  __property QueryResult* NotesAndAttachments = { index=(IS_OPTN|IS_NLBL), read=FNotesAndAttachments, write=SetNotesAndAttachments, stored = NotesAndAttachments_Specified };
  __property QueryResult* PLU_Stocks__r = { index=(IS_OPTN|IS_NLBL), read=FPLU_Stocks__r, write=SetPLU_Stocks__r, stored = PLU_Stocks__r_Specified };
  __property double     Per_Print_Value__c = { index=(IS_OPTN|IS_NLBL), read=FPer_Print_Value__c, write=SetPer_Print_Value__c, stored = Per_Print_Value__c_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property ID            Site__c = { index=(IS_OPTN|IS_NLBL), read=FSite__c_, write=SetSite__c_, stored = Site__c__Specified };
  __property Site__c_*      Site__r = { index=(IS_OPTN|IS_NLBL), read=FSite__r, write=SetSite__r, stored = Site__r_Specified };
  __property double     Spend_per_head__c = { index=(IS_OPTN|IS_NLBL), read=FSpend_per_head__c, write=SetSpend_per_head__c, stored = Spend_per_head__c_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property QueryResult*   Times__r = { index=(IS_OPTN|IS_NLBL), read=FTimes__r, write=SetTimes__r, stored = Times__r_Specified };
  __property double     Total_Revenue__c = { index=(IS_OPTN|IS_NLBL), read=FTotal_Revenue__c, write=SetTotal_Revenue__c, stored = Total_Revenue__c_Specified };
  __property double     Total_Transactions__c = { index=(IS_OPTN|IS_NLBL), read=FTotal_Transactions__c, write=SetTotal_Transactions__c, stored = Total_Transactions__c_Specified };
  __property QueryResult* Transactions__r = { index=(IS_OPTN|IS_NLBL), read=FTransactions__r, write=SetTransactions__r, stored = Transactions__r_Specified };
  __property double     Wage_Percent__c = { index=(IS_OPTN|IS_NLBL), read=FWage_Percent__c, write=SetWage_Percent__c, stored = Wage_Percent__c_Specified };
};




// ************************************************************************ //
// XML       : DashboardFeed, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class DashboardFeed : public sObject {
private:
  UnicodeString   FBody;
  bool            FBody_Specified;
  int             FCommentCount;
  bool            FCommentCount_Specified;
  TByteDynArray   FContentData;
  bool            FContentData_Specified;
  UnicodeString   FContentDescription;
  bool            FContentDescription_Specified;
  UnicodeString   FContentFileName;
  bool            FContentFileName_Specified;
  int             FContentSize;
  bool            FContentSize_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedComments;
  bool            FFeedComments_Specified;
  QueryResult*    FFeedLikes;
  bool            FFeedLikes_Specified;
  QueryResult*    FFeedTrackedChanges;
  bool            FFeedTrackedChanges_Specified;
  Name_*           FInsertedBy;
  bool            FInsertedBy_Specified;
  ID              FInsertedById;
  bool            FInsertedById_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLikeCount;
  bool            FLikeCount_Specified;
  UnicodeString   FLinkUrl;
  bool            FLinkUrl_Specified;
  Dashboard*      FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FRelatedRecordId;
  bool            FRelatedRecordId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetCommentCount(int Index)
  {  return FCommentCount;  }
  void __fastcall SetCommentCount(int Index, int _prop_val)
  {  FCommentCount = _prop_val; FCommentCount_Specified = true;  }
  bool __fastcall CommentCount_Specified(int Index)
  {  return FCommentCount_Specified;  } 
  TByteDynArray __fastcall GetContentData(int Index)
  {  return FContentData;  }
  void __fastcall SetContentData(int Index, TByteDynArray _prop_val)
  {  FContentData = _prop_val; FContentData_Specified = true;  }
  bool __fastcall ContentData_Specified(int Index)
  {  return FContentData_Specified;  } 
  UnicodeString __fastcall GetContentDescription(int Index)
  {  return FContentDescription;  }
  void __fastcall SetContentDescription(int Index, UnicodeString _prop_val)
  {  FContentDescription = _prop_val; FContentDescription_Specified = true;  }
  bool __fastcall ContentDescription_Specified(int Index)
  {  return FContentDescription_Specified;  } 
  UnicodeString __fastcall GetContentFileName(int Index)
  {  return FContentFileName;  }
  void __fastcall SetContentFileName(int Index, UnicodeString _prop_val)
  {  FContentFileName = _prop_val; FContentFileName_Specified = true;  }
  bool __fastcall ContentFileName_Specified(int Index)
  {  return FContentFileName_Specified;  } 
  int __fastcall GetContentSize(int Index)
  {  return FContentSize;  }
  void __fastcall SetContentSize(int Index, int _prop_val)
  {  FContentSize = _prop_val; FContentSize_Specified = true;  }
  bool __fastcall ContentSize_Specified(int Index)
  {  return FContentSize_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedComments(int Index)
  {  return FFeedComments;  }
  void __fastcall SetFeedComments(int Index, QueryResult* _prop_val)
  {  FFeedComments = _prop_val; FFeedComments_Specified = true;  }
  bool __fastcall FeedComments_Specified(int Index)
  {  return FFeedComments_Specified;  } 
  QueryResult* __fastcall GetFeedLikes(int Index)
  {  return FFeedLikes;  }
  void __fastcall SetFeedLikes(int Index, QueryResult* _prop_val)
  {  FFeedLikes = _prop_val; FFeedLikes_Specified = true;  }
  bool __fastcall FeedLikes_Specified(int Index)
  {  return FFeedLikes_Specified;  } 
  QueryResult* __fastcall GetFeedTrackedChanges(int Index)
  {  return FFeedTrackedChanges;  }
  void __fastcall SetFeedTrackedChanges(int Index, QueryResult* _prop_val)
  {  FFeedTrackedChanges = _prop_val; FFeedTrackedChanges_Specified = true;  }
  bool __fastcall FeedTrackedChanges_Specified(int Index)
  {  return FFeedTrackedChanges_Specified;  } 
  Name_* __fastcall GetInsertedBy(int Index)
  {  return FInsertedBy;  }
  void __fastcall SetInsertedBy(int Index, Name_* _prop_val)
  {  FInsertedBy = _prop_val; FInsertedBy_Specified = true;  }
  bool __fastcall InsertedBy_Specified(int Index)
  {  return FInsertedBy_Specified;  } 
  ID __fastcall GetInsertedById(int Index)
  {  return FInsertedById;  }
  void __fastcall SetInsertedById(int Index, ID _prop_val)
  {  FInsertedById = _prop_val; FInsertedById_Specified = true;  }
  bool __fastcall InsertedById_Specified(int Index)
  {  return FInsertedById_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLikeCount(int Index)
  {  return FLikeCount;  }
  void __fastcall SetLikeCount(int Index, int _prop_val)
  {  FLikeCount = _prop_val; FLikeCount_Specified = true;  }
  bool __fastcall LikeCount_Specified(int Index)
  {  return FLikeCount_Specified;  } 
  UnicodeString __fastcall GetLinkUrl(int Index)
  {  return FLinkUrl;  }
  void __fastcall SetLinkUrl(int Index, UnicodeString _prop_val)
  {  FLinkUrl = _prop_val; FLinkUrl_Specified = true;  }
  bool __fastcall LinkUrl_Specified(int Index)
  {  return FLinkUrl_Specified;  } 
  Dashboard* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Dashboard* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetRelatedRecordId(int Index)
  {  return FRelatedRecordId;  }
  void __fastcall SetRelatedRecordId(int Index, ID _prop_val)
  {  FRelatedRecordId = _prop_val; FRelatedRecordId_Specified = true;  }
  bool __fastcall RelatedRecordId_Specified(int Index)
  {  return FRelatedRecordId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~DashboardFeed();
__published:
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        CommentCount = { index=(IS_OPTN|IS_NLBL), read=FCommentCount, write=SetCommentCount, stored = CommentCount_Specified };
  __property TByteDynArray ContentData = { index=(IS_OPTN|IS_NLBL), read=FContentData, write=SetContentData, stored = ContentData_Specified };
  __property UnicodeString ContentDescription = { index=(IS_OPTN|IS_NLBL), read=FContentDescription, write=SetContentDescription, stored = ContentDescription_Specified };
  __property UnicodeString ContentFileName = { index=(IS_OPTN|IS_NLBL), read=FContentFileName, write=SetContentFileName, stored = ContentFileName_Specified };
  __property int        ContentSize = { index=(IS_OPTN|IS_NLBL), read=FContentSize, write=SetContentSize, stored = ContentSize_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedComments = { index=(IS_OPTN|IS_NLBL), read=FFeedComments, write=SetFeedComments, stored = FeedComments_Specified };
  __property QueryResult*  FeedLikes = { index=(IS_OPTN|IS_NLBL), read=FFeedLikes, write=SetFeedLikes, stored = FeedLikes_Specified };
  __property QueryResult* FeedTrackedChanges = { index=(IS_OPTN|IS_NLBL), read=FFeedTrackedChanges, write=SetFeedTrackedChanges, stored = FeedTrackedChanges_Specified };
  __property Name_*      InsertedBy = { index=(IS_OPTN|IS_NLBL), read=FInsertedBy, write=SetInsertedBy, stored = InsertedBy_Specified };
  __property ID         InsertedById = { index=(IS_OPTN|IS_NLBL), read=FInsertedById, write=SetInsertedById, stored = InsertedById_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int         LikeCount = { index=(IS_OPTN|IS_NLBL), read=FLikeCount, write=SetLikeCount, stored = LikeCount_Specified };
  __property UnicodeString    LinkUrl = { index=(IS_OPTN|IS_NLBL), read=FLinkUrl, write=SetLinkUrl, stored = LinkUrl_Specified };
  __property Dashboard*     Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         RelatedRecordId = { index=(IS_OPTN|IS_NLBL), read=FRelatedRecordId, write=SetRelatedRecordId, stored = RelatedRecordId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : DashboardComponentFeed, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class DashboardComponentFeed : public sObject {
private:
  UnicodeString   FBody;
  bool            FBody_Specified;
  int             FCommentCount;
  bool            FCommentCount_Specified;
  TByteDynArray   FContentData;
  bool            FContentData_Specified;
  UnicodeString   FContentDescription;
  bool            FContentDescription_Specified;
  UnicodeString   FContentFileName;
  bool            FContentFileName_Specified;
  int             FContentSize;
  bool            FContentSize_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedComments;
  bool            FFeedComments_Specified;
  QueryResult*    FFeedLikes;
  bool            FFeedLikes_Specified;
  QueryResult*    FFeedTrackedChanges;
  bool            FFeedTrackedChanges_Specified;
  Name_*           FInsertedBy;
  bool            FInsertedBy_Specified;
  ID              FInsertedById;
  bool            FInsertedById_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLikeCount;
  bool            FLikeCount_Specified;
  UnicodeString   FLinkUrl;
  bool            FLinkUrl_Specified;
  DashboardComponent* FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FRelatedRecordId;
  bool            FRelatedRecordId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetCommentCount(int Index)
  {  return FCommentCount;  }
  void __fastcall SetCommentCount(int Index, int _prop_val)
  {  FCommentCount = _prop_val; FCommentCount_Specified = true;  }
  bool __fastcall CommentCount_Specified(int Index)
  {  return FCommentCount_Specified;  } 
  TByteDynArray __fastcall GetContentData(int Index)
  {  return FContentData;  }
  void __fastcall SetContentData(int Index, TByteDynArray _prop_val)
  {  FContentData = _prop_val; FContentData_Specified = true;  }
  bool __fastcall ContentData_Specified(int Index)
  {  return FContentData_Specified;  } 
  UnicodeString __fastcall GetContentDescription(int Index)
  {  return FContentDescription;  }
  void __fastcall SetContentDescription(int Index, UnicodeString _prop_val)
  {  FContentDescription = _prop_val; FContentDescription_Specified = true;  }
  bool __fastcall ContentDescription_Specified(int Index)
  {  return FContentDescription_Specified;  } 
  UnicodeString __fastcall GetContentFileName(int Index)
  {  return FContentFileName;  }
  void __fastcall SetContentFileName(int Index, UnicodeString _prop_val)
  {  FContentFileName = _prop_val; FContentFileName_Specified = true;  }
  bool __fastcall ContentFileName_Specified(int Index)
  {  return FContentFileName_Specified;  } 
  int __fastcall GetContentSize(int Index)
  {  return FContentSize;  }
  void __fastcall SetContentSize(int Index, int _prop_val)
  {  FContentSize = _prop_val; FContentSize_Specified = true;  }
  bool __fastcall ContentSize_Specified(int Index)
  {  return FContentSize_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedComments(int Index)
  {  return FFeedComments;  }
  void __fastcall SetFeedComments(int Index, QueryResult* _prop_val)
  {  FFeedComments = _prop_val; FFeedComments_Specified = true;  }
  bool __fastcall FeedComments_Specified(int Index)
  {  return FFeedComments_Specified;  } 
  QueryResult* __fastcall GetFeedLikes(int Index)
  {  return FFeedLikes;  }
  void __fastcall SetFeedLikes(int Index, QueryResult* _prop_val)
  {  FFeedLikes = _prop_val; FFeedLikes_Specified = true;  }
  bool __fastcall FeedLikes_Specified(int Index)
  {  return FFeedLikes_Specified;  } 
  QueryResult* __fastcall GetFeedTrackedChanges(int Index)
  {  return FFeedTrackedChanges;  }
  void __fastcall SetFeedTrackedChanges(int Index, QueryResult* _prop_val)
  {  FFeedTrackedChanges = _prop_val; FFeedTrackedChanges_Specified = true;  }
  bool __fastcall FeedTrackedChanges_Specified(int Index)
  {  return FFeedTrackedChanges_Specified;  } 
  Name_* __fastcall GetInsertedBy(int Index)
  {  return FInsertedBy;  }
  void __fastcall SetInsertedBy(int Index, Name_* _prop_val)
  {  FInsertedBy = _prop_val; FInsertedBy_Specified = true;  }
  bool __fastcall InsertedBy_Specified(int Index)
  {  return FInsertedBy_Specified;  } 
  ID __fastcall GetInsertedById(int Index)
  {  return FInsertedById;  }
  void __fastcall SetInsertedById(int Index, ID _prop_val)
  {  FInsertedById = _prop_val; FInsertedById_Specified = true;  }
  bool __fastcall InsertedById_Specified(int Index)
  {  return FInsertedById_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLikeCount(int Index)
  {  return FLikeCount;  }
  void __fastcall SetLikeCount(int Index, int _prop_val)
  {  FLikeCount = _prop_val; FLikeCount_Specified = true;  }
  bool __fastcall LikeCount_Specified(int Index)
  {  return FLikeCount_Specified;  } 
  UnicodeString __fastcall GetLinkUrl(int Index)
  {  return FLinkUrl;  }
  void __fastcall SetLinkUrl(int Index, UnicodeString _prop_val)
  {  FLinkUrl = _prop_val; FLinkUrl_Specified = true;  }
  bool __fastcall LinkUrl_Specified(int Index)
  {  return FLinkUrl_Specified;  } 
  DashboardComponent* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, DashboardComponent* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetRelatedRecordId(int Index)
  {  return FRelatedRecordId;  }
  void __fastcall SetRelatedRecordId(int Index, ID _prop_val)
  {  FRelatedRecordId = _prop_val; FRelatedRecordId_Specified = true;  }
  bool __fastcall RelatedRecordId_Specified(int Index)
  {  return FRelatedRecordId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~DashboardComponentFeed();
__published:
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        CommentCount = { index=(IS_OPTN|IS_NLBL), read=FCommentCount, write=SetCommentCount, stored = CommentCount_Specified };
  __property TByteDynArray ContentData = { index=(IS_OPTN|IS_NLBL), read=FContentData, write=SetContentData, stored = ContentData_Specified };
  __property UnicodeString ContentDescription = { index=(IS_OPTN|IS_NLBL), read=FContentDescription, write=SetContentDescription, stored = ContentDescription_Specified };
  __property UnicodeString ContentFileName = { index=(IS_OPTN|IS_NLBL), read=FContentFileName, write=SetContentFileName, stored = ContentFileName_Specified };
  __property int        ContentSize = { index=(IS_OPTN|IS_NLBL), read=FContentSize, write=SetContentSize, stored = ContentSize_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedComments = { index=(IS_OPTN|IS_NLBL), read=FFeedComments, write=SetFeedComments, stored = FeedComments_Specified };
  __property QueryResult*  FeedLikes = { index=(IS_OPTN|IS_NLBL), read=FFeedLikes, write=SetFeedLikes, stored = FeedLikes_Specified };
  __property QueryResult* FeedTrackedChanges = { index=(IS_OPTN|IS_NLBL), read=FFeedTrackedChanges, write=SetFeedTrackedChanges, stored = FeedTrackedChanges_Specified };
  __property Name_*      InsertedBy = { index=(IS_OPTN|IS_NLBL), read=FInsertedBy, write=SetInsertedBy, stored = InsertedBy_Specified };
  __property ID         InsertedById = { index=(IS_OPTN|IS_NLBL), read=FInsertedById, write=SetInsertedById, stored = InsertedById_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int         LikeCount = { index=(IS_OPTN|IS_NLBL), read=FLikeCount, write=SetLikeCount, stored = LikeCount_Specified };
  __property UnicodeString    LinkUrl = { index=(IS_OPTN|IS_NLBL), read=FLinkUrl, write=SetLinkUrl, stored = LinkUrl_Specified };
  __property DashboardComponent*     Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         RelatedRecordId = { index=(IS_OPTN|IS_NLBL), read=FRelatedRecordId, write=SetRelatedRecordId, stored = RelatedRecordId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : DashboardComponent, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class DashboardComponent : public sObject {
private:
  Dashboard*      FDashboard;
  bool            FDashboard_Specified;
  ID              FDashboardId;
  bool            FDashboardId_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  QueryResult*    FFeeds;
  bool            FFeeds_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  Dashboard* __fastcall GetDashboard(int Index)
  {  return FDashboard;  }
  void __fastcall SetDashboard(int Index, Dashboard* _prop_val)
  {  FDashboard = _prop_val; FDashboard_Specified = true;  }
  bool __fastcall Dashboard_Specified(int Index)
  {  return FDashboard_Specified;  } 
  ID __fastcall GetDashboardId(int Index)
  {  return FDashboardId;  }
  void __fastcall SetDashboardId(int Index, ID _prop_val)
  {  FDashboardId = _prop_val; FDashboardId_Specified = true;  }
  bool __fastcall DashboardId_Specified(int Index)
  {  return FDashboardId_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  QueryResult* __fastcall GetFeeds(int Index)
  {  return FFeeds;  }
  void __fastcall SetFeeds(int Index, QueryResult* _prop_val)
  {  FFeeds = _prop_val; FFeeds_Specified = true;  }
  bool __fastcall Feeds_Specified(int Index)
  {  return FFeeds_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 

public:
  __fastcall ~DashboardComponent();
__published:
  __property Dashboard*  Dashboard = { index=(IS_OPTN|IS_NLBL), read=FDashboard, write=SetDashboard, stored = Dashboard_Specified };
  __property ID         DashboardId = { index=(IS_OPTN|IS_NLBL), read=FDashboardId, write=SetDashboardId, stored = DashboardId_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property QueryResult*      Feeds = { index=(IS_OPTN|IS_NLBL), read=FFeeds, write=SetFeeds, stored = Feeds_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
};




// ************************************************************************ //
// XML       : Folder, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Folder : public sObject {
private:
  UnicodeString   FAccessType;
  bool            FAccessType_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDeveloperName;
  bool            FDeveloperName_Specified;
  bool            FIsReadonly;
  bool            FIsReadonly_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  UnicodeString   FNamespacePrefix;
  bool            FNamespacePrefix_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString __fastcall GetAccessType(int Index)
  {  return FAccessType;  }
  void __fastcall SetAccessType(int Index, UnicodeString _prop_val)
  {  FAccessType = _prop_val; FAccessType_Specified = true;  }
  bool __fastcall AccessType_Specified(int Index)
  {  return FAccessType_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDeveloperName(int Index)
  {  return FDeveloperName;  }
  void __fastcall SetDeveloperName(int Index, UnicodeString _prop_val)
  {  FDeveloperName = _prop_val; FDeveloperName_Specified = true;  }
  bool __fastcall DeveloperName_Specified(int Index)
  {  return FDeveloperName_Specified;  } 
  bool __fastcall GetIsReadonly(int Index)
  {  return FIsReadonly;  }
  void __fastcall SetIsReadonly(int Index, bool _prop_val)
  {  FIsReadonly = _prop_val; FIsReadonly_Specified = true;  }
  bool __fastcall IsReadonly_Specified(int Index)
  {  return FIsReadonly_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  UnicodeString __fastcall GetNamespacePrefix(int Index)
  {  return FNamespacePrefix;  }
  void __fastcall SetNamespacePrefix(int Index, UnicodeString _prop_val)
  {  FNamespacePrefix = _prop_val; FNamespacePrefix_Specified = true;  }
  bool __fastcall NamespacePrefix_Specified(int Index)
  {  return FNamespacePrefix_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~Folder();
__published:
  __property UnicodeString AccessType = { index=(IS_OPTN|IS_NLBL), read=FAccessType, write=SetAccessType, stored = AccessType_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString DeveloperName = { index=(IS_OPTN|IS_NLBL), read=FDeveloperName, write=SetDeveloperName, stored = DeveloperName_Specified };
  __property bool       IsReadonly = { index=(IS_OPTN|IS_NLBL), read=FIsReadonly, write=SetIsReadonly, stored = IsReadonly_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property UnicodeString NamespacePrefix = { index=(IS_OPTN|IS_NLBL), read=FNamespacePrefix, write=SetNamespacePrefix, stored = NamespacePrefix_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : Dashboard, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Dashboard : public sObject {
private:
  UnicodeString   FBackgroundDirection;
  bool            FBackgroundDirection_Specified;
  int             FBackgroundEnd;
  bool            FBackgroundEnd_Specified;
  int             FBackgroundStart;
  bool            FBackgroundStart_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FDashboardComponents;
  bool            FDashboardComponents_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  UnicodeString   FDeveloperName;
  bool            FDeveloperName_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  QueryResult*    FFeeds;
  bool            FFeeds_Specified;
  Folder*         FFolder;
  bool            FFolder_Specified;
  ID              FFolderId;
  bool            FFolderId_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FLeftSize;
  bool            FLeftSize_Specified;
  UnicodeString   FMiddleSize;
  bool            FMiddleSize_Specified;
  UnicodeString   FNamespacePrefix;
  bool            FNamespacePrefix_Specified;
  UnicodeString   FRightSize;
  bool            FRightSize_Specified;
  User*           FRunningUser;
  bool            FRunningUser_Specified;
  ID              FRunningUserId;
  bool            FRunningUserId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  int             FTextColor;
  bool            FTextColor_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  int             FTitleColor;
  bool            FTitleColor_Specified;
  int             FTitleSize;
  bool            FTitleSize_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString __fastcall GetBackgroundDirection(int Index)
  {  return FBackgroundDirection;  }
  void __fastcall SetBackgroundDirection(int Index, UnicodeString _prop_val)
  {  FBackgroundDirection = _prop_val; FBackgroundDirection_Specified = true;  }
  bool __fastcall BackgroundDirection_Specified(int Index)
  {  return FBackgroundDirection_Specified;  } 
  int __fastcall GetBackgroundEnd(int Index)
  {  return FBackgroundEnd;  }
  void __fastcall SetBackgroundEnd(int Index, int _prop_val)
  {  FBackgroundEnd = _prop_val; FBackgroundEnd_Specified = true;  }
  bool __fastcall BackgroundEnd_Specified(int Index)
  {  return FBackgroundEnd_Specified;  } 
  int __fastcall GetBackgroundStart(int Index)
  {  return FBackgroundStart;  }
  void __fastcall SetBackgroundStart(int Index, int _prop_val)
  {  FBackgroundStart = _prop_val; FBackgroundStart_Specified = true;  }
  bool __fastcall BackgroundStart_Specified(int Index)
  {  return FBackgroundStart_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetDashboardComponents(int Index)
  {  return FDashboardComponents;  }
  void __fastcall SetDashboardComponents(int Index, QueryResult* _prop_val)
  {  FDashboardComponents = _prop_val; FDashboardComponents_Specified = true;  }
  bool __fastcall DashboardComponents_Specified(int Index)
  {  return FDashboardComponents_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  UnicodeString __fastcall GetDeveloperName(int Index)
  {  return FDeveloperName;  }
  void __fastcall SetDeveloperName(int Index, UnicodeString _prop_val)
  {  FDeveloperName = _prop_val; FDeveloperName_Specified = true;  }
  bool __fastcall DeveloperName_Specified(int Index)
  {  return FDeveloperName_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  QueryResult* __fastcall GetFeeds(int Index)
  {  return FFeeds;  }
  void __fastcall SetFeeds(int Index, QueryResult* _prop_val)
  {  FFeeds = _prop_val; FFeeds_Specified = true;  }
  bool __fastcall Feeds_Specified(int Index)
  {  return FFeeds_Specified;  } 
  Folder* __fastcall GetFolder(int Index)
  {  return FFolder;  }
  void __fastcall SetFolder(int Index, Folder* _prop_val)
  {  FFolder = _prop_val; FFolder_Specified = true;  }
  bool __fastcall Folder_Specified(int Index)
  {  return FFolder_Specified;  } 
  ID __fastcall GetFolderId(int Index)
  {  return FFolderId;  }
  void __fastcall SetFolderId(int Index, ID _prop_val)
  {  FFolderId = _prop_val; FFolderId_Specified = true;  }
  bool __fastcall FolderId_Specified(int Index)
  {  return FFolderId_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetLeftSize(int Index)
  {  return FLeftSize;  }
  void __fastcall SetLeftSize(int Index, UnicodeString _prop_val)
  {  FLeftSize = _prop_val; FLeftSize_Specified = true;  }
  bool __fastcall LeftSize_Specified(int Index)
  {  return FLeftSize_Specified;  } 
  UnicodeString __fastcall GetMiddleSize(int Index)
  {  return FMiddleSize;  }
  void __fastcall SetMiddleSize(int Index, UnicodeString _prop_val)
  {  FMiddleSize = _prop_val; FMiddleSize_Specified = true;  }
  bool __fastcall MiddleSize_Specified(int Index)
  {  return FMiddleSize_Specified;  } 
  UnicodeString __fastcall GetNamespacePrefix(int Index)
  {  return FNamespacePrefix;  }
  void __fastcall SetNamespacePrefix(int Index, UnicodeString _prop_val)
  {  FNamespacePrefix = _prop_val; FNamespacePrefix_Specified = true;  }
  bool __fastcall NamespacePrefix_Specified(int Index)
  {  return FNamespacePrefix_Specified;  } 
  UnicodeString __fastcall GetRightSize(int Index)
  {  return FRightSize;  }
  void __fastcall SetRightSize(int Index, UnicodeString _prop_val)
  {  FRightSize = _prop_val; FRightSize_Specified = true;  }
  bool __fastcall RightSize_Specified(int Index)
  {  return FRightSize_Specified;  } 
  User* __fastcall GetRunningUser(int Index)
  {  return FRunningUser;  }
  void __fastcall SetRunningUser(int Index, User* _prop_val)
  {  FRunningUser = _prop_val; FRunningUser_Specified = true;  }
  bool __fastcall RunningUser_Specified(int Index)
  {  return FRunningUser_Specified;  } 
  ID __fastcall GetRunningUserId(int Index)
  {  return FRunningUserId;  }
  void __fastcall SetRunningUserId(int Index, ID _prop_val)
  {  FRunningUserId = _prop_val; FRunningUserId_Specified = true;  }
  bool __fastcall RunningUserId_Specified(int Index)
  {  return FRunningUserId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  int __fastcall GetTextColor(int Index)
  {  return FTextColor;  }
  void __fastcall SetTextColor(int Index, int _prop_val)
  {  FTextColor = _prop_val; FTextColor_Specified = true;  }
  bool __fastcall TextColor_Specified(int Index)
  {  return FTextColor_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  int __fastcall GetTitleColor(int Index)
  {  return FTitleColor;  }
  void __fastcall SetTitleColor(int Index, int _prop_val)
  {  FTitleColor = _prop_val; FTitleColor_Specified = true;  }
  bool __fastcall TitleColor_Specified(int Index)
  {  return FTitleColor_Specified;  } 
  int __fastcall GetTitleSize(int Index)
  {  return FTitleSize;  }
  void __fastcall SetTitleSize(int Index, int _prop_val)
  {  FTitleSize = _prop_val; FTitleSize_Specified = true;  }
  bool __fastcall TitleSize_Specified(int Index)
  {  return FTitleSize_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~Dashboard();
__published:
  __property UnicodeString BackgroundDirection = { index=(IS_OPTN|IS_NLBL), read=FBackgroundDirection, write=SetBackgroundDirection, stored = BackgroundDirection_Specified };
  __property int        BackgroundEnd = { index=(IS_OPTN|IS_NLBL), read=FBackgroundEnd, write=SetBackgroundEnd, stored = BackgroundEnd_Specified };
  __property int        BackgroundStart = { index=(IS_OPTN|IS_NLBL), read=FBackgroundStart, write=SetBackgroundStart, stored = BackgroundStart_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* DashboardComponents = { index=(IS_OPTN|IS_NLBL), read=FDashboardComponents, write=SetDashboardComponents, stored = DashboardComponents_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property UnicodeString DeveloperName = { index=(IS_OPTN|IS_NLBL), read=FDeveloperName, write=SetDeveloperName, stored = DeveloperName_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property QueryResult*      Feeds = { index=(IS_OPTN|IS_NLBL), read=FFeeds, write=SetFeeds, stored = Feeds_Specified };
  __property Folder*        Folder = { index=(IS_OPTN|IS_NLBL), read=FFolder, write=SetFolder, stored = Folder_Specified };
  __property ID           FolderId = { index=(IS_OPTN|IS_NLBL), read=FFolderId, write=SetFolderId, stored = FolderId_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString   LeftSize = { index=(IS_OPTN|IS_NLBL), read=FLeftSize, write=SetLeftSize, stored = LeftSize_Specified };
  __property UnicodeString MiddleSize = { index=(IS_OPTN|IS_NLBL), read=FMiddleSize, write=SetMiddleSize, stored = MiddleSize_Specified };
  __property UnicodeString NamespacePrefix = { index=(IS_OPTN|IS_NLBL), read=FNamespacePrefix, write=SetNamespacePrefix, stored = NamespacePrefix_Specified };
  __property UnicodeString  RightSize = { index=(IS_OPTN|IS_NLBL), read=FRightSize, write=SetRightSize, stored = RightSize_Specified };
  __property User*      RunningUser = { index=(IS_OPTN|IS_NLBL), read=FRunningUser, write=SetRunningUser, stored = RunningUser_Specified };
  __property ID         RunningUserId = { index=(IS_OPTN|IS_NLBL), read=FRunningUserId, write=SetRunningUserId, stored = RunningUserId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property int         TextColor = { index=(IS_OPTN|IS_NLBL), read=FTextColor, write=SetTextColor, stored = TextColor_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property int        TitleColor = { index=(IS_OPTN|IS_NLBL), read=FTitleColor, write=SetTitleColor, stored = TitleColor_Specified };
  __property int         TitleSize = { index=(IS_OPTN|IS_NLBL), read=FTitleSize, write=SetTitleSize, stored = TitleSize_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : CronTrigger, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class CronTrigger : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FCronExpression;
  bool            FCronExpression_Specified;
  TXSDateTime*    FEndTime;
  bool            FEndTime_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FNextFireTime;
  bool            FNextFireTime_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  TXSDateTime*    FPreviousFireTime;
  bool            FPreviousFireTime_Specified;
  TXSDateTime*    FStartTime;
  bool            FStartTime_Specified;
  UnicodeString   FState;
  bool            FState_Specified;
  UnicodeString   FTimeZoneSidKey;
  bool            FTimeZoneSidKey_Specified;
  int             FTimesTriggered;
  bool            FTimesTriggered_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetCronExpression(int Index)
  {  return FCronExpression;  }
  void __fastcall SetCronExpression(int Index, UnicodeString _prop_val)
  {  FCronExpression = _prop_val; FCronExpression_Specified = true;  }
  bool __fastcall CronExpression_Specified(int Index)
  {  return FCronExpression_Specified;  } 
  TXSDateTime* __fastcall GetEndTime(int Index)
  {  return FEndTime;  }
  void __fastcall SetEndTime(int Index, TXSDateTime* _prop_val)
  {  FEndTime = _prop_val; FEndTime_Specified = true;  }
  bool __fastcall EndTime_Specified(int Index)
  {  return FEndTime_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetNextFireTime(int Index)
  {  return FNextFireTime;  }
  void __fastcall SetNextFireTime(int Index, TXSDateTime* _prop_val)
  {  FNextFireTime = _prop_val; FNextFireTime_Specified = true;  }
  bool __fastcall NextFireTime_Specified(int Index)
  {  return FNextFireTime_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  TXSDateTime* __fastcall GetPreviousFireTime(int Index)
  {  return FPreviousFireTime;  }
  void __fastcall SetPreviousFireTime(int Index, TXSDateTime* _prop_val)
  {  FPreviousFireTime = _prop_val; FPreviousFireTime_Specified = true;  }
  bool __fastcall PreviousFireTime_Specified(int Index)
  {  return FPreviousFireTime_Specified;  } 
  TXSDateTime* __fastcall GetStartTime(int Index)
  {  return FStartTime;  }
  void __fastcall SetStartTime(int Index, TXSDateTime* _prop_val)
  {  FStartTime = _prop_val; FStartTime_Specified = true;  }
  bool __fastcall StartTime_Specified(int Index)
  {  return FStartTime_Specified;  } 
  UnicodeString __fastcall GetState(int Index)
  {  return FState;  }
  void __fastcall SetState(int Index, UnicodeString _prop_val)
  {  FState = _prop_val; FState_Specified = true;  }
  bool __fastcall State_Specified(int Index)
  {  return FState_Specified;  } 
  UnicodeString __fastcall GetTimeZoneSidKey(int Index)
  {  return FTimeZoneSidKey;  }
  void __fastcall SetTimeZoneSidKey(int Index, UnicodeString _prop_val)
  {  FTimeZoneSidKey = _prop_val; FTimeZoneSidKey_Specified = true;  }
  bool __fastcall TimeZoneSidKey_Specified(int Index)
  {  return FTimeZoneSidKey_Specified;  } 
  int __fastcall GetTimesTriggered(int Index)
  {  return FTimesTriggered;  }
  void __fastcall SetTimesTriggered(int Index, int _prop_val)
  {  FTimesTriggered = _prop_val; FTimesTriggered_Specified = true;  }
  bool __fastcall TimesTriggered_Specified(int Index)
  {  return FTimesTriggered_Specified;  } 

public:
  __fastcall ~CronTrigger();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString CronExpression = { index=(IS_OPTN|IS_NLBL), read=FCronExpression, write=SetCronExpression, stored = CronExpression_Specified };
  __property TXSDateTime*    EndTime = { index=(IS_OPTN|IS_NLBL), read=FEndTime, write=SetEndTime, stored = EndTime_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* NextFireTime = { index=(IS_OPTN|IS_NLBL), read=FNextFireTime, write=SetNextFireTime, stored = NextFireTime_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property TXSDateTime* PreviousFireTime = { index=(IS_OPTN|IS_NLBL), read=FPreviousFireTime, write=SetPreviousFireTime, stored = PreviousFireTime_Specified };
  __property TXSDateTime*  StartTime = { index=(IS_OPTN|IS_NLBL), read=FStartTime, write=SetStartTime, stored = StartTime_Specified };
  __property UnicodeString      State = { index=(IS_OPTN|IS_NLBL), read=FState, write=SetState, stored = State_Specified };
  __property UnicodeString TimeZoneSidKey = { index=(IS_OPTN|IS_NLBL), read=FTimeZoneSidKey, write=SetTimeZoneSidKey, stored = TimeZoneSidKey_Specified };
  __property int        TimesTriggered = { index=(IS_OPTN|IS_NLBL), read=FTimesTriggered, write=SetTimesTriggered, stored = TimesTriggered_Specified };
};




// ************************************************************************ //
// XML       : ContractStatus, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ContractStatus : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDefault;
  bool            FIsDefault_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FMasterLabel;
  bool            FMasterLabel_Specified;
  int             FSortOrder;
  bool            FSortOrder_Specified;
  UnicodeString   FStatusCode;
  bool            FStatusCode_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDefault(int Index)
  {  return FIsDefault;  }
  void __fastcall SetIsDefault(int Index, bool _prop_val)
  {  FIsDefault = _prop_val; FIsDefault_Specified = true;  }
  bool __fastcall IsDefault_Specified(int Index)
  {  return FIsDefault_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetMasterLabel(int Index)
  {  return FMasterLabel;  }
  void __fastcall SetMasterLabel(int Index, UnicodeString _prop_val)
  {  FMasterLabel = _prop_val; FMasterLabel_Specified = true;  }
  bool __fastcall MasterLabel_Specified(int Index)
  {  return FMasterLabel_Specified;  } 
  int __fastcall GetSortOrder(int Index)
  {  return FSortOrder;  }
  void __fastcall SetSortOrder(int Index, int _prop_val)
  {  FSortOrder = _prop_val; FSortOrder_Specified = true;  }
  bool __fastcall SortOrder_Specified(int Index)
  {  return FSortOrder_Specified;  } 
  UnicodeString __fastcall GetStatusCode(int Index)
  {  return FStatusCode;  }
  void __fastcall SetStatusCode(int Index, UnicodeString _prop_val)
  {  FStatusCode = _prop_val; FStatusCode_Specified = true;  }
  bool __fastcall StatusCode_Specified(int Index)
  {  return FStatusCode_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~ContractStatus();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDefault = { index=(IS_OPTN|IS_NLBL), read=FIsDefault, write=SetIsDefault, stored = IsDefault_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString MasterLabel = { index=(IS_OPTN|IS_NLBL), read=FMasterLabel, write=SetMasterLabel, stored = MasterLabel_Specified };
  __property int         SortOrder = { index=(IS_OPTN|IS_NLBL), read=FSortOrder, write=SetSortOrder, stored = SortOrder_Specified };
  __property UnicodeString StatusCode = { index=(IS_OPTN|IS_NLBL), read=FStatusCode, write=SetStatusCode, stored = StatusCode_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : ContractHistory, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ContractHistory : public sObject {
private:
  Contract*       FContract;
  bool            FContract_Specified;
  ID              FContractId;
  bool            FContractId_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FField;
  bool            FField_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  Variant         FNewValue;
  bool            FNewValue_Specified;
  Variant         FOldValue;
  bool            FOldValue_Specified;
  Contract* __fastcall GetContract(int Index)
  {  return FContract;  }
  void __fastcall SetContract(int Index, Contract* _prop_val)
  {  FContract = _prop_val; FContract_Specified = true;  }
  bool __fastcall Contract_Specified(int Index)
  {  return FContract_Specified;  } 
  ID __fastcall GetContractId(int Index)
  {  return FContractId;  }
  void __fastcall SetContractId(int Index, ID _prop_val)
  {  FContractId = _prop_val; FContractId_Specified = true;  }
  bool __fastcall ContractId_Specified(int Index)
  {  return FContractId_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetField(int Index)
  {  return FField;  }
  void __fastcall SetField(int Index, UnicodeString _prop_val)
  {  FField = _prop_val; FField_Specified = true;  }
  bool __fastcall Field_Specified(int Index)
  {  return FField_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  Variant __fastcall GetNewValue(int Index)
  {  return FNewValue;  }
  void __fastcall SetNewValue(int Index, Variant _prop_val)
  {  FNewValue = _prop_val; FNewValue_Specified = true;  }
  bool __fastcall NewValue_Specified(int Index)
  {  return FNewValue_Specified;  } 
  Variant __fastcall GetOldValue(int Index)
  {  return FOldValue;  }
  void __fastcall SetOldValue(int Index, Variant _prop_val)
  {  FOldValue = _prop_val; FOldValue_Specified = true;  }
  bool __fastcall OldValue_Specified(int Index)
  {  return FOldValue_Specified;  } 

public:
  __fastcall ~ContractHistory();
__published:
  __property Contract*    Contract = { index=(IS_OPTN|IS_NLBL), read=FContract, write=SetContract, stored = Contract_Specified };
  __property ID         ContractId = { index=(IS_OPTN|IS_NLBL), read=FContractId, write=SetContractId, stored = ContractId_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString      Field = { index=(IS_OPTN|IS_NLBL), read=FField, write=SetField, stored = Field_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property Variant      NewValue = { index=(IS_OPTN|IS_NLBL), read=FNewValue, write=SetNewValue, stored = NewValue_Specified };
  __property Variant      OldValue = { index=(IS_OPTN|IS_NLBL), read=FOldValue, write=SetOldValue, stored = OldValue_Specified };
};




// ************************************************************************ //
// XML       : ContractFeed, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ContractFeed : public sObject {
private:
  UnicodeString   FBody;
  bool            FBody_Specified;
  int             FCommentCount;
  bool            FCommentCount_Specified;
  TByteDynArray   FContentData;
  bool            FContentData_Specified;
  UnicodeString   FContentDescription;
  bool            FContentDescription_Specified;
  UnicodeString   FContentFileName;
  bool            FContentFileName_Specified;
  int             FContentSize;
  bool            FContentSize_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedComments;
  bool            FFeedComments_Specified;
  QueryResult*    FFeedLikes;
  bool            FFeedLikes_Specified;
  QueryResult*    FFeedTrackedChanges;
  bool            FFeedTrackedChanges_Specified;
  Name_*           FInsertedBy;
  bool            FInsertedBy_Specified;
  ID              FInsertedById;
  bool            FInsertedById_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLikeCount;
  bool            FLikeCount_Specified;
  UnicodeString   FLinkUrl;
  bool            FLinkUrl_Specified;
  Contract*       FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FRelatedRecordId;
  bool            FRelatedRecordId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetCommentCount(int Index)
  {  return FCommentCount;  }
  void __fastcall SetCommentCount(int Index, int _prop_val)
  {  FCommentCount = _prop_val; FCommentCount_Specified = true;  }
  bool __fastcall CommentCount_Specified(int Index)
  {  return FCommentCount_Specified;  } 
  TByteDynArray __fastcall GetContentData(int Index)
  {  return FContentData;  }
  void __fastcall SetContentData(int Index, TByteDynArray _prop_val)
  {  FContentData = _prop_val; FContentData_Specified = true;  }
  bool __fastcall ContentData_Specified(int Index)
  {  return FContentData_Specified;  } 
  UnicodeString __fastcall GetContentDescription(int Index)
  {  return FContentDescription;  }
  void __fastcall SetContentDescription(int Index, UnicodeString _prop_val)
  {  FContentDescription = _prop_val; FContentDescription_Specified = true;  }
  bool __fastcall ContentDescription_Specified(int Index)
  {  return FContentDescription_Specified;  } 
  UnicodeString __fastcall GetContentFileName(int Index)
  {  return FContentFileName;  }
  void __fastcall SetContentFileName(int Index, UnicodeString _prop_val)
  {  FContentFileName = _prop_val; FContentFileName_Specified = true;  }
  bool __fastcall ContentFileName_Specified(int Index)
  {  return FContentFileName_Specified;  } 
  int __fastcall GetContentSize(int Index)
  {  return FContentSize;  }
  void __fastcall SetContentSize(int Index, int _prop_val)
  {  FContentSize = _prop_val; FContentSize_Specified = true;  }
  bool __fastcall ContentSize_Specified(int Index)
  {  return FContentSize_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedComments(int Index)
  {  return FFeedComments;  }
  void __fastcall SetFeedComments(int Index, QueryResult* _prop_val)
  {  FFeedComments = _prop_val; FFeedComments_Specified = true;  }
  bool __fastcall FeedComments_Specified(int Index)
  {  return FFeedComments_Specified;  } 
  QueryResult* __fastcall GetFeedLikes(int Index)
  {  return FFeedLikes;  }
  void __fastcall SetFeedLikes(int Index, QueryResult* _prop_val)
  {  FFeedLikes = _prop_val; FFeedLikes_Specified = true;  }
  bool __fastcall FeedLikes_Specified(int Index)
  {  return FFeedLikes_Specified;  } 
  QueryResult* __fastcall GetFeedTrackedChanges(int Index)
  {  return FFeedTrackedChanges;  }
  void __fastcall SetFeedTrackedChanges(int Index, QueryResult* _prop_val)
  {  FFeedTrackedChanges = _prop_val; FFeedTrackedChanges_Specified = true;  }
  bool __fastcall FeedTrackedChanges_Specified(int Index)
  {  return FFeedTrackedChanges_Specified;  } 
  Name_* __fastcall GetInsertedBy(int Index)
  {  return FInsertedBy;  }
  void __fastcall SetInsertedBy(int Index, Name_* _prop_val)
  {  FInsertedBy = _prop_val; FInsertedBy_Specified = true;  }
  bool __fastcall InsertedBy_Specified(int Index)
  {  return FInsertedBy_Specified;  } 
  ID __fastcall GetInsertedById(int Index)
  {  return FInsertedById;  }
  void __fastcall SetInsertedById(int Index, ID _prop_val)
  {  FInsertedById = _prop_val; FInsertedById_Specified = true;  }
  bool __fastcall InsertedById_Specified(int Index)
  {  return FInsertedById_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLikeCount(int Index)
  {  return FLikeCount;  }
  void __fastcall SetLikeCount(int Index, int _prop_val)
  {  FLikeCount = _prop_val; FLikeCount_Specified = true;  }
  bool __fastcall LikeCount_Specified(int Index)
  {  return FLikeCount_Specified;  } 
  UnicodeString __fastcall GetLinkUrl(int Index)
  {  return FLinkUrl;  }
  void __fastcall SetLinkUrl(int Index, UnicodeString _prop_val)
  {  FLinkUrl = _prop_val; FLinkUrl_Specified = true;  }
  bool __fastcall LinkUrl_Specified(int Index)
  {  return FLinkUrl_Specified;  } 
  Contract* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Contract* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetRelatedRecordId(int Index)
  {  return FRelatedRecordId;  }
  void __fastcall SetRelatedRecordId(int Index, ID _prop_val)
  {  FRelatedRecordId = _prop_val; FRelatedRecordId_Specified = true;  }
  bool __fastcall RelatedRecordId_Specified(int Index)
  {  return FRelatedRecordId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~ContractFeed();
__published:
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        CommentCount = { index=(IS_OPTN|IS_NLBL), read=FCommentCount, write=SetCommentCount, stored = CommentCount_Specified };
  __property TByteDynArray ContentData = { index=(IS_OPTN|IS_NLBL), read=FContentData, write=SetContentData, stored = ContentData_Specified };
  __property UnicodeString ContentDescription = { index=(IS_OPTN|IS_NLBL), read=FContentDescription, write=SetContentDescription, stored = ContentDescription_Specified };
  __property UnicodeString ContentFileName = { index=(IS_OPTN|IS_NLBL), read=FContentFileName, write=SetContentFileName, stored = ContentFileName_Specified };
  __property int        ContentSize = { index=(IS_OPTN|IS_NLBL), read=FContentSize, write=SetContentSize, stored = ContentSize_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedComments = { index=(IS_OPTN|IS_NLBL), read=FFeedComments, write=SetFeedComments, stored = FeedComments_Specified };
  __property QueryResult*  FeedLikes = { index=(IS_OPTN|IS_NLBL), read=FFeedLikes, write=SetFeedLikes, stored = FeedLikes_Specified };
  __property QueryResult* FeedTrackedChanges = { index=(IS_OPTN|IS_NLBL), read=FFeedTrackedChanges, write=SetFeedTrackedChanges, stored = FeedTrackedChanges_Specified };
  __property Name_*      InsertedBy = { index=(IS_OPTN|IS_NLBL), read=FInsertedBy, write=SetInsertedBy, stored = InsertedBy_Specified };
  __property ID         InsertedById = { index=(IS_OPTN|IS_NLBL), read=FInsertedById, write=SetInsertedById, stored = InsertedById_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int         LikeCount = { index=(IS_OPTN|IS_NLBL), read=FLikeCount, write=SetLikeCount, stored = LikeCount_Specified };
  __property UnicodeString    LinkUrl = { index=(IS_OPTN|IS_NLBL), read=FLinkUrl, write=SetLinkUrl, stored = LinkUrl_Specified };
  __property Contract*      Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         RelatedRecordId = { index=(IS_OPTN|IS_NLBL), read=FRelatedRecordId, write=SetRelatedRecordId, stored = RelatedRecordId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : ContractContactRole, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ContractContactRole : public sObject {
private:
  Contact*        FContact;
  bool            FContact_Specified;
  ID              FContactId;
  bool            FContactId_Specified;
  Contract*       FContract;
  bool            FContract_Specified;
  ID              FContractId;
  bool            FContractId_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsPrimary;
  bool            FIsPrimary_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FRole;
  bool            FRole_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  Contact* __fastcall GetContact(int Index)
  {  return FContact;  }
  void __fastcall SetContact(int Index, Contact* _prop_val)
  {  FContact = _prop_val; FContact_Specified = true;  }
  bool __fastcall Contact_Specified(int Index)
  {  return FContact_Specified;  } 
  ID __fastcall GetContactId(int Index)
  {  return FContactId;  }
  void __fastcall SetContactId(int Index, ID _prop_val)
  {  FContactId = _prop_val; FContactId_Specified = true;  }
  bool __fastcall ContactId_Specified(int Index)
  {  return FContactId_Specified;  } 
  Contract* __fastcall GetContract(int Index)
  {  return FContract;  }
  void __fastcall SetContract(int Index, Contract* _prop_val)
  {  FContract = _prop_val; FContract_Specified = true;  }
  bool __fastcall Contract_Specified(int Index)
  {  return FContract_Specified;  } 
  ID __fastcall GetContractId(int Index)
  {  return FContractId;  }
  void __fastcall SetContractId(int Index, ID _prop_val)
  {  FContractId = _prop_val; FContractId_Specified = true;  }
  bool __fastcall ContractId_Specified(int Index)
  {  return FContractId_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsPrimary(int Index)
  {  return FIsPrimary;  }
  void __fastcall SetIsPrimary(int Index, bool _prop_val)
  {  FIsPrimary = _prop_val; FIsPrimary_Specified = true;  }
  bool __fastcall IsPrimary_Specified(int Index)
  {  return FIsPrimary_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetRole(int Index)
  {  return FRole;  }
  void __fastcall SetRole(int Index, UnicodeString _prop_val)
  {  FRole = _prop_val; FRole_Specified = true;  }
  bool __fastcall Role_Specified(int Index)
  {  return FRole_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~ContractContactRole();
__published:
  __property Contact*      Contact = { index=(IS_OPTN|IS_NLBL), read=FContact, write=SetContact, stored = Contact_Specified };
  __property ID          ContactId = { index=(IS_OPTN|IS_NLBL), read=FContactId, write=SetContactId, stored = ContactId_Specified };
  __property Contract*    Contract = { index=(IS_OPTN|IS_NLBL), read=FContract, write=SetContract, stored = Contract_Specified };
  __property ID         ContractId = { index=(IS_OPTN|IS_NLBL), read=FContractId, write=SetContractId, stored = ContractId_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool        IsPrimary = { index=(IS_OPTN|IS_NLBL), read=FIsPrimary, write=SetIsPrimary, stored = IsPrimary_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Role = { index=(IS_OPTN|IS_NLBL), read=FRole, write=SetRole, stored = Role_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : ContentVersionHistory, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ContentVersionHistory : public sObject {
private:
  ContentVersion* FContentVersion;
  bool            FContentVersion_Specified;
  ID              FContentVersionId;
  bool            FContentVersionId_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FField;
  bool            FField_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  Variant         FNewValue;
  bool            FNewValue_Specified;
  Variant         FOldValue;
  bool            FOldValue_Specified;
  ContentVersion* __fastcall GetContentVersion(int Index)
  {  return FContentVersion;  }
  void __fastcall SetContentVersion(int Index, ContentVersion* _prop_val)
  {  FContentVersion = _prop_val; FContentVersion_Specified = true;  }
  bool __fastcall ContentVersion_Specified(int Index)
  {  return FContentVersion_Specified;  } 
  ID __fastcall GetContentVersionId(int Index)
  {  return FContentVersionId;  }
  void __fastcall SetContentVersionId(int Index, ID _prop_val)
  {  FContentVersionId = _prop_val; FContentVersionId_Specified = true;  }
  bool __fastcall ContentVersionId_Specified(int Index)
  {  return FContentVersionId_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetField(int Index)
  {  return FField;  }
  void __fastcall SetField(int Index, UnicodeString _prop_val)
  {  FField = _prop_val; FField_Specified = true;  }
  bool __fastcall Field_Specified(int Index)
  {  return FField_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  Variant __fastcall GetNewValue(int Index)
  {  return FNewValue;  }
  void __fastcall SetNewValue(int Index, Variant _prop_val)
  {  FNewValue = _prop_val; FNewValue_Specified = true;  }
  bool __fastcall NewValue_Specified(int Index)
  {  return FNewValue_Specified;  } 
  Variant __fastcall GetOldValue(int Index)
  {  return FOldValue;  }
  void __fastcall SetOldValue(int Index, Variant _prop_val)
  {  FOldValue = _prop_val; FOldValue_Specified = true;  }
  bool __fastcall OldValue_Specified(int Index)
  {  return FOldValue_Specified;  } 

public:
  __fastcall ~ContentVersionHistory();
__published:
  __property ContentVersion* ContentVersion = { index=(IS_OPTN|IS_NLBL), read=FContentVersion, write=SetContentVersion, stored = ContentVersion_Specified };
  __property ID         ContentVersionId = { index=(IS_OPTN|IS_NLBL), read=FContentVersionId, write=SetContentVersionId, stored = ContentVersionId_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString      Field = { index=(IS_OPTN|IS_NLBL), read=FField, write=SetField, stored = Field_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property Variant      NewValue = { index=(IS_OPTN|IS_NLBL), read=FNewValue, write=SetNewValue, stored = NewValue_Specified };
  __property Variant      OldValue = { index=(IS_OPTN|IS_NLBL), read=FOldValue, write=SetOldValue, stored = OldValue_Specified };
};




// ************************************************************************ //
// XML       : ContentDocumentLink, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ContentDocumentLink : public sObject {
private:
  ContentDocument* FContentDocument;
  bool            FContentDocument_Specified;
  ID              FContentDocumentId;
  bool            FContentDocumentId_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  Name_*           FLinkedEntity;
  bool            FLinkedEntity_Specified;
  ID              FLinkedEntityId;
  bool            FLinkedEntityId_Specified;
  UnicodeString   FShareType;
  bool            FShareType_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  ContentDocument* __fastcall GetContentDocument(int Index)
  {  return FContentDocument;  }
  void __fastcall SetContentDocument(int Index, ContentDocument* _prop_val)
  {  FContentDocument = _prop_val; FContentDocument_Specified = true;  }
  bool __fastcall ContentDocument_Specified(int Index)
  {  return FContentDocument_Specified;  } 
  ID __fastcall GetContentDocumentId(int Index)
  {  return FContentDocumentId;  }
  void __fastcall SetContentDocumentId(int Index, ID _prop_val)
  {  FContentDocumentId = _prop_val; FContentDocumentId_Specified = true;  }
  bool __fastcall ContentDocumentId_Specified(int Index)
  {  return FContentDocumentId_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  Name_* __fastcall GetLinkedEntity(int Index)
  {  return FLinkedEntity;  }
  void __fastcall SetLinkedEntity(int Index, Name_* _prop_val)
  {  FLinkedEntity = _prop_val; FLinkedEntity_Specified = true;  }
  bool __fastcall LinkedEntity_Specified(int Index)
  {  return FLinkedEntity_Specified;  } 
  ID __fastcall GetLinkedEntityId(int Index)
  {  return FLinkedEntityId;  }
  void __fastcall SetLinkedEntityId(int Index, ID _prop_val)
  {  FLinkedEntityId = _prop_val; FLinkedEntityId_Specified = true;  }
  bool __fastcall LinkedEntityId_Specified(int Index)
  {  return FLinkedEntityId_Specified;  } 
  UnicodeString __fastcall GetShareType(int Index)
  {  return FShareType;  }
  void __fastcall SetShareType(int Index, UnicodeString _prop_val)
  {  FShareType = _prop_val; FShareType_Specified = true;  }
  bool __fastcall ShareType_Specified(int Index)
  {  return FShareType_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~ContentDocumentLink();
__published:
  __property ContentDocument* ContentDocument = { index=(IS_OPTN|IS_NLBL), read=FContentDocument, write=SetContentDocument, stored = ContentDocument_Specified };
  __property ID         ContentDocumentId = { index=(IS_OPTN|IS_NLBL), read=FContentDocumentId, write=SetContentDocumentId, stored = ContentDocumentId_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property Name_*      LinkedEntity = { index=(IS_OPTN|IS_NLBL), read=FLinkedEntity, write=SetLinkedEntity, stored = LinkedEntity_Specified };
  __property ID         LinkedEntityId = { index=(IS_OPTN|IS_NLBL), read=FLinkedEntityId, write=SetLinkedEntityId, stored = LinkedEntityId_Specified };
  __property UnicodeString  ShareType = { index=(IS_OPTN|IS_NLBL), read=FShareType, write=SetShareType, stored = ShareType_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : ContentDocumentHistory, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ContentDocumentHistory : public sObject {
private:
  ContentDocument* FContentDocument;
  bool            FContentDocument_Specified;
  ID              FContentDocumentId;
  bool            FContentDocumentId_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FField;
  bool            FField_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  Variant         FNewValue;
  bool            FNewValue_Specified;
  Variant         FOldValue;
  bool            FOldValue_Specified;
  ContentDocument* __fastcall GetContentDocument(int Index)
  {  return FContentDocument;  }
  void __fastcall SetContentDocument(int Index, ContentDocument* _prop_val)
  {  FContentDocument = _prop_val; FContentDocument_Specified = true;  }
  bool __fastcall ContentDocument_Specified(int Index)
  {  return FContentDocument_Specified;  } 
  ID __fastcall GetContentDocumentId(int Index)
  {  return FContentDocumentId;  }
  void __fastcall SetContentDocumentId(int Index, ID _prop_val)
  {  FContentDocumentId = _prop_val; FContentDocumentId_Specified = true;  }
  bool __fastcall ContentDocumentId_Specified(int Index)
  {  return FContentDocumentId_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetField(int Index)
  {  return FField;  }
  void __fastcall SetField(int Index, UnicodeString _prop_val)
  {  FField = _prop_val; FField_Specified = true;  }
  bool __fastcall Field_Specified(int Index)
  {  return FField_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  Variant __fastcall GetNewValue(int Index)
  {  return FNewValue;  }
  void __fastcall SetNewValue(int Index, Variant _prop_val)
  {  FNewValue = _prop_val; FNewValue_Specified = true;  }
  bool __fastcall NewValue_Specified(int Index)
  {  return FNewValue_Specified;  } 
  Variant __fastcall GetOldValue(int Index)
  {  return FOldValue;  }
  void __fastcall SetOldValue(int Index, Variant _prop_val)
  {  FOldValue = _prop_val; FOldValue_Specified = true;  }
  bool __fastcall OldValue_Specified(int Index)
  {  return FOldValue_Specified;  } 

public:
  __fastcall ~ContentDocumentHistory();
__published:
  __property ContentDocument* ContentDocument = { index=(IS_OPTN|IS_NLBL), read=FContentDocument, write=SetContentDocument, stored = ContentDocument_Specified };
  __property ID         ContentDocumentId = { index=(IS_OPTN|IS_NLBL), read=FContentDocumentId, write=SetContentDocumentId, stored = ContentDocumentId_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString      Field = { index=(IS_OPTN|IS_NLBL), read=FField, write=SetField, stored = Field_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property Variant      NewValue = { index=(IS_OPTN|IS_NLBL), read=FNewValue, write=SetNewValue, stored = NewValue_Specified };
  __property Variant      OldValue = { index=(IS_OPTN|IS_NLBL), read=FOldValue, write=SetOldValue, stored = OldValue_Specified };
};




// ************************************************************************ //
// XML       : ContentDocumentFeed, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ContentDocumentFeed : public sObject {
private:
  UnicodeString   FBody;
  bool            FBody_Specified;
  int             FCommentCount;
  bool            FCommentCount_Specified;
  TByteDynArray   FContentData;
  bool            FContentData_Specified;
  UnicodeString   FContentDescription;
  bool            FContentDescription_Specified;
  UnicodeString   FContentFileName;
  bool            FContentFileName_Specified;
  int             FContentSize;
  bool            FContentSize_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedComments;
  bool            FFeedComments_Specified;
  QueryResult*    FFeedLikes;
  bool            FFeedLikes_Specified;
  QueryResult*    FFeedTrackedChanges;
  bool            FFeedTrackedChanges_Specified;
  Name_*           FInsertedBy;
  bool            FInsertedBy_Specified;
  ID              FInsertedById;
  bool            FInsertedById_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLikeCount;
  bool            FLikeCount_Specified;
  UnicodeString   FLinkUrl;
  bool            FLinkUrl_Specified;
  ContentDocument* FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FRelatedRecordId;
  bool            FRelatedRecordId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetCommentCount(int Index)
  {  return FCommentCount;  }
  void __fastcall SetCommentCount(int Index, int _prop_val)
  {  FCommentCount = _prop_val; FCommentCount_Specified = true;  }
  bool __fastcall CommentCount_Specified(int Index)
  {  return FCommentCount_Specified;  } 
  TByteDynArray __fastcall GetContentData(int Index)
  {  return FContentData;  }
  void __fastcall SetContentData(int Index, TByteDynArray _prop_val)
  {  FContentData = _prop_val; FContentData_Specified = true;  }
  bool __fastcall ContentData_Specified(int Index)
  {  return FContentData_Specified;  } 
  UnicodeString __fastcall GetContentDescription(int Index)
  {  return FContentDescription;  }
  void __fastcall SetContentDescription(int Index, UnicodeString _prop_val)
  {  FContentDescription = _prop_val; FContentDescription_Specified = true;  }
  bool __fastcall ContentDescription_Specified(int Index)
  {  return FContentDescription_Specified;  } 
  UnicodeString __fastcall GetContentFileName(int Index)
  {  return FContentFileName;  }
  void __fastcall SetContentFileName(int Index, UnicodeString _prop_val)
  {  FContentFileName = _prop_val; FContentFileName_Specified = true;  }
  bool __fastcall ContentFileName_Specified(int Index)
  {  return FContentFileName_Specified;  } 
  int __fastcall GetContentSize(int Index)
  {  return FContentSize;  }
  void __fastcall SetContentSize(int Index, int _prop_val)
  {  FContentSize = _prop_val; FContentSize_Specified = true;  }
  bool __fastcall ContentSize_Specified(int Index)
  {  return FContentSize_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedComments(int Index)
  {  return FFeedComments;  }
  void __fastcall SetFeedComments(int Index, QueryResult* _prop_val)
  {  FFeedComments = _prop_val; FFeedComments_Specified = true;  }
  bool __fastcall FeedComments_Specified(int Index)
  {  return FFeedComments_Specified;  } 
  QueryResult* __fastcall GetFeedLikes(int Index)
  {  return FFeedLikes;  }
  void __fastcall SetFeedLikes(int Index, QueryResult* _prop_val)
  {  FFeedLikes = _prop_val; FFeedLikes_Specified = true;  }
  bool __fastcall FeedLikes_Specified(int Index)
  {  return FFeedLikes_Specified;  } 
  QueryResult* __fastcall GetFeedTrackedChanges(int Index)
  {  return FFeedTrackedChanges;  }
  void __fastcall SetFeedTrackedChanges(int Index, QueryResult* _prop_val)
  {  FFeedTrackedChanges = _prop_val; FFeedTrackedChanges_Specified = true;  }
  bool __fastcall FeedTrackedChanges_Specified(int Index)
  {  return FFeedTrackedChanges_Specified;  } 
  Name_* __fastcall GetInsertedBy(int Index)
  {  return FInsertedBy;  }
  void __fastcall SetInsertedBy(int Index, Name_* _prop_val)
  {  FInsertedBy = _prop_val; FInsertedBy_Specified = true;  }
  bool __fastcall InsertedBy_Specified(int Index)
  {  return FInsertedBy_Specified;  } 
  ID __fastcall GetInsertedById(int Index)
  {  return FInsertedById;  }
  void __fastcall SetInsertedById(int Index, ID _prop_val)
  {  FInsertedById = _prop_val; FInsertedById_Specified = true;  }
  bool __fastcall InsertedById_Specified(int Index)
  {  return FInsertedById_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLikeCount(int Index)
  {  return FLikeCount;  }
  void __fastcall SetLikeCount(int Index, int _prop_val)
  {  FLikeCount = _prop_val; FLikeCount_Specified = true;  }
  bool __fastcall LikeCount_Specified(int Index)
  {  return FLikeCount_Specified;  } 
  UnicodeString __fastcall GetLinkUrl(int Index)
  {  return FLinkUrl;  }
  void __fastcall SetLinkUrl(int Index, UnicodeString _prop_val)
  {  FLinkUrl = _prop_val; FLinkUrl_Specified = true;  }
  bool __fastcall LinkUrl_Specified(int Index)
  {  return FLinkUrl_Specified;  } 
  ContentDocument* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, ContentDocument* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetRelatedRecordId(int Index)
  {  return FRelatedRecordId;  }
  void __fastcall SetRelatedRecordId(int Index, ID _prop_val)
  {  FRelatedRecordId = _prop_val; FRelatedRecordId_Specified = true;  }
  bool __fastcall RelatedRecordId_Specified(int Index)
  {  return FRelatedRecordId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~ContentDocumentFeed();
__published:
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        CommentCount = { index=(IS_OPTN|IS_NLBL), read=FCommentCount, write=SetCommentCount, stored = CommentCount_Specified };
  __property TByteDynArray ContentData = { index=(IS_OPTN|IS_NLBL), read=FContentData, write=SetContentData, stored = ContentData_Specified };
  __property UnicodeString ContentDescription = { index=(IS_OPTN|IS_NLBL), read=FContentDescription, write=SetContentDescription, stored = ContentDescription_Specified };
  __property UnicodeString ContentFileName = { index=(IS_OPTN|IS_NLBL), read=FContentFileName, write=SetContentFileName, stored = ContentFileName_Specified };
  __property int        ContentSize = { index=(IS_OPTN|IS_NLBL), read=FContentSize, write=SetContentSize, stored = ContentSize_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedComments = { index=(IS_OPTN|IS_NLBL), read=FFeedComments, write=SetFeedComments, stored = FeedComments_Specified };
  __property QueryResult*  FeedLikes = { index=(IS_OPTN|IS_NLBL), read=FFeedLikes, write=SetFeedLikes, stored = FeedLikes_Specified };
  __property QueryResult* FeedTrackedChanges = { index=(IS_OPTN|IS_NLBL), read=FFeedTrackedChanges, write=SetFeedTrackedChanges, stored = FeedTrackedChanges_Specified };
  __property Name_*      InsertedBy = { index=(IS_OPTN|IS_NLBL), read=FInsertedBy, write=SetInsertedBy, stored = InsertedBy_Specified };
  __property ID         InsertedById = { index=(IS_OPTN|IS_NLBL), read=FInsertedById, write=SetInsertedById, stored = InsertedById_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int         LikeCount = { index=(IS_OPTN|IS_NLBL), read=FLikeCount, write=SetLikeCount, stored = LikeCount_Specified };
  __property UnicodeString    LinkUrl = { index=(IS_OPTN|IS_NLBL), read=FLinkUrl, write=SetLinkUrl, stored = LinkUrl_Specified };
  __property ContentDocument*     Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         RelatedRecordId = { index=(IS_OPTN|IS_NLBL), read=FRelatedRecordId, write=SetRelatedRecordId, stored = RelatedRecordId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : ContentVersion, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ContentVersion : public sObject {
private:
  ContentDocument* FContentDocument;
  bool            FContentDocument_Specified;
  ID              FContentDocumentId;
  bool            FContentDocumentId_Specified;
  ID              FContentModifiedById;
  bool            FContentModifiedById_Specified;
  TXSDateTime*    FContentModifiedDate;
  bool            FContentModifiedDate_Specified;
  int             FContentSize;
  bool            FContentSize_Specified;
  UnicodeString   FContentUrl;
  bool            FContentUrl_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  int             FFeaturedContentBoost;
  bool            FFeaturedContentBoost_Specified;
  TXSDate*        FFeaturedContentDate;
  bool            FFeaturedContentDate_Specified;
  UnicodeString   FFileType;
  bool            FFileType_Specified;
  Name_*           FFirstPublishLocation;
  bool            FFirstPublishLocation_Specified;
  ID              FFirstPublishLocationId;
  bool            FFirstPublishLocationId_Specified;
  QueryResult*    FHistories;
  bool            FHistories_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsLatest;
  bool            FIsLatest_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FNegativeRatingCount;
  bool            FNegativeRatingCount_Specified;
  UnicodeString   FOrigin;
  bool            FOrigin_Specified;
  User*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  UnicodeString   FPathOnClient;
  bool            FPathOnClient_Specified;
  int             FPositiveRatingCount;
  bool            FPositiveRatingCount_Specified;
  UnicodeString   FPublishStatus;
  bool            FPublishStatus_Specified;
  int             FRatingCount;
  bool            FRatingCount_Specified;
  UnicodeString   FReasonForChange;
  bool            FReasonForChange_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTagCsv;
  bool            FTagCsv_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  TByteDynArray   FVersionData;
  bool            FVersionData_Specified;
  UnicodeString   FVersionNumber;
  bool            FVersionNumber_Specified;
  ContentDocument* __fastcall GetContentDocument(int Index)
  {  return FContentDocument;  }
  void __fastcall SetContentDocument(int Index, ContentDocument* _prop_val)
  {  FContentDocument = _prop_val; FContentDocument_Specified = true;  }
  bool __fastcall ContentDocument_Specified(int Index)
  {  return FContentDocument_Specified;  } 
  ID __fastcall GetContentDocumentId(int Index)
  {  return FContentDocumentId;  }
  void __fastcall SetContentDocumentId(int Index, ID _prop_val)
  {  FContentDocumentId = _prop_val; FContentDocumentId_Specified = true;  }
  bool __fastcall ContentDocumentId_Specified(int Index)
  {  return FContentDocumentId_Specified;  } 
  ID __fastcall GetContentModifiedById(int Index)
  {  return FContentModifiedById;  }
  void __fastcall SetContentModifiedById(int Index, ID _prop_val)
  {  FContentModifiedById = _prop_val; FContentModifiedById_Specified = true;  }
  bool __fastcall ContentModifiedById_Specified(int Index)
  {  return FContentModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetContentModifiedDate(int Index)
  {  return FContentModifiedDate;  }
  void __fastcall SetContentModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FContentModifiedDate = _prop_val; FContentModifiedDate_Specified = true;  }
  bool __fastcall ContentModifiedDate_Specified(int Index)
  {  return FContentModifiedDate_Specified;  } 
  int __fastcall GetContentSize(int Index)
  {  return FContentSize;  }
  void __fastcall SetContentSize(int Index, int _prop_val)
  {  FContentSize = _prop_val; FContentSize_Specified = true;  }
  bool __fastcall ContentSize_Specified(int Index)
  {  return FContentSize_Specified;  } 
  UnicodeString __fastcall GetContentUrl(int Index)
  {  return FContentUrl;  }
  void __fastcall SetContentUrl(int Index, UnicodeString _prop_val)
  {  FContentUrl = _prop_val; FContentUrl_Specified = true;  }
  bool __fastcall ContentUrl_Specified(int Index)
  {  return FContentUrl_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  int __fastcall GetFeaturedContentBoost(int Index)
  {  return FFeaturedContentBoost;  }
  void __fastcall SetFeaturedContentBoost(int Index, int _prop_val)
  {  FFeaturedContentBoost = _prop_val; FFeaturedContentBoost_Specified = true;  }
  bool __fastcall FeaturedContentBoost_Specified(int Index)
  {  return FFeaturedContentBoost_Specified;  } 
  TXSDate* __fastcall GetFeaturedContentDate(int Index)
  {  return FFeaturedContentDate;  }
  void __fastcall SetFeaturedContentDate(int Index, TXSDate* _prop_val)
  {  FFeaturedContentDate = _prop_val; FFeaturedContentDate_Specified = true;  }
  bool __fastcall FeaturedContentDate_Specified(int Index)
  {  return FFeaturedContentDate_Specified;  } 
  UnicodeString __fastcall GetFileType(int Index)
  {  return FFileType;  }
  void __fastcall SetFileType(int Index, UnicodeString _prop_val)
  {  FFileType = _prop_val; FFileType_Specified = true;  }
  bool __fastcall FileType_Specified(int Index)
  {  return FFileType_Specified;  } 
  Name_* __fastcall GetFirstPublishLocation(int Index)
  {  return FFirstPublishLocation;  }
  void __fastcall SetFirstPublishLocation(int Index, Name_* _prop_val)
  {  FFirstPublishLocation = _prop_val; FFirstPublishLocation_Specified = true;  }
  bool __fastcall FirstPublishLocation_Specified(int Index)
  {  return FFirstPublishLocation_Specified;  } 
  ID __fastcall GetFirstPublishLocationId(int Index)
  {  return FFirstPublishLocationId;  }
  void __fastcall SetFirstPublishLocationId(int Index, ID _prop_val)
  {  FFirstPublishLocationId = _prop_val; FFirstPublishLocationId_Specified = true;  }
  bool __fastcall FirstPublishLocationId_Specified(int Index)
  {  return FFirstPublishLocationId_Specified;  } 
  QueryResult* __fastcall GetHistories(int Index)
  {  return FHistories;  }
  void __fastcall SetHistories(int Index, QueryResult* _prop_val)
  {  FHistories = _prop_val; FHistories_Specified = true;  }
  bool __fastcall Histories_Specified(int Index)
  {  return FHistories_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsLatest(int Index)
  {  return FIsLatest;  }
  void __fastcall SetIsLatest(int Index, bool _prop_val)
  {  FIsLatest = _prop_val; FIsLatest_Specified = true;  }
  bool __fastcall IsLatest_Specified(int Index)
  {  return FIsLatest_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetNegativeRatingCount(int Index)
  {  return FNegativeRatingCount;  }
  void __fastcall SetNegativeRatingCount(int Index, int _prop_val)
  {  FNegativeRatingCount = _prop_val; FNegativeRatingCount_Specified = true;  }
  bool __fastcall NegativeRatingCount_Specified(int Index)
  {  return FNegativeRatingCount_Specified;  } 
  UnicodeString __fastcall GetOrigin(int Index)
  {  return FOrigin;  }
  void __fastcall SetOrigin(int Index, UnicodeString _prop_val)
  {  FOrigin = _prop_val; FOrigin_Specified = true;  }
  bool __fastcall Origin_Specified(int Index)
  {  return FOrigin_Specified;  } 
  User* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, User* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  UnicodeString __fastcall GetPathOnClient(int Index)
  {  return FPathOnClient;  }
  void __fastcall SetPathOnClient(int Index, UnicodeString _prop_val)
  {  FPathOnClient = _prop_val; FPathOnClient_Specified = true;  }
  bool __fastcall PathOnClient_Specified(int Index)
  {  return FPathOnClient_Specified;  } 
  int __fastcall GetPositiveRatingCount(int Index)
  {  return FPositiveRatingCount;  }
  void __fastcall SetPositiveRatingCount(int Index, int _prop_val)
  {  FPositiveRatingCount = _prop_val; FPositiveRatingCount_Specified = true;  }
  bool __fastcall PositiveRatingCount_Specified(int Index)
  {  return FPositiveRatingCount_Specified;  } 
  UnicodeString __fastcall GetPublishStatus(int Index)
  {  return FPublishStatus;  }
  void __fastcall SetPublishStatus(int Index, UnicodeString _prop_val)
  {  FPublishStatus = _prop_val; FPublishStatus_Specified = true;  }
  bool __fastcall PublishStatus_Specified(int Index)
  {  return FPublishStatus_Specified;  } 
  int __fastcall GetRatingCount(int Index)
  {  return FRatingCount;  }
  void __fastcall SetRatingCount(int Index, int _prop_val)
  {  FRatingCount = _prop_val; FRatingCount_Specified = true;  }
  bool __fastcall RatingCount_Specified(int Index)
  {  return FRatingCount_Specified;  } 
  UnicodeString __fastcall GetReasonForChange(int Index)
  {  return FReasonForChange;  }
  void __fastcall SetReasonForChange(int Index, UnicodeString _prop_val)
  {  FReasonForChange = _prop_val; FReasonForChange_Specified = true;  }
  bool __fastcall ReasonForChange_Specified(int Index)
  {  return FReasonForChange_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTagCsv(int Index)
  {  return FTagCsv;  }
  void __fastcall SetTagCsv(int Index, UnicodeString _prop_val)
  {  FTagCsv = _prop_val; FTagCsv_Specified = true;  }
  bool __fastcall TagCsv_Specified(int Index)
  {  return FTagCsv_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  TByteDynArray __fastcall GetVersionData(int Index)
  {  return FVersionData;  }
  void __fastcall SetVersionData(int Index, TByteDynArray _prop_val)
  {  FVersionData = _prop_val; FVersionData_Specified = true;  }
  bool __fastcall VersionData_Specified(int Index)
  {  return FVersionData_Specified;  } 
  UnicodeString __fastcall GetVersionNumber(int Index)
  {  return FVersionNumber;  }
  void __fastcall SetVersionNumber(int Index, UnicodeString _prop_val)
  {  FVersionNumber = _prop_val; FVersionNumber_Specified = true;  }
  bool __fastcall VersionNumber_Specified(int Index)
  {  return FVersionNumber_Specified;  } 

public:
  __fastcall ~ContentVersion();
__published:
  __property ContentDocument* ContentDocument = { index=(IS_OPTN|IS_NLBL), read=FContentDocument, write=SetContentDocument, stored = ContentDocument_Specified };
  __property ID         ContentDocumentId = { index=(IS_OPTN|IS_NLBL), read=FContentDocumentId, write=SetContentDocumentId, stored = ContentDocumentId_Specified };
  __property ID         ContentModifiedById = { index=(IS_OPTN|IS_NLBL), read=FContentModifiedById, write=SetContentModifiedById, stored = ContentModifiedById_Specified };
  __property TXSDateTime* ContentModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FContentModifiedDate, write=SetContentModifiedDate, stored = ContentModifiedDate_Specified };
  __property int        ContentSize = { index=(IS_OPTN|IS_NLBL), read=FContentSize, write=SetContentSize, stored = ContentSize_Specified };
  __property UnicodeString ContentUrl = { index=(IS_OPTN|IS_NLBL), read=FContentUrl, write=SetContentUrl, stored = ContentUrl_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property int        FeaturedContentBoost = { index=(IS_OPTN|IS_NLBL), read=FFeaturedContentBoost, write=SetFeaturedContentBoost, stored = FeaturedContentBoost_Specified };
  __property TXSDate*   FeaturedContentDate = { index=(IS_OPTN|IS_NLBL), read=FFeaturedContentDate, write=SetFeaturedContentDate, stored = FeaturedContentDate_Specified };
  __property UnicodeString   FileType = { index=(IS_OPTN|IS_NLBL), read=FFileType, write=SetFileType, stored = FileType_Specified };
  __property Name_*      FirstPublishLocation = { index=(IS_OPTN|IS_NLBL), read=FFirstPublishLocation, write=SetFirstPublishLocation, stored = FirstPublishLocation_Specified };
  __property ID         FirstPublishLocationId = { index=(IS_OPTN|IS_NLBL), read=FFirstPublishLocationId, write=SetFirstPublishLocationId, stored = FirstPublishLocationId_Specified };
  __property QueryResult*  Histories = { index=(IS_OPTN|IS_NLBL), read=FHistories, write=SetHistories, stored = Histories_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool         IsLatest = { index=(IS_OPTN|IS_NLBL), read=FIsLatest, write=SetIsLatest, stored = IsLatest_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int        NegativeRatingCount = { index=(IS_OPTN|IS_NLBL), read=FNegativeRatingCount, write=SetNegativeRatingCount, stored = NegativeRatingCount_Specified };
  __property UnicodeString     Origin = { index=(IS_OPTN|IS_NLBL), read=FOrigin, write=SetOrigin, stored = Origin_Specified };
  __property User*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property UnicodeString PathOnClient = { index=(IS_OPTN|IS_NLBL), read=FPathOnClient, write=SetPathOnClient, stored = PathOnClient_Specified };
  __property int        PositiveRatingCount = { index=(IS_OPTN|IS_NLBL), read=FPositiveRatingCount, write=SetPositiveRatingCount, stored = PositiveRatingCount_Specified };
  __property UnicodeString PublishStatus = { index=(IS_OPTN|IS_NLBL), read=FPublishStatus, write=SetPublishStatus, stored = PublishStatus_Specified };
  __property int        RatingCount = { index=(IS_OPTN|IS_NLBL), read=FRatingCount, write=SetRatingCount, stored = RatingCount_Specified };
  __property UnicodeString ReasonForChange = { index=(IS_OPTN|IS_NLBL), read=FReasonForChange, write=SetReasonForChange, stored = ReasonForChange_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString     TagCsv = { index=(IS_OPTN|IS_NLBL), read=FTagCsv, write=SetTagCsv, stored = TagCsv_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property TByteDynArray VersionData = { index=(IS_OPTN|IS_NLBL), read=FVersionData, write=SetVersionData, stored = VersionData_Specified };
  __property UnicodeString VersionNumber = { index=(IS_OPTN|IS_NLBL), read=FVersionNumber, write=SetVersionNumber, stored = VersionNumber_Specified };
};




// ************************************************************************ //
// XML       : ContentDocument, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ContentDocument : public sObject {
private:
  ID              FArchivedById;
  bool            FArchivedById_Specified;
  TXSDate*        FArchivedDate;
  bool            FArchivedDate_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  QueryResult*    FFeeds;
  bool            FFeeds_Specified;
  QueryResult*    FHistories;
  bool            FHistories_Specified;
  bool            FIsArchived;
  bool            FIsArchived_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  ContentVersion* FLatestPublishedVersion;
  bool            FLatestPublishedVersion_Specified;
  ID              FLatestPublishedVersionId;
  bool            FLatestPublishedVersionId_Specified;
  User*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  UnicodeString   FPublishStatus;
  bool            FPublishStatus_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  ID __fastcall GetArchivedById(int Index)
  {  return FArchivedById;  }
  void __fastcall SetArchivedById(int Index, ID _prop_val)
  {  FArchivedById = _prop_val; FArchivedById_Specified = true;  }
  bool __fastcall ArchivedById_Specified(int Index)
  {  return FArchivedById_Specified;  } 
  TXSDate* __fastcall GetArchivedDate(int Index)
  {  return FArchivedDate;  }
  void __fastcall SetArchivedDate(int Index, TXSDate* _prop_val)
  {  FArchivedDate = _prop_val; FArchivedDate_Specified = true;  }
  bool __fastcall ArchivedDate_Specified(int Index)
  {  return FArchivedDate_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  QueryResult* __fastcall GetFeeds(int Index)
  {  return FFeeds;  }
  void __fastcall SetFeeds(int Index, QueryResult* _prop_val)
  {  FFeeds = _prop_val; FFeeds_Specified = true;  }
  bool __fastcall Feeds_Specified(int Index)
  {  return FFeeds_Specified;  } 
  QueryResult* __fastcall GetHistories(int Index)
  {  return FHistories;  }
  void __fastcall SetHistories(int Index, QueryResult* _prop_val)
  {  FHistories = _prop_val; FHistories_Specified = true;  }
  bool __fastcall Histories_Specified(int Index)
  {  return FHistories_Specified;  } 
  bool __fastcall GetIsArchived(int Index)
  {  return FIsArchived;  }
  void __fastcall SetIsArchived(int Index, bool _prop_val)
  {  FIsArchived = _prop_val; FIsArchived_Specified = true;  }
  bool __fastcall IsArchived_Specified(int Index)
  {  return FIsArchived_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  ContentVersion* __fastcall GetLatestPublishedVersion(int Index)
  {  return FLatestPublishedVersion;  }
  void __fastcall SetLatestPublishedVersion(int Index, ContentVersion* _prop_val)
  {  FLatestPublishedVersion = _prop_val; FLatestPublishedVersion_Specified = true;  }
  bool __fastcall LatestPublishedVersion_Specified(int Index)
  {  return FLatestPublishedVersion_Specified;  } 
  ID __fastcall GetLatestPublishedVersionId(int Index)
  {  return FLatestPublishedVersionId;  }
  void __fastcall SetLatestPublishedVersionId(int Index, ID _prop_val)
  {  FLatestPublishedVersionId = _prop_val; FLatestPublishedVersionId_Specified = true;  }
  bool __fastcall LatestPublishedVersionId_Specified(int Index)
  {  return FLatestPublishedVersionId_Specified;  } 
  User* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, User* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  UnicodeString __fastcall GetPublishStatus(int Index)
  {  return FPublishStatus;  }
  void __fastcall SetPublishStatus(int Index, UnicodeString _prop_val)
  {  FPublishStatus = _prop_val; FPublishStatus_Specified = true;  }
  bool __fastcall PublishStatus_Specified(int Index)
  {  return FPublishStatus_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 

public:
  __fastcall ~ContentDocument();
__published:
  __property ID         ArchivedById = { index=(IS_OPTN|IS_NLBL), read=FArchivedById, write=SetArchivedById, stored = ArchivedById_Specified };
  __property TXSDate*   ArchivedDate = { index=(IS_OPTN|IS_NLBL), read=FArchivedDate, write=SetArchivedDate, stored = ArchivedDate_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property QueryResult*      Feeds = { index=(IS_OPTN|IS_NLBL), read=FFeeds, write=SetFeeds, stored = Feeds_Specified };
  __property QueryResult*  Histories = { index=(IS_OPTN|IS_NLBL), read=FHistories, write=SetHistories, stored = Histories_Specified };
  __property bool       IsArchived = { index=(IS_OPTN|IS_NLBL), read=FIsArchived, write=SetIsArchived, stored = IsArchived_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property ContentVersion* LatestPublishedVersion = { index=(IS_OPTN|IS_NLBL), read=FLatestPublishedVersion, write=SetLatestPublishedVersion, stored = LatestPublishedVersion_Specified };
  __property ID         LatestPublishedVersionId = { index=(IS_OPTN|IS_NLBL), read=FLatestPublishedVersionId, write=SetLatestPublishedVersionId, stored = LatestPublishedVersionId_Specified };
  __property User*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property UnicodeString PublishStatus = { index=(IS_OPTN|IS_NLBL), read=FPublishStatus, write=SetPublishStatus, stored = PublishStatus_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
};




// ************************************************************************ //
// XML       : ContactShare, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ContactShare : public sObject {
private:
  Contact*        FContact;
  bool            FContact_Specified;
  UnicodeString   FContactAccessLevel;
  bool            FContactAccessLevel_Specified;
  ID              FContactId;
  bool            FContactId_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FRowCause;
  bool            FRowCause_Specified;
  ID              FUserOrGroupId;
  bool            FUserOrGroupId_Specified;
  Contact* __fastcall GetContact(int Index)
  {  return FContact;  }
  void __fastcall SetContact(int Index, Contact* _prop_val)
  {  FContact = _prop_val; FContact_Specified = true;  }
  bool __fastcall Contact_Specified(int Index)
  {  return FContact_Specified;  } 
  UnicodeString __fastcall GetContactAccessLevel(int Index)
  {  return FContactAccessLevel;  }
  void __fastcall SetContactAccessLevel(int Index, UnicodeString _prop_val)
  {  FContactAccessLevel = _prop_val; FContactAccessLevel_Specified = true;  }
  bool __fastcall ContactAccessLevel_Specified(int Index)
  {  return FContactAccessLevel_Specified;  } 
  ID __fastcall GetContactId(int Index)
  {  return FContactId;  }
  void __fastcall SetContactId(int Index, ID _prop_val)
  {  FContactId = _prop_val; FContactId_Specified = true;  }
  bool __fastcall ContactId_Specified(int Index)
  {  return FContactId_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetRowCause(int Index)
  {  return FRowCause;  }
  void __fastcall SetRowCause(int Index, UnicodeString _prop_val)
  {  FRowCause = _prop_val; FRowCause_Specified = true;  }
  bool __fastcall RowCause_Specified(int Index)
  {  return FRowCause_Specified;  } 
  ID __fastcall GetUserOrGroupId(int Index)
  {  return FUserOrGroupId;  }
  void __fastcall SetUserOrGroupId(int Index, ID _prop_val)
  {  FUserOrGroupId = _prop_val; FUserOrGroupId_Specified = true;  }
  bool __fastcall UserOrGroupId_Specified(int Index)
  {  return FUserOrGroupId_Specified;  } 

public:
  __fastcall ~ContactShare();
__published:
  __property Contact*      Contact = { index=(IS_OPTN|IS_NLBL), read=FContact, write=SetContact, stored = Contact_Specified };
  __property UnicodeString ContactAccessLevel = { index=(IS_OPTN|IS_NLBL), read=FContactAccessLevel, write=SetContactAccessLevel, stored = ContactAccessLevel_Specified };
  __property ID          ContactId = { index=(IS_OPTN|IS_NLBL), read=FContactId, write=SetContactId, stored = ContactId_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString   RowCause = { index=(IS_OPTN|IS_NLBL), read=FRowCause, write=SetRowCause, stored = RowCause_Specified };
  __property ID         UserOrGroupId = { index=(IS_OPTN|IS_NLBL), read=FUserOrGroupId, write=SetUserOrGroupId, stored = UserOrGroupId_Specified };
};




// ************************************************************************ //
// XML       : ContactHistory, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ContactHistory : public sObject {
private:
  Contact*        FContact;
  bool            FContact_Specified;
  ID              FContactId;
  bool            FContactId_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FField;
  bool            FField_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  Variant         FNewValue;
  bool            FNewValue_Specified;
  Variant         FOldValue;
  bool            FOldValue_Specified;
  Contact* __fastcall GetContact(int Index)
  {  return FContact;  }
  void __fastcall SetContact(int Index, Contact* _prop_val)
  {  FContact = _prop_val; FContact_Specified = true;  }
  bool __fastcall Contact_Specified(int Index)
  {  return FContact_Specified;  } 
  ID __fastcall GetContactId(int Index)
  {  return FContactId;  }
  void __fastcall SetContactId(int Index, ID _prop_val)
  {  FContactId = _prop_val; FContactId_Specified = true;  }
  bool __fastcall ContactId_Specified(int Index)
  {  return FContactId_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetField(int Index)
  {  return FField;  }
  void __fastcall SetField(int Index, UnicodeString _prop_val)
  {  FField = _prop_val; FField_Specified = true;  }
  bool __fastcall Field_Specified(int Index)
  {  return FField_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  Variant __fastcall GetNewValue(int Index)
  {  return FNewValue;  }
  void __fastcall SetNewValue(int Index, Variant _prop_val)
  {  FNewValue = _prop_val; FNewValue_Specified = true;  }
  bool __fastcall NewValue_Specified(int Index)
  {  return FNewValue_Specified;  } 
  Variant __fastcall GetOldValue(int Index)
  {  return FOldValue;  }
  void __fastcall SetOldValue(int Index, Variant _prop_val)
  {  FOldValue = _prop_val; FOldValue_Specified = true;  }
  bool __fastcall OldValue_Specified(int Index)
  {  return FOldValue_Specified;  } 

public:
  __fastcall ~ContactHistory();
__published:
  __property Contact*      Contact = { index=(IS_OPTN|IS_NLBL), read=FContact, write=SetContact, stored = Contact_Specified };
  __property ID          ContactId = { index=(IS_OPTN|IS_NLBL), read=FContactId, write=SetContactId, stored = ContactId_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString      Field = { index=(IS_OPTN|IS_NLBL), read=FField, write=SetField, stored = Field_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property Variant      NewValue = { index=(IS_OPTN|IS_NLBL), read=FNewValue, write=SetNewValue, stored = NewValue_Specified };
  __property Variant      OldValue = { index=(IS_OPTN|IS_NLBL), read=FOldValue, write=SetOldValue, stored = OldValue_Specified };
};




// ************************************************************************ //
// XML       : ContactFeed, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ContactFeed : public sObject {
private:
  UnicodeString   FBody;
  bool            FBody_Specified;
  int             FCommentCount;
  bool            FCommentCount_Specified;
  TByteDynArray   FContentData;
  bool            FContentData_Specified;
  UnicodeString   FContentDescription;
  bool            FContentDescription_Specified;
  UnicodeString   FContentFileName;
  bool            FContentFileName_Specified;
  int             FContentSize;
  bool            FContentSize_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedComments;
  bool            FFeedComments_Specified;
  QueryResult*    FFeedLikes;
  bool            FFeedLikes_Specified;
  QueryResult*    FFeedTrackedChanges;
  bool            FFeedTrackedChanges_Specified;
  Name_*           FInsertedBy;
  bool            FInsertedBy_Specified;
  ID              FInsertedById;
  bool            FInsertedById_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLikeCount;
  bool            FLikeCount_Specified;
  UnicodeString   FLinkUrl;
  bool            FLinkUrl_Specified;
  Contact*        FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FRelatedRecordId;
  bool            FRelatedRecordId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetCommentCount(int Index)
  {  return FCommentCount;  }
  void __fastcall SetCommentCount(int Index, int _prop_val)
  {  FCommentCount = _prop_val; FCommentCount_Specified = true;  }
  bool __fastcall CommentCount_Specified(int Index)
  {  return FCommentCount_Specified;  } 
  TByteDynArray __fastcall GetContentData(int Index)
  {  return FContentData;  }
  void __fastcall SetContentData(int Index, TByteDynArray _prop_val)
  {  FContentData = _prop_val; FContentData_Specified = true;  }
  bool __fastcall ContentData_Specified(int Index)
  {  return FContentData_Specified;  } 
  UnicodeString __fastcall GetContentDescription(int Index)
  {  return FContentDescription;  }
  void __fastcall SetContentDescription(int Index, UnicodeString _prop_val)
  {  FContentDescription = _prop_val; FContentDescription_Specified = true;  }
  bool __fastcall ContentDescription_Specified(int Index)
  {  return FContentDescription_Specified;  } 
  UnicodeString __fastcall GetContentFileName(int Index)
  {  return FContentFileName;  }
  void __fastcall SetContentFileName(int Index, UnicodeString _prop_val)
  {  FContentFileName = _prop_val; FContentFileName_Specified = true;  }
  bool __fastcall ContentFileName_Specified(int Index)
  {  return FContentFileName_Specified;  } 
  int __fastcall GetContentSize(int Index)
  {  return FContentSize;  }
  void __fastcall SetContentSize(int Index, int _prop_val)
  {  FContentSize = _prop_val; FContentSize_Specified = true;  }
  bool __fastcall ContentSize_Specified(int Index)
  {  return FContentSize_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedComments(int Index)
  {  return FFeedComments;  }
  void __fastcall SetFeedComments(int Index, QueryResult* _prop_val)
  {  FFeedComments = _prop_val; FFeedComments_Specified = true;  }
  bool __fastcall FeedComments_Specified(int Index)
  {  return FFeedComments_Specified;  } 
  QueryResult* __fastcall GetFeedLikes(int Index)
  {  return FFeedLikes;  }
  void __fastcall SetFeedLikes(int Index, QueryResult* _prop_val)
  {  FFeedLikes = _prop_val; FFeedLikes_Specified = true;  }
  bool __fastcall FeedLikes_Specified(int Index)
  {  return FFeedLikes_Specified;  } 
  QueryResult* __fastcall GetFeedTrackedChanges(int Index)
  {  return FFeedTrackedChanges;  }
  void __fastcall SetFeedTrackedChanges(int Index, QueryResult* _prop_val)
  {  FFeedTrackedChanges = _prop_val; FFeedTrackedChanges_Specified = true;  }
  bool __fastcall FeedTrackedChanges_Specified(int Index)
  {  return FFeedTrackedChanges_Specified;  } 
  Name_* __fastcall GetInsertedBy(int Index)
  {  return FInsertedBy;  }
  void __fastcall SetInsertedBy(int Index, Name_* _prop_val)
  {  FInsertedBy = _prop_val; FInsertedBy_Specified = true;  }
  bool __fastcall InsertedBy_Specified(int Index)
  {  return FInsertedBy_Specified;  } 
  ID __fastcall GetInsertedById(int Index)
  {  return FInsertedById;  }
  void __fastcall SetInsertedById(int Index, ID _prop_val)
  {  FInsertedById = _prop_val; FInsertedById_Specified = true;  }
  bool __fastcall InsertedById_Specified(int Index)
  {  return FInsertedById_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLikeCount(int Index)
  {  return FLikeCount;  }
  void __fastcall SetLikeCount(int Index, int _prop_val)
  {  FLikeCount = _prop_val; FLikeCount_Specified = true;  }
  bool __fastcall LikeCount_Specified(int Index)
  {  return FLikeCount_Specified;  } 
  UnicodeString __fastcall GetLinkUrl(int Index)
  {  return FLinkUrl;  }
  void __fastcall SetLinkUrl(int Index, UnicodeString _prop_val)
  {  FLinkUrl = _prop_val; FLinkUrl_Specified = true;  }
  bool __fastcall LinkUrl_Specified(int Index)
  {  return FLinkUrl_Specified;  } 
  Contact* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Contact* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetRelatedRecordId(int Index)
  {  return FRelatedRecordId;  }
  void __fastcall SetRelatedRecordId(int Index, ID _prop_val)
  {  FRelatedRecordId = _prop_val; FRelatedRecordId_Specified = true;  }
  bool __fastcall RelatedRecordId_Specified(int Index)
  {  return FRelatedRecordId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~ContactFeed();
__published:
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        CommentCount = { index=(IS_OPTN|IS_NLBL), read=FCommentCount, write=SetCommentCount, stored = CommentCount_Specified };
  __property TByteDynArray ContentData = { index=(IS_OPTN|IS_NLBL), read=FContentData, write=SetContentData, stored = ContentData_Specified };
  __property UnicodeString ContentDescription = { index=(IS_OPTN|IS_NLBL), read=FContentDescription, write=SetContentDescription, stored = ContentDescription_Specified };
  __property UnicodeString ContentFileName = { index=(IS_OPTN|IS_NLBL), read=FContentFileName, write=SetContentFileName, stored = ContentFileName_Specified };
  __property int        ContentSize = { index=(IS_OPTN|IS_NLBL), read=FContentSize, write=SetContentSize, stored = ContentSize_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedComments = { index=(IS_OPTN|IS_NLBL), read=FFeedComments, write=SetFeedComments, stored = FeedComments_Specified };
  __property QueryResult*  FeedLikes = { index=(IS_OPTN|IS_NLBL), read=FFeedLikes, write=SetFeedLikes, stored = FeedLikes_Specified };
  __property QueryResult* FeedTrackedChanges = { index=(IS_OPTN|IS_NLBL), read=FFeedTrackedChanges, write=SetFeedTrackedChanges, stored = FeedTrackedChanges_Specified };
  __property Name_*      InsertedBy = { index=(IS_OPTN|IS_NLBL), read=FInsertedBy, write=SetInsertedBy, stored = InsertedBy_Specified };
  __property ID         InsertedById = { index=(IS_OPTN|IS_NLBL), read=FInsertedById, write=SetInsertedById, stored = InsertedById_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int         LikeCount = { index=(IS_OPTN|IS_NLBL), read=FLikeCount, write=SetLikeCount, stored = LikeCount_Specified };
  __property UnicodeString    LinkUrl = { index=(IS_OPTN|IS_NLBL), read=FLinkUrl, write=SetLinkUrl, stored = LinkUrl_Specified };
  __property Contact*       Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         RelatedRecordId = { index=(IS_OPTN|IS_NLBL), read=FRelatedRecordId, write=SetRelatedRecordId, stored = RelatedRecordId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : Community, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Community : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  bool            FIsActive;
  bool            FIsActive_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  bool __fastcall GetIsActive(int Index)
  {  return FIsActive;  }
  void __fastcall SetIsActive(int Index, bool _prop_val)
  {  FIsActive = _prop_val; FIsActive_Specified = true;  }
  bool __fastcall IsActive_Specified(int Index)
  {  return FIsActive_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~Community();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property bool         IsActive = { index=(IS_OPTN|IS_NLBL), read=FIsActive, write=SetIsActive, stored = IsActive_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : CollaborationInvitation, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class CollaborationInvitation : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FInvitedUserEmail;
  bool            FInvitedUserEmail_Specified;
  UnicodeString   FInvitedUserEmailNormalized;
  bool            FInvitedUserEmailNormalized_Specified;
  ID              FInviterId;
  bool            FInviterId_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FOptionalMessage;
  bool            FOptionalMessage_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FSharedEntityId;
  bool            FSharedEntityId_Specified;
  UnicodeString   FStatus;
  bool            FStatus_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetInvitedUserEmail(int Index)
  {  return FInvitedUserEmail;  }
  void __fastcall SetInvitedUserEmail(int Index, UnicodeString _prop_val)
  {  FInvitedUserEmail = _prop_val; FInvitedUserEmail_Specified = true;  }
  bool __fastcall InvitedUserEmail_Specified(int Index)
  {  return FInvitedUserEmail_Specified;  } 
  UnicodeString __fastcall GetInvitedUserEmailNormalized(int Index)
  {  return FInvitedUserEmailNormalized;  }
  void __fastcall SetInvitedUserEmailNormalized(int Index, UnicodeString _prop_val)
  {  FInvitedUserEmailNormalized = _prop_val; FInvitedUserEmailNormalized_Specified = true;  }
  bool __fastcall InvitedUserEmailNormalized_Specified(int Index)
  {  return FInvitedUserEmailNormalized_Specified;  } 
  ID __fastcall GetInviterId(int Index)
  {  return FInviterId;  }
  void __fastcall SetInviterId(int Index, ID _prop_val)
  {  FInviterId = _prop_val; FInviterId_Specified = true;  }
  bool __fastcall InviterId_Specified(int Index)
  {  return FInviterId_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetOptionalMessage(int Index)
  {  return FOptionalMessage;  }
  void __fastcall SetOptionalMessage(int Index, UnicodeString _prop_val)
  {  FOptionalMessage = _prop_val; FOptionalMessage_Specified = true;  }
  bool __fastcall OptionalMessage_Specified(int Index)
  {  return FOptionalMessage_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetSharedEntityId(int Index)
  {  return FSharedEntityId;  }
  void __fastcall SetSharedEntityId(int Index, ID _prop_val)
  {  FSharedEntityId = _prop_val; FSharedEntityId_Specified = true;  }
  bool __fastcall SharedEntityId_Specified(int Index)
  {  return FSharedEntityId_Specified;  } 
  UnicodeString __fastcall GetStatus(int Index)
  {  return FStatus;  }
  void __fastcall SetStatus(int Index, UnicodeString _prop_val)
  {  FStatus = _prop_val; FStatus_Specified = true;  }
  bool __fastcall Status_Specified(int Index)
  {  return FStatus_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~CollaborationInvitation();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString InvitedUserEmail = { index=(IS_OPTN|IS_NLBL), read=FInvitedUserEmail, write=SetInvitedUserEmail, stored = InvitedUserEmail_Specified };
  __property UnicodeString InvitedUserEmailNormalized = { index=(IS_OPTN|IS_NLBL), read=FInvitedUserEmailNormalized, write=SetInvitedUserEmailNormalized, stored = InvitedUserEmailNormalized_Specified };
  __property ID          InviterId = { index=(IS_OPTN|IS_NLBL), read=FInviterId, write=SetInviterId, stored = InviterId_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString OptionalMessage = { index=(IS_OPTN|IS_NLBL), read=FOptionalMessage, write=SetOptionalMessage, stored = OptionalMessage_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         SharedEntityId = { index=(IS_OPTN|IS_NLBL), read=FSharedEntityId, write=SetSharedEntityId, stored = SharedEntityId_Specified };
  __property UnicodeString     Status = { index=(IS_OPTN|IS_NLBL), read=FStatus, write=SetStatus, stored = Status_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : CollaborationGroupMemberRequest, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class CollaborationGroupMemberRequest : public sObject {
private:
  CollaborationGroup* FCollaborationGroup;
  bool            FCollaborationGroup_Specified;
  ID              FCollaborationGroupId;
  bool            FCollaborationGroupId_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  ID              FRequesterId;
  bool            FRequesterId_Specified;
  UnicodeString   FResponseMessage;
  bool            FResponseMessage_Specified;
  UnicodeString   FStatus;
  bool            FStatus_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  CollaborationGroup* __fastcall GetCollaborationGroup(int Index)
  {  return FCollaborationGroup;  }
  void __fastcall SetCollaborationGroup(int Index, CollaborationGroup* _prop_val)
  {  FCollaborationGroup = _prop_val; FCollaborationGroup_Specified = true;  }
  bool __fastcall CollaborationGroup_Specified(int Index)
  {  return FCollaborationGroup_Specified;  } 
  ID __fastcall GetCollaborationGroupId(int Index)
  {  return FCollaborationGroupId;  }
  void __fastcall SetCollaborationGroupId(int Index, ID _prop_val)
  {  FCollaborationGroupId = _prop_val; FCollaborationGroupId_Specified = true;  }
  bool __fastcall CollaborationGroupId_Specified(int Index)
  {  return FCollaborationGroupId_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  ID __fastcall GetRequesterId(int Index)
  {  return FRequesterId;  }
  void __fastcall SetRequesterId(int Index, ID _prop_val)
  {  FRequesterId = _prop_val; FRequesterId_Specified = true;  }
  bool __fastcall RequesterId_Specified(int Index)
  {  return FRequesterId_Specified;  } 
  UnicodeString __fastcall GetResponseMessage(int Index)
  {  return FResponseMessage;  }
  void __fastcall SetResponseMessage(int Index, UnicodeString _prop_val)
  {  FResponseMessage = _prop_val; FResponseMessage_Specified = true;  }
  bool __fastcall ResponseMessage_Specified(int Index)
  {  return FResponseMessage_Specified;  } 
  UnicodeString __fastcall GetStatus(int Index)
  {  return FStatus;  }
  void __fastcall SetStatus(int Index, UnicodeString _prop_val)
  {  FStatus = _prop_val; FStatus_Specified = true;  }
  bool __fastcall Status_Specified(int Index)
  {  return FStatus_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~CollaborationGroupMemberRequest();
__published:
  __property CollaborationGroup* CollaborationGroup = { index=(IS_OPTN|IS_NLBL), read=FCollaborationGroup, write=SetCollaborationGroup, stored = CollaborationGroup_Specified };
  __property ID         CollaborationGroupId = { index=(IS_OPTN|IS_NLBL), read=FCollaborationGroupId, write=SetCollaborationGroupId, stored = CollaborationGroupId_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property ID         RequesterId = { index=(IS_OPTN|IS_NLBL), read=FRequesterId, write=SetRequesterId, stored = RequesterId_Specified };
  __property UnicodeString ResponseMessage = { index=(IS_OPTN|IS_NLBL), read=FResponseMessage, write=SetResponseMessage, stored = ResponseMessage_Specified };
  __property UnicodeString     Status = { index=(IS_OPTN|IS_NLBL), read=FStatus, write=SetStatus, stored = Status_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : CollaborationGroupMember, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class CollaborationGroupMember : public sObject {
private:
  CollaborationGroup* FCollaborationGroup;
  bool            FCollaborationGroup_Specified;
  ID              FCollaborationGroupId;
  bool            FCollaborationGroupId_Specified;
  UnicodeString   FCollaborationRole;
  bool            FCollaborationRole_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  ID              FMemberId;
  bool            FMemberId_Specified;
  UnicodeString   FNotificationFrequency;
  bool            FNotificationFrequency_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  CollaborationGroup* __fastcall GetCollaborationGroup(int Index)
  {  return FCollaborationGroup;  }
  void __fastcall SetCollaborationGroup(int Index, CollaborationGroup* _prop_val)
  {  FCollaborationGroup = _prop_val; FCollaborationGroup_Specified = true;  }
  bool __fastcall CollaborationGroup_Specified(int Index)
  {  return FCollaborationGroup_Specified;  } 
  ID __fastcall GetCollaborationGroupId(int Index)
  {  return FCollaborationGroupId;  }
  void __fastcall SetCollaborationGroupId(int Index, ID _prop_val)
  {  FCollaborationGroupId = _prop_val; FCollaborationGroupId_Specified = true;  }
  bool __fastcall CollaborationGroupId_Specified(int Index)
  {  return FCollaborationGroupId_Specified;  } 
  UnicodeString __fastcall GetCollaborationRole(int Index)
  {  return FCollaborationRole;  }
  void __fastcall SetCollaborationRole(int Index, UnicodeString _prop_val)
  {  FCollaborationRole = _prop_val; FCollaborationRole_Specified = true;  }
  bool __fastcall CollaborationRole_Specified(int Index)
  {  return FCollaborationRole_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  ID __fastcall GetMemberId(int Index)
  {  return FMemberId;  }
  void __fastcall SetMemberId(int Index, ID _prop_val)
  {  FMemberId = _prop_val; FMemberId_Specified = true;  }
  bool __fastcall MemberId_Specified(int Index)
  {  return FMemberId_Specified;  } 
  UnicodeString __fastcall GetNotificationFrequency(int Index)
  {  return FNotificationFrequency;  }
  void __fastcall SetNotificationFrequency(int Index, UnicodeString _prop_val)
  {  FNotificationFrequency = _prop_val; FNotificationFrequency_Specified = true;  }
  bool __fastcall NotificationFrequency_Specified(int Index)
  {  return FNotificationFrequency_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~CollaborationGroupMember();
__published:
  __property CollaborationGroup* CollaborationGroup = { index=(IS_OPTN|IS_NLBL), read=FCollaborationGroup, write=SetCollaborationGroup, stored = CollaborationGroup_Specified };
  __property ID         CollaborationGroupId = { index=(IS_OPTN|IS_NLBL), read=FCollaborationGroupId, write=SetCollaborationGroupId, stored = CollaborationGroupId_Specified };
  __property UnicodeString CollaborationRole = { index=(IS_OPTN|IS_NLBL), read=FCollaborationRole, write=SetCollaborationRole, stored = CollaborationRole_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property ID           MemberId = { index=(IS_OPTN|IS_NLBL), read=FMemberId, write=SetMemberId, stored = MemberId_Specified };
  __property UnicodeString NotificationFrequency = { index=(IS_OPTN|IS_NLBL), read=FNotificationFrequency, write=SetNotificationFrequency, stored = NotificationFrequency_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : CollaborationGroupFeed, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class CollaborationGroupFeed : public sObject {
private:
  UnicodeString   FBody;
  bool            FBody_Specified;
  int             FCommentCount;
  bool            FCommentCount_Specified;
  TByteDynArray   FContentData;
  bool            FContentData_Specified;
  UnicodeString   FContentDescription;
  bool            FContentDescription_Specified;
  UnicodeString   FContentFileName;
  bool            FContentFileName_Specified;
  int             FContentSize;
  bool            FContentSize_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedComments;
  bool            FFeedComments_Specified;
  QueryResult*    FFeedLikes;
  bool            FFeedLikes_Specified;
  QueryResult*    FFeedTrackedChanges;
  bool            FFeedTrackedChanges_Specified;
  Name_*           FInsertedBy;
  bool            FInsertedBy_Specified;
  ID              FInsertedById;
  bool            FInsertedById_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLikeCount;
  bool            FLikeCount_Specified;
  UnicodeString   FLinkUrl;
  bool            FLinkUrl_Specified;
  CollaborationGroup* FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FRelatedRecordId;
  bool            FRelatedRecordId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetCommentCount(int Index)
  {  return FCommentCount;  }
  void __fastcall SetCommentCount(int Index, int _prop_val)
  {  FCommentCount = _prop_val; FCommentCount_Specified = true;  }
  bool __fastcall CommentCount_Specified(int Index)
  {  return FCommentCount_Specified;  } 
  TByteDynArray __fastcall GetContentData(int Index)
  {  return FContentData;  }
  void __fastcall SetContentData(int Index, TByteDynArray _prop_val)
  {  FContentData = _prop_val; FContentData_Specified = true;  }
  bool __fastcall ContentData_Specified(int Index)
  {  return FContentData_Specified;  } 
  UnicodeString __fastcall GetContentDescription(int Index)
  {  return FContentDescription;  }
  void __fastcall SetContentDescription(int Index, UnicodeString _prop_val)
  {  FContentDescription = _prop_val; FContentDescription_Specified = true;  }
  bool __fastcall ContentDescription_Specified(int Index)
  {  return FContentDescription_Specified;  } 
  UnicodeString __fastcall GetContentFileName(int Index)
  {  return FContentFileName;  }
  void __fastcall SetContentFileName(int Index, UnicodeString _prop_val)
  {  FContentFileName = _prop_val; FContentFileName_Specified = true;  }
  bool __fastcall ContentFileName_Specified(int Index)
  {  return FContentFileName_Specified;  } 
  int __fastcall GetContentSize(int Index)
  {  return FContentSize;  }
  void __fastcall SetContentSize(int Index, int _prop_val)
  {  FContentSize = _prop_val; FContentSize_Specified = true;  }
  bool __fastcall ContentSize_Specified(int Index)
  {  return FContentSize_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedComments(int Index)
  {  return FFeedComments;  }
  void __fastcall SetFeedComments(int Index, QueryResult* _prop_val)
  {  FFeedComments = _prop_val; FFeedComments_Specified = true;  }
  bool __fastcall FeedComments_Specified(int Index)
  {  return FFeedComments_Specified;  } 
  QueryResult* __fastcall GetFeedLikes(int Index)
  {  return FFeedLikes;  }
  void __fastcall SetFeedLikes(int Index, QueryResult* _prop_val)
  {  FFeedLikes = _prop_val; FFeedLikes_Specified = true;  }
  bool __fastcall FeedLikes_Specified(int Index)
  {  return FFeedLikes_Specified;  } 
  QueryResult* __fastcall GetFeedTrackedChanges(int Index)
  {  return FFeedTrackedChanges;  }
  void __fastcall SetFeedTrackedChanges(int Index, QueryResult* _prop_val)
  {  FFeedTrackedChanges = _prop_val; FFeedTrackedChanges_Specified = true;  }
  bool __fastcall FeedTrackedChanges_Specified(int Index)
  {  return FFeedTrackedChanges_Specified;  } 
  Name_* __fastcall GetInsertedBy(int Index)
  {  return FInsertedBy;  }
  void __fastcall SetInsertedBy(int Index, Name_* _prop_val)
  {  FInsertedBy = _prop_val; FInsertedBy_Specified = true;  }
  bool __fastcall InsertedBy_Specified(int Index)
  {  return FInsertedBy_Specified;  } 
  ID __fastcall GetInsertedById(int Index)
  {  return FInsertedById;  }
  void __fastcall SetInsertedById(int Index, ID _prop_val)
  {  FInsertedById = _prop_val; FInsertedById_Specified = true;  }
  bool __fastcall InsertedById_Specified(int Index)
  {  return FInsertedById_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLikeCount(int Index)
  {  return FLikeCount;  }
  void __fastcall SetLikeCount(int Index, int _prop_val)
  {  FLikeCount = _prop_val; FLikeCount_Specified = true;  }
  bool __fastcall LikeCount_Specified(int Index)
  {  return FLikeCount_Specified;  } 
  UnicodeString __fastcall GetLinkUrl(int Index)
  {  return FLinkUrl;  }
  void __fastcall SetLinkUrl(int Index, UnicodeString _prop_val)
  {  FLinkUrl = _prop_val; FLinkUrl_Specified = true;  }
  bool __fastcall LinkUrl_Specified(int Index)
  {  return FLinkUrl_Specified;  } 
  CollaborationGroup* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, CollaborationGroup* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetRelatedRecordId(int Index)
  {  return FRelatedRecordId;  }
  void __fastcall SetRelatedRecordId(int Index, ID _prop_val)
  {  FRelatedRecordId = _prop_val; FRelatedRecordId_Specified = true;  }
  bool __fastcall RelatedRecordId_Specified(int Index)
  {  return FRelatedRecordId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~CollaborationGroupFeed();
__published:
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        CommentCount = { index=(IS_OPTN|IS_NLBL), read=FCommentCount, write=SetCommentCount, stored = CommentCount_Specified };
  __property TByteDynArray ContentData = { index=(IS_OPTN|IS_NLBL), read=FContentData, write=SetContentData, stored = ContentData_Specified };
  __property UnicodeString ContentDescription = { index=(IS_OPTN|IS_NLBL), read=FContentDescription, write=SetContentDescription, stored = ContentDescription_Specified };
  __property UnicodeString ContentFileName = { index=(IS_OPTN|IS_NLBL), read=FContentFileName, write=SetContentFileName, stored = ContentFileName_Specified };
  __property int        ContentSize = { index=(IS_OPTN|IS_NLBL), read=FContentSize, write=SetContentSize, stored = ContentSize_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedComments = { index=(IS_OPTN|IS_NLBL), read=FFeedComments, write=SetFeedComments, stored = FeedComments_Specified };
  __property QueryResult*  FeedLikes = { index=(IS_OPTN|IS_NLBL), read=FFeedLikes, write=SetFeedLikes, stored = FeedLikes_Specified };
  __property QueryResult* FeedTrackedChanges = { index=(IS_OPTN|IS_NLBL), read=FFeedTrackedChanges, write=SetFeedTrackedChanges, stored = FeedTrackedChanges_Specified };
  __property Name_*      InsertedBy = { index=(IS_OPTN|IS_NLBL), read=FInsertedBy, write=SetInsertedBy, stored = InsertedBy_Specified };
  __property ID         InsertedById = { index=(IS_OPTN|IS_NLBL), read=FInsertedById, write=SetInsertedById, stored = InsertedById_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int         LikeCount = { index=(IS_OPTN|IS_NLBL), read=FLikeCount, write=SetLikeCount, stored = LikeCount_Specified };
  __property UnicodeString    LinkUrl = { index=(IS_OPTN|IS_NLBL), read=FLinkUrl, write=SetLinkUrl, stored = LinkUrl_Specified };
  __property CollaborationGroup*     Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         RelatedRecordId = { index=(IS_OPTN|IS_NLBL), read=FRelatedRecordId, write=SetRelatedRecordId, stored = RelatedRecordId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : CollaborationGroup, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class CollaborationGroup : public sObject {
private:
  bool            FCanHaveGuests;
  bool            FCanHaveGuests_Specified;
  UnicodeString   FCollaborationType;
  bool            FCollaborationType_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  QueryResult*    FFeeds;
  bool            FFeeds_Specified;
  UnicodeString   FFullPhotoUrl;
  bool            FFullPhotoUrl_Specified;
  QueryResult*    FGroupMemberRequests;
  bool            FGroupMemberRequests_Specified;
  QueryResult*    FGroupMembers;
  bool            FGroupMembers_Specified;
  bool            FHasPrivateFieldsAccess;
  bool            FHasPrivateFieldsAccess_Specified;
  UnicodeString   FInformationBody;
  bool            FInformationBody_Specified;
  UnicodeString   FInformationTitle;
  bool            FInformationTitle_Specified;
  TXSDateTime*    FLastFeedModifiedDate;
  bool            FLastFeedModifiedDate_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FMemberCount;
  bool            FMemberCount_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  User*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  UnicodeString   FSmallPhotoUrl;
  bool            FSmallPhotoUrl_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  bool __fastcall GetCanHaveGuests(int Index)
  {  return FCanHaveGuests;  }
  void __fastcall SetCanHaveGuests(int Index, bool _prop_val)
  {  FCanHaveGuests = _prop_val; FCanHaveGuests_Specified = true;  }
  bool __fastcall CanHaveGuests_Specified(int Index)
  {  return FCanHaveGuests_Specified;  } 
  UnicodeString __fastcall GetCollaborationType(int Index)
  {  return FCollaborationType;  }
  void __fastcall SetCollaborationType(int Index, UnicodeString _prop_val)
  {  FCollaborationType = _prop_val; FCollaborationType_Specified = true;  }
  bool __fastcall CollaborationType_Specified(int Index)
  {  return FCollaborationType_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  QueryResult* __fastcall GetFeeds(int Index)
  {  return FFeeds;  }
  void __fastcall SetFeeds(int Index, QueryResult* _prop_val)
  {  FFeeds = _prop_val; FFeeds_Specified = true;  }
  bool __fastcall Feeds_Specified(int Index)
  {  return FFeeds_Specified;  } 
  UnicodeString __fastcall GetFullPhotoUrl(int Index)
  {  return FFullPhotoUrl;  }
  void __fastcall SetFullPhotoUrl(int Index, UnicodeString _prop_val)
  {  FFullPhotoUrl = _prop_val; FFullPhotoUrl_Specified = true;  }
  bool __fastcall FullPhotoUrl_Specified(int Index)
  {  return FFullPhotoUrl_Specified;  } 
  QueryResult* __fastcall GetGroupMemberRequests(int Index)
  {  return FGroupMemberRequests;  }
  void __fastcall SetGroupMemberRequests(int Index, QueryResult* _prop_val)
  {  FGroupMemberRequests = _prop_val; FGroupMemberRequests_Specified = true;  }
  bool __fastcall GroupMemberRequests_Specified(int Index)
  {  return FGroupMemberRequests_Specified;  } 
  QueryResult* __fastcall GetGroupMembers(int Index)
  {  return FGroupMembers;  }
  void __fastcall SetGroupMembers(int Index, QueryResult* _prop_val)
  {  FGroupMembers = _prop_val; FGroupMembers_Specified = true;  }
  bool __fastcall GroupMembers_Specified(int Index)
  {  return FGroupMembers_Specified;  } 
  bool __fastcall GetHasPrivateFieldsAccess(int Index)
  {  return FHasPrivateFieldsAccess;  }
  void __fastcall SetHasPrivateFieldsAccess(int Index, bool _prop_val)
  {  FHasPrivateFieldsAccess = _prop_val; FHasPrivateFieldsAccess_Specified = true;  }
  bool __fastcall HasPrivateFieldsAccess_Specified(int Index)
  {  return FHasPrivateFieldsAccess_Specified;  } 
  UnicodeString __fastcall GetInformationBody(int Index)
  {  return FInformationBody;  }
  void __fastcall SetInformationBody(int Index, UnicodeString _prop_val)
  {  FInformationBody = _prop_val; FInformationBody_Specified = true;  }
  bool __fastcall InformationBody_Specified(int Index)
  {  return FInformationBody_Specified;  } 
  UnicodeString __fastcall GetInformationTitle(int Index)
  {  return FInformationTitle;  }
  void __fastcall SetInformationTitle(int Index, UnicodeString _prop_val)
  {  FInformationTitle = _prop_val; FInformationTitle_Specified = true;  }
  bool __fastcall InformationTitle_Specified(int Index)
  {  return FInformationTitle_Specified;  } 
  TXSDateTime* __fastcall GetLastFeedModifiedDate(int Index)
  {  return FLastFeedModifiedDate;  }
  void __fastcall SetLastFeedModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastFeedModifiedDate = _prop_val; FLastFeedModifiedDate_Specified = true;  }
  bool __fastcall LastFeedModifiedDate_Specified(int Index)
  {  return FLastFeedModifiedDate_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetMemberCount(int Index)
  {  return FMemberCount;  }
  void __fastcall SetMemberCount(int Index, int _prop_val)
  {  FMemberCount = _prop_val; FMemberCount_Specified = true;  }
  bool __fastcall MemberCount_Specified(int Index)
  {  return FMemberCount_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  User* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, User* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  UnicodeString __fastcall GetSmallPhotoUrl(int Index)
  {  return FSmallPhotoUrl;  }
  void __fastcall SetSmallPhotoUrl(int Index, UnicodeString _prop_val)
  {  FSmallPhotoUrl = _prop_val; FSmallPhotoUrl_Specified = true;  }
  bool __fastcall SmallPhotoUrl_Specified(int Index)
  {  return FSmallPhotoUrl_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~CollaborationGroup();
__published:
  __property bool       CanHaveGuests = { index=(IS_OPTN|IS_NLBL), read=FCanHaveGuests, write=SetCanHaveGuests, stored = CanHaveGuests_Specified };
  __property UnicodeString CollaborationType = { index=(IS_OPTN|IS_NLBL), read=FCollaborationType, write=SetCollaborationType, stored = CollaborationType_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property QueryResult*      Feeds = { index=(IS_OPTN|IS_NLBL), read=FFeeds, write=SetFeeds, stored = Feeds_Specified };
  __property UnicodeString FullPhotoUrl = { index=(IS_OPTN|IS_NLBL), read=FFullPhotoUrl, write=SetFullPhotoUrl, stored = FullPhotoUrl_Specified };
  __property QueryResult* GroupMemberRequests = { index=(IS_OPTN|IS_NLBL), read=FGroupMemberRequests, write=SetGroupMemberRequests, stored = GroupMemberRequests_Specified };
  __property QueryResult* GroupMembers = { index=(IS_OPTN|IS_NLBL), read=FGroupMembers, write=SetGroupMembers, stored = GroupMembers_Specified };
  __property bool       HasPrivateFieldsAccess = { index=(IS_OPTN|IS_NLBL), read=FHasPrivateFieldsAccess, write=SetHasPrivateFieldsAccess, stored = HasPrivateFieldsAccess_Specified };
  __property UnicodeString InformationBody = { index=(IS_OPTN|IS_NLBL), read=FInformationBody, write=SetInformationBody, stored = InformationBody_Specified };
  __property UnicodeString InformationTitle = { index=(IS_OPTN|IS_NLBL), read=FInformationTitle, write=SetInformationTitle, stored = InformationTitle_Specified };
  __property TXSDateTime* LastFeedModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastFeedModifiedDate, write=SetLastFeedModifiedDate, stored = LastFeedModifiedDate_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int        MemberCount = { index=(IS_OPTN|IS_NLBL), read=FMemberCount, write=SetMemberCount, stored = MemberCount_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property User*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property UnicodeString SmallPhotoUrl = { index=(IS_OPTN|IS_NLBL), read=FSmallPhotoUrl, write=SetSmallPhotoUrl, stored = SmallPhotoUrl_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : ChatterActivity, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ChatterActivity : public sObject {
private:
  int             FCommentCount;
  bool            FCommentCount_Specified;
  int             FCommentReceivedCount;
  bool            FCommentReceivedCount_Specified;
  int             FLikeReceivedCount;
  bool            FLikeReceivedCount_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  int             FPostCount;
  bool            FPostCount_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  int __fastcall GetCommentCount(int Index)
  {  return FCommentCount;  }
  void __fastcall SetCommentCount(int Index, int _prop_val)
  {  FCommentCount = _prop_val; FCommentCount_Specified = true;  }
  bool __fastcall CommentCount_Specified(int Index)
  {  return FCommentCount_Specified;  } 
  int __fastcall GetCommentReceivedCount(int Index)
  {  return FCommentReceivedCount;  }
  void __fastcall SetCommentReceivedCount(int Index, int _prop_val)
  {  FCommentReceivedCount = _prop_val; FCommentReceivedCount_Specified = true;  }
  bool __fastcall CommentReceivedCount_Specified(int Index)
  {  return FCommentReceivedCount_Specified;  } 
  int __fastcall GetLikeReceivedCount(int Index)
  {  return FLikeReceivedCount;  }
  void __fastcall SetLikeReceivedCount(int Index, int _prop_val)
  {  FLikeReceivedCount = _prop_val; FLikeReceivedCount_Specified = true;  }
  bool __fastcall LikeReceivedCount_Specified(int Index)
  {  return FLikeReceivedCount_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  int __fastcall GetPostCount(int Index)
  {  return FPostCount;  }
  void __fastcall SetPostCount(int Index, int _prop_val)
  {  FPostCount = _prop_val; FPostCount_Specified = true;  }
  bool __fastcall PostCount_Specified(int Index)
  {  return FPostCount_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~ChatterActivity();
__published:
  __property int        CommentCount = { index=(IS_OPTN|IS_NLBL), read=FCommentCount, write=SetCommentCount, stored = CommentCount_Specified };
  __property int        CommentReceivedCount = { index=(IS_OPTN|IS_NLBL), read=FCommentReceivedCount, write=SetCommentReceivedCount, stored = CommentReceivedCount_Specified };
  __property int        LikeReceivedCount = { index=(IS_OPTN|IS_NLBL), read=FLikeReceivedCount, write=SetLikeReceivedCount, stored = LikeReceivedCount_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property int         PostCount = { index=(IS_OPTN|IS_NLBL), read=FPostCount, write=SetPostCount, stored = PostCount_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : CategoryNode, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class CategoryNode : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FMasterLabel;
  bool            FMasterLabel_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  int             FSortOrder;
  bool            FSortOrder_Specified;
  UnicodeString   FSortStyle;
  bool            FSortStyle_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetMasterLabel(int Index)
  {  return FMasterLabel;  }
  void __fastcall SetMasterLabel(int Index, UnicodeString _prop_val)
  {  FMasterLabel = _prop_val; FMasterLabel_Specified = true;  }
  bool __fastcall MasterLabel_Specified(int Index)
  {  return FMasterLabel_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  int __fastcall GetSortOrder(int Index)
  {  return FSortOrder;  }
  void __fastcall SetSortOrder(int Index, int _prop_val)
  {  FSortOrder = _prop_val; FSortOrder_Specified = true;  }
  bool __fastcall SortOrder_Specified(int Index)
  {  return FSortOrder_Specified;  } 
  UnicodeString __fastcall GetSortStyle(int Index)
  {  return FSortStyle;  }
  void __fastcall SetSortStyle(int Index, UnicodeString _prop_val)
  {  FSortStyle = _prop_val; FSortStyle_Specified = true;  }
  bool __fastcall SortStyle_Specified(int Index)
  {  return FSortStyle_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~CategoryNode();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString MasterLabel = { index=(IS_OPTN|IS_NLBL), read=FMasterLabel, write=SetMasterLabel, stored = MasterLabel_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property int         SortOrder = { index=(IS_OPTN|IS_NLBL), read=FSortOrder, write=SetSortOrder, stored = SortOrder_Specified };
  __property UnicodeString  SortStyle = { index=(IS_OPTN|IS_NLBL), read=FSortStyle, write=SetSortStyle, stored = SortStyle_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : CategoryData, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class CategoryData : public sObject {
private:
  ID              FCategoryNodeId;
  bool            FCategoryNodeId_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  ID              FRelatedSobjectId;
  bool            FRelatedSobjectId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  ID __fastcall GetCategoryNodeId(int Index)
  {  return FCategoryNodeId;  }
  void __fastcall SetCategoryNodeId(int Index, ID _prop_val)
  {  FCategoryNodeId = _prop_val; FCategoryNodeId_Specified = true;  }
  bool __fastcall CategoryNodeId_Specified(int Index)
  {  return FCategoryNodeId_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  ID __fastcall GetRelatedSobjectId(int Index)
  {  return FRelatedSobjectId;  }
  void __fastcall SetRelatedSobjectId(int Index, ID _prop_val)
  {  FRelatedSobjectId = _prop_val; FRelatedSobjectId_Specified = true;  }
  bool __fastcall RelatedSobjectId_Specified(int Index)
  {  return FRelatedSobjectId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~CategoryData();
__published:
  __property ID         CategoryNodeId = { index=(IS_OPTN|IS_NLBL), read=FCategoryNodeId, write=SetCategoryNodeId, stored = CategoryNodeId_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property ID         RelatedSobjectId = { index=(IS_OPTN|IS_NLBL), read=FRelatedSobjectId, write=SetRelatedSobjectId, stored = RelatedSobjectId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : CaseTeamTemplateRecord, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class CaseTeamTemplateRecord : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  Case*           FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  ID              FTeamTemplateId;
  bool            FTeamTemplateId_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  Case* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Case* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  ID __fastcall GetTeamTemplateId(int Index)
  {  return FTeamTemplateId;  }
  void __fastcall SetTeamTemplateId(int Index, ID _prop_val)
  {  FTeamTemplateId = _prop_val; FTeamTemplateId_Specified = true;  }
  bool __fastcall TeamTemplateId_Specified(int Index)
  {  return FTeamTemplateId_Specified;  } 

public:
  __fastcall ~CaseTeamTemplateRecord();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property Case*          Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property ID         TeamTemplateId = { index=(IS_OPTN|IS_NLBL), read=FTeamTemplateId, write=SetTeamTemplateId, stored = TeamTemplateId_Specified };
};




// ************************************************************************ //
// XML       : CaseTeamTemplateMember, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class CaseTeamTemplateMember : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  ID              FMemberId;
  bool            FMemberId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  ID              FTeamRoleId;
  bool            FTeamRoleId_Specified;
  ID              FTeamTemplateId;
  bool            FTeamTemplateId_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  ID __fastcall GetMemberId(int Index)
  {  return FMemberId;  }
  void __fastcall SetMemberId(int Index, ID _prop_val)
  {  FMemberId = _prop_val; FMemberId_Specified = true;  }
  bool __fastcall MemberId_Specified(int Index)
  {  return FMemberId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  ID __fastcall GetTeamRoleId(int Index)
  {  return FTeamRoleId;  }
  void __fastcall SetTeamRoleId(int Index, ID _prop_val)
  {  FTeamRoleId = _prop_val; FTeamRoleId_Specified = true;  }
  bool __fastcall TeamRoleId_Specified(int Index)
  {  return FTeamRoleId_Specified;  } 
  ID __fastcall GetTeamTemplateId(int Index)
  {  return FTeamTemplateId;  }
  void __fastcall SetTeamTemplateId(int Index, ID _prop_val)
  {  FTeamTemplateId = _prop_val; FTeamTemplateId_Specified = true;  }
  bool __fastcall TeamTemplateId_Specified(int Index)
  {  return FTeamTemplateId_Specified;  } 

public:
  __fastcall ~CaseTeamTemplateMember();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property ID           MemberId = { index=(IS_OPTN|IS_NLBL), read=FMemberId, write=SetMemberId, stored = MemberId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property ID         TeamRoleId = { index=(IS_OPTN|IS_NLBL), read=FTeamRoleId, write=SetTeamRoleId, stored = TeamRoleId_Specified };
  __property ID         TeamTemplateId = { index=(IS_OPTN|IS_NLBL), read=FTeamTemplateId, write=SetTeamTemplateId, stored = TeamTemplateId_Specified };
};




// ************************************************************************ //
// XML       : CaseTeamTemplate, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class CaseTeamTemplate : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~CaseTeamTemplate();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : CaseTeamRole, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class CaseTeamRole : public sObject {
private:
  UnicodeString   FAccessLevel;
  bool            FAccessLevel_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  bool            FPreferencesVisibleInCSP;
  bool            FPreferencesVisibleInCSP_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString __fastcall GetAccessLevel(int Index)
  {  return FAccessLevel;  }
  void __fastcall SetAccessLevel(int Index, UnicodeString _prop_val)
  {  FAccessLevel = _prop_val; FAccessLevel_Specified = true;  }
  bool __fastcall AccessLevel_Specified(int Index)
  {  return FAccessLevel_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  bool __fastcall GetPreferencesVisibleInCSP(int Index)
  {  return FPreferencesVisibleInCSP;  }
  void __fastcall SetPreferencesVisibleInCSP(int Index, bool _prop_val)
  {  FPreferencesVisibleInCSP = _prop_val; FPreferencesVisibleInCSP_Specified = true;  }
  bool __fastcall PreferencesVisibleInCSP_Specified(int Index)
  {  return FPreferencesVisibleInCSP_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~CaseTeamRole();
__published:
  __property UnicodeString AccessLevel = { index=(IS_OPTN|IS_NLBL), read=FAccessLevel, write=SetAccessLevel, stored = AccessLevel_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property bool       PreferencesVisibleInCSP = { index=(IS_OPTN|IS_NLBL), read=FPreferencesVisibleInCSP, write=SetPreferencesVisibleInCSP, stored = PreferencesVisibleInCSP_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : CaseTeamMember, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class CaseTeamMember : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  ID              FMemberId;
  bool            FMemberId_Specified;
  Case*           FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  ID              FTeamRoleId;
  bool            FTeamRoleId_Specified;
  ID              FTeamTemplateMemberId;
  bool            FTeamTemplateMemberId_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  ID __fastcall GetMemberId(int Index)
  {  return FMemberId;  }
  void __fastcall SetMemberId(int Index, ID _prop_val)
  {  FMemberId = _prop_val; FMemberId_Specified = true;  }
  bool __fastcall MemberId_Specified(int Index)
  {  return FMemberId_Specified;  } 
  Case* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Case* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  ID __fastcall GetTeamRoleId(int Index)
  {  return FTeamRoleId;  }
  void __fastcall SetTeamRoleId(int Index, ID _prop_val)
  {  FTeamRoleId = _prop_val; FTeamRoleId_Specified = true;  }
  bool __fastcall TeamRoleId_Specified(int Index)
  {  return FTeamRoleId_Specified;  } 
  ID __fastcall GetTeamTemplateMemberId(int Index)
  {  return FTeamTemplateMemberId;  }
  void __fastcall SetTeamTemplateMemberId(int Index, ID _prop_val)
  {  FTeamTemplateMemberId = _prop_val; FTeamTemplateMemberId_Specified = true;  }
  bool __fastcall TeamTemplateMemberId_Specified(int Index)
  {  return FTeamTemplateMemberId_Specified;  } 

public:
  __fastcall ~CaseTeamMember();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property ID           MemberId = { index=(IS_OPTN|IS_NLBL), read=FMemberId, write=SetMemberId, stored = MemberId_Specified };
  __property Case*          Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property ID         TeamRoleId = { index=(IS_OPTN|IS_NLBL), read=FTeamRoleId, write=SetTeamRoleId, stored = TeamRoleId_Specified };
  __property ID         TeamTemplateMemberId = { index=(IS_OPTN|IS_NLBL), read=FTeamTemplateMemberId, write=SetTeamTemplateMemberId, stored = TeamTemplateMemberId_Specified };
};




// ************************************************************************ //
// XML       : CaseStatus, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class CaseStatus : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsClosed;
  bool            FIsClosed_Specified;
  bool            FIsDefault;
  bool            FIsDefault_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FMasterLabel;
  bool            FMasterLabel_Specified;
  int             FSortOrder;
  bool            FSortOrder_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsClosed(int Index)
  {  return FIsClosed;  }
  void __fastcall SetIsClosed(int Index, bool _prop_val)
  {  FIsClosed = _prop_val; FIsClosed_Specified = true;  }
  bool __fastcall IsClosed_Specified(int Index)
  {  return FIsClosed_Specified;  } 
  bool __fastcall GetIsDefault(int Index)
  {  return FIsDefault;  }
  void __fastcall SetIsDefault(int Index, bool _prop_val)
  {  FIsDefault = _prop_val; FIsDefault_Specified = true;  }
  bool __fastcall IsDefault_Specified(int Index)
  {  return FIsDefault_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetMasterLabel(int Index)
  {  return FMasterLabel;  }
  void __fastcall SetMasterLabel(int Index, UnicodeString _prop_val)
  {  FMasterLabel = _prop_val; FMasterLabel_Specified = true;  }
  bool __fastcall MasterLabel_Specified(int Index)
  {  return FMasterLabel_Specified;  } 
  int __fastcall GetSortOrder(int Index)
  {  return FSortOrder;  }
  void __fastcall SetSortOrder(int Index, int _prop_val)
  {  FSortOrder = _prop_val; FSortOrder_Specified = true;  }
  bool __fastcall SortOrder_Specified(int Index)
  {  return FSortOrder_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~CaseStatus();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool         IsClosed = { index=(IS_OPTN|IS_NLBL), read=FIsClosed, write=SetIsClosed, stored = IsClosed_Specified };
  __property bool        IsDefault = { index=(IS_OPTN|IS_NLBL), read=FIsDefault, write=SetIsDefault, stored = IsDefault_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString MasterLabel = { index=(IS_OPTN|IS_NLBL), read=FMasterLabel, write=SetMasterLabel, stored = MasterLabel_Specified };
  __property int         SortOrder = { index=(IS_OPTN|IS_NLBL), read=FSortOrder, write=SetSortOrder, stored = SortOrder_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : Solution, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Solution : public sObject {
private:
  QueryResult*    FActivityHistories;
  bool            FActivityHistories_Specified;
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  QueryResult*    FCaseSolutions;
  bool            FCaseSolutions_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FEvents;
  bool            FEvents_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  QueryResult*    FFeeds;
  bool            FFeeds_Specified;
  QueryResult*    FHistories;
  bool            FHistories_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsHtml;
  bool            FIsHtml_Specified;
  bool            FIsPublished;
  bool            FIsPublished_Specified;
  bool            FIsPublishedInPublicKb;
  bool            FIsPublishedInPublicKb_Specified;
  bool            FIsReviewed;
  bool            FIsReviewed_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  QueryResult*    FOpenActivities;
  bool            FOpenActivities_Specified;
  User*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  UnicodeString   FSolutionName;
  bool            FSolutionName_Specified;
  UnicodeString   FSolutionNote;
  bool            FSolutionNote_Specified;
  UnicodeString   FSolutionNumber;
  bool            FSolutionNumber_Specified;
  UnicodeString   FStatus;
  bool            FStatus_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  QueryResult*    FTasks;
  bool            FTasks_Specified;
  int             FTimesUsed;
  bool            FTimesUsed_Specified;
  QueryResult*    FVotes;
  bool            FVotes_Specified;
  QueryResult* __fastcall GetActivityHistories(int Index)
  {  return FActivityHistories;  }
  void __fastcall SetActivityHistories(int Index, QueryResult* _prop_val)
  {  FActivityHistories = _prop_val; FActivityHistories_Specified = true;  }
  bool __fastcall ActivityHistories_Specified(int Index)
  {  return FActivityHistories_Specified;  } 
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  QueryResult* __fastcall GetCaseSolutions(int Index)
  {  return FCaseSolutions;  }
  void __fastcall SetCaseSolutions(int Index, QueryResult* _prop_val)
  {  FCaseSolutions = _prop_val; FCaseSolutions_Specified = true;  }
  bool __fastcall CaseSolutions_Specified(int Index)
  {  return FCaseSolutions_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetEvents(int Index)
  {  return FEvents;  }
  void __fastcall SetEvents(int Index, QueryResult* _prop_val)
  {  FEvents = _prop_val; FEvents_Specified = true;  }
  bool __fastcall Events_Specified(int Index)
  {  return FEvents_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  QueryResult* __fastcall GetFeeds(int Index)
  {  return FFeeds;  }
  void __fastcall SetFeeds(int Index, QueryResult* _prop_val)
  {  FFeeds = _prop_val; FFeeds_Specified = true;  }
  bool __fastcall Feeds_Specified(int Index)
  {  return FFeeds_Specified;  } 
  QueryResult* __fastcall GetHistories(int Index)
  {  return FHistories;  }
  void __fastcall SetHistories(int Index, QueryResult* _prop_val)
  {  FHistories = _prop_val; FHistories_Specified = true;  }
  bool __fastcall Histories_Specified(int Index)
  {  return FHistories_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsHtml(int Index)
  {  return FIsHtml;  }
  void __fastcall SetIsHtml(int Index, bool _prop_val)
  {  FIsHtml = _prop_val; FIsHtml_Specified = true;  }
  bool __fastcall IsHtml_Specified(int Index)
  {  return FIsHtml_Specified;  } 
  bool __fastcall GetIsPublished(int Index)
  {  return FIsPublished;  }
  void __fastcall SetIsPublished(int Index, bool _prop_val)
  {  FIsPublished = _prop_val; FIsPublished_Specified = true;  }
  bool __fastcall IsPublished_Specified(int Index)
  {  return FIsPublished_Specified;  } 
  bool __fastcall GetIsPublishedInPublicKb(int Index)
  {  return FIsPublishedInPublicKb;  }
  void __fastcall SetIsPublishedInPublicKb(int Index, bool _prop_val)
  {  FIsPublishedInPublicKb = _prop_val; FIsPublishedInPublicKb_Specified = true;  }
  bool __fastcall IsPublishedInPublicKb_Specified(int Index)
  {  return FIsPublishedInPublicKb_Specified;  } 
  bool __fastcall GetIsReviewed(int Index)
  {  return FIsReviewed;  }
  void __fastcall SetIsReviewed(int Index, bool _prop_val)
  {  FIsReviewed = _prop_val; FIsReviewed_Specified = true;  }
  bool __fastcall IsReviewed_Specified(int Index)
  {  return FIsReviewed_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  QueryResult* __fastcall GetOpenActivities(int Index)
  {  return FOpenActivities;  }
  void __fastcall SetOpenActivities(int Index, QueryResult* _prop_val)
  {  FOpenActivities = _prop_val; FOpenActivities_Specified = true;  }
  bool __fastcall OpenActivities_Specified(int Index)
  {  return FOpenActivities_Specified;  } 
  User* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, User* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  UnicodeString __fastcall GetSolutionName(int Index)
  {  return FSolutionName;  }
  void __fastcall SetSolutionName(int Index, UnicodeString _prop_val)
  {  FSolutionName = _prop_val; FSolutionName_Specified = true;  }
  bool __fastcall SolutionName_Specified(int Index)
  {  return FSolutionName_Specified;  } 
  UnicodeString __fastcall GetSolutionNote(int Index)
  {  return FSolutionNote;  }
  void __fastcall SetSolutionNote(int Index, UnicodeString _prop_val)
  {  FSolutionNote = _prop_val; FSolutionNote_Specified = true;  }
  bool __fastcall SolutionNote_Specified(int Index)
  {  return FSolutionNote_Specified;  } 
  UnicodeString __fastcall GetSolutionNumber(int Index)
  {  return FSolutionNumber;  }
  void __fastcall SetSolutionNumber(int Index, UnicodeString _prop_val)
  {  FSolutionNumber = _prop_val; FSolutionNumber_Specified = true;  }
  bool __fastcall SolutionNumber_Specified(int Index)
  {  return FSolutionNumber_Specified;  } 
  UnicodeString __fastcall GetStatus(int Index)
  {  return FStatus;  }
  void __fastcall SetStatus(int Index, UnicodeString _prop_val)
  {  FStatus = _prop_val; FStatus_Specified = true;  }
  bool __fastcall Status_Specified(int Index)
  {  return FStatus_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  QueryResult* __fastcall GetTasks(int Index)
  {  return FTasks;  }
  void __fastcall SetTasks(int Index, QueryResult* _prop_val)
  {  FTasks = _prop_val; FTasks_Specified = true;  }
  bool __fastcall Tasks_Specified(int Index)
  {  return FTasks_Specified;  } 
  int __fastcall GetTimesUsed(int Index)
  {  return FTimesUsed;  }
  void __fastcall SetTimesUsed(int Index, int _prop_val)
  {  FTimesUsed = _prop_val; FTimesUsed_Specified = true;  }
  bool __fastcall TimesUsed_Specified(int Index)
  {  return FTimesUsed_Specified;  } 
  QueryResult* __fastcall GetVotes(int Index)
  {  return FVotes;  }
  void __fastcall SetVotes(int Index, QueryResult* _prop_val)
  {  FVotes = _prop_val; FVotes_Specified = true;  }
  bool __fastcall Votes_Specified(int Index)
  {  return FVotes_Specified;  } 

public:
  __fastcall ~Solution();
__published:
  __property QueryResult* ActivityHistories = { index=(IS_OPTN|IS_NLBL), read=FActivityHistories, write=SetActivityHistories, stored = ActivityHistories_Specified };
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property QueryResult* CaseSolutions = { index=(IS_OPTN|IS_NLBL), read=FCaseSolutions, write=SetCaseSolutions, stored = CaseSolutions_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult*     Events = { index=(IS_OPTN|IS_NLBL), read=FEvents, write=SetEvents, stored = Events_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property QueryResult*      Feeds = { index=(IS_OPTN|IS_NLBL), read=FFeeds, write=SetFeeds, stored = Feeds_Specified };
  __property QueryResult*  Histories = { index=(IS_OPTN|IS_NLBL), read=FHistories, write=SetHistories, stored = Histories_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool           IsHtml = { index=(IS_OPTN|IS_NLBL), read=FIsHtml, write=SetIsHtml, stored = IsHtml_Specified };
  __property bool       IsPublished = { index=(IS_OPTN|IS_NLBL), read=FIsPublished, write=SetIsPublished, stored = IsPublished_Specified };
  __property bool       IsPublishedInPublicKb = { index=(IS_OPTN|IS_NLBL), read=FIsPublishedInPublicKb, write=SetIsPublishedInPublicKb, stored = IsPublishedInPublicKb_Specified };
  __property bool       IsReviewed = { index=(IS_OPTN|IS_NLBL), read=FIsReviewed, write=SetIsReviewed, stored = IsReviewed_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property QueryResult* OpenActivities = { index=(IS_OPTN|IS_NLBL), read=FOpenActivities, write=SetOpenActivities, stored = OpenActivities_Specified };
  __property User*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property UnicodeString SolutionName = { index=(IS_OPTN|IS_NLBL), read=FSolutionName, write=SetSolutionName, stored = SolutionName_Specified };
  __property UnicodeString SolutionNote = { index=(IS_OPTN|IS_NLBL), read=FSolutionNote, write=SetSolutionNote, stored = SolutionNote_Specified };
  __property UnicodeString SolutionNumber = { index=(IS_OPTN|IS_NLBL), read=FSolutionNumber, write=SetSolutionNumber, stored = SolutionNumber_Specified };
  __property UnicodeString     Status = { index=(IS_OPTN|IS_NLBL), read=FStatus, write=SetStatus, stored = Status_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property QueryResult*      Tasks = { index=(IS_OPTN|IS_NLBL), read=FTasks, write=SetTasks, stored = Tasks_Specified };
  __property int         TimesUsed = { index=(IS_OPTN|IS_NLBL), read=FTimesUsed, write=SetTimesUsed, stored = TimesUsed_Specified };
  __property QueryResult*      Votes = { index=(IS_OPTN|IS_NLBL), read=FVotes, write=SetVotes, stored = Votes_Specified };
};




// ************************************************************************ //
// XML       : CaseSolution, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class CaseSolution : public sObject {
private:
  Case*           FCase;
  bool            FCase_Specified;
  ID              FCaseId;
  bool            FCaseId_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  Solution*       FSolution;
  bool            FSolution_Specified;
  ID              FSolutionId;
  bool            FSolutionId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  Case* __fastcall GetCase(int Index)
  {  return FCase;  }
  void __fastcall SetCase(int Index, Case* _prop_val)
  {  FCase = _prop_val; FCase_Specified = true;  }
  bool __fastcall Case_Specified(int Index)
  {  return FCase_Specified;  } 
  ID __fastcall GetCaseId(int Index)
  {  return FCaseId;  }
  void __fastcall SetCaseId(int Index, ID _prop_val)
  {  FCaseId = _prop_val; FCaseId_Specified = true;  }
  bool __fastcall CaseId_Specified(int Index)
  {  return FCaseId_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  Solution* __fastcall GetSolution(int Index)
  {  return FSolution;  }
  void __fastcall SetSolution(int Index, Solution* _prop_val)
  {  FSolution = _prop_val; FSolution_Specified = true;  }
  bool __fastcall Solution_Specified(int Index)
  {  return FSolution_Specified;  } 
  ID __fastcall GetSolutionId(int Index)
  {  return FSolutionId;  }
  void __fastcall SetSolutionId(int Index, ID _prop_val)
  {  FSolutionId = _prop_val; FSolutionId_Specified = true;  }
  bool __fastcall SolutionId_Specified(int Index)
  {  return FSolutionId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~CaseSolution();
__published:
  __property Case*            Case = { index=(IS_OPTN|IS_NLBL), read=FCase, write=SetCase, stored = Case_Specified };
  __property ID             CaseId = { index=(IS_OPTN|IS_NLBL), read=FCaseId, write=SetCaseId, stored = CaseId_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property Solution*    Solution = { index=(IS_OPTN|IS_NLBL), read=FSolution, write=SetSolution, stored = Solution_Specified };
  __property ID         SolutionId = { index=(IS_OPTN|IS_NLBL), read=FSolutionId, write=SetSolutionId, stored = SolutionId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : CaseShare, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class CaseShare : public sObject {
private:
  Case*           FCase;
  bool            FCase_Specified;
  UnicodeString   FCaseAccessLevel;
  bool            FCaseAccessLevel_Specified;
  ID              FCaseId;
  bool            FCaseId_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FRowCause;
  bool            FRowCause_Specified;
  ID              FUserOrGroupId;
  bool            FUserOrGroupId_Specified;
  Case* __fastcall GetCase(int Index)
  {  return FCase;  }
  void __fastcall SetCase(int Index, Case* _prop_val)
  {  FCase = _prop_val; FCase_Specified = true;  }
  bool __fastcall Case_Specified(int Index)
  {  return FCase_Specified;  } 
  UnicodeString __fastcall GetCaseAccessLevel(int Index)
  {  return FCaseAccessLevel;  }
  void __fastcall SetCaseAccessLevel(int Index, UnicodeString _prop_val)
  {  FCaseAccessLevel = _prop_val; FCaseAccessLevel_Specified = true;  }
  bool __fastcall CaseAccessLevel_Specified(int Index)
  {  return FCaseAccessLevel_Specified;  } 
  ID __fastcall GetCaseId(int Index)
  {  return FCaseId;  }
  void __fastcall SetCaseId(int Index, ID _prop_val)
  {  FCaseId = _prop_val; FCaseId_Specified = true;  }
  bool __fastcall CaseId_Specified(int Index)
  {  return FCaseId_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetRowCause(int Index)
  {  return FRowCause;  }
  void __fastcall SetRowCause(int Index, UnicodeString _prop_val)
  {  FRowCause = _prop_val; FRowCause_Specified = true;  }
  bool __fastcall RowCause_Specified(int Index)
  {  return FRowCause_Specified;  } 
  ID __fastcall GetUserOrGroupId(int Index)
  {  return FUserOrGroupId;  }
  void __fastcall SetUserOrGroupId(int Index, ID _prop_val)
  {  FUserOrGroupId = _prop_val; FUserOrGroupId_Specified = true;  }
  bool __fastcall UserOrGroupId_Specified(int Index)
  {  return FUserOrGroupId_Specified;  } 

public:
  __fastcall ~CaseShare();
__published:
  __property Case*            Case = { index=(IS_OPTN|IS_NLBL), read=FCase, write=SetCase, stored = Case_Specified };
  __property UnicodeString CaseAccessLevel = { index=(IS_OPTN|IS_NLBL), read=FCaseAccessLevel, write=SetCaseAccessLevel, stored = CaseAccessLevel_Specified };
  __property ID             CaseId = { index=(IS_OPTN|IS_NLBL), read=FCaseId, write=SetCaseId, stored = CaseId_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString   RowCause = { index=(IS_OPTN|IS_NLBL), read=FRowCause, write=SetRowCause, stored = RowCause_Specified };
  __property ID         UserOrGroupId = { index=(IS_OPTN|IS_NLBL), read=FUserOrGroupId, write=SetUserOrGroupId, stored = UserOrGroupId_Specified };
};




// ************************************************************************ //
// XML       : CaseHistory, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class CaseHistory : public sObject {
private:
  Case*           FCase;
  bool            FCase_Specified;
  ID              FCaseId;
  bool            FCaseId_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FField;
  bool            FField_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  Variant         FNewValue;
  bool            FNewValue_Specified;
  Variant         FOldValue;
  bool            FOldValue_Specified;
  Case* __fastcall GetCase(int Index)
  {  return FCase;  }
  void __fastcall SetCase(int Index, Case* _prop_val)
  {  FCase = _prop_val; FCase_Specified = true;  }
  bool __fastcall Case_Specified(int Index)
  {  return FCase_Specified;  } 
  ID __fastcall GetCaseId(int Index)
  {  return FCaseId;  }
  void __fastcall SetCaseId(int Index, ID _prop_val)
  {  FCaseId = _prop_val; FCaseId_Specified = true;  }
  bool __fastcall CaseId_Specified(int Index)
  {  return FCaseId_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetField(int Index)
  {  return FField;  }
  void __fastcall SetField(int Index, UnicodeString _prop_val)
  {  FField = _prop_val; FField_Specified = true;  }
  bool __fastcall Field_Specified(int Index)
  {  return FField_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  Variant __fastcall GetNewValue(int Index)
  {  return FNewValue;  }
  void __fastcall SetNewValue(int Index, Variant _prop_val)
  {  FNewValue = _prop_val; FNewValue_Specified = true;  }
  bool __fastcall NewValue_Specified(int Index)
  {  return FNewValue_Specified;  } 
  Variant __fastcall GetOldValue(int Index)
  {  return FOldValue;  }
  void __fastcall SetOldValue(int Index, Variant _prop_val)
  {  FOldValue = _prop_val; FOldValue_Specified = true;  }
  bool __fastcall OldValue_Specified(int Index)
  {  return FOldValue_Specified;  } 

public:
  __fastcall ~CaseHistory();
__published:
  __property Case*            Case = { index=(IS_OPTN|IS_NLBL), read=FCase, write=SetCase, stored = Case_Specified };
  __property ID             CaseId = { index=(IS_OPTN|IS_NLBL), read=FCaseId, write=SetCaseId, stored = CaseId_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString      Field = { index=(IS_OPTN|IS_NLBL), read=FField, write=SetField, stored = Field_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property Variant      NewValue = { index=(IS_OPTN|IS_NLBL), read=FNewValue, write=SetNewValue, stored = NewValue_Specified };
  __property Variant      OldValue = { index=(IS_OPTN|IS_NLBL), read=FOldValue, write=SetOldValue, stored = OldValue_Specified };
};




// ************************************************************************ //
// XML       : CaseFeed, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class CaseFeed : public sObject {
private:
  UnicodeString   FBody;
  bool            FBody_Specified;
  int             FCommentCount;
  bool            FCommentCount_Specified;
  TByteDynArray   FContentData;
  bool            FContentData_Specified;
  UnicodeString   FContentDescription;
  bool            FContentDescription_Specified;
  UnicodeString   FContentFileName;
  bool            FContentFileName_Specified;
  int             FContentSize;
  bool            FContentSize_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedComments;
  bool            FFeedComments_Specified;
  QueryResult*    FFeedLikes;
  bool            FFeedLikes_Specified;
  QueryResult*    FFeedTrackedChanges;
  bool            FFeedTrackedChanges_Specified;
  Name_*           FInsertedBy;
  bool            FInsertedBy_Specified;
  ID              FInsertedById;
  bool            FInsertedById_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLikeCount;
  bool            FLikeCount_Specified;
  UnicodeString   FLinkUrl;
  bool            FLinkUrl_Specified;
  Case*           FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FRelatedRecordId;
  bool            FRelatedRecordId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetCommentCount(int Index)
  {  return FCommentCount;  }
  void __fastcall SetCommentCount(int Index, int _prop_val)
  {  FCommentCount = _prop_val; FCommentCount_Specified = true;  }
  bool __fastcall CommentCount_Specified(int Index)
  {  return FCommentCount_Specified;  } 
  TByteDynArray __fastcall GetContentData(int Index)
  {  return FContentData;  }
  void __fastcall SetContentData(int Index, TByteDynArray _prop_val)
  {  FContentData = _prop_val; FContentData_Specified = true;  }
  bool __fastcall ContentData_Specified(int Index)
  {  return FContentData_Specified;  } 
  UnicodeString __fastcall GetContentDescription(int Index)
  {  return FContentDescription;  }
  void __fastcall SetContentDescription(int Index, UnicodeString _prop_val)
  {  FContentDescription = _prop_val; FContentDescription_Specified = true;  }
  bool __fastcall ContentDescription_Specified(int Index)
  {  return FContentDescription_Specified;  } 
  UnicodeString __fastcall GetContentFileName(int Index)
  {  return FContentFileName;  }
  void __fastcall SetContentFileName(int Index, UnicodeString _prop_val)
  {  FContentFileName = _prop_val; FContentFileName_Specified = true;  }
  bool __fastcall ContentFileName_Specified(int Index)
  {  return FContentFileName_Specified;  } 
  int __fastcall GetContentSize(int Index)
  {  return FContentSize;  }
  void __fastcall SetContentSize(int Index, int _prop_val)
  {  FContentSize = _prop_val; FContentSize_Specified = true;  }
  bool __fastcall ContentSize_Specified(int Index)
  {  return FContentSize_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedComments(int Index)
  {  return FFeedComments;  }
  void __fastcall SetFeedComments(int Index, QueryResult* _prop_val)
  {  FFeedComments = _prop_val; FFeedComments_Specified = true;  }
  bool __fastcall FeedComments_Specified(int Index)
  {  return FFeedComments_Specified;  } 
  QueryResult* __fastcall GetFeedLikes(int Index)
  {  return FFeedLikes;  }
  void __fastcall SetFeedLikes(int Index, QueryResult* _prop_val)
  {  FFeedLikes = _prop_val; FFeedLikes_Specified = true;  }
  bool __fastcall FeedLikes_Specified(int Index)
  {  return FFeedLikes_Specified;  } 
  QueryResult* __fastcall GetFeedTrackedChanges(int Index)
  {  return FFeedTrackedChanges;  }
  void __fastcall SetFeedTrackedChanges(int Index, QueryResult* _prop_val)
  {  FFeedTrackedChanges = _prop_val; FFeedTrackedChanges_Specified = true;  }
  bool __fastcall FeedTrackedChanges_Specified(int Index)
  {  return FFeedTrackedChanges_Specified;  } 
  Name_* __fastcall GetInsertedBy(int Index)
  {  return FInsertedBy;  }
  void __fastcall SetInsertedBy(int Index, Name_* _prop_val)
  {  FInsertedBy = _prop_val; FInsertedBy_Specified = true;  }
  bool __fastcall InsertedBy_Specified(int Index)
  {  return FInsertedBy_Specified;  } 
  ID __fastcall GetInsertedById(int Index)
  {  return FInsertedById;  }
  void __fastcall SetInsertedById(int Index, ID _prop_val)
  {  FInsertedById = _prop_val; FInsertedById_Specified = true;  }
  bool __fastcall InsertedById_Specified(int Index)
  {  return FInsertedById_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLikeCount(int Index)
  {  return FLikeCount;  }
  void __fastcall SetLikeCount(int Index, int _prop_val)
  {  FLikeCount = _prop_val; FLikeCount_Specified = true;  }
  bool __fastcall LikeCount_Specified(int Index)
  {  return FLikeCount_Specified;  } 
  UnicodeString __fastcall GetLinkUrl(int Index)
  {  return FLinkUrl;  }
  void __fastcall SetLinkUrl(int Index, UnicodeString _prop_val)
  {  FLinkUrl = _prop_val; FLinkUrl_Specified = true;  }
  bool __fastcall LinkUrl_Specified(int Index)
  {  return FLinkUrl_Specified;  } 
  Case* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Case* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetRelatedRecordId(int Index)
  {  return FRelatedRecordId;  }
  void __fastcall SetRelatedRecordId(int Index, ID _prop_val)
  {  FRelatedRecordId = _prop_val; FRelatedRecordId_Specified = true;  }
  bool __fastcall RelatedRecordId_Specified(int Index)
  {  return FRelatedRecordId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~CaseFeed();
__published:
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        CommentCount = { index=(IS_OPTN|IS_NLBL), read=FCommentCount, write=SetCommentCount, stored = CommentCount_Specified };
  __property TByteDynArray ContentData = { index=(IS_OPTN|IS_NLBL), read=FContentData, write=SetContentData, stored = ContentData_Specified };
  __property UnicodeString ContentDescription = { index=(IS_OPTN|IS_NLBL), read=FContentDescription, write=SetContentDescription, stored = ContentDescription_Specified };
  __property UnicodeString ContentFileName = { index=(IS_OPTN|IS_NLBL), read=FContentFileName, write=SetContentFileName, stored = ContentFileName_Specified };
  __property int        ContentSize = { index=(IS_OPTN|IS_NLBL), read=FContentSize, write=SetContentSize, stored = ContentSize_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedComments = { index=(IS_OPTN|IS_NLBL), read=FFeedComments, write=SetFeedComments, stored = FeedComments_Specified };
  __property QueryResult*  FeedLikes = { index=(IS_OPTN|IS_NLBL), read=FFeedLikes, write=SetFeedLikes, stored = FeedLikes_Specified };
  __property QueryResult* FeedTrackedChanges = { index=(IS_OPTN|IS_NLBL), read=FFeedTrackedChanges, write=SetFeedTrackedChanges, stored = FeedTrackedChanges_Specified };
  __property Name_*      InsertedBy = { index=(IS_OPTN|IS_NLBL), read=FInsertedBy, write=SetInsertedBy, stored = InsertedBy_Specified };
  __property ID         InsertedById = { index=(IS_OPTN|IS_NLBL), read=FInsertedById, write=SetInsertedById, stored = InsertedById_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int         LikeCount = { index=(IS_OPTN|IS_NLBL), read=FLikeCount, write=SetLikeCount, stored = LikeCount_Specified };
  __property UnicodeString    LinkUrl = { index=(IS_OPTN|IS_NLBL), read=FLinkUrl, write=SetLinkUrl, stored = LinkUrl_Specified };
  __property Case*          Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         RelatedRecordId = { index=(IS_OPTN|IS_NLBL), read=FRelatedRecordId, write=SetRelatedRecordId, stored = RelatedRecordId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : CaseContactRole, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class CaseContactRole : public sObject {
private:
  Case*           FCases;
  bool            FCases_Specified;
  ID              FCasesId;
  bool            FCasesId_Specified;
  Contact*        FContact;
  bool            FContact_Specified;
  ID              FContactId;
  bool            FContactId_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FRole;
  bool            FRole_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  Case* __fastcall GetCases(int Index)
  {  return FCases;  }
  void __fastcall SetCases(int Index, Case* _prop_val)
  {  FCases = _prop_val; FCases_Specified = true;  }
  bool __fastcall Cases_Specified(int Index)
  {  return FCases_Specified;  } 
  ID __fastcall GetCasesId(int Index)
  {  return FCasesId;  }
  void __fastcall SetCasesId(int Index, ID _prop_val)
  {  FCasesId = _prop_val; FCasesId_Specified = true;  }
  bool __fastcall CasesId_Specified(int Index)
  {  return FCasesId_Specified;  } 
  Contact* __fastcall GetContact(int Index)
  {  return FContact;  }
  void __fastcall SetContact(int Index, Contact* _prop_val)
  {  FContact = _prop_val; FContact_Specified = true;  }
  bool __fastcall Contact_Specified(int Index)
  {  return FContact_Specified;  } 
  ID __fastcall GetContactId(int Index)
  {  return FContactId;  }
  void __fastcall SetContactId(int Index, ID _prop_val)
  {  FContactId = _prop_val; FContactId_Specified = true;  }
  bool __fastcall ContactId_Specified(int Index)
  {  return FContactId_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetRole(int Index)
  {  return FRole;  }
  void __fastcall SetRole(int Index, UnicodeString _prop_val)
  {  FRole = _prop_val; FRole_Specified = true;  }
  bool __fastcall Role_Specified(int Index)
  {  return FRole_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~CaseContactRole();
__published:
  __property Case*           Cases = { index=(IS_OPTN|IS_NLBL), read=FCases, write=SetCases, stored = Cases_Specified };
  __property ID            CasesId = { index=(IS_OPTN|IS_NLBL), read=FCasesId, write=SetCasesId, stored = CasesId_Specified };
  __property Contact*      Contact = { index=(IS_OPTN|IS_NLBL), read=FContact, write=SetContact, stored = Contact_Specified };
  __property ID          ContactId = { index=(IS_OPTN|IS_NLBL), read=FContactId, write=SetContactId, stored = ContactId_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Role = { index=(IS_OPTN|IS_NLBL), read=FRole, write=SetRole, stored = Role_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : CaseComment, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class CaseComment : public sObject {
private:
  UnicodeString   FCommentBody;
  bool            FCommentBody_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsPublished;
  bool            FIsPublished_Specified;
  Name_*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  Case*           FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString __fastcall GetCommentBody(int Index)
  {  return FCommentBody;  }
  void __fastcall SetCommentBody(int Index, UnicodeString _prop_val)
  {  FCommentBody = _prop_val; FCommentBody_Specified = true;  }
  bool __fastcall CommentBody_Specified(int Index)
  {  return FCommentBody_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsPublished(int Index)
  {  return FIsPublished;  }
  void __fastcall SetIsPublished(int Index, bool _prop_val)
  {  FIsPublished = _prop_val; FIsPublished_Specified = true;  }
  bool __fastcall IsPublished_Specified(int Index)
  {  return FIsPublished_Specified;  } 
  Name_* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, Name_* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  Case* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Case* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~CaseComment();
__published:
  __property UnicodeString CommentBody = { index=(IS_OPTN|IS_NLBL), read=FCommentBody, write=SetCommentBody, stored = CommentBody_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool       IsPublished = { index=(IS_OPTN|IS_NLBL), read=FIsPublished, write=SetIsPublished, stored = IsPublished_Specified };
  __property Name_*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property Case*          Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : Case, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Case : public sObject {
private:
  Account*        FAccount;
  bool            FAccount_Specified;
  ID              FAccountId;
  bool            FAccountId_Specified;
  QueryResult*    FActivityHistories;
  bool            FActivityHistories_Specified;
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  QueryResult*    FCaseComments;
  bool            FCaseComments_Specified;
  QueryResult*    FCaseContactRoles;
  bool            FCaseContactRoles_Specified;
  UnicodeString   FCaseNumber;
  bool            FCaseNumber_Specified;
  QueryResult*    FCaseSolutions;
  bool            FCaseSolutions_Specified;
  QueryResult*    FCases;
  bool            FCases_Specified;
  TXSDateTime*    FClosedDate;
  bool            FClosedDate_Specified;
  Contact*        FContact;
  bool            FContact_Specified;
  ID              FContactId;
  bool            FContactId_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  QueryResult*    FEvents;
  bool            FEvents_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  QueryResult*    FFeeds;
  bool            FFeeds_Specified;
  bool            FHasCommentsUnreadByOwner;
  bool            FHasCommentsUnreadByOwner_Specified;
  bool            FHasSelfServiceComments;
  bool            FHasSelfServiceComments_Specified;
  QueryResult*    FHistories;
  bool            FHistories_Specified;
  bool            FIsClosed;
  bool            FIsClosed_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsEscalated;
  bool            FIsEscalated_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  QueryResult*    FOpenActivities;
  bool            FOpenActivities_Specified;
  UnicodeString   FOrigin;
  bool            FOrigin_Specified;
  Name_*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  Case*           FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  UnicodeString   FPriority;
  bool            FPriority_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  UnicodeString   FReason;
  bool            FReason_Specified;
  QueryResult*    FShares;
  bool            FShares_Specified;
  QueryResult*    FSolutions;
  bool            FSolutions_Specified;
  UnicodeString   FStatus;
  bool            FStatus_Specified;
  UnicodeString   FSubject;
  bool            FSubject_Specified;
  UnicodeString   FSuppliedCompany;
  bool            FSuppliedCompany_Specified;
  UnicodeString   FSuppliedEmail;
  bool            FSuppliedEmail_Specified;
  UnicodeString   FSuppliedName;
  bool            FSuppliedName_Specified;
  UnicodeString   FSuppliedPhone;
  bool            FSuppliedPhone_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  QueryResult*    FTasks;
  bool            FTasks_Specified;
  QueryResult*    FTeamMembers;
  bool            FTeamMembers_Specified;
  QueryResult*    FTeamTemplateRecords;
  bool            FTeamTemplateRecords_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  Account* __fastcall GetAccount(int Index)
  {  return FAccount;  }
  void __fastcall SetAccount(int Index, Account* _prop_val)
  {  FAccount = _prop_val; FAccount_Specified = true;  }
  bool __fastcall Account_Specified(int Index)
  {  return FAccount_Specified;  } 
  ID __fastcall GetAccountId(int Index)
  {  return FAccountId;  }
  void __fastcall SetAccountId(int Index, ID _prop_val)
  {  FAccountId = _prop_val; FAccountId_Specified = true;  }
  bool __fastcall AccountId_Specified(int Index)
  {  return FAccountId_Specified;  } 
  QueryResult* __fastcall GetActivityHistories(int Index)
  {  return FActivityHistories;  }
  void __fastcall SetActivityHistories(int Index, QueryResult* _prop_val)
  {  FActivityHistories = _prop_val; FActivityHistories_Specified = true;  }
  bool __fastcall ActivityHistories_Specified(int Index)
  {  return FActivityHistories_Specified;  } 
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  QueryResult* __fastcall GetCaseComments(int Index)
  {  return FCaseComments;  }
  void __fastcall SetCaseComments(int Index, QueryResult* _prop_val)
  {  FCaseComments = _prop_val; FCaseComments_Specified = true;  }
  bool __fastcall CaseComments_Specified(int Index)
  {  return FCaseComments_Specified;  } 
  QueryResult* __fastcall GetCaseContactRoles(int Index)
  {  return FCaseContactRoles;  }
  void __fastcall SetCaseContactRoles(int Index, QueryResult* _prop_val)
  {  FCaseContactRoles = _prop_val; FCaseContactRoles_Specified = true;  }
  bool __fastcall CaseContactRoles_Specified(int Index)
  {  return FCaseContactRoles_Specified;  } 
  UnicodeString __fastcall GetCaseNumber(int Index)
  {  return FCaseNumber;  }
  void __fastcall SetCaseNumber(int Index, UnicodeString _prop_val)
  {  FCaseNumber = _prop_val; FCaseNumber_Specified = true;  }
  bool __fastcall CaseNumber_Specified(int Index)
  {  return FCaseNumber_Specified;  } 
  QueryResult* __fastcall GetCaseSolutions(int Index)
  {  return FCaseSolutions;  }
  void __fastcall SetCaseSolutions(int Index, QueryResult* _prop_val)
  {  FCaseSolutions = _prop_val; FCaseSolutions_Specified = true;  }
  bool __fastcall CaseSolutions_Specified(int Index)
  {  return FCaseSolutions_Specified;  } 
  QueryResult* __fastcall GetCases(int Index)
  {  return FCases;  }
  void __fastcall SetCases(int Index, QueryResult* _prop_val)
  {  FCases = _prop_val; FCases_Specified = true;  }
  bool __fastcall Cases_Specified(int Index)
  {  return FCases_Specified;  } 
  TXSDateTime* __fastcall GetClosedDate(int Index)
  {  return FClosedDate;  }
  void __fastcall SetClosedDate(int Index, TXSDateTime* _prop_val)
  {  FClosedDate = _prop_val; FClosedDate_Specified = true;  }
  bool __fastcall ClosedDate_Specified(int Index)
  {  return FClosedDate_Specified;  } 
  Contact* __fastcall GetContact(int Index)
  {  return FContact;  }
  void __fastcall SetContact(int Index, Contact* _prop_val)
  {  FContact = _prop_val; FContact_Specified = true;  }
  bool __fastcall Contact_Specified(int Index)
  {  return FContact_Specified;  } 
  ID __fastcall GetContactId(int Index)
  {  return FContactId;  }
  void __fastcall SetContactId(int Index, ID _prop_val)
  {  FContactId = _prop_val; FContactId_Specified = true;  }
  bool __fastcall ContactId_Specified(int Index)
  {  return FContactId_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  QueryResult* __fastcall GetEvents(int Index)
  {  return FEvents;  }
  void __fastcall SetEvents(int Index, QueryResult* _prop_val)
  {  FEvents = _prop_val; FEvents_Specified = true;  }
  bool __fastcall Events_Specified(int Index)
  {  return FEvents_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  QueryResult* __fastcall GetFeeds(int Index)
  {  return FFeeds;  }
  void __fastcall SetFeeds(int Index, QueryResult* _prop_val)
  {  FFeeds = _prop_val; FFeeds_Specified = true;  }
  bool __fastcall Feeds_Specified(int Index)
  {  return FFeeds_Specified;  } 
  bool __fastcall GetHasCommentsUnreadByOwner(int Index)
  {  return FHasCommentsUnreadByOwner;  }
  void __fastcall SetHasCommentsUnreadByOwner(int Index, bool _prop_val)
  {  FHasCommentsUnreadByOwner = _prop_val; FHasCommentsUnreadByOwner_Specified = true;  }
  bool __fastcall HasCommentsUnreadByOwner_Specified(int Index)
  {  return FHasCommentsUnreadByOwner_Specified;  } 
  bool __fastcall GetHasSelfServiceComments(int Index)
  {  return FHasSelfServiceComments;  }
  void __fastcall SetHasSelfServiceComments(int Index, bool _prop_val)
  {  FHasSelfServiceComments = _prop_val; FHasSelfServiceComments_Specified = true;  }
  bool __fastcall HasSelfServiceComments_Specified(int Index)
  {  return FHasSelfServiceComments_Specified;  } 
  QueryResult* __fastcall GetHistories(int Index)
  {  return FHistories;  }
  void __fastcall SetHistories(int Index, QueryResult* _prop_val)
  {  FHistories = _prop_val; FHistories_Specified = true;  }
  bool __fastcall Histories_Specified(int Index)
  {  return FHistories_Specified;  } 
  bool __fastcall GetIsClosed(int Index)
  {  return FIsClosed;  }
  void __fastcall SetIsClosed(int Index, bool _prop_val)
  {  FIsClosed = _prop_val; FIsClosed_Specified = true;  }
  bool __fastcall IsClosed_Specified(int Index)
  {  return FIsClosed_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsEscalated(int Index)
  {  return FIsEscalated;  }
  void __fastcall SetIsEscalated(int Index, bool _prop_val)
  {  FIsEscalated = _prop_val; FIsEscalated_Specified = true;  }
  bool __fastcall IsEscalated_Specified(int Index)
  {  return FIsEscalated_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  QueryResult* __fastcall GetOpenActivities(int Index)
  {  return FOpenActivities;  }
  void __fastcall SetOpenActivities(int Index, QueryResult* _prop_val)
  {  FOpenActivities = _prop_val; FOpenActivities_Specified = true;  }
  bool __fastcall OpenActivities_Specified(int Index)
  {  return FOpenActivities_Specified;  } 
  UnicodeString __fastcall GetOrigin(int Index)
  {  return FOrigin;  }
  void __fastcall SetOrigin(int Index, UnicodeString _prop_val)
  {  FOrigin = _prop_val; FOrigin_Specified = true;  }
  bool __fastcall Origin_Specified(int Index)
  {  return FOrigin_Specified;  } 
  Name_* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, Name_* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  Case* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Case* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  UnicodeString __fastcall GetPriority(int Index)
  {  return FPriority;  }
  void __fastcall SetPriority(int Index, UnicodeString _prop_val)
  {  FPriority = _prop_val; FPriority_Specified = true;  }
  bool __fastcall Priority_Specified(int Index)
  {  return FPriority_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  UnicodeString __fastcall GetReason(int Index)
  {  return FReason;  }
  void __fastcall SetReason(int Index, UnicodeString _prop_val)
  {  FReason = _prop_val; FReason_Specified = true;  }
  bool __fastcall Reason_Specified(int Index)
  {  return FReason_Specified;  } 
  QueryResult* __fastcall GetShares(int Index)
  {  return FShares;  }
  void __fastcall SetShares(int Index, QueryResult* _prop_val)
  {  FShares = _prop_val; FShares_Specified = true;  }
  bool __fastcall Shares_Specified(int Index)
  {  return FShares_Specified;  } 
  QueryResult* __fastcall GetSolutions(int Index)
  {  return FSolutions;  }
  void __fastcall SetSolutions(int Index, QueryResult* _prop_val)
  {  FSolutions = _prop_val; FSolutions_Specified = true;  }
  bool __fastcall Solutions_Specified(int Index)
  {  return FSolutions_Specified;  } 
  UnicodeString __fastcall GetStatus(int Index)
  {  return FStatus;  }
  void __fastcall SetStatus(int Index, UnicodeString _prop_val)
  {  FStatus = _prop_val; FStatus_Specified = true;  }
  bool __fastcall Status_Specified(int Index)
  {  return FStatus_Specified;  } 
  UnicodeString __fastcall GetSubject(int Index)
  {  return FSubject;  }
  void __fastcall SetSubject(int Index, UnicodeString _prop_val)
  {  FSubject = _prop_val; FSubject_Specified = true;  }
  bool __fastcall Subject_Specified(int Index)
  {  return FSubject_Specified;  } 
  UnicodeString __fastcall GetSuppliedCompany(int Index)
  {  return FSuppliedCompany;  }
  void __fastcall SetSuppliedCompany(int Index, UnicodeString _prop_val)
  {  FSuppliedCompany = _prop_val; FSuppliedCompany_Specified = true;  }
  bool __fastcall SuppliedCompany_Specified(int Index)
  {  return FSuppliedCompany_Specified;  } 
  UnicodeString __fastcall GetSuppliedEmail(int Index)
  {  return FSuppliedEmail;  }
  void __fastcall SetSuppliedEmail(int Index, UnicodeString _prop_val)
  {  FSuppliedEmail = _prop_val; FSuppliedEmail_Specified = true;  }
  bool __fastcall SuppliedEmail_Specified(int Index)
  {  return FSuppliedEmail_Specified;  } 
  UnicodeString __fastcall GetSuppliedName(int Index)
  {  return FSuppliedName;  }
  void __fastcall SetSuppliedName(int Index, UnicodeString _prop_val)
  {  FSuppliedName = _prop_val; FSuppliedName_Specified = true;  }
  bool __fastcall SuppliedName_Specified(int Index)
  {  return FSuppliedName_Specified;  } 
  UnicodeString __fastcall GetSuppliedPhone(int Index)
  {  return FSuppliedPhone;  }
  void __fastcall SetSuppliedPhone(int Index, UnicodeString _prop_val)
  {  FSuppliedPhone = _prop_val; FSuppliedPhone_Specified = true;  }
  bool __fastcall SuppliedPhone_Specified(int Index)
  {  return FSuppliedPhone_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  QueryResult* __fastcall GetTasks(int Index)
  {  return FTasks;  }
  void __fastcall SetTasks(int Index, QueryResult* _prop_val)
  {  FTasks = _prop_val; FTasks_Specified = true;  }
  bool __fastcall Tasks_Specified(int Index)
  {  return FTasks_Specified;  } 
  QueryResult* __fastcall GetTeamMembers(int Index)
  {  return FTeamMembers;  }
  void __fastcall SetTeamMembers(int Index, QueryResult* _prop_val)
  {  FTeamMembers = _prop_val; FTeamMembers_Specified = true;  }
  bool __fastcall TeamMembers_Specified(int Index)
  {  return FTeamMembers_Specified;  } 
  QueryResult* __fastcall GetTeamTemplateRecords(int Index)
  {  return FTeamTemplateRecords;  }
  void __fastcall SetTeamTemplateRecords(int Index, QueryResult* _prop_val)
  {  FTeamTemplateRecords = _prop_val; FTeamTemplateRecords_Specified = true;  }
  bool __fastcall TeamTemplateRecords_Specified(int Index)
  {  return FTeamTemplateRecords_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~Case();
__published:
  __property Account*      Account = { index=(IS_OPTN|IS_NLBL), read=FAccount, write=SetAccount, stored = Account_Specified };
  __property ID          AccountId = { index=(IS_OPTN|IS_NLBL), read=FAccountId, write=SetAccountId, stored = AccountId_Specified };
  __property QueryResult* ActivityHistories = { index=(IS_OPTN|IS_NLBL), read=FActivityHistories, write=SetActivityHistories, stored = ActivityHistories_Specified };
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property QueryResult* CaseComments = { index=(IS_OPTN|IS_NLBL), read=FCaseComments, write=SetCaseComments, stored = CaseComments_Specified };
  __property QueryResult* CaseContactRoles = { index=(IS_OPTN|IS_NLBL), read=FCaseContactRoles, write=SetCaseContactRoles, stored = CaseContactRoles_Specified };
  __property UnicodeString CaseNumber = { index=(IS_OPTN|IS_NLBL), read=FCaseNumber, write=SetCaseNumber, stored = CaseNumber_Specified };
  __property QueryResult* CaseSolutions = { index=(IS_OPTN|IS_NLBL), read=FCaseSolutions, write=SetCaseSolutions, stored = CaseSolutions_Specified };
  __property QueryResult*      Cases = { index=(IS_OPTN|IS_NLBL), read=FCases, write=SetCases, stored = Cases_Specified };
  __property TXSDateTime* ClosedDate = { index=(IS_OPTN|IS_NLBL), read=FClosedDate, write=SetClosedDate, stored = ClosedDate_Specified };
  __property Contact*      Contact = { index=(IS_OPTN|IS_NLBL), read=FContact, write=SetContact, stored = Contact_Specified };
  __property ID          ContactId = { index=(IS_OPTN|IS_NLBL), read=FContactId, write=SetContactId, stored = ContactId_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property QueryResult*     Events = { index=(IS_OPTN|IS_NLBL), read=FEvents, write=SetEvents, stored = Events_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property QueryResult*      Feeds = { index=(IS_OPTN|IS_NLBL), read=FFeeds, write=SetFeeds, stored = Feeds_Specified };
  __property bool       HasCommentsUnreadByOwner = { index=(IS_OPTN|IS_NLBL), read=FHasCommentsUnreadByOwner, write=SetHasCommentsUnreadByOwner, stored = HasCommentsUnreadByOwner_Specified };
  __property bool       HasSelfServiceComments = { index=(IS_OPTN|IS_NLBL), read=FHasSelfServiceComments, write=SetHasSelfServiceComments, stored = HasSelfServiceComments_Specified };
  __property QueryResult*  Histories = { index=(IS_OPTN|IS_NLBL), read=FHistories, write=SetHistories, stored = Histories_Specified };
  __property bool         IsClosed = { index=(IS_OPTN|IS_NLBL), read=FIsClosed, write=SetIsClosed, stored = IsClosed_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool       IsEscalated = { index=(IS_OPTN|IS_NLBL), read=FIsEscalated, write=SetIsEscalated, stored = IsEscalated_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property QueryResult* OpenActivities = { index=(IS_OPTN|IS_NLBL), read=FOpenActivities, write=SetOpenActivities, stored = OpenActivities_Specified };
  __property UnicodeString     Origin = { index=(IS_OPTN|IS_NLBL), read=FOrigin, write=SetOrigin, stored = Origin_Specified };
  __property Name_*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property Case*          Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property UnicodeString   Priority = { index=(IS_OPTN|IS_NLBL), read=FPriority, write=SetPriority, stored = Priority_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property UnicodeString     Reason = { index=(IS_OPTN|IS_NLBL), read=FReason, write=SetReason, stored = Reason_Specified };
  __property QueryResult*     Shares = { index=(IS_OPTN|IS_NLBL), read=FShares, write=SetShares, stored = Shares_Specified };
  __property QueryResult*  Solutions = { index=(IS_OPTN|IS_NLBL), read=FSolutions, write=SetSolutions, stored = Solutions_Specified };
  __property UnicodeString     Status = { index=(IS_OPTN|IS_NLBL), read=FStatus, write=SetStatus, stored = Status_Specified };
  __property UnicodeString    Subject = { index=(IS_OPTN|IS_NLBL), read=FSubject, write=SetSubject, stored = Subject_Specified };
  __property UnicodeString SuppliedCompany = { index=(IS_OPTN|IS_NLBL), read=FSuppliedCompany, write=SetSuppliedCompany, stored = SuppliedCompany_Specified };
  __property UnicodeString SuppliedEmail = { index=(IS_OPTN|IS_NLBL), read=FSuppliedEmail, write=SetSuppliedEmail, stored = SuppliedEmail_Specified };
  __property UnicodeString SuppliedName = { index=(IS_OPTN|IS_NLBL), read=FSuppliedName, write=SetSuppliedName, stored = SuppliedName_Specified };
  __property UnicodeString SuppliedPhone = { index=(IS_OPTN|IS_NLBL), read=FSuppliedPhone, write=SetSuppliedPhone, stored = SuppliedPhone_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property QueryResult*      Tasks = { index=(IS_OPTN|IS_NLBL), read=FTasks, write=SetTasks, stored = Tasks_Specified };
  __property QueryResult* TeamMembers = { index=(IS_OPTN|IS_NLBL), read=FTeamMembers, write=SetTeamMembers, stored = TeamMembers_Specified };
  __property QueryResult* TeamTemplateRecords = { index=(IS_OPTN|IS_NLBL), read=FTeamTemplateRecords, write=SetTeamTemplateRecords, stored = TeamTemplateRecords_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : CallCenter, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class CallCenter : public sObject {
private:
  UnicodeString   FAdapterUrl;
  bool            FAdapterUrl_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FCustomSettings;
  bool            FCustomSettings_Specified;
  UnicodeString   FInternalName;
  bool            FInternalName_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  double          FVersion;
  bool            FVersion_Specified;
  UnicodeString __fastcall GetAdapterUrl(int Index)
  {  return FAdapterUrl;  }
  void __fastcall SetAdapterUrl(int Index, UnicodeString _prop_val)
  {  FAdapterUrl = _prop_val; FAdapterUrl_Specified = true;  }
  bool __fastcall AdapterUrl_Specified(int Index)
  {  return FAdapterUrl_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetCustomSettings(int Index)
  {  return FCustomSettings;  }
  void __fastcall SetCustomSettings(int Index, UnicodeString _prop_val)
  {  FCustomSettings = _prop_val; FCustomSettings_Specified = true;  }
  bool __fastcall CustomSettings_Specified(int Index)
  {  return FCustomSettings_Specified;  } 
  UnicodeString __fastcall GetInternalName(int Index)
  {  return FInternalName;  }
  void __fastcall SetInternalName(int Index, UnicodeString _prop_val)
  {  FInternalName = _prop_val; FInternalName_Specified = true;  }
  bool __fastcall InternalName_Specified(int Index)
  {  return FInternalName_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  double __fastcall GetVersion(int Index)
  {  return FVersion;  }
  void __fastcall SetVersion(int Index, double _prop_val)
  {  FVersion = _prop_val; FVersion_Specified = true;  }
  bool __fastcall Version_Specified(int Index)
  {  return FVersion_Specified;  } 

public:
  __fastcall ~CallCenter();
__published:
  __property UnicodeString AdapterUrl = { index=(IS_OPTN|IS_NLBL), read=FAdapterUrl, write=SetAdapterUrl, stored = AdapterUrl_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString CustomSettings = { index=(IS_OPTN|IS_NLBL), read=FCustomSettings, write=SetCustomSettings, stored = CustomSettings_Specified };
  __property UnicodeString InternalName = { index=(IS_OPTN|IS_NLBL), read=FInternalName, write=SetInternalName, stored = InternalName_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property double        Version = { index=(IS_OPTN|IS_NLBL), read=FVersion, write=SetVersion, stored = Version_Specified };
};




// ************************************************************************ //
// XML       : BusinessProcess, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class BusinessProcess : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  bool            FIsActive;
  bool            FIsActive_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  UnicodeString   FNamespacePrefix;
  bool            FNamespacePrefix_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTableEnumOrId;
  bool            FTableEnumOrId_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  bool __fastcall GetIsActive(int Index)
  {  return FIsActive;  }
  void __fastcall SetIsActive(int Index, bool _prop_val)
  {  FIsActive = _prop_val; FIsActive_Specified = true;  }
  bool __fastcall IsActive_Specified(int Index)
  {  return FIsActive_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  UnicodeString __fastcall GetNamespacePrefix(int Index)
  {  return FNamespacePrefix;  }
  void __fastcall SetNamespacePrefix(int Index, UnicodeString _prop_val)
  {  FNamespacePrefix = _prop_val; FNamespacePrefix_Specified = true;  }
  bool __fastcall NamespacePrefix_Specified(int Index)
  {  return FNamespacePrefix_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTableEnumOrId(int Index)
  {  return FTableEnumOrId;  }
  void __fastcall SetTableEnumOrId(int Index, UnicodeString _prop_val)
  {  FTableEnumOrId = _prop_val; FTableEnumOrId_Specified = true;  }
  bool __fastcall TableEnumOrId_Specified(int Index)
  {  return FTableEnumOrId_Specified;  } 

public:
  __fastcall ~BusinessProcess();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property bool         IsActive = { index=(IS_OPTN|IS_NLBL), read=FIsActive, write=SetIsActive, stored = IsActive_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property UnicodeString NamespacePrefix = { index=(IS_OPTN|IS_NLBL), read=FNamespacePrefix, write=SetNamespacePrefix, stored = NamespacePrefix_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString TableEnumOrId = { index=(IS_OPTN|IS_NLBL), read=FTableEnumOrId, write=SetTableEnumOrId, stored = TableEnumOrId_Specified };
};




// ************************************************************************ //
// XML       : BusinessHours, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class BusinessHours : public sObject {
private:
  QueryResult*    FCases;
  bool            FCases_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  TXSTime*        FFridayEndTime;
  bool            FFridayEndTime_Specified;
  TXSTime*        FFridayStartTime;
  bool            FFridayStartTime_Specified;
  bool            FIsActive;
  bool            FIsActive_Specified;
  bool            FIsDefault;
  bool            FIsDefault_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  TXSTime*        FMondayEndTime;
  bool            FMondayEndTime_Specified;
  TXSTime*        FMondayStartTime;
  bool            FMondayStartTime_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  TXSTime*        FSaturdayEndTime;
  bool            FSaturdayEndTime_Specified;
  TXSTime*        FSaturdayStartTime;
  bool            FSaturdayStartTime_Specified;
  TXSTime*        FSundayEndTime;
  bool            FSundayEndTime_Specified;
  TXSTime*        FSundayStartTime;
  bool            FSundayStartTime_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  TXSTime*        FThursdayEndTime;
  bool            FThursdayEndTime_Specified;
  TXSTime*        FThursdayStartTime;
  bool            FThursdayStartTime_Specified;
  UnicodeString   FTimeZoneSidKey;
  bool            FTimeZoneSidKey_Specified;
  TXSTime*        FTuesdayEndTime;
  bool            FTuesdayEndTime_Specified;
  TXSTime*        FTuesdayStartTime;
  bool            FTuesdayStartTime_Specified;
  TXSTime*        FWednesdayEndTime;
  bool            FWednesdayEndTime_Specified;
  TXSTime*        FWednesdayStartTime;
  bool            FWednesdayStartTime_Specified;
  QueryResult* __fastcall GetCases(int Index)
  {  return FCases;  }
  void __fastcall SetCases(int Index, QueryResult* _prop_val)
  {  FCases = _prop_val; FCases_Specified = true;  }
  bool __fastcall Cases_Specified(int Index)
  {  return FCases_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  TXSTime* __fastcall GetFridayEndTime(int Index)
  {  return FFridayEndTime;  }
  void __fastcall SetFridayEndTime(int Index, TXSTime* _prop_val)
  {  FFridayEndTime = _prop_val; FFridayEndTime_Specified = true;  }
  bool __fastcall FridayEndTime_Specified(int Index)
  {  return FFridayEndTime_Specified;  } 
  TXSTime* __fastcall GetFridayStartTime(int Index)
  {  return FFridayStartTime;  }
  void __fastcall SetFridayStartTime(int Index, TXSTime* _prop_val)
  {  FFridayStartTime = _prop_val; FFridayStartTime_Specified = true;  }
  bool __fastcall FridayStartTime_Specified(int Index)
  {  return FFridayStartTime_Specified;  } 
  bool __fastcall GetIsActive(int Index)
  {  return FIsActive;  }
  void __fastcall SetIsActive(int Index, bool _prop_val)
  {  FIsActive = _prop_val; FIsActive_Specified = true;  }
  bool __fastcall IsActive_Specified(int Index)
  {  return FIsActive_Specified;  } 
  bool __fastcall GetIsDefault(int Index)
  {  return FIsDefault;  }
  void __fastcall SetIsDefault(int Index, bool _prop_val)
  {  FIsDefault = _prop_val; FIsDefault_Specified = true;  }
  bool __fastcall IsDefault_Specified(int Index)
  {  return FIsDefault_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  TXSTime* __fastcall GetMondayEndTime(int Index)
  {  return FMondayEndTime;  }
  void __fastcall SetMondayEndTime(int Index, TXSTime* _prop_val)
  {  FMondayEndTime = _prop_val; FMondayEndTime_Specified = true;  }
  bool __fastcall MondayEndTime_Specified(int Index)
  {  return FMondayEndTime_Specified;  } 
  TXSTime* __fastcall GetMondayStartTime(int Index)
  {  return FMondayStartTime;  }
  void __fastcall SetMondayStartTime(int Index, TXSTime* _prop_val)
  {  FMondayStartTime = _prop_val; FMondayStartTime_Specified = true;  }
  bool __fastcall MondayStartTime_Specified(int Index)
  {  return FMondayStartTime_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  TXSTime* __fastcall GetSaturdayEndTime(int Index)
  {  return FSaturdayEndTime;  }
  void __fastcall SetSaturdayEndTime(int Index, TXSTime* _prop_val)
  {  FSaturdayEndTime = _prop_val; FSaturdayEndTime_Specified = true;  }
  bool __fastcall SaturdayEndTime_Specified(int Index)
  {  return FSaturdayEndTime_Specified;  } 
  TXSTime* __fastcall GetSaturdayStartTime(int Index)
  {  return FSaturdayStartTime;  }
  void __fastcall SetSaturdayStartTime(int Index, TXSTime* _prop_val)
  {  FSaturdayStartTime = _prop_val; FSaturdayStartTime_Specified = true;  }
  bool __fastcall SaturdayStartTime_Specified(int Index)
  {  return FSaturdayStartTime_Specified;  } 
  TXSTime* __fastcall GetSundayEndTime(int Index)
  {  return FSundayEndTime;  }
  void __fastcall SetSundayEndTime(int Index, TXSTime* _prop_val)
  {  FSundayEndTime = _prop_val; FSundayEndTime_Specified = true;  }
  bool __fastcall SundayEndTime_Specified(int Index)
  {  return FSundayEndTime_Specified;  } 
  TXSTime* __fastcall GetSundayStartTime(int Index)
  {  return FSundayStartTime;  }
  void __fastcall SetSundayStartTime(int Index, TXSTime* _prop_val)
  {  FSundayStartTime = _prop_val; FSundayStartTime_Specified = true;  }
  bool __fastcall SundayStartTime_Specified(int Index)
  {  return FSundayStartTime_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  TXSTime* __fastcall GetThursdayEndTime(int Index)
  {  return FThursdayEndTime;  }
  void __fastcall SetThursdayEndTime(int Index, TXSTime* _prop_val)
  {  FThursdayEndTime = _prop_val; FThursdayEndTime_Specified = true;  }
  bool __fastcall ThursdayEndTime_Specified(int Index)
  {  return FThursdayEndTime_Specified;  } 
  TXSTime* __fastcall GetThursdayStartTime(int Index)
  {  return FThursdayStartTime;  }
  void __fastcall SetThursdayStartTime(int Index, TXSTime* _prop_val)
  {  FThursdayStartTime = _prop_val; FThursdayStartTime_Specified = true;  }
  bool __fastcall ThursdayStartTime_Specified(int Index)
  {  return FThursdayStartTime_Specified;  } 
  UnicodeString __fastcall GetTimeZoneSidKey(int Index)
  {  return FTimeZoneSidKey;  }
  void __fastcall SetTimeZoneSidKey(int Index, UnicodeString _prop_val)
  {  FTimeZoneSidKey = _prop_val; FTimeZoneSidKey_Specified = true;  }
  bool __fastcall TimeZoneSidKey_Specified(int Index)
  {  return FTimeZoneSidKey_Specified;  } 
  TXSTime* __fastcall GetTuesdayEndTime(int Index)
  {  return FTuesdayEndTime;  }
  void __fastcall SetTuesdayEndTime(int Index, TXSTime* _prop_val)
  {  FTuesdayEndTime = _prop_val; FTuesdayEndTime_Specified = true;  }
  bool __fastcall TuesdayEndTime_Specified(int Index)
  {  return FTuesdayEndTime_Specified;  } 
  TXSTime* __fastcall GetTuesdayStartTime(int Index)
  {  return FTuesdayStartTime;  }
  void __fastcall SetTuesdayStartTime(int Index, TXSTime* _prop_val)
  {  FTuesdayStartTime = _prop_val; FTuesdayStartTime_Specified = true;  }
  bool __fastcall TuesdayStartTime_Specified(int Index)
  {  return FTuesdayStartTime_Specified;  } 
  TXSTime* __fastcall GetWednesdayEndTime(int Index)
  {  return FWednesdayEndTime;  }
  void __fastcall SetWednesdayEndTime(int Index, TXSTime* _prop_val)
  {  FWednesdayEndTime = _prop_val; FWednesdayEndTime_Specified = true;  }
  bool __fastcall WednesdayEndTime_Specified(int Index)
  {  return FWednesdayEndTime_Specified;  } 
  TXSTime* __fastcall GetWednesdayStartTime(int Index)
  {  return FWednesdayStartTime;  }
  void __fastcall SetWednesdayStartTime(int Index, TXSTime* _prop_val)
  {  FWednesdayStartTime = _prop_val; FWednesdayStartTime_Specified = true;  }
  bool __fastcall WednesdayStartTime_Specified(int Index)
  {  return FWednesdayStartTime_Specified;  } 

public:
  __fastcall ~BusinessHours();
__published:
  __property QueryResult*      Cases = { index=(IS_OPTN|IS_NLBL), read=FCases, write=SetCases, stored = Cases_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property TXSTime*   FridayEndTime = { index=(IS_OPTN|IS_NLBL), read=FFridayEndTime, write=SetFridayEndTime, stored = FridayEndTime_Specified };
  __property TXSTime*   FridayStartTime = { index=(IS_OPTN|IS_NLBL), read=FFridayStartTime, write=SetFridayStartTime, stored = FridayStartTime_Specified };
  __property bool         IsActive = { index=(IS_OPTN|IS_NLBL), read=FIsActive, write=SetIsActive, stored = IsActive_Specified };
  __property bool        IsDefault = { index=(IS_OPTN|IS_NLBL), read=FIsDefault, write=SetIsDefault, stored = IsDefault_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property TXSTime*   MondayEndTime = { index=(IS_OPTN|IS_NLBL), read=FMondayEndTime, write=SetMondayEndTime, stored = MondayEndTime_Specified };
  __property TXSTime*   MondayStartTime = { index=(IS_OPTN|IS_NLBL), read=FMondayStartTime, write=SetMondayStartTime, stored = MondayStartTime_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property TXSTime*   SaturdayEndTime = { index=(IS_OPTN|IS_NLBL), read=FSaturdayEndTime, write=SetSaturdayEndTime, stored = SaturdayEndTime_Specified };
  __property TXSTime*   SaturdayStartTime = { index=(IS_OPTN|IS_NLBL), read=FSaturdayStartTime, write=SetSaturdayStartTime, stored = SaturdayStartTime_Specified };
  __property TXSTime*   SundayEndTime = { index=(IS_OPTN|IS_NLBL), read=FSundayEndTime, write=SetSundayEndTime, stored = SundayEndTime_Specified };
  __property TXSTime*   SundayStartTime = { index=(IS_OPTN|IS_NLBL), read=FSundayStartTime, write=SetSundayStartTime, stored = SundayStartTime_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property TXSTime*   ThursdayEndTime = { index=(IS_OPTN|IS_NLBL), read=FThursdayEndTime, write=SetThursdayEndTime, stored = ThursdayEndTime_Specified };
  __property TXSTime*   ThursdayStartTime = { index=(IS_OPTN|IS_NLBL), read=FThursdayStartTime, write=SetThursdayStartTime, stored = ThursdayStartTime_Specified };
  __property UnicodeString TimeZoneSidKey = { index=(IS_OPTN|IS_NLBL), read=FTimeZoneSidKey, write=SetTimeZoneSidKey, stored = TimeZoneSidKey_Specified };
  __property TXSTime*   TuesdayEndTime = { index=(IS_OPTN|IS_NLBL), read=FTuesdayEndTime, write=SetTuesdayEndTime, stored = TuesdayEndTime_Specified };
  __property TXSTime*   TuesdayStartTime = { index=(IS_OPTN|IS_NLBL), read=FTuesdayStartTime, write=SetTuesdayStartTime, stored = TuesdayStartTime_Specified };
  __property TXSTime*   WednesdayEndTime = { index=(IS_OPTN|IS_NLBL), read=FWednesdayEndTime, write=SetWednesdayEndTime, stored = WednesdayEndTime_Specified };
  __property TXSTime*   WednesdayStartTime = { index=(IS_OPTN|IS_NLBL), read=FWednesdayStartTime, write=SetWednesdayStartTime, stored = WednesdayStartTime_Specified };
};




// ************************************************************************ //
// XML       : BrandTemplate, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class BrandTemplate : public sObject {
private:
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  UnicodeString   FDeveloperName;
  bool            FDeveloperName_Specified;
  bool            FIsActive;
  bool            FIsActive_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  UnicodeString   FNamespacePrefix;
  bool            FNamespacePrefix_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FValue;
  bool            FValue_Specified;
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  UnicodeString __fastcall GetDeveloperName(int Index)
  {  return FDeveloperName;  }
  void __fastcall SetDeveloperName(int Index, UnicodeString _prop_val)
  {  FDeveloperName = _prop_val; FDeveloperName_Specified = true;  }
  bool __fastcall DeveloperName_Specified(int Index)
  {  return FDeveloperName_Specified;  } 
  bool __fastcall GetIsActive(int Index)
  {  return FIsActive;  }
  void __fastcall SetIsActive(int Index, bool _prop_val)
  {  FIsActive = _prop_val; FIsActive_Specified = true;  }
  bool __fastcall IsActive_Specified(int Index)
  {  return FIsActive_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  UnicodeString __fastcall GetNamespacePrefix(int Index)
  {  return FNamespacePrefix;  }
  void __fastcall SetNamespacePrefix(int Index, UnicodeString _prop_val)
  {  FNamespacePrefix = _prop_val; FNamespacePrefix_Specified = true;  }
  bool __fastcall NamespacePrefix_Specified(int Index)
  {  return FNamespacePrefix_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetValue(int Index)
  {  return FValue;  }
  void __fastcall SetValue(int Index, UnicodeString _prop_val)
  {  FValue = _prop_val; FValue_Specified = true;  }
  bool __fastcall Value_Specified(int Index)
  {  return FValue_Specified;  } 

public:
  __fastcall ~BrandTemplate();
__published:
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property UnicodeString DeveloperName = { index=(IS_OPTN|IS_NLBL), read=FDeveloperName, write=SetDeveloperName, stored = DeveloperName_Specified };
  __property bool         IsActive = { index=(IS_OPTN|IS_NLBL), read=FIsActive, write=SetIsActive, stored = IsActive_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property UnicodeString NamespacePrefix = { index=(IS_OPTN|IS_NLBL), read=FNamespacePrefix, write=SetNamespacePrefix, stored = NamespacePrefix_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Value = { index=(IS_OPTN|IS_NLBL), read=FValue, write=SetValue, stored = Value_Specified };
};




// ************************************************************************ //
// XML       : Attachment, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Attachment : public sObject {
private:
  TByteDynArray   FBody;
  bool            FBody_Specified;
  int             FBodyLength;
  bool            FBodyLength_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsPrivate;
  bool            FIsPrivate_Specified;
  Name_*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  Name_*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  Name_*           FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  TByteDynArray __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, TByteDynArray _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetBodyLength(int Index)
  {  return FBodyLength;  }
  void __fastcall SetBodyLength(int Index, int _prop_val)
  {  FBodyLength = _prop_val; FBodyLength_Specified = true;  }
  bool __fastcall BodyLength_Specified(int Index)
  {  return FBodyLength_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsPrivate(int Index)
  {  return FIsPrivate;  }
  void __fastcall SetIsPrivate(int Index, bool _prop_val)
  {  FIsPrivate = _prop_val; FIsPrivate_Specified = true;  }
  bool __fastcall IsPrivate_Specified(int Index)
  {  return FIsPrivate_Specified;  } 
  Name_* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, Name_* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  Name_* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, Name_* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  Name_* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Name_* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~Attachment();
__published:
  __property TByteDynArray       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        BodyLength = { index=(IS_OPTN|IS_NLBL), read=FBodyLength, write=SetBodyLength, stored = BodyLength_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool        IsPrivate = { index=(IS_OPTN|IS_NLBL), read=FIsPrivate, write=SetIsPrivate, stored = IsPrivate_Specified };
  __property Name_*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property Name_*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property Name_*          Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : AssignmentRule, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class AssignmentRule : public sObject {
private:
  bool            FActive;
  bool            FActive_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  UnicodeString   FSobjectType;
  bool            FSobjectType_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  bool __fastcall GetActive(int Index)
  {  return FActive;  }
  void __fastcall SetActive(int Index, bool _prop_val)
  {  FActive = _prop_val; FActive_Specified = true;  }
  bool __fastcall Active_Specified(int Index)
  {  return FActive_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  UnicodeString __fastcall GetSobjectType(int Index)
  {  return FSobjectType;  }
  void __fastcall SetSobjectType(int Index, UnicodeString _prop_val)
  {  FSobjectType = _prop_val; FSobjectType_Specified = true;  }
  bool __fastcall SobjectType_Specified(int Index)
  {  return FSobjectType_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~AssignmentRule();
__published:
  __property bool           Active = { index=(IS_OPTN|IS_NLBL), read=FActive, write=SetActive, stored = Active_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property UnicodeString SobjectType = { index=(IS_OPTN|IS_NLBL), read=FSobjectType, write=SetSobjectType, stored = SobjectType_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : AssetFeed, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class AssetFeed : public sObject {
private:
  UnicodeString   FBody;
  bool            FBody_Specified;
  int             FCommentCount;
  bool            FCommentCount_Specified;
  TByteDynArray   FContentData;
  bool            FContentData_Specified;
  UnicodeString   FContentDescription;
  bool            FContentDescription_Specified;
  UnicodeString   FContentFileName;
  bool            FContentFileName_Specified;
  int             FContentSize;
  bool            FContentSize_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedComments;
  bool            FFeedComments_Specified;
  QueryResult*    FFeedLikes;
  bool            FFeedLikes_Specified;
  QueryResult*    FFeedTrackedChanges;
  bool            FFeedTrackedChanges_Specified;
  Name_*           FInsertedBy;
  bool            FInsertedBy_Specified;
  ID              FInsertedById;
  bool            FInsertedById_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLikeCount;
  bool            FLikeCount_Specified;
  UnicodeString   FLinkUrl;
  bool            FLinkUrl_Specified;
  Asset*          FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FRelatedRecordId;
  bool            FRelatedRecordId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetCommentCount(int Index)
  {  return FCommentCount;  }
  void __fastcall SetCommentCount(int Index, int _prop_val)
  {  FCommentCount = _prop_val; FCommentCount_Specified = true;  }
  bool __fastcall CommentCount_Specified(int Index)
  {  return FCommentCount_Specified;  } 
  TByteDynArray __fastcall GetContentData(int Index)
  {  return FContentData;  }
  void __fastcall SetContentData(int Index, TByteDynArray _prop_val)
  {  FContentData = _prop_val; FContentData_Specified = true;  }
  bool __fastcall ContentData_Specified(int Index)
  {  return FContentData_Specified;  } 
  UnicodeString __fastcall GetContentDescription(int Index)
  {  return FContentDescription;  }
  void __fastcall SetContentDescription(int Index, UnicodeString _prop_val)
  {  FContentDescription = _prop_val; FContentDescription_Specified = true;  }
  bool __fastcall ContentDescription_Specified(int Index)
  {  return FContentDescription_Specified;  } 
  UnicodeString __fastcall GetContentFileName(int Index)
  {  return FContentFileName;  }
  void __fastcall SetContentFileName(int Index, UnicodeString _prop_val)
  {  FContentFileName = _prop_val; FContentFileName_Specified = true;  }
  bool __fastcall ContentFileName_Specified(int Index)
  {  return FContentFileName_Specified;  } 
  int __fastcall GetContentSize(int Index)
  {  return FContentSize;  }
  void __fastcall SetContentSize(int Index, int _prop_val)
  {  FContentSize = _prop_val; FContentSize_Specified = true;  }
  bool __fastcall ContentSize_Specified(int Index)
  {  return FContentSize_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedComments(int Index)
  {  return FFeedComments;  }
  void __fastcall SetFeedComments(int Index, QueryResult* _prop_val)
  {  FFeedComments = _prop_val; FFeedComments_Specified = true;  }
  bool __fastcall FeedComments_Specified(int Index)
  {  return FFeedComments_Specified;  } 
  QueryResult* __fastcall GetFeedLikes(int Index)
  {  return FFeedLikes;  }
  void __fastcall SetFeedLikes(int Index, QueryResult* _prop_val)
  {  FFeedLikes = _prop_val; FFeedLikes_Specified = true;  }
  bool __fastcall FeedLikes_Specified(int Index)
  {  return FFeedLikes_Specified;  } 
  QueryResult* __fastcall GetFeedTrackedChanges(int Index)
  {  return FFeedTrackedChanges;  }
  void __fastcall SetFeedTrackedChanges(int Index, QueryResult* _prop_val)
  {  FFeedTrackedChanges = _prop_val; FFeedTrackedChanges_Specified = true;  }
  bool __fastcall FeedTrackedChanges_Specified(int Index)
  {  return FFeedTrackedChanges_Specified;  } 
  Name_* __fastcall GetInsertedBy(int Index)
  {  return FInsertedBy;  }
  void __fastcall SetInsertedBy(int Index, Name_* _prop_val)
  {  FInsertedBy = _prop_val; FInsertedBy_Specified = true;  }
  bool __fastcall InsertedBy_Specified(int Index)
  {  return FInsertedBy_Specified;  } 
  ID __fastcall GetInsertedById(int Index)
  {  return FInsertedById;  }
  void __fastcall SetInsertedById(int Index, ID _prop_val)
  {  FInsertedById = _prop_val; FInsertedById_Specified = true;  }
  bool __fastcall InsertedById_Specified(int Index)
  {  return FInsertedById_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLikeCount(int Index)
  {  return FLikeCount;  }
  void __fastcall SetLikeCount(int Index, int _prop_val)
  {  FLikeCount = _prop_val; FLikeCount_Specified = true;  }
  bool __fastcall LikeCount_Specified(int Index)
  {  return FLikeCount_Specified;  } 
  UnicodeString __fastcall GetLinkUrl(int Index)
  {  return FLinkUrl;  }
  void __fastcall SetLinkUrl(int Index, UnicodeString _prop_val)
  {  FLinkUrl = _prop_val; FLinkUrl_Specified = true;  }
  bool __fastcall LinkUrl_Specified(int Index)
  {  return FLinkUrl_Specified;  } 
  Asset* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Asset* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetRelatedRecordId(int Index)
  {  return FRelatedRecordId;  }
  void __fastcall SetRelatedRecordId(int Index, ID _prop_val)
  {  FRelatedRecordId = _prop_val; FRelatedRecordId_Specified = true;  }
  bool __fastcall RelatedRecordId_Specified(int Index)
  {  return FRelatedRecordId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~AssetFeed();
__published:
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        CommentCount = { index=(IS_OPTN|IS_NLBL), read=FCommentCount, write=SetCommentCount, stored = CommentCount_Specified };
  __property TByteDynArray ContentData = { index=(IS_OPTN|IS_NLBL), read=FContentData, write=SetContentData, stored = ContentData_Specified };
  __property UnicodeString ContentDescription = { index=(IS_OPTN|IS_NLBL), read=FContentDescription, write=SetContentDescription, stored = ContentDescription_Specified };
  __property UnicodeString ContentFileName = { index=(IS_OPTN|IS_NLBL), read=FContentFileName, write=SetContentFileName, stored = ContentFileName_Specified };
  __property int        ContentSize = { index=(IS_OPTN|IS_NLBL), read=FContentSize, write=SetContentSize, stored = ContentSize_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedComments = { index=(IS_OPTN|IS_NLBL), read=FFeedComments, write=SetFeedComments, stored = FeedComments_Specified };
  __property QueryResult*  FeedLikes = { index=(IS_OPTN|IS_NLBL), read=FFeedLikes, write=SetFeedLikes, stored = FeedLikes_Specified };
  __property QueryResult* FeedTrackedChanges = { index=(IS_OPTN|IS_NLBL), read=FFeedTrackedChanges, write=SetFeedTrackedChanges, stored = FeedTrackedChanges_Specified };
  __property Name_*      InsertedBy = { index=(IS_OPTN|IS_NLBL), read=FInsertedBy, write=SetInsertedBy, stored = InsertedBy_Specified };
  __property ID         InsertedById = { index=(IS_OPTN|IS_NLBL), read=FInsertedById, write=SetInsertedById, stored = InsertedById_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int         LikeCount = { index=(IS_OPTN|IS_NLBL), read=FLikeCount, write=SetLikeCount, stored = LikeCount_Specified };
  __property UnicodeString    LinkUrl = { index=(IS_OPTN|IS_NLBL), read=FLinkUrl, write=SetLinkUrl, stored = LinkUrl_Specified };
  __property Asset*         Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         RelatedRecordId = { index=(IS_OPTN|IS_NLBL), read=FRelatedRecordId, write=SetRelatedRecordId, stored = RelatedRecordId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : Product2, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Product2 : public sObject {
private:
  QueryResult*    FActivityHistories;
  bool            FActivityHistories_Specified;
  QueryResult*    FAssets;
  bool            FAssets_Specified;
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  QueryResult*    FEvents;
  bool            FEvents_Specified;
  UnicodeString   FFamily;
  bool            FFamily_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  QueryResult*    FFeeds;
  bool            FFeeds_Specified;
  bool            FIsActive;
  bool            FIsActive_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  QueryResult*    FNotes;
  bool            FNotes_Specified;
  QueryResult*    FNotesAndAttachments;
  bool            FNotesAndAttachments_Specified;
  QueryResult*    FOpenActivities;
  bool            FOpenActivities_Specified;
  QueryResult*    FOpportunityLineItems;
  bool            FOpportunityLineItems_Specified;
  QueryResult*    FPricebookEntries;
  bool            FPricebookEntries_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  UnicodeString   FProductCode;
  bool            FProductCode_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  QueryResult*    FTasks;
  bool            FTasks_Specified;
  QueryResult* __fastcall GetActivityHistories(int Index)
  {  return FActivityHistories;  }
  void __fastcall SetActivityHistories(int Index, QueryResult* _prop_val)
  {  FActivityHistories = _prop_val; FActivityHistories_Specified = true;  }
  bool __fastcall ActivityHistories_Specified(int Index)
  {  return FActivityHistories_Specified;  } 
  QueryResult* __fastcall GetAssets(int Index)
  {  return FAssets;  }
  void __fastcall SetAssets(int Index, QueryResult* _prop_val)
  {  FAssets = _prop_val; FAssets_Specified = true;  }
  bool __fastcall Assets_Specified(int Index)
  {  return FAssets_Specified;  } 
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  QueryResult* __fastcall GetEvents(int Index)
  {  return FEvents;  }
  void __fastcall SetEvents(int Index, QueryResult* _prop_val)
  {  FEvents = _prop_val; FEvents_Specified = true;  }
  bool __fastcall Events_Specified(int Index)
  {  return FEvents_Specified;  } 
  UnicodeString __fastcall GetFamily(int Index)
  {  return FFamily;  }
  void __fastcall SetFamily(int Index, UnicodeString _prop_val)
  {  FFamily = _prop_val; FFamily_Specified = true;  }
  bool __fastcall Family_Specified(int Index)
  {  return FFamily_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  QueryResult* __fastcall GetFeeds(int Index)
  {  return FFeeds;  }
  void __fastcall SetFeeds(int Index, QueryResult* _prop_val)
  {  FFeeds = _prop_val; FFeeds_Specified = true;  }
  bool __fastcall Feeds_Specified(int Index)
  {  return FFeeds_Specified;  } 
  bool __fastcall GetIsActive(int Index)
  {  return FIsActive;  }
  void __fastcall SetIsActive(int Index, bool _prop_val)
  {  FIsActive = _prop_val; FIsActive_Specified = true;  }
  bool __fastcall IsActive_Specified(int Index)
  {  return FIsActive_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  QueryResult* __fastcall GetNotes(int Index)
  {  return FNotes;  }
  void __fastcall SetNotes(int Index, QueryResult* _prop_val)
  {  FNotes = _prop_val; FNotes_Specified = true;  }
  bool __fastcall Notes_Specified(int Index)
  {  return FNotes_Specified;  } 
  QueryResult* __fastcall GetNotesAndAttachments(int Index)
  {  return FNotesAndAttachments;  }
  void __fastcall SetNotesAndAttachments(int Index, QueryResult* _prop_val)
  {  FNotesAndAttachments = _prop_val; FNotesAndAttachments_Specified = true;  }
  bool __fastcall NotesAndAttachments_Specified(int Index)
  {  return FNotesAndAttachments_Specified;  } 
  QueryResult* __fastcall GetOpenActivities(int Index)
  {  return FOpenActivities;  }
  void __fastcall SetOpenActivities(int Index, QueryResult* _prop_val)
  {  FOpenActivities = _prop_val; FOpenActivities_Specified = true;  }
  bool __fastcall OpenActivities_Specified(int Index)
  {  return FOpenActivities_Specified;  } 
  QueryResult* __fastcall GetOpportunityLineItems(int Index)
  {  return FOpportunityLineItems;  }
  void __fastcall SetOpportunityLineItems(int Index, QueryResult* _prop_val)
  {  FOpportunityLineItems = _prop_val; FOpportunityLineItems_Specified = true;  }
  bool __fastcall OpportunityLineItems_Specified(int Index)
  {  return FOpportunityLineItems_Specified;  } 
  QueryResult* __fastcall GetPricebookEntries(int Index)
  {  return FPricebookEntries;  }
  void __fastcall SetPricebookEntries(int Index, QueryResult* _prop_val)
  {  FPricebookEntries = _prop_val; FPricebookEntries_Specified = true;  }
  bool __fastcall PricebookEntries_Specified(int Index)
  {  return FPricebookEntries_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  UnicodeString __fastcall GetProductCode(int Index)
  {  return FProductCode;  }
  void __fastcall SetProductCode(int Index, UnicodeString _prop_val)
  {  FProductCode = _prop_val; FProductCode_Specified = true;  }
  bool __fastcall ProductCode_Specified(int Index)
  {  return FProductCode_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  QueryResult* __fastcall GetTasks(int Index)
  {  return FTasks;  }
  void __fastcall SetTasks(int Index, QueryResult* _prop_val)
  {  FTasks = _prop_val; FTasks_Specified = true;  }
  bool __fastcall Tasks_Specified(int Index)
  {  return FTasks_Specified;  } 

public:
  __fastcall ~Product2();
__published:
  __property QueryResult* ActivityHistories = { index=(IS_OPTN|IS_NLBL), read=FActivityHistories, write=SetActivityHistories, stored = ActivityHistories_Specified };
  __property QueryResult*     Assets = { index=(IS_OPTN|IS_NLBL), read=FAssets, write=SetAssets, stored = Assets_Specified };
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property QueryResult*     Events = { index=(IS_OPTN|IS_NLBL), read=FEvents, write=SetEvents, stored = Events_Specified };
  __property UnicodeString     Family = { index=(IS_OPTN|IS_NLBL), read=FFamily, write=SetFamily, stored = Family_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property QueryResult*      Feeds = { index=(IS_OPTN|IS_NLBL), read=FFeeds, write=SetFeeds, stored = Feeds_Specified };
  __property bool         IsActive = { index=(IS_OPTN|IS_NLBL), read=FIsActive, write=SetIsActive, stored = IsActive_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property QueryResult*      Notes = { index=(IS_OPTN|IS_NLBL), read=FNotes, write=SetNotes, stored = Notes_Specified };
  __property QueryResult* NotesAndAttachments = { index=(IS_OPTN|IS_NLBL), read=FNotesAndAttachments, write=SetNotesAndAttachments, stored = NotesAndAttachments_Specified };
  __property QueryResult* OpenActivities = { index=(IS_OPTN|IS_NLBL), read=FOpenActivities, write=SetOpenActivities, stored = OpenActivities_Specified };
  __property QueryResult* OpportunityLineItems = { index=(IS_OPTN|IS_NLBL), read=FOpportunityLineItems, write=SetOpportunityLineItems, stored = OpportunityLineItems_Specified };
  __property QueryResult* PricebookEntries = { index=(IS_OPTN|IS_NLBL), read=FPricebookEntries, write=SetPricebookEntries, stored = PricebookEntries_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property UnicodeString ProductCode = { index=(IS_OPTN|IS_NLBL), read=FProductCode, write=SetProductCode, stored = ProductCode_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property QueryResult*      Tasks = { index=(IS_OPTN|IS_NLBL), read=FTasks, write=SetTasks, stored = Tasks_Specified };
};




// ************************************************************************ //
// XML       : Asset, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Asset : public sObject {
private:
  Account*        FAccount;
  bool            FAccount_Specified;
  ID              FAccountId;
  bool            FAccountId_Specified;
  QueryResult*    FActivityHistories;
  bool            FActivityHistories_Specified;
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  QueryResult*    FCases;
  bool            FCases_Specified;
  Contact*        FContact;
  bool            FContact_Specified;
  ID              FContactId;
  bool            FContactId_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  QueryResult*    FEvents;
  bool            FEvents_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  QueryResult*    FFeeds;
  bool            FFeeds_Specified;
  TXSDate*        FInstallDate;
  bool            FInstallDate_Specified;
  bool            FIsCompetitorProduct;
  bool            FIsCompetitorProduct_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  QueryResult*    FNotes;
  bool            FNotes_Specified;
  QueryResult*    FNotesAndAttachments;
  bool            FNotesAndAttachments_Specified;
  QueryResult*    FOpenActivities;
  bool            FOpenActivities_Specified;
  double          FPrice;
  bool            FPrice_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  Product2*       FProduct2;
  bool            FProduct2_Specified;
  ID              FProduct2Id;
  bool            FProduct2Id_Specified;
  TXSDate*        FPurchaseDate;
  bool            FPurchaseDate_Specified;
  double          FQuantity;
  bool            FQuantity_Specified;
  UnicodeString   FSerialNumber;
  bool            FSerialNumber_Specified;
  UnicodeString   FStatus;
  bool            FStatus_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  QueryResult*    FTasks;
  bool            FTasks_Specified;
  TXSDate*        FUsageEndDate;
  bool            FUsageEndDate_Specified;
  Account* __fastcall GetAccount(int Index)
  {  return FAccount;  }
  void __fastcall SetAccount(int Index, Account* _prop_val)
  {  FAccount = _prop_val; FAccount_Specified = true;  }
  bool __fastcall Account_Specified(int Index)
  {  return FAccount_Specified;  } 
  ID __fastcall GetAccountId(int Index)
  {  return FAccountId;  }
  void __fastcall SetAccountId(int Index, ID _prop_val)
  {  FAccountId = _prop_val; FAccountId_Specified = true;  }
  bool __fastcall AccountId_Specified(int Index)
  {  return FAccountId_Specified;  } 
  QueryResult* __fastcall GetActivityHistories(int Index)
  {  return FActivityHistories;  }
  void __fastcall SetActivityHistories(int Index, QueryResult* _prop_val)
  {  FActivityHistories = _prop_val; FActivityHistories_Specified = true;  }
  bool __fastcall ActivityHistories_Specified(int Index)
  {  return FActivityHistories_Specified;  } 
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  QueryResult* __fastcall GetCases(int Index)
  {  return FCases;  }
  void __fastcall SetCases(int Index, QueryResult* _prop_val)
  {  FCases = _prop_val; FCases_Specified = true;  }
  bool __fastcall Cases_Specified(int Index)
  {  return FCases_Specified;  } 
  Contact* __fastcall GetContact(int Index)
  {  return FContact;  }
  void __fastcall SetContact(int Index, Contact* _prop_val)
  {  FContact = _prop_val; FContact_Specified = true;  }
  bool __fastcall Contact_Specified(int Index)
  {  return FContact_Specified;  } 
  ID __fastcall GetContactId(int Index)
  {  return FContactId;  }
  void __fastcall SetContactId(int Index, ID _prop_val)
  {  FContactId = _prop_val; FContactId_Specified = true;  }
  bool __fastcall ContactId_Specified(int Index)
  {  return FContactId_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  QueryResult* __fastcall GetEvents(int Index)
  {  return FEvents;  }
  void __fastcall SetEvents(int Index, QueryResult* _prop_val)
  {  FEvents = _prop_val; FEvents_Specified = true;  }
  bool __fastcall Events_Specified(int Index)
  {  return FEvents_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  QueryResult* __fastcall GetFeeds(int Index)
  {  return FFeeds;  }
  void __fastcall SetFeeds(int Index, QueryResult* _prop_val)
  {  FFeeds = _prop_val; FFeeds_Specified = true;  }
  bool __fastcall Feeds_Specified(int Index)
  {  return FFeeds_Specified;  } 
  TXSDate* __fastcall GetInstallDate(int Index)
  {  return FInstallDate;  }
  void __fastcall SetInstallDate(int Index, TXSDate* _prop_val)
  {  FInstallDate = _prop_val; FInstallDate_Specified = true;  }
  bool __fastcall InstallDate_Specified(int Index)
  {  return FInstallDate_Specified;  } 
  bool __fastcall GetIsCompetitorProduct(int Index)
  {  return FIsCompetitorProduct;  }
  void __fastcall SetIsCompetitorProduct(int Index, bool _prop_val)
  {  FIsCompetitorProduct = _prop_val; FIsCompetitorProduct_Specified = true;  }
  bool __fastcall IsCompetitorProduct_Specified(int Index)
  {  return FIsCompetitorProduct_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  QueryResult* __fastcall GetNotes(int Index)
  {  return FNotes;  }
  void __fastcall SetNotes(int Index, QueryResult* _prop_val)
  {  FNotes = _prop_val; FNotes_Specified = true;  }
  bool __fastcall Notes_Specified(int Index)
  {  return FNotes_Specified;  } 
  QueryResult* __fastcall GetNotesAndAttachments(int Index)
  {  return FNotesAndAttachments;  }
  void __fastcall SetNotesAndAttachments(int Index, QueryResult* _prop_val)
  {  FNotesAndAttachments = _prop_val; FNotesAndAttachments_Specified = true;  }
  bool __fastcall NotesAndAttachments_Specified(int Index)
  {  return FNotesAndAttachments_Specified;  } 
  QueryResult* __fastcall GetOpenActivities(int Index)
  {  return FOpenActivities;  }
  void __fastcall SetOpenActivities(int Index, QueryResult* _prop_val)
  {  FOpenActivities = _prop_val; FOpenActivities_Specified = true;  }
  bool __fastcall OpenActivities_Specified(int Index)
  {  return FOpenActivities_Specified;  } 
  double __fastcall GetPrice(int Index)
  {  return FPrice;  }
  void __fastcall SetPrice(int Index, double _prop_val)
  {  FPrice = _prop_val; FPrice_Specified = true;  }
  bool __fastcall Price_Specified(int Index)
  {  return FPrice_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  Product2* __fastcall GetProduct2(int Index)
  {  return FProduct2;  }
  void __fastcall SetProduct2(int Index, Product2* _prop_val)
  {  FProduct2 = _prop_val; FProduct2_Specified = true;  }
  bool __fastcall Product2_Specified(int Index)
  {  return FProduct2_Specified;  } 
  ID __fastcall GetProduct2Id(int Index)
  {  return FProduct2Id;  }
  void __fastcall SetProduct2Id(int Index, ID _prop_val)
  {  FProduct2Id = _prop_val; FProduct2Id_Specified = true;  }
  bool __fastcall Product2Id_Specified(int Index)
  {  return FProduct2Id_Specified;  } 
  TXSDate* __fastcall GetPurchaseDate(int Index)
  {  return FPurchaseDate;  }
  void __fastcall SetPurchaseDate(int Index, TXSDate* _prop_val)
  {  FPurchaseDate = _prop_val; FPurchaseDate_Specified = true;  }
  bool __fastcall PurchaseDate_Specified(int Index)
  {  return FPurchaseDate_Specified;  } 
  double __fastcall GetQuantity(int Index)
  {  return FQuantity;  }
  void __fastcall SetQuantity(int Index, double _prop_val)
  {  FQuantity = _prop_val; FQuantity_Specified = true;  }
  bool __fastcall Quantity_Specified(int Index)
  {  return FQuantity_Specified;  } 
  UnicodeString __fastcall GetSerialNumber(int Index)
  {  return FSerialNumber;  }
  void __fastcall SetSerialNumber(int Index, UnicodeString _prop_val)
  {  FSerialNumber = _prop_val; FSerialNumber_Specified = true;  }
  bool __fastcall SerialNumber_Specified(int Index)
  {  return FSerialNumber_Specified;  } 
  UnicodeString __fastcall GetStatus(int Index)
  {  return FStatus;  }
  void __fastcall SetStatus(int Index, UnicodeString _prop_val)
  {  FStatus = _prop_val; FStatus_Specified = true;  }
  bool __fastcall Status_Specified(int Index)
  {  return FStatus_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  QueryResult* __fastcall GetTasks(int Index)
  {  return FTasks;  }
  void __fastcall SetTasks(int Index, QueryResult* _prop_val)
  {  FTasks = _prop_val; FTasks_Specified = true;  }
  bool __fastcall Tasks_Specified(int Index)
  {  return FTasks_Specified;  } 
  TXSDate* __fastcall GetUsageEndDate(int Index)
  {  return FUsageEndDate;  }
  void __fastcall SetUsageEndDate(int Index, TXSDate* _prop_val)
  {  FUsageEndDate = _prop_val; FUsageEndDate_Specified = true;  }
  bool __fastcall UsageEndDate_Specified(int Index)
  {  return FUsageEndDate_Specified;  } 

public:
  __fastcall ~Asset();
__published:
  __property Account*      Account = { index=(IS_OPTN|IS_NLBL), read=FAccount, write=SetAccount, stored = Account_Specified };
  __property ID          AccountId = { index=(IS_OPTN|IS_NLBL), read=FAccountId, write=SetAccountId, stored = AccountId_Specified };
  __property QueryResult* ActivityHistories = { index=(IS_OPTN|IS_NLBL), read=FActivityHistories, write=SetActivityHistories, stored = ActivityHistories_Specified };
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property QueryResult*      Cases = { index=(IS_OPTN|IS_NLBL), read=FCases, write=SetCases, stored = Cases_Specified };
  __property Contact*      Contact = { index=(IS_OPTN|IS_NLBL), read=FContact, write=SetContact, stored = Contact_Specified };
  __property ID          ContactId = { index=(IS_OPTN|IS_NLBL), read=FContactId, write=SetContactId, stored = ContactId_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property QueryResult*     Events = { index=(IS_OPTN|IS_NLBL), read=FEvents, write=SetEvents, stored = Events_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property QueryResult*      Feeds = { index=(IS_OPTN|IS_NLBL), read=FFeeds, write=SetFeeds, stored = Feeds_Specified };
  __property TXSDate*   InstallDate = { index=(IS_OPTN|IS_NLBL), read=FInstallDate, write=SetInstallDate, stored = InstallDate_Specified };
  __property bool       IsCompetitorProduct = { index=(IS_OPTN|IS_NLBL), read=FIsCompetitorProduct, write=SetIsCompetitorProduct, stored = IsCompetitorProduct_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property QueryResult*      Notes = { index=(IS_OPTN|IS_NLBL), read=FNotes, write=SetNotes, stored = Notes_Specified };
  __property QueryResult* NotesAndAttachments = { index=(IS_OPTN|IS_NLBL), read=FNotesAndAttachments, write=SetNotesAndAttachments, stored = NotesAndAttachments_Specified };
  __property QueryResult* OpenActivities = { index=(IS_OPTN|IS_NLBL), read=FOpenActivities, write=SetOpenActivities, stored = OpenActivities_Specified };
  __property double          Price = { index=(IS_OPTN|IS_NLBL), read=FPrice, write=SetPrice, stored = Price_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property Product2*    Product2 = { index=(IS_OPTN|IS_NLBL), read=FProduct2, write=SetProduct2, stored = Product2_Specified };
  __property ID         Product2Id = { index=(IS_OPTN|IS_NLBL), read=FProduct2Id, write=SetProduct2Id, stored = Product2Id_Specified };
  __property TXSDate*   PurchaseDate = { index=(IS_OPTN|IS_NLBL), read=FPurchaseDate, write=SetPurchaseDate, stored = PurchaseDate_Specified };
  __property double       Quantity = { index=(IS_OPTN|IS_NLBL), read=FQuantity, write=SetQuantity, stored = Quantity_Specified };
  __property UnicodeString SerialNumber = { index=(IS_OPTN|IS_NLBL), read=FSerialNumber, write=SetSerialNumber, stored = SerialNumber_Specified };
  __property UnicodeString     Status = { index=(IS_OPTN|IS_NLBL), read=FStatus, write=SetStatus, stored = Status_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property QueryResult*      Tasks = { index=(IS_OPTN|IS_NLBL), read=FTasks, write=SetTasks, stored = Tasks_Specified };
  __property TXSDate*   UsageEndDate = { index=(IS_OPTN|IS_NLBL), read=FUsageEndDate, write=SetUsageEndDate, stored = UsageEndDate_Specified };
};




// ************************************************************************ //
// XML       : Contract, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Contract : public sObject {
private:
  Account*        FAccount;
  bool            FAccount_Specified;
  ID              FAccountId;
  bool            FAccountId_Specified;
  User*           FActivatedBy;
  bool            FActivatedBy_Specified;
  ID              FActivatedById;
  bool            FActivatedById_Specified;
  TXSDateTime*    FActivatedDate;
  bool            FActivatedDate_Specified;
  QueryResult*    FActivityHistories;
  bool            FActivityHistories_Specified;
  QueryResult*    FApprovals;
  bool            FApprovals_Specified;
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  UnicodeString   FBillingCity;
  bool            FBillingCity_Specified;
  UnicodeString   FBillingCountry;
  bool            FBillingCountry_Specified;
  UnicodeString   FBillingPostalCode;
  bool            FBillingPostalCode_Specified;
  UnicodeString   FBillingState;
  bool            FBillingState_Specified;
  UnicodeString   FBillingStreet;
  bool            FBillingStreet_Specified;
  User*           FCompanySigned;
  bool            FCompanySigned_Specified;
  TXSDate*        FCompanySignedDate;
  bool            FCompanySignedDate_Specified;
  ID              FCompanySignedId;
  bool            FCompanySignedId_Specified;
  QueryResult*    FContractContactRoles;
  bool            FContractContactRoles_Specified;
  UnicodeString   FContractNumber;
  bool            FContractNumber_Specified;
  int             FContractTerm;
  bool            FContractTerm_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  Contact*        FCustomerSigned;
  bool            FCustomerSigned_Specified;
  TXSDate*        FCustomerSignedDate;
  bool            FCustomerSignedDate_Specified;
  ID              FCustomerSignedId;
  bool            FCustomerSignedId_Specified;
  UnicodeString   FCustomerSignedTitle;
  bool            FCustomerSignedTitle_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  TXSDate*        FEndDate;
  bool            FEndDate_Specified;
  QueryResult*    FEvents;
  bool            FEvents_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  QueryResult*    FFeeds;
  bool            FFeeds_Specified;
  QueryResult*    FHistories;
  bool            FHistories_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  TXSDate*        FLastActivityDate;
  bool            FLastActivityDate_Specified;
  TXSDateTime*    FLastApprovedDate;
  bool            FLastApprovedDate_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  QueryResult*    FNotes;
  bool            FNotes_Specified;
  QueryResult*    FNotesAndAttachments;
  bool            FNotesAndAttachments_Specified;
  QueryResult*    FOpenActivities;
  bool            FOpenActivities_Specified;
  User*           FOwner;
  bool            FOwner_Specified;
  UnicodeString   FOwnerExpirationNotice;
  bool            FOwnerExpirationNotice_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  UnicodeString   FShippingCity;
  bool            FShippingCity_Specified;
  UnicodeString   FShippingCountry;
  bool            FShippingCountry_Specified;
  UnicodeString   FShippingPostalCode;
  bool            FShippingPostalCode_Specified;
  UnicodeString   FShippingState;
  bool            FShippingState_Specified;
  UnicodeString   FShippingStreet;
  bool            FShippingStreet_Specified;
  UnicodeString   FSpecialTerms;
  bool            FSpecialTerms_Specified;
  TXSDate*        FStartDate;
  bool            FStartDate_Specified;
  UnicodeString   FStatus;
  bool            FStatus_Specified;
  UnicodeString   FStatusCode;
  bool            FStatusCode_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  QueryResult*    FTasks;
  bool            FTasks_Specified;
  Account* __fastcall GetAccount(int Index)
  {  return FAccount;  }
  void __fastcall SetAccount(int Index, Account* _prop_val)
  {  FAccount = _prop_val; FAccount_Specified = true;  }
  bool __fastcall Account_Specified(int Index)
  {  return FAccount_Specified;  } 
  ID __fastcall GetAccountId(int Index)
  {  return FAccountId;  }
  void __fastcall SetAccountId(int Index, ID _prop_val)
  {  FAccountId = _prop_val; FAccountId_Specified = true;  }
  bool __fastcall AccountId_Specified(int Index)
  {  return FAccountId_Specified;  } 
  User* __fastcall GetActivatedBy(int Index)
  {  return FActivatedBy;  }
  void __fastcall SetActivatedBy(int Index, User* _prop_val)
  {  FActivatedBy = _prop_val; FActivatedBy_Specified = true;  }
  bool __fastcall ActivatedBy_Specified(int Index)
  {  return FActivatedBy_Specified;  } 
  ID __fastcall GetActivatedById(int Index)
  {  return FActivatedById;  }
  void __fastcall SetActivatedById(int Index, ID _prop_val)
  {  FActivatedById = _prop_val; FActivatedById_Specified = true;  }
  bool __fastcall ActivatedById_Specified(int Index)
  {  return FActivatedById_Specified;  } 
  TXSDateTime* __fastcall GetActivatedDate(int Index)
  {  return FActivatedDate;  }
  void __fastcall SetActivatedDate(int Index, TXSDateTime* _prop_val)
  {  FActivatedDate = _prop_val; FActivatedDate_Specified = true;  }
  bool __fastcall ActivatedDate_Specified(int Index)
  {  return FActivatedDate_Specified;  } 
  QueryResult* __fastcall GetActivityHistories(int Index)
  {  return FActivityHistories;  }
  void __fastcall SetActivityHistories(int Index, QueryResult* _prop_val)
  {  FActivityHistories = _prop_val; FActivityHistories_Specified = true;  }
  bool __fastcall ActivityHistories_Specified(int Index)
  {  return FActivityHistories_Specified;  } 
  QueryResult* __fastcall GetApprovals(int Index)
  {  return FApprovals;  }
  void __fastcall SetApprovals(int Index, QueryResult* _prop_val)
  {  FApprovals = _prop_val; FApprovals_Specified = true;  }
  bool __fastcall Approvals_Specified(int Index)
  {  return FApprovals_Specified;  } 
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  UnicodeString __fastcall GetBillingCity(int Index)
  {  return FBillingCity;  }
  void __fastcall SetBillingCity(int Index, UnicodeString _prop_val)
  {  FBillingCity = _prop_val; FBillingCity_Specified = true;  }
  bool __fastcall BillingCity_Specified(int Index)
  {  return FBillingCity_Specified;  } 
  UnicodeString __fastcall GetBillingCountry(int Index)
  {  return FBillingCountry;  }
  void __fastcall SetBillingCountry(int Index, UnicodeString _prop_val)
  {  FBillingCountry = _prop_val; FBillingCountry_Specified = true;  }
  bool __fastcall BillingCountry_Specified(int Index)
  {  return FBillingCountry_Specified;  } 
  UnicodeString __fastcall GetBillingPostalCode(int Index)
  {  return FBillingPostalCode;  }
  void __fastcall SetBillingPostalCode(int Index, UnicodeString _prop_val)
  {  FBillingPostalCode = _prop_val; FBillingPostalCode_Specified = true;  }
  bool __fastcall BillingPostalCode_Specified(int Index)
  {  return FBillingPostalCode_Specified;  } 
  UnicodeString __fastcall GetBillingState(int Index)
  {  return FBillingState;  }
  void __fastcall SetBillingState(int Index, UnicodeString _prop_val)
  {  FBillingState = _prop_val; FBillingState_Specified = true;  }
  bool __fastcall BillingState_Specified(int Index)
  {  return FBillingState_Specified;  } 
  UnicodeString __fastcall GetBillingStreet(int Index)
  {  return FBillingStreet;  }
  void __fastcall SetBillingStreet(int Index, UnicodeString _prop_val)
  {  FBillingStreet = _prop_val; FBillingStreet_Specified = true;  }
  bool __fastcall BillingStreet_Specified(int Index)
  {  return FBillingStreet_Specified;  } 
  User* __fastcall GetCompanySigned(int Index)
  {  return FCompanySigned;  }
  void __fastcall SetCompanySigned(int Index, User* _prop_val)
  {  FCompanySigned = _prop_val; FCompanySigned_Specified = true;  }
  bool __fastcall CompanySigned_Specified(int Index)
  {  return FCompanySigned_Specified;  } 
  TXSDate* __fastcall GetCompanySignedDate(int Index)
  {  return FCompanySignedDate;  }
  void __fastcall SetCompanySignedDate(int Index, TXSDate* _prop_val)
  {  FCompanySignedDate = _prop_val; FCompanySignedDate_Specified = true;  }
  bool __fastcall CompanySignedDate_Specified(int Index)
  {  return FCompanySignedDate_Specified;  } 
  ID __fastcall GetCompanySignedId(int Index)
  {  return FCompanySignedId;  }
  void __fastcall SetCompanySignedId(int Index, ID _prop_val)
  {  FCompanySignedId = _prop_val; FCompanySignedId_Specified = true;  }
  bool __fastcall CompanySignedId_Specified(int Index)
  {  return FCompanySignedId_Specified;  } 
  QueryResult* __fastcall GetContractContactRoles(int Index)
  {  return FContractContactRoles;  }
  void __fastcall SetContractContactRoles(int Index, QueryResult* _prop_val)
  {  FContractContactRoles = _prop_val; FContractContactRoles_Specified = true;  }
  bool __fastcall ContractContactRoles_Specified(int Index)
  {  return FContractContactRoles_Specified;  } 
  UnicodeString __fastcall GetContractNumber(int Index)
  {  return FContractNumber;  }
  void __fastcall SetContractNumber(int Index, UnicodeString _prop_val)
  {  FContractNumber = _prop_val; FContractNumber_Specified = true;  }
  bool __fastcall ContractNumber_Specified(int Index)
  {  return FContractNumber_Specified;  } 
  int __fastcall GetContractTerm(int Index)
  {  return FContractTerm;  }
  void __fastcall SetContractTerm(int Index, int _prop_val)
  {  FContractTerm = _prop_val; FContractTerm_Specified = true;  }
  bool __fastcall ContractTerm_Specified(int Index)
  {  return FContractTerm_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  Contact* __fastcall GetCustomerSigned(int Index)
  {  return FCustomerSigned;  }
  void __fastcall SetCustomerSigned(int Index, Contact* _prop_val)
  {  FCustomerSigned = _prop_val; FCustomerSigned_Specified = true;  }
  bool __fastcall CustomerSigned_Specified(int Index)
  {  return FCustomerSigned_Specified;  } 
  TXSDate* __fastcall GetCustomerSignedDate(int Index)
  {  return FCustomerSignedDate;  }
  void __fastcall SetCustomerSignedDate(int Index, TXSDate* _prop_val)
  {  FCustomerSignedDate = _prop_val; FCustomerSignedDate_Specified = true;  }
  bool __fastcall CustomerSignedDate_Specified(int Index)
  {  return FCustomerSignedDate_Specified;  } 
  ID __fastcall GetCustomerSignedId(int Index)
  {  return FCustomerSignedId;  }
  void __fastcall SetCustomerSignedId(int Index, ID _prop_val)
  {  FCustomerSignedId = _prop_val; FCustomerSignedId_Specified = true;  }
  bool __fastcall CustomerSignedId_Specified(int Index)
  {  return FCustomerSignedId_Specified;  } 
  UnicodeString __fastcall GetCustomerSignedTitle(int Index)
  {  return FCustomerSignedTitle;  }
  void __fastcall SetCustomerSignedTitle(int Index, UnicodeString _prop_val)
  {  FCustomerSignedTitle = _prop_val; FCustomerSignedTitle_Specified = true;  }
  bool __fastcall CustomerSignedTitle_Specified(int Index)
  {  return FCustomerSignedTitle_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  TXSDate* __fastcall GetEndDate(int Index)
  {  return FEndDate;  }
  void __fastcall SetEndDate(int Index, TXSDate* _prop_val)
  {  FEndDate = _prop_val; FEndDate_Specified = true;  }
  bool __fastcall EndDate_Specified(int Index)
  {  return FEndDate_Specified;  } 
  QueryResult* __fastcall GetEvents(int Index)
  {  return FEvents;  }
  void __fastcall SetEvents(int Index, QueryResult* _prop_val)
  {  FEvents = _prop_val; FEvents_Specified = true;  }
  bool __fastcall Events_Specified(int Index)
  {  return FEvents_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  QueryResult* __fastcall GetFeeds(int Index)
  {  return FFeeds;  }
  void __fastcall SetFeeds(int Index, QueryResult* _prop_val)
  {  FFeeds = _prop_val; FFeeds_Specified = true;  }
  bool __fastcall Feeds_Specified(int Index)
  {  return FFeeds_Specified;  } 
  QueryResult* __fastcall GetHistories(int Index)
  {  return FHistories;  }
  void __fastcall SetHistories(int Index, QueryResult* _prop_val)
  {  FHistories = _prop_val; FHistories_Specified = true;  }
  bool __fastcall Histories_Specified(int Index)
  {  return FHistories_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  TXSDate* __fastcall GetLastActivityDate(int Index)
  {  return FLastActivityDate;  }
  void __fastcall SetLastActivityDate(int Index, TXSDate* _prop_val)
  {  FLastActivityDate = _prop_val; FLastActivityDate_Specified = true;  }
  bool __fastcall LastActivityDate_Specified(int Index)
  {  return FLastActivityDate_Specified;  } 
  TXSDateTime* __fastcall GetLastApprovedDate(int Index)
  {  return FLastApprovedDate;  }
  void __fastcall SetLastApprovedDate(int Index, TXSDateTime* _prop_val)
  {  FLastApprovedDate = _prop_val; FLastApprovedDate_Specified = true;  }
  bool __fastcall LastApprovedDate_Specified(int Index)
  {  return FLastApprovedDate_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  QueryResult* __fastcall GetNotes(int Index)
  {  return FNotes;  }
  void __fastcall SetNotes(int Index, QueryResult* _prop_val)
  {  FNotes = _prop_val; FNotes_Specified = true;  }
  bool __fastcall Notes_Specified(int Index)
  {  return FNotes_Specified;  } 
  QueryResult* __fastcall GetNotesAndAttachments(int Index)
  {  return FNotesAndAttachments;  }
  void __fastcall SetNotesAndAttachments(int Index, QueryResult* _prop_val)
  {  FNotesAndAttachments = _prop_val; FNotesAndAttachments_Specified = true;  }
  bool __fastcall NotesAndAttachments_Specified(int Index)
  {  return FNotesAndAttachments_Specified;  } 
  QueryResult* __fastcall GetOpenActivities(int Index)
  {  return FOpenActivities;  }
  void __fastcall SetOpenActivities(int Index, QueryResult* _prop_val)
  {  FOpenActivities = _prop_val; FOpenActivities_Specified = true;  }
  bool __fastcall OpenActivities_Specified(int Index)
  {  return FOpenActivities_Specified;  } 
  User* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, User* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  UnicodeString __fastcall GetOwnerExpirationNotice(int Index)
  {  return FOwnerExpirationNotice;  }
  void __fastcall SetOwnerExpirationNotice(int Index, UnicodeString _prop_val)
  {  FOwnerExpirationNotice = _prop_val; FOwnerExpirationNotice_Specified = true;  }
  bool __fastcall OwnerExpirationNotice_Specified(int Index)
  {  return FOwnerExpirationNotice_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  UnicodeString __fastcall GetShippingCity(int Index)
  {  return FShippingCity;  }
  void __fastcall SetShippingCity(int Index, UnicodeString _prop_val)
  {  FShippingCity = _prop_val; FShippingCity_Specified = true;  }
  bool __fastcall ShippingCity_Specified(int Index)
  {  return FShippingCity_Specified;  } 
  UnicodeString __fastcall GetShippingCountry(int Index)
  {  return FShippingCountry;  }
  void __fastcall SetShippingCountry(int Index, UnicodeString _prop_val)
  {  FShippingCountry = _prop_val; FShippingCountry_Specified = true;  }
  bool __fastcall ShippingCountry_Specified(int Index)
  {  return FShippingCountry_Specified;  } 
  UnicodeString __fastcall GetShippingPostalCode(int Index)
  {  return FShippingPostalCode;  }
  void __fastcall SetShippingPostalCode(int Index, UnicodeString _prop_val)
  {  FShippingPostalCode = _prop_val; FShippingPostalCode_Specified = true;  }
  bool __fastcall ShippingPostalCode_Specified(int Index)
  {  return FShippingPostalCode_Specified;  } 
  UnicodeString __fastcall GetShippingState(int Index)
  {  return FShippingState;  }
  void __fastcall SetShippingState(int Index, UnicodeString _prop_val)
  {  FShippingState = _prop_val; FShippingState_Specified = true;  }
  bool __fastcall ShippingState_Specified(int Index)
  {  return FShippingState_Specified;  } 
  UnicodeString __fastcall GetShippingStreet(int Index)
  {  return FShippingStreet;  }
  void __fastcall SetShippingStreet(int Index, UnicodeString _prop_val)
  {  FShippingStreet = _prop_val; FShippingStreet_Specified = true;  }
  bool __fastcall ShippingStreet_Specified(int Index)
  {  return FShippingStreet_Specified;  } 
  UnicodeString __fastcall GetSpecialTerms(int Index)
  {  return FSpecialTerms;  }
  void __fastcall SetSpecialTerms(int Index, UnicodeString _prop_val)
  {  FSpecialTerms = _prop_val; FSpecialTerms_Specified = true;  }
  bool __fastcall SpecialTerms_Specified(int Index)
  {  return FSpecialTerms_Specified;  } 
  TXSDate* __fastcall GetStartDate(int Index)
  {  return FStartDate;  }
  void __fastcall SetStartDate(int Index, TXSDate* _prop_val)
  {  FStartDate = _prop_val; FStartDate_Specified = true;  }
  bool __fastcall StartDate_Specified(int Index)
  {  return FStartDate_Specified;  } 
  UnicodeString __fastcall GetStatus(int Index)
  {  return FStatus;  }
  void __fastcall SetStatus(int Index, UnicodeString _prop_val)
  {  FStatus = _prop_val; FStatus_Specified = true;  }
  bool __fastcall Status_Specified(int Index)
  {  return FStatus_Specified;  } 
  UnicodeString __fastcall GetStatusCode(int Index)
  {  return FStatusCode;  }
  void __fastcall SetStatusCode(int Index, UnicodeString _prop_val)
  {  FStatusCode = _prop_val; FStatusCode_Specified = true;  }
  bool __fastcall StatusCode_Specified(int Index)
  {  return FStatusCode_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  QueryResult* __fastcall GetTasks(int Index)
  {  return FTasks;  }
  void __fastcall SetTasks(int Index, QueryResult* _prop_val)
  {  FTasks = _prop_val; FTasks_Specified = true;  }
  bool __fastcall Tasks_Specified(int Index)
  {  return FTasks_Specified;  } 

public:
  __fastcall ~Contract();
__published:
  __property Account*      Account = { index=(IS_OPTN|IS_NLBL), read=FAccount, write=SetAccount, stored = Account_Specified };
  __property ID          AccountId = { index=(IS_OPTN|IS_NLBL), read=FAccountId, write=SetAccountId, stored = AccountId_Specified };
  __property User*      ActivatedBy = { index=(IS_OPTN|IS_NLBL), read=FActivatedBy, write=SetActivatedBy, stored = ActivatedBy_Specified };
  __property ID         ActivatedById = { index=(IS_OPTN|IS_NLBL), read=FActivatedById, write=SetActivatedById, stored = ActivatedById_Specified };
  __property TXSDateTime* ActivatedDate = { index=(IS_OPTN|IS_NLBL), read=FActivatedDate, write=SetActivatedDate, stored = ActivatedDate_Specified };
  __property QueryResult* ActivityHistories = { index=(IS_OPTN|IS_NLBL), read=FActivityHistories, write=SetActivityHistories, stored = ActivityHistories_Specified };
  __property QueryResult*  Approvals = { index=(IS_OPTN|IS_NLBL), read=FApprovals, write=SetApprovals, stored = Approvals_Specified };
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property UnicodeString BillingCity = { index=(IS_OPTN|IS_NLBL), read=FBillingCity, write=SetBillingCity, stored = BillingCity_Specified };
  __property UnicodeString BillingCountry = { index=(IS_OPTN|IS_NLBL), read=FBillingCountry, write=SetBillingCountry, stored = BillingCountry_Specified };
  __property UnicodeString BillingPostalCode = { index=(IS_OPTN|IS_NLBL), read=FBillingPostalCode, write=SetBillingPostalCode, stored = BillingPostalCode_Specified };
  __property UnicodeString BillingState = { index=(IS_OPTN|IS_NLBL), read=FBillingState, write=SetBillingState, stored = BillingState_Specified };
  __property UnicodeString BillingStreet = { index=(IS_OPTN|IS_NLBL), read=FBillingStreet, write=SetBillingStreet, stored = BillingStreet_Specified };
  __property User*      CompanySigned = { index=(IS_OPTN|IS_NLBL), read=FCompanySigned, write=SetCompanySigned, stored = CompanySigned_Specified };
  __property TXSDate*   CompanySignedDate = { index=(IS_OPTN|IS_NLBL), read=FCompanySignedDate, write=SetCompanySignedDate, stored = CompanySignedDate_Specified };
  __property ID         CompanySignedId = { index=(IS_OPTN|IS_NLBL), read=FCompanySignedId, write=SetCompanySignedId, stored = CompanySignedId_Specified };
  __property QueryResult* ContractContactRoles = { index=(IS_OPTN|IS_NLBL), read=FContractContactRoles, write=SetContractContactRoles, stored = ContractContactRoles_Specified };
  __property UnicodeString ContractNumber = { index=(IS_OPTN|IS_NLBL), read=FContractNumber, write=SetContractNumber, stored = ContractNumber_Specified };
  __property int        ContractTerm = { index=(IS_OPTN|IS_NLBL), read=FContractTerm, write=SetContractTerm, stored = ContractTerm_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property Contact*   CustomerSigned = { index=(IS_OPTN|IS_NLBL), read=FCustomerSigned, write=SetCustomerSigned, stored = CustomerSigned_Specified };
  __property TXSDate*   CustomerSignedDate = { index=(IS_OPTN|IS_NLBL), read=FCustomerSignedDate, write=SetCustomerSignedDate, stored = CustomerSignedDate_Specified };
  __property ID         CustomerSignedId = { index=(IS_OPTN|IS_NLBL), read=FCustomerSignedId, write=SetCustomerSignedId, stored = CustomerSignedId_Specified };
  __property UnicodeString CustomerSignedTitle = { index=(IS_OPTN|IS_NLBL), read=FCustomerSignedTitle, write=SetCustomerSignedTitle, stored = CustomerSignedTitle_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property TXSDate*      EndDate = { index=(IS_OPTN|IS_NLBL), read=FEndDate, write=SetEndDate, stored = EndDate_Specified };
  __property QueryResult*     Events = { index=(IS_OPTN|IS_NLBL), read=FEvents, write=SetEvents, stored = Events_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property QueryResult*      Feeds = { index=(IS_OPTN|IS_NLBL), read=FFeeds, write=SetFeeds, stored = Feeds_Specified };
  __property QueryResult*  Histories = { index=(IS_OPTN|IS_NLBL), read=FHistories, write=SetHistories, stored = Histories_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property TXSDate*   LastActivityDate = { index=(IS_OPTN|IS_NLBL), read=FLastActivityDate, write=SetLastActivityDate, stored = LastActivityDate_Specified };
  __property TXSDateTime* LastApprovedDate = { index=(IS_OPTN|IS_NLBL), read=FLastApprovedDate, write=SetLastApprovedDate, stored = LastApprovedDate_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property QueryResult*      Notes = { index=(IS_OPTN|IS_NLBL), read=FNotes, write=SetNotes, stored = Notes_Specified };
  __property QueryResult* NotesAndAttachments = { index=(IS_OPTN|IS_NLBL), read=FNotesAndAttachments, write=SetNotesAndAttachments, stored = NotesAndAttachments_Specified };
  __property QueryResult* OpenActivities = { index=(IS_OPTN|IS_NLBL), read=FOpenActivities, write=SetOpenActivities, stored = OpenActivities_Specified };
  __property User*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property UnicodeString OwnerExpirationNotice = { index=(IS_OPTN|IS_NLBL), read=FOwnerExpirationNotice, write=SetOwnerExpirationNotice, stored = OwnerExpirationNotice_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property UnicodeString ShippingCity = { index=(IS_OPTN|IS_NLBL), read=FShippingCity, write=SetShippingCity, stored = ShippingCity_Specified };
  __property UnicodeString ShippingCountry = { index=(IS_OPTN|IS_NLBL), read=FShippingCountry, write=SetShippingCountry, stored = ShippingCountry_Specified };
  __property UnicodeString ShippingPostalCode = { index=(IS_OPTN|IS_NLBL), read=FShippingPostalCode, write=SetShippingPostalCode, stored = ShippingPostalCode_Specified };
  __property UnicodeString ShippingState = { index=(IS_OPTN|IS_NLBL), read=FShippingState, write=SetShippingState, stored = ShippingState_Specified };
  __property UnicodeString ShippingStreet = { index=(IS_OPTN|IS_NLBL), read=FShippingStreet, write=SetShippingStreet, stored = ShippingStreet_Specified };
  __property UnicodeString SpecialTerms = { index=(IS_OPTN|IS_NLBL), read=FSpecialTerms, write=SetSpecialTerms, stored = SpecialTerms_Specified };
  __property TXSDate*    StartDate = { index=(IS_OPTN|IS_NLBL), read=FStartDate, write=SetStartDate, stored = StartDate_Specified };
  __property UnicodeString     Status = { index=(IS_OPTN|IS_NLBL), read=FStatus, write=SetStatus, stored = Status_Specified };
  __property UnicodeString StatusCode = { index=(IS_OPTN|IS_NLBL), read=FStatusCode, write=SetStatusCode, stored = StatusCode_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property QueryResult*      Tasks = { index=(IS_OPTN|IS_NLBL), read=FTasks, write=SetTasks, stored = Tasks_Specified };
};




// ************************************************************************ //
// XML       : Approval, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Approval : public sObject {
private:
  UnicodeString   FApproveComment;
  bool            FApproveComment_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  User*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  Contract*       FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  UnicodeString   FRequestComment;
  bool            FRequestComment_Specified;
  UnicodeString   FStatus;
  bool            FStatus_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString __fastcall GetApproveComment(int Index)
  {  return FApproveComment;  }
  void __fastcall SetApproveComment(int Index, UnicodeString _prop_val)
  {  FApproveComment = _prop_val; FApproveComment_Specified = true;  }
  bool __fastcall ApproveComment_Specified(int Index)
  {  return FApproveComment_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  User* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, User* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  Contract* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Contract* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  UnicodeString __fastcall GetRequestComment(int Index)
  {  return FRequestComment;  }
  void __fastcall SetRequestComment(int Index, UnicodeString _prop_val)
  {  FRequestComment = _prop_val; FRequestComment_Specified = true;  }
  bool __fastcall RequestComment_Specified(int Index)
  {  return FRequestComment_Specified;  } 
  UnicodeString __fastcall GetStatus(int Index)
  {  return FStatus;  }
  void __fastcall SetStatus(int Index, UnicodeString _prop_val)
  {  FStatus = _prop_val; FStatus_Specified = true;  }
  bool __fastcall Status_Specified(int Index)
  {  return FStatus_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~Approval();
__published:
  __property UnicodeString ApproveComment = { index=(IS_OPTN|IS_NLBL), read=FApproveComment, write=SetApproveComment, stored = ApproveComment_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property User*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property Contract*      Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property UnicodeString RequestComment = { index=(IS_OPTN|IS_NLBL), read=FRequestComment, write=SetRequestComment, stored = RequestComment_Specified };
  __property UnicodeString     Status = { index=(IS_OPTN|IS_NLBL), read=FStatus, write=SetStatus, stored = Status_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : ApexTrigger, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ApexTrigger : public sObject {
private:
  double          FApiVersion;
  bool            FApiVersion_Specified;
  UnicodeString   FBody;
  bool            FBody_Specified;
  double          FBodyCrc;
  bool            FBodyCrc_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsValid;
  bool            FIsValid_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLengthWithoutComments;
  bool            FLengthWithoutComments_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  UnicodeString   FNamespacePrefix;
  bool            FNamespacePrefix_Specified;
  UnicodeString   FStatus;
  bool            FStatus_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTableEnumOrId;
  bool            FTableEnumOrId_Specified;
  bool            FUsageAfterDelete;
  bool            FUsageAfterDelete_Specified;
  bool            FUsageAfterInsert;
  bool            FUsageAfterInsert_Specified;
  bool            FUsageAfterUndelete;
  bool            FUsageAfterUndelete_Specified;
  bool            FUsageAfterUpdate;
  bool            FUsageAfterUpdate_Specified;
  bool            FUsageBeforeDelete;
  bool            FUsageBeforeDelete_Specified;
  bool            FUsageBeforeInsert;
  bool            FUsageBeforeInsert_Specified;
  bool            FUsageBeforeUpdate;
  bool            FUsageBeforeUpdate_Specified;
  bool            FUsageIsBulk;
  bool            FUsageIsBulk_Specified;
  double __fastcall GetApiVersion(int Index)
  {  return FApiVersion;  }
  void __fastcall SetApiVersion(int Index, double _prop_val)
  {  FApiVersion = _prop_val; FApiVersion_Specified = true;  }
  bool __fastcall ApiVersion_Specified(int Index)
  {  return FApiVersion_Specified;  } 
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  double __fastcall GetBodyCrc(int Index)
  {  return FBodyCrc;  }
  void __fastcall SetBodyCrc(int Index, double _prop_val)
  {  FBodyCrc = _prop_val; FBodyCrc_Specified = true;  }
  bool __fastcall BodyCrc_Specified(int Index)
  {  return FBodyCrc_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsValid(int Index)
  {  return FIsValid;  }
  void __fastcall SetIsValid(int Index, bool _prop_val)
  {  FIsValid = _prop_val; FIsValid_Specified = true;  }
  bool __fastcall IsValid_Specified(int Index)
  {  return FIsValid_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLengthWithoutComments(int Index)
  {  return FLengthWithoutComments;  }
  void __fastcall SetLengthWithoutComments(int Index, int _prop_val)
  {  FLengthWithoutComments = _prop_val; FLengthWithoutComments_Specified = true;  }
  bool __fastcall LengthWithoutComments_Specified(int Index)
  {  return FLengthWithoutComments_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  UnicodeString __fastcall GetNamespacePrefix(int Index)
  {  return FNamespacePrefix;  }
  void __fastcall SetNamespacePrefix(int Index, UnicodeString _prop_val)
  {  FNamespacePrefix = _prop_val; FNamespacePrefix_Specified = true;  }
  bool __fastcall NamespacePrefix_Specified(int Index)
  {  return FNamespacePrefix_Specified;  } 
  UnicodeString __fastcall GetStatus(int Index)
  {  return FStatus;  }
  void __fastcall SetStatus(int Index, UnicodeString _prop_val)
  {  FStatus = _prop_val; FStatus_Specified = true;  }
  bool __fastcall Status_Specified(int Index)
  {  return FStatus_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTableEnumOrId(int Index)
  {  return FTableEnumOrId;  }
  void __fastcall SetTableEnumOrId(int Index, UnicodeString _prop_val)
  {  FTableEnumOrId = _prop_val; FTableEnumOrId_Specified = true;  }
  bool __fastcall TableEnumOrId_Specified(int Index)
  {  return FTableEnumOrId_Specified;  } 
  bool __fastcall GetUsageAfterDelete(int Index)
  {  return FUsageAfterDelete;  }
  void __fastcall SetUsageAfterDelete(int Index, bool _prop_val)
  {  FUsageAfterDelete = _prop_val; FUsageAfterDelete_Specified = true;  }
  bool __fastcall UsageAfterDelete_Specified(int Index)
  {  return FUsageAfterDelete_Specified;  } 
  bool __fastcall GetUsageAfterInsert(int Index)
  {  return FUsageAfterInsert;  }
  void __fastcall SetUsageAfterInsert(int Index, bool _prop_val)
  {  FUsageAfterInsert = _prop_val; FUsageAfterInsert_Specified = true;  }
  bool __fastcall UsageAfterInsert_Specified(int Index)
  {  return FUsageAfterInsert_Specified;  } 
  bool __fastcall GetUsageAfterUndelete(int Index)
  {  return FUsageAfterUndelete;  }
  void __fastcall SetUsageAfterUndelete(int Index, bool _prop_val)
  {  FUsageAfterUndelete = _prop_val; FUsageAfterUndelete_Specified = true;  }
  bool __fastcall UsageAfterUndelete_Specified(int Index)
  {  return FUsageAfterUndelete_Specified;  } 
  bool __fastcall GetUsageAfterUpdate(int Index)
  {  return FUsageAfterUpdate;  }
  void __fastcall SetUsageAfterUpdate(int Index, bool _prop_val)
  {  FUsageAfterUpdate = _prop_val; FUsageAfterUpdate_Specified = true;  }
  bool __fastcall UsageAfterUpdate_Specified(int Index)
  {  return FUsageAfterUpdate_Specified;  } 
  bool __fastcall GetUsageBeforeDelete(int Index)
  {  return FUsageBeforeDelete;  }
  void __fastcall SetUsageBeforeDelete(int Index, bool _prop_val)
  {  FUsageBeforeDelete = _prop_val; FUsageBeforeDelete_Specified = true;  }
  bool __fastcall UsageBeforeDelete_Specified(int Index)
  {  return FUsageBeforeDelete_Specified;  } 
  bool __fastcall GetUsageBeforeInsert(int Index)
  {  return FUsageBeforeInsert;  }
  void __fastcall SetUsageBeforeInsert(int Index, bool _prop_val)
  {  FUsageBeforeInsert = _prop_val; FUsageBeforeInsert_Specified = true;  }
  bool __fastcall UsageBeforeInsert_Specified(int Index)
  {  return FUsageBeforeInsert_Specified;  } 
  bool __fastcall GetUsageBeforeUpdate(int Index)
  {  return FUsageBeforeUpdate;  }
  void __fastcall SetUsageBeforeUpdate(int Index, bool _prop_val)
  {  FUsageBeforeUpdate = _prop_val; FUsageBeforeUpdate_Specified = true;  }
  bool __fastcall UsageBeforeUpdate_Specified(int Index)
  {  return FUsageBeforeUpdate_Specified;  } 
  bool __fastcall GetUsageIsBulk(int Index)
  {  return FUsageIsBulk;  }
  void __fastcall SetUsageIsBulk(int Index, bool _prop_val)
  {  FUsageIsBulk = _prop_val; FUsageIsBulk_Specified = true;  }
  bool __fastcall UsageIsBulk_Specified(int Index)
  {  return FUsageIsBulk_Specified;  } 

public:
  __fastcall ~ApexTrigger();
__published:
  __property double     ApiVersion = { index=(IS_OPTN|IS_NLBL), read=FApiVersion, write=SetApiVersion, stored = ApiVersion_Specified };
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property double        BodyCrc = { index=(IS_OPTN|IS_NLBL), read=FBodyCrc, write=SetBodyCrc, stored = BodyCrc_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool          IsValid = { index=(IS_OPTN|IS_NLBL), read=FIsValid, write=SetIsValid, stored = IsValid_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int        LengthWithoutComments = { index=(IS_OPTN|IS_NLBL), read=FLengthWithoutComments, write=SetLengthWithoutComments, stored = LengthWithoutComments_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property UnicodeString NamespacePrefix = { index=(IS_OPTN|IS_NLBL), read=FNamespacePrefix, write=SetNamespacePrefix, stored = NamespacePrefix_Specified };
  __property UnicodeString     Status = { index=(IS_OPTN|IS_NLBL), read=FStatus, write=SetStatus, stored = Status_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString TableEnumOrId = { index=(IS_OPTN|IS_NLBL), read=FTableEnumOrId, write=SetTableEnumOrId, stored = TableEnumOrId_Specified };
  __property bool       UsageAfterDelete = { index=(IS_OPTN|IS_NLBL), read=FUsageAfterDelete, write=SetUsageAfterDelete, stored = UsageAfterDelete_Specified };
  __property bool       UsageAfterInsert = { index=(IS_OPTN|IS_NLBL), read=FUsageAfterInsert, write=SetUsageAfterInsert, stored = UsageAfterInsert_Specified };
  __property bool       UsageAfterUndelete = { index=(IS_OPTN|IS_NLBL), read=FUsageAfterUndelete, write=SetUsageAfterUndelete, stored = UsageAfterUndelete_Specified };
  __property bool       UsageAfterUpdate = { index=(IS_OPTN|IS_NLBL), read=FUsageAfterUpdate, write=SetUsageAfterUpdate, stored = UsageAfterUpdate_Specified };
  __property bool       UsageBeforeDelete = { index=(IS_OPTN|IS_NLBL), read=FUsageBeforeDelete, write=SetUsageBeforeDelete, stored = UsageBeforeDelete_Specified };
  __property bool       UsageBeforeInsert = { index=(IS_OPTN|IS_NLBL), read=FUsageBeforeInsert, write=SetUsageBeforeInsert, stored = UsageBeforeInsert_Specified };
  __property bool       UsageBeforeUpdate = { index=(IS_OPTN|IS_NLBL), read=FUsageBeforeUpdate, write=SetUsageBeforeUpdate, stored = UsageBeforeUpdate_Specified };
  __property bool       UsageIsBulk = { index=(IS_OPTN|IS_NLBL), read=FUsageIsBulk, write=SetUsageIsBulk, stored = UsageIsBulk_Specified };
};




// ************************************************************************ //
// XML       : AsyncApexJob, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class AsyncApexJob : public sObject {
private:
  ApexClass*      FApexClass;
  bool            FApexClass_Specified;
  ID              FApexClassId;
  bool            FApexClassId_Specified;
  TXSDateTime*    FCompletedDate;
  bool            FCompletedDate_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FExtendedStatus;
  bool            FExtendedStatus_Specified;
  int             FJobItemsProcessed;
  bool            FJobItemsProcessed_Specified;
  UnicodeString   FJobType;
  bool            FJobType_Specified;
  UnicodeString   FLastProcessed;
  bool            FLastProcessed_Specified;
  int             FLastProcessedOffset;
  bool            FLastProcessedOffset_Specified;
  UnicodeString   FMethodName;
  bool            FMethodName_Specified;
  int             FNumberOfErrors;
  bool            FNumberOfErrors_Specified;
  ID              FParentJobId;
  bool            FParentJobId_Specified;
  UnicodeString   FStatus;
  bool            FStatus_Specified;
  int             FTotalJobItems;
  bool            FTotalJobItems_Specified;
  ApexClass* __fastcall GetApexClass(int Index)
  {  return FApexClass;  }
  void __fastcall SetApexClass(int Index, ApexClass* _prop_val)
  {  FApexClass = _prop_val; FApexClass_Specified = true;  }
  bool __fastcall ApexClass_Specified(int Index)
  {  return FApexClass_Specified;  } 
  ID __fastcall GetApexClassId(int Index)
  {  return FApexClassId;  }
  void __fastcall SetApexClassId(int Index, ID _prop_val)
  {  FApexClassId = _prop_val; FApexClassId_Specified = true;  }
  bool __fastcall ApexClassId_Specified(int Index)
  {  return FApexClassId_Specified;  } 
  TXSDateTime* __fastcall GetCompletedDate(int Index)
  {  return FCompletedDate;  }
  void __fastcall SetCompletedDate(int Index, TXSDateTime* _prop_val)
  {  FCompletedDate = _prop_val; FCompletedDate_Specified = true;  }
  bool __fastcall CompletedDate_Specified(int Index)
  {  return FCompletedDate_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetExtendedStatus(int Index)
  {  return FExtendedStatus;  }
  void __fastcall SetExtendedStatus(int Index, UnicodeString _prop_val)
  {  FExtendedStatus = _prop_val; FExtendedStatus_Specified = true;  }
  bool __fastcall ExtendedStatus_Specified(int Index)
  {  return FExtendedStatus_Specified;  } 
  int __fastcall GetJobItemsProcessed(int Index)
  {  return FJobItemsProcessed;  }
  void __fastcall SetJobItemsProcessed(int Index, int _prop_val)
  {  FJobItemsProcessed = _prop_val; FJobItemsProcessed_Specified = true;  }
  bool __fastcall JobItemsProcessed_Specified(int Index)
  {  return FJobItemsProcessed_Specified;  } 
  UnicodeString __fastcall GetJobType(int Index)
  {  return FJobType;  }
  void __fastcall SetJobType(int Index, UnicodeString _prop_val)
  {  FJobType = _prop_val; FJobType_Specified = true;  }
  bool __fastcall JobType_Specified(int Index)
  {  return FJobType_Specified;  } 
  UnicodeString __fastcall GetLastProcessed(int Index)
  {  return FLastProcessed;  }
  void __fastcall SetLastProcessed(int Index, UnicodeString _prop_val)
  {  FLastProcessed = _prop_val; FLastProcessed_Specified = true;  }
  bool __fastcall LastProcessed_Specified(int Index)
  {  return FLastProcessed_Specified;  } 
  int __fastcall GetLastProcessedOffset(int Index)
  {  return FLastProcessedOffset;  }
  void __fastcall SetLastProcessedOffset(int Index, int _prop_val)
  {  FLastProcessedOffset = _prop_val; FLastProcessedOffset_Specified = true;  }
  bool __fastcall LastProcessedOffset_Specified(int Index)
  {  return FLastProcessedOffset_Specified;  } 
  UnicodeString __fastcall GetMethodName(int Index)
  {  return FMethodName;  }
  void __fastcall SetMethodName(int Index, UnicodeString _prop_val)
  {  FMethodName = _prop_val; FMethodName_Specified = true;  }
  bool __fastcall MethodName_Specified(int Index)
  {  return FMethodName_Specified;  } 
  int __fastcall GetNumberOfErrors(int Index)
  {  return FNumberOfErrors;  }
  void __fastcall SetNumberOfErrors(int Index, int _prop_val)
  {  FNumberOfErrors = _prop_val; FNumberOfErrors_Specified = true;  }
  bool __fastcall NumberOfErrors_Specified(int Index)
  {  return FNumberOfErrors_Specified;  } 
  ID __fastcall GetParentJobId(int Index)
  {  return FParentJobId;  }
  void __fastcall SetParentJobId(int Index, ID _prop_val)
  {  FParentJobId = _prop_val; FParentJobId_Specified = true;  }
  bool __fastcall ParentJobId_Specified(int Index)
  {  return FParentJobId_Specified;  } 
  UnicodeString __fastcall GetStatus(int Index)
  {  return FStatus;  }
  void __fastcall SetStatus(int Index, UnicodeString _prop_val)
  {  FStatus = _prop_val; FStatus_Specified = true;  }
  bool __fastcall Status_Specified(int Index)
  {  return FStatus_Specified;  } 
  int __fastcall GetTotalJobItems(int Index)
  {  return FTotalJobItems;  }
  void __fastcall SetTotalJobItems(int Index, int _prop_val)
  {  FTotalJobItems = _prop_val; FTotalJobItems_Specified = true;  }
  bool __fastcall TotalJobItems_Specified(int Index)
  {  return FTotalJobItems_Specified;  } 

public:
  __fastcall ~AsyncApexJob();
__published:
  __property ApexClass*  ApexClass = { index=(IS_OPTN|IS_NLBL), read=FApexClass, write=SetApexClass, stored = ApexClass_Specified };
  __property ID         ApexClassId = { index=(IS_OPTN|IS_NLBL), read=FApexClassId, write=SetApexClassId, stored = ApexClassId_Specified };
  __property TXSDateTime* CompletedDate = { index=(IS_OPTN|IS_NLBL), read=FCompletedDate, write=SetCompletedDate, stored = CompletedDate_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString ExtendedStatus = { index=(IS_OPTN|IS_NLBL), read=FExtendedStatus, write=SetExtendedStatus, stored = ExtendedStatus_Specified };
  __property int        JobItemsProcessed = { index=(IS_OPTN|IS_NLBL), read=FJobItemsProcessed, write=SetJobItemsProcessed, stored = JobItemsProcessed_Specified };
  __property UnicodeString    JobType = { index=(IS_OPTN|IS_NLBL), read=FJobType, write=SetJobType, stored = JobType_Specified };
  __property UnicodeString LastProcessed = { index=(IS_OPTN|IS_NLBL), read=FLastProcessed, write=SetLastProcessed, stored = LastProcessed_Specified };
  __property int        LastProcessedOffset = { index=(IS_OPTN|IS_NLBL), read=FLastProcessedOffset, write=SetLastProcessedOffset, stored = LastProcessedOffset_Specified };
  __property UnicodeString MethodName = { index=(IS_OPTN|IS_NLBL), read=FMethodName, write=SetMethodName, stored = MethodName_Specified };
  __property int        NumberOfErrors = { index=(IS_OPTN|IS_NLBL), read=FNumberOfErrors, write=SetNumberOfErrors, stored = NumberOfErrors_Specified };
  __property ID         ParentJobId = { index=(IS_OPTN|IS_NLBL), read=FParentJobId, write=SetParentJobId, stored = ParentJobId_Specified };
  __property UnicodeString     Status = { index=(IS_OPTN|IS_NLBL), read=FStatus, write=SetStatus, stored = Status_Specified };
  __property int        TotalJobItems = { index=(IS_OPTN|IS_NLBL), read=FTotalJobItems, write=SetTotalJobItems, stored = TotalJobItems_Specified };
};




// ************************************************************************ //
// XML       : ApexTestResult, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ApexTestResult : public sObject {
private:
  ApexClass*      FApexClass;
  bool            FApexClass_Specified;
  ID              FApexClassId;
  bool            FApexClassId_Specified;
  ApexLog*        FApexLog;
  bool            FApexLog_Specified;
  ID              FApexLogId;
  bool            FApexLogId_Specified;
  AsyncApexJob*   FAsyncApexJob;
  bool            FAsyncApexJob_Specified;
  ID              FAsyncApexJobId;
  bool            FAsyncApexJobId_Specified;
  UnicodeString   FMessage;
  bool            FMessage_Specified;
  UnicodeString   FMethodName;
  bool            FMethodName_Specified;
  UnicodeString   FOutcome;
  bool            FOutcome_Specified;
  ApexTestQueueItem* FQueueItem;
  bool            FQueueItem_Specified;
  ID              FQueueItemId;
  bool            FQueueItemId_Specified;
  UnicodeString   FStackTrace;
  bool            FStackTrace_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  TXSDateTime*    FTestTimestamp;
  bool            FTestTimestamp_Specified;
  ApexClass* __fastcall GetApexClass(int Index)
  {  return FApexClass;  }
  void __fastcall SetApexClass(int Index, ApexClass* _prop_val)
  {  FApexClass = _prop_val; FApexClass_Specified = true;  }
  bool __fastcall ApexClass_Specified(int Index)
  {  return FApexClass_Specified;  } 
  ID __fastcall GetApexClassId(int Index)
  {  return FApexClassId;  }
  void __fastcall SetApexClassId(int Index, ID _prop_val)
  {  FApexClassId = _prop_val; FApexClassId_Specified = true;  }
  bool __fastcall ApexClassId_Specified(int Index)
  {  return FApexClassId_Specified;  } 
  ApexLog* __fastcall GetApexLog(int Index)
  {  return FApexLog;  }
  void __fastcall SetApexLog(int Index, ApexLog* _prop_val)
  {  FApexLog = _prop_val; FApexLog_Specified = true;  }
  bool __fastcall ApexLog_Specified(int Index)
  {  return FApexLog_Specified;  } 
  ID __fastcall GetApexLogId(int Index)
  {  return FApexLogId;  }
  void __fastcall SetApexLogId(int Index, ID _prop_val)
  {  FApexLogId = _prop_val; FApexLogId_Specified = true;  }
  bool __fastcall ApexLogId_Specified(int Index)
  {  return FApexLogId_Specified;  } 
  AsyncApexJob* __fastcall GetAsyncApexJob(int Index)
  {  return FAsyncApexJob;  }
  void __fastcall SetAsyncApexJob(int Index, AsyncApexJob* _prop_val)
  {  FAsyncApexJob = _prop_val; FAsyncApexJob_Specified = true;  }
  bool __fastcall AsyncApexJob_Specified(int Index)
  {  return FAsyncApexJob_Specified;  } 
  ID __fastcall GetAsyncApexJobId(int Index)
  {  return FAsyncApexJobId;  }
  void __fastcall SetAsyncApexJobId(int Index, ID _prop_val)
  {  FAsyncApexJobId = _prop_val; FAsyncApexJobId_Specified = true;  }
  bool __fastcall AsyncApexJobId_Specified(int Index)
  {  return FAsyncApexJobId_Specified;  } 
  UnicodeString __fastcall GetMessage(int Index)
  {  return FMessage;  }
  void __fastcall SetMessage(int Index, UnicodeString _prop_val)
  {  FMessage = _prop_val; FMessage_Specified = true;  }
  bool __fastcall Message_Specified(int Index)
  {  return FMessage_Specified;  } 
  UnicodeString __fastcall GetMethodName(int Index)
  {  return FMethodName;  }
  void __fastcall SetMethodName(int Index, UnicodeString _prop_val)
  {  FMethodName = _prop_val; FMethodName_Specified = true;  }
  bool __fastcall MethodName_Specified(int Index)
  {  return FMethodName_Specified;  } 
  UnicodeString __fastcall GetOutcome(int Index)
  {  return FOutcome;  }
  void __fastcall SetOutcome(int Index, UnicodeString _prop_val)
  {  FOutcome = _prop_val; FOutcome_Specified = true;  }
  bool __fastcall Outcome_Specified(int Index)
  {  return FOutcome_Specified;  } 
  ApexTestQueueItem* __fastcall GetQueueItem(int Index)
  {  return FQueueItem;  }
  void __fastcall SetQueueItem(int Index, ApexTestQueueItem* _prop_val)
  {  FQueueItem = _prop_val; FQueueItem_Specified = true;  }
  bool __fastcall QueueItem_Specified(int Index)
  {  return FQueueItem_Specified;  } 
  ID __fastcall GetQueueItemId(int Index)
  {  return FQueueItemId;  }
  void __fastcall SetQueueItemId(int Index, ID _prop_val)
  {  FQueueItemId = _prop_val; FQueueItemId_Specified = true;  }
  bool __fastcall QueueItemId_Specified(int Index)
  {  return FQueueItemId_Specified;  } 
  UnicodeString __fastcall GetStackTrace(int Index)
  {  return FStackTrace;  }
  void __fastcall SetStackTrace(int Index, UnicodeString _prop_val)
  {  FStackTrace = _prop_val; FStackTrace_Specified = true;  }
  bool __fastcall StackTrace_Specified(int Index)
  {  return FStackTrace_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  TXSDateTime* __fastcall GetTestTimestamp(int Index)
  {  return FTestTimestamp;  }
  void __fastcall SetTestTimestamp(int Index, TXSDateTime* _prop_val)
  {  FTestTimestamp = _prop_val; FTestTimestamp_Specified = true;  }
  bool __fastcall TestTimestamp_Specified(int Index)
  {  return FTestTimestamp_Specified;  } 

public:
  __fastcall ~ApexTestResult();
__published:
  __property ApexClass*  ApexClass = { index=(IS_OPTN|IS_NLBL), read=FApexClass, write=SetApexClass, stored = ApexClass_Specified };
  __property ID         ApexClassId = { index=(IS_OPTN|IS_NLBL), read=FApexClassId, write=SetApexClassId, stored = ApexClassId_Specified };
  __property ApexLog*      ApexLog = { index=(IS_OPTN|IS_NLBL), read=FApexLog, write=SetApexLog, stored = ApexLog_Specified };
  __property ID          ApexLogId = { index=(IS_OPTN|IS_NLBL), read=FApexLogId, write=SetApexLogId, stored = ApexLogId_Specified };
  __property AsyncApexJob* AsyncApexJob = { index=(IS_OPTN|IS_NLBL), read=FAsyncApexJob, write=SetAsyncApexJob, stored = AsyncApexJob_Specified };
  __property ID         AsyncApexJobId = { index=(IS_OPTN|IS_NLBL), read=FAsyncApexJobId, write=SetAsyncApexJobId, stored = AsyncApexJobId_Specified };
  __property UnicodeString    Message = { index=(IS_OPTN|IS_NLBL), read=FMessage, write=SetMessage, stored = Message_Specified };
  __property UnicodeString MethodName = { index=(IS_OPTN|IS_NLBL), read=FMethodName, write=SetMethodName, stored = MethodName_Specified };
  __property UnicodeString    Outcome = { index=(IS_OPTN|IS_NLBL), read=FOutcome, write=SetOutcome, stored = Outcome_Specified };
  __property ApexTestQueueItem*  QueueItem = { index=(IS_OPTN|IS_NLBL), read=FQueueItem, write=SetQueueItem, stored = QueueItem_Specified };
  __property ID         QueueItemId = { index=(IS_OPTN|IS_NLBL), read=FQueueItemId, write=SetQueueItemId, stored = QueueItemId_Specified };
  __property UnicodeString StackTrace = { index=(IS_OPTN|IS_NLBL), read=FStackTrace, write=SetStackTrace, stored = StackTrace_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property TXSDateTime* TestTimestamp = { index=(IS_OPTN|IS_NLBL), read=FTestTimestamp, write=SetTestTimestamp, stored = TestTimestamp_Specified };
};




// ************************************************************************ //
// XML       : ApexTestQueueItem, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ApexTestQueueItem : public sObject {
private:
  ApexClass*      FApexClass;
  bool            FApexClass_Specified;
  ID              FApexClassId;
  bool            FApexClassId_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FExtendedStatus;
  bool            FExtendedStatus_Specified;
  ID              FParentJobId;
  bool            FParentJobId_Specified;
  UnicodeString   FStatus;
  bool            FStatus_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  ApexClass* __fastcall GetApexClass(int Index)
  {  return FApexClass;  }
  void __fastcall SetApexClass(int Index, ApexClass* _prop_val)
  {  FApexClass = _prop_val; FApexClass_Specified = true;  }
  bool __fastcall ApexClass_Specified(int Index)
  {  return FApexClass_Specified;  } 
  ID __fastcall GetApexClassId(int Index)
  {  return FApexClassId;  }
  void __fastcall SetApexClassId(int Index, ID _prop_val)
  {  FApexClassId = _prop_val; FApexClassId_Specified = true;  }
  bool __fastcall ApexClassId_Specified(int Index)
  {  return FApexClassId_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetExtendedStatus(int Index)
  {  return FExtendedStatus;  }
  void __fastcall SetExtendedStatus(int Index, UnicodeString _prop_val)
  {  FExtendedStatus = _prop_val; FExtendedStatus_Specified = true;  }
  bool __fastcall ExtendedStatus_Specified(int Index)
  {  return FExtendedStatus_Specified;  } 
  ID __fastcall GetParentJobId(int Index)
  {  return FParentJobId;  }
  void __fastcall SetParentJobId(int Index, ID _prop_val)
  {  FParentJobId = _prop_val; FParentJobId_Specified = true;  }
  bool __fastcall ParentJobId_Specified(int Index)
  {  return FParentJobId_Specified;  } 
  UnicodeString __fastcall GetStatus(int Index)
  {  return FStatus;  }
  void __fastcall SetStatus(int Index, UnicodeString _prop_val)
  {  FStatus = _prop_val; FStatus_Specified = true;  }
  bool __fastcall Status_Specified(int Index)
  {  return FStatus_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~ApexTestQueueItem();
__published:
  __property ApexClass*  ApexClass = { index=(IS_OPTN|IS_NLBL), read=FApexClass, write=SetApexClass, stored = ApexClass_Specified };
  __property ID         ApexClassId = { index=(IS_OPTN|IS_NLBL), read=FApexClassId, write=SetApexClassId, stored = ApexClassId_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString ExtendedStatus = { index=(IS_OPTN|IS_NLBL), read=FExtendedStatus, write=SetExtendedStatus, stored = ExtendedStatus_Specified };
  __property ID         ParentJobId = { index=(IS_OPTN|IS_NLBL), read=FParentJobId, write=SetParentJobId, stored = ParentJobId_Specified };
  __property UnicodeString     Status = { index=(IS_OPTN|IS_NLBL), read=FStatus, write=SetStatus, stored = Status_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : ApexPage, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ApexPage : public sObject {
private:
  double          FApiVersion;
  bool            FApiVersion_Specified;
  UnicodeString   FControllerKey;
  bool            FControllerKey_Specified;
  UnicodeString   FControllerType;
  bool            FControllerType_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FMarkup;
  bool            FMarkup_Specified;
  UnicodeString   FMasterLabel;
  bool            FMasterLabel_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  UnicodeString   FNamespacePrefix;
  bool            FNamespacePrefix_Specified;
  QueryResult*    FSetupEntityAccessItems;
  bool            FSetupEntityAccessItems_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  double __fastcall GetApiVersion(int Index)
  {  return FApiVersion;  }
  void __fastcall SetApiVersion(int Index, double _prop_val)
  {  FApiVersion = _prop_val; FApiVersion_Specified = true;  }
  bool __fastcall ApiVersion_Specified(int Index)
  {  return FApiVersion_Specified;  } 
  UnicodeString __fastcall GetControllerKey(int Index)
  {  return FControllerKey;  }
  void __fastcall SetControllerKey(int Index, UnicodeString _prop_val)
  {  FControllerKey = _prop_val; FControllerKey_Specified = true;  }
  bool __fastcall ControllerKey_Specified(int Index)
  {  return FControllerKey_Specified;  } 
  UnicodeString __fastcall GetControllerType(int Index)
  {  return FControllerType;  }
  void __fastcall SetControllerType(int Index, UnicodeString _prop_val)
  {  FControllerType = _prop_val; FControllerType_Specified = true;  }
  bool __fastcall ControllerType_Specified(int Index)
  {  return FControllerType_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetMarkup(int Index)
  {  return FMarkup;  }
  void __fastcall SetMarkup(int Index, UnicodeString _prop_val)
  {  FMarkup = _prop_val; FMarkup_Specified = true;  }
  bool __fastcall Markup_Specified(int Index)
  {  return FMarkup_Specified;  } 
  UnicodeString __fastcall GetMasterLabel(int Index)
  {  return FMasterLabel;  }
  void __fastcall SetMasterLabel(int Index, UnicodeString _prop_val)
  {  FMasterLabel = _prop_val; FMasterLabel_Specified = true;  }
  bool __fastcall MasterLabel_Specified(int Index)
  {  return FMasterLabel_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  UnicodeString __fastcall GetNamespacePrefix(int Index)
  {  return FNamespacePrefix;  }
  void __fastcall SetNamespacePrefix(int Index, UnicodeString _prop_val)
  {  FNamespacePrefix = _prop_val; FNamespacePrefix_Specified = true;  }
  bool __fastcall NamespacePrefix_Specified(int Index)
  {  return FNamespacePrefix_Specified;  } 
  QueryResult* __fastcall GetSetupEntityAccessItems(int Index)
  {  return FSetupEntityAccessItems;  }
  void __fastcall SetSetupEntityAccessItems(int Index, QueryResult* _prop_val)
  {  FSetupEntityAccessItems = _prop_val; FSetupEntityAccessItems_Specified = true;  }
  bool __fastcall SetupEntityAccessItems_Specified(int Index)
  {  return FSetupEntityAccessItems_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~ApexPage();
__published:
  __property double     ApiVersion = { index=(IS_OPTN|IS_NLBL), read=FApiVersion, write=SetApiVersion, stored = ApiVersion_Specified };
  __property UnicodeString ControllerKey = { index=(IS_OPTN|IS_NLBL), read=FControllerKey, write=SetControllerKey, stored = ControllerKey_Specified };
  __property UnicodeString ControllerType = { index=(IS_OPTN|IS_NLBL), read=FControllerType, write=SetControllerType, stored = ControllerType_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString     Markup = { index=(IS_OPTN|IS_NLBL), read=FMarkup, write=SetMarkup, stored = Markup_Specified };
  __property UnicodeString MasterLabel = { index=(IS_OPTN|IS_NLBL), read=FMasterLabel, write=SetMasterLabel, stored = MasterLabel_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property UnicodeString NamespacePrefix = { index=(IS_OPTN|IS_NLBL), read=FNamespacePrefix, write=SetNamespacePrefix, stored = NamespacePrefix_Specified };
  __property QueryResult* SetupEntityAccessItems = { index=(IS_OPTN|IS_NLBL), read=FSetupEntityAccessItems, write=SetSetupEntityAccessItems, stored = SetupEntityAccessItems_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : ApexLog, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ApexLog : public sObject {
private:
  UnicodeString   FApplication;
  bool            FApplication_Specified;
  int             FDurationMilliseconds;
  bool            FDurationMilliseconds_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FLocation;
  bool            FLocation_Specified;
  int             FLogLength;
  bool            FLogLength_Specified;
  Name_*           FLogUser;
  bool            FLogUser_Specified;
  ID              FLogUserId;
  bool            FLogUserId_Specified;
  UnicodeString   FOperation;
  bool            FOperation_Specified;
  UnicodeString   FRequest;
  bool            FRequest_Specified;
  TXSDateTime*    FStartTime;
  bool            FStartTime_Specified;
  UnicodeString   FStatus;
  bool            FStatus_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString __fastcall GetApplication(int Index)
  {  return FApplication;  }
  void __fastcall SetApplication(int Index, UnicodeString _prop_val)
  {  FApplication = _prop_val; FApplication_Specified = true;  }
  bool __fastcall Application_Specified(int Index)
  {  return FApplication_Specified;  } 
  int __fastcall GetDurationMilliseconds(int Index)
  {  return FDurationMilliseconds;  }
  void __fastcall SetDurationMilliseconds(int Index, int _prop_val)
  {  FDurationMilliseconds = _prop_val; FDurationMilliseconds_Specified = true;  }
  bool __fastcall DurationMilliseconds_Specified(int Index)
  {  return FDurationMilliseconds_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetLocation(int Index)
  {  return FLocation;  }
  void __fastcall SetLocation(int Index, UnicodeString _prop_val)
  {  FLocation = _prop_val; FLocation_Specified = true;  }
  bool __fastcall Location_Specified(int Index)
  {  return FLocation_Specified;  } 
  int __fastcall GetLogLength(int Index)
  {  return FLogLength;  }
  void __fastcall SetLogLength(int Index, int _prop_val)
  {  FLogLength = _prop_val; FLogLength_Specified = true;  }
  bool __fastcall LogLength_Specified(int Index)
  {  return FLogLength_Specified;  } 
  Name_* __fastcall GetLogUser(int Index)
  {  return FLogUser;  }
  void __fastcall SetLogUser(int Index, Name_* _prop_val)
  {  FLogUser = _prop_val; FLogUser_Specified = true;  }
  bool __fastcall LogUser_Specified(int Index)
  {  return FLogUser_Specified;  } 
  ID __fastcall GetLogUserId(int Index)
  {  return FLogUserId;  }
  void __fastcall SetLogUserId(int Index, ID _prop_val)
  {  FLogUserId = _prop_val; FLogUserId_Specified = true;  }
  bool __fastcall LogUserId_Specified(int Index)
  {  return FLogUserId_Specified;  } 
  UnicodeString __fastcall GetOperation(int Index)
  {  return FOperation;  }
  void __fastcall SetOperation(int Index, UnicodeString _prop_val)
  {  FOperation = _prop_val; FOperation_Specified = true;  }
  bool __fastcall Operation_Specified(int Index)
  {  return FOperation_Specified;  } 
  UnicodeString __fastcall GetRequest(int Index)
  {  return FRequest;  }
  void __fastcall SetRequest(int Index, UnicodeString _prop_val)
  {  FRequest = _prop_val; FRequest_Specified = true;  }
  bool __fastcall Request_Specified(int Index)
  {  return FRequest_Specified;  } 
  TXSDateTime* __fastcall GetStartTime(int Index)
  {  return FStartTime;  }
  void __fastcall SetStartTime(int Index, TXSDateTime* _prop_val)
  {  FStartTime = _prop_val; FStartTime_Specified = true;  }
  bool __fastcall StartTime_Specified(int Index)
  {  return FStartTime_Specified;  } 
  UnicodeString __fastcall GetStatus(int Index)
  {  return FStatus;  }
  void __fastcall SetStatus(int Index, UnicodeString _prop_val)
  {  FStatus = _prop_val; FStatus_Specified = true;  }
  bool __fastcall Status_Specified(int Index)
  {  return FStatus_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~ApexLog();
__published:
  __property UnicodeString Application = { index=(IS_OPTN|IS_NLBL), read=FApplication, write=SetApplication, stored = Application_Specified };
  __property int        DurationMilliseconds = { index=(IS_OPTN|IS_NLBL), read=FDurationMilliseconds, write=SetDurationMilliseconds, stored = DurationMilliseconds_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString   Location = { index=(IS_OPTN|IS_NLBL), read=FLocation, write=SetLocation, stored = Location_Specified };
  __property int         LogLength = { index=(IS_OPTN|IS_NLBL), read=FLogLength, write=SetLogLength, stored = LogLength_Specified };
  __property Name_*         LogUser = { index=(IS_OPTN|IS_NLBL), read=FLogUser, write=SetLogUser, stored = LogUser_Specified };
  __property ID          LogUserId = { index=(IS_OPTN|IS_NLBL), read=FLogUserId, write=SetLogUserId, stored = LogUserId_Specified };
  __property UnicodeString  Operation = { index=(IS_OPTN|IS_NLBL), read=FOperation, write=SetOperation, stored = Operation_Specified };
  __property UnicodeString    Request = { index=(IS_OPTN|IS_NLBL), read=FRequest, write=SetRequest, stored = Request_Specified };
  __property TXSDateTime*  StartTime = { index=(IS_OPTN|IS_NLBL), read=FStartTime, write=SetStartTime, stored = StartTime_Specified };
  __property UnicodeString     Status = { index=(IS_OPTN|IS_NLBL), read=FStatus, write=SetStatus, stored = Status_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : ApexExecutionOverlayAction, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ApexExecutionOverlayAction : public sObject {
private:
  UnicodeString   FActionScript;
  bool            FActionScript_Specified;
  UnicodeString   FActionScriptType;
  bool            FActionScriptType_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  Name_*           FExecutableEntity;
  bool            FExecutableEntity_Specified;
  ID              FExecutableEntityId;
  bool            FExecutableEntityId_Specified;
  TXSDateTime*    FExpirationDate;
  bool            FExpirationDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsDumpingHeap;
  bool            FIsDumpingHeap_Specified;
  int             FIteration;
  bool            FIteration_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLine;
  bool            FLine_Specified;
  User*           FScope;
  bool            FScope_Specified;
  ID              FScopeId;
  bool            FScopeId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString __fastcall GetActionScript(int Index)
  {  return FActionScript;  }
  void __fastcall SetActionScript(int Index, UnicodeString _prop_val)
  {  FActionScript = _prop_val; FActionScript_Specified = true;  }
  bool __fastcall ActionScript_Specified(int Index)
  {  return FActionScript_Specified;  } 
  UnicodeString __fastcall GetActionScriptType(int Index)
  {  return FActionScriptType;  }
  void __fastcall SetActionScriptType(int Index, UnicodeString _prop_val)
  {  FActionScriptType = _prop_val; FActionScriptType_Specified = true;  }
  bool __fastcall ActionScriptType_Specified(int Index)
  {  return FActionScriptType_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  Name_* __fastcall GetExecutableEntity(int Index)
  {  return FExecutableEntity;  }
  void __fastcall SetExecutableEntity(int Index, Name_* _prop_val)
  {  FExecutableEntity = _prop_val; FExecutableEntity_Specified = true;  }
  bool __fastcall ExecutableEntity_Specified(int Index)
  {  return FExecutableEntity_Specified;  } 
  ID __fastcall GetExecutableEntityId(int Index)
  {  return FExecutableEntityId;  }
  void __fastcall SetExecutableEntityId(int Index, ID _prop_val)
  {  FExecutableEntityId = _prop_val; FExecutableEntityId_Specified = true;  }
  bool __fastcall ExecutableEntityId_Specified(int Index)
  {  return FExecutableEntityId_Specified;  } 
  TXSDateTime* __fastcall GetExpirationDate(int Index)
  {  return FExpirationDate;  }
  void __fastcall SetExpirationDate(int Index, TXSDateTime* _prop_val)
  {  FExpirationDate = _prop_val; FExpirationDate_Specified = true;  }
  bool __fastcall ExpirationDate_Specified(int Index)
  {  return FExpirationDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsDumpingHeap(int Index)
  {  return FIsDumpingHeap;  }
  void __fastcall SetIsDumpingHeap(int Index, bool _prop_val)
  {  FIsDumpingHeap = _prop_val; FIsDumpingHeap_Specified = true;  }
  bool __fastcall IsDumpingHeap_Specified(int Index)
  {  return FIsDumpingHeap_Specified;  } 
  int __fastcall GetIteration(int Index)
  {  return FIteration;  }
  void __fastcall SetIteration(int Index, int _prop_val)
  {  FIteration = _prop_val; FIteration_Specified = true;  }
  bool __fastcall Iteration_Specified(int Index)
  {  return FIteration_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLine(int Index)
  {  return FLine;  }
  void __fastcall SetLine(int Index, int _prop_val)
  {  FLine = _prop_val; FLine_Specified = true;  }
  bool __fastcall Line_Specified(int Index)
  {  return FLine_Specified;  } 
  User* __fastcall GetScope(int Index)
  {  return FScope;  }
  void __fastcall SetScope(int Index, User* _prop_val)
  {  FScope = _prop_val; FScope_Specified = true;  }
  bool __fastcall Scope_Specified(int Index)
  {  return FScope_Specified;  } 
  ID __fastcall GetScopeId(int Index)
  {  return FScopeId;  }
  void __fastcall SetScopeId(int Index, ID _prop_val)
  {  FScopeId = _prop_val; FScopeId_Specified = true;  }
  bool __fastcall ScopeId_Specified(int Index)
  {  return FScopeId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~ApexExecutionOverlayAction();
__published:
  __property UnicodeString ActionScript = { index=(IS_OPTN|IS_NLBL), read=FActionScript, write=SetActionScript, stored = ActionScript_Specified };
  __property UnicodeString ActionScriptType = { index=(IS_OPTN|IS_NLBL), read=FActionScriptType, write=SetActionScriptType, stored = ActionScriptType_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property Name_*      ExecutableEntity = { index=(IS_OPTN|IS_NLBL), read=FExecutableEntity, write=SetExecutableEntity, stored = ExecutableEntity_Specified };
  __property ID         ExecutableEntityId = { index=(IS_OPTN|IS_NLBL), read=FExecutableEntityId, write=SetExecutableEntityId, stored = ExecutableEntityId_Specified };
  __property TXSDateTime* ExpirationDate = { index=(IS_OPTN|IS_NLBL), read=FExpirationDate, write=SetExpirationDate, stored = ExpirationDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool       IsDumpingHeap = { index=(IS_OPTN|IS_NLBL), read=FIsDumpingHeap, write=SetIsDumpingHeap, stored = IsDumpingHeap_Specified };
  __property int         Iteration = { index=(IS_OPTN|IS_NLBL), read=FIteration, write=SetIteration, stored = Iteration_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int              Line = { index=(IS_OPTN|IS_NLBL), read=FLine, write=SetLine, stored = Line_Specified };
  __property User*           Scope = { index=(IS_OPTN|IS_NLBL), read=FScope, write=SetScope, stored = Scope_Specified };
  __property ID            ScopeId = { index=(IS_OPTN|IS_NLBL), read=FScopeId, write=SetScopeId, stored = ScopeId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : ApexComponent, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ApexComponent : public sObject {
private:
  double          FApiVersion;
  bool            FApiVersion_Specified;
  UnicodeString   FControllerKey;
  bool            FControllerKey_Specified;
  UnicodeString   FControllerType;
  bool            FControllerType_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FMarkup;
  bool            FMarkup_Specified;
  UnicodeString   FMasterLabel;
  bool            FMasterLabel_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  UnicodeString   FNamespacePrefix;
  bool            FNamespacePrefix_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  double __fastcall GetApiVersion(int Index)
  {  return FApiVersion;  }
  void __fastcall SetApiVersion(int Index, double _prop_val)
  {  FApiVersion = _prop_val; FApiVersion_Specified = true;  }
  bool __fastcall ApiVersion_Specified(int Index)
  {  return FApiVersion_Specified;  } 
  UnicodeString __fastcall GetControllerKey(int Index)
  {  return FControllerKey;  }
  void __fastcall SetControllerKey(int Index, UnicodeString _prop_val)
  {  FControllerKey = _prop_val; FControllerKey_Specified = true;  }
  bool __fastcall ControllerKey_Specified(int Index)
  {  return FControllerKey_Specified;  } 
  UnicodeString __fastcall GetControllerType(int Index)
  {  return FControllerType;  }
  void __fastcall SetControllerType(int Index, UnicodeString _prop_val)
  {  FControllerType = _prop_val; FControllerType_Specified = true;  }
  bool __fastcall ControllerType_Specified(int Index)
  {  return FControllerType_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetMarkup(int Index)
  {  return FMarkup;  }
  void __fastcall SetMarkup(int Index, UnicodeString _prop_val)
  {  FMarkup = _prop_val; FMarkup_Specified = true;  }
  bool __fastcall Markup_Specified(int Index)
  {  return FMarkup_Specified;  } 
  UnicodeString __fastcall GetMasterLabel(int Index)
  {  return FMasterLabel;  }
  void __fastcall SetMasterLabel(int Index, UnicodeString _prop_val)
  {  FMasterLabel = _prop_val; FMasterLabel_Specified = true;  }
  bool __fastcall MasterLabel_Specified(int Index)
  {  return FMasterLabel_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  UnicodeString __fastcall GetNamespacePrefix(int Index)
  {  return FNamespacePrefix;  }
  void __fastcall SetNamespacePrefix(int Index, UnicodeString _prop_val)
  {  FNamespacePrefix = _prop_val; FNamespacePrefix_Specified = true;  }
  bool __fastcall NamespacePrefix_Specified(int Index)
  {  return FNamespacePrefix_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~ApexComponent();
__published:
  __property double     ApiVersion = { index=(IS_OPTN|IS_NLBL), read=FApiVersion, write=SetApiVersion, stored = ApiVersion_Specified };
  __property UnicodeString ControllerKey = { index=(IS_OPTN|IS_NLBL), read=FControllerKey, write=SetControllerKey, stored = ControllerKey_Specified };
  __property UnicodeString ControllerType = { index=(IS_OPTN|IS_NLBL), read=FControllerType, write=SetControllerType, stored = ControllerType_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString     Markup = { index=(IS_OPTN|IS_NLBL), read=FMarkup, write=SetMarkup, stored = Markup_Specified };
  __property UnicodeString MasterLabel = { index=(IS_OPTN|IS_NLBL), read=FMasterLabel, write=SetMasterLabel, stored = MasterLabel_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property UnicodeString NamespacePrefix = { index=(IS_OPTN|IS_NLBL), read=FNamespacePrefix, write=SetNamespacePrefix, stored = NamespacePrefix_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : ApexClass, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ApexClass : public sObject {
private:
  double          FApiVersion;
  bool            FApiVersion_Specified;
  UnicodeString   FBody;
  bool            FBody_Specified;
  double          FBodyCrc;
  bool            FBodyCrc_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsValid;
  bool            FIsValid_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLengthWithoutComments;
  bool            FLengthWithoutComments_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  UnicodeString   FNamespacePrefix;
  bool            FNamespacePrefix_Specified;
  QueryResult*    FSetupEntityAccessItems;
  bool            FSetupEntityAccessItems_Specified;
  UnicodeString   FStatus;
  bool            FStatus_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  double __fastcall GetApiVersion(int Index)
  {  return FApiVersion;  }
  void __fastcall SetApiVersion(int Index, double _prop_val)
  {  FApiVersion = _prop_val; FApiVersion_Specified = true;  }
  bool __fastcall ApiVersion_Specified(int Index)
  {  return FApiVersion_Specified;  } 
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  double __fastcall GetBodyCrc(int Index)
  {  return FBodyCrc;  }
  void __fastcall SetBodyCrc(int Index, double _prop_val)
  {  FBodyCrc = _prop_val; FBodyCrc_Specified = true;  }
  bool __fastcall BodyCrc_Specified(int Index)
  {  return FBodyCrc_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsValid(int Index)
  {  return FIsValid;  }
  void __fastcall SetIsValid(int Index, bool _prop_val)
  {  FIsValid = _prop_val; FIsValid_Specified = true;  }
  bool __fastcall IsValid_Specified(int Index)
  {  return FIsValid_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLengthWithoutComments(int Index)
  {  return FLengthWithoutComments;  }
  void __fastcall SetLengthWithoutComments(int Index, int _prop_val)
  {  FLengthWithoutComments = _prop_val; FLengthWithoutComments_Specified = true;  }
  bool __fastcall LengthWithoutComments_Specified(int Index)
  {  return FLengthWithoutComments_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  UnicodeString __fastcall GetNamespacePrefix(int Index)
  {  return FNamespacePrefix;  }
  void __fastcall SetNamespacePrefix(int Index, UnicodeString _prop_val)
  {  FNamespacePrefix = _prop_val; FNamespacePrefix_Specified = true;  }
  bool __fastcall NamespacePrefix_Specified(int Index)
  {  return FNamespacePrefix_Specified;  } 
  QueryResult* __fastcall GetSetupEntityAccessItems(int Index)
  {  return FSetupEntityAccessItems;  }
  void __fastcall SetSetupEntityAccessItems(int Index, QueryResult* _prop_val)
  {  FSetupEntityAccessItems = _prop_val; FSetupEntityAccessItems_Specified = true;  }
  bool __fastcall SetupEntityAccessItems_Specified(int Index)
  {  return FSetupEntityAccessItems_Specified;  } 
  UnicodeString __fastcall GetStatus(int Index)
  {  return FStatus;  }
  void __fastcall SetStatus(int Index, UnicodeString _prop_val)
  {  FStatus = _prop_val; FStatus_Specified = true;  }
  bool __fastcall Status_Specified(int Index)
  {  return FStatus_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~ApexClass();
__published:
  __property double     ApiVersion = { index=(IS_OPTN|IS_NLBL), read=FApiVersion, write=SetApiVersion, stored = ApiVersion_Specified };
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property double        BodyCrc = { index=(IS_OPTN|IS_NLBL), read=FBodyCrc, write=SetBodyCrc, stored = BodyCrc_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool          IsValid = { index=(IS_OPTN|IS_NLBL), read=FIsValid, write=SetIsValid, stored = IsValid_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int        LengthWithoutComments = { index=(IS_OPTN|IS_NLBL), read=FLengthWithoutComments, write=SetLengthWithoutComments, stored = LengthWithoutComments_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property UnicodeString NamespacePrefix = { index=(IS_OPTN|IS_NLBL), read=FNamespacePrefix, write=SetNamespacePrefix, stored = NamespacePrefix_Specified };
  __property QueryResult* SetupEntityAccessItems = { index=(IS_OPTN|IS_NLBL), read=FSetupEntityAccessItems, write=SetSetupEntityAccessItems, stored = SetupEntityAccessItems_Specified };
  __property UnicodeString     Status = { index=(IS_OPTN|IS_NLBL), read=FStatus, write=SetStatus, stored = Status_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : AdditionalNumber, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class AdditionalNumber : public sObject {
private:
  ID              FCallCenterId;
  bool            FCallCenterId_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  UnicodeString   FPhone;
  bool            FPhone_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  ID __fastcall GetCallCenterId(int Index)
  {  return FCallCenterId;  }
  void __fastcall SetCallCenterId(int Index, ID _prop_val)
  {  FCallCenterId = _prop_val; FCallCenterId_Specified = true;  }
  bool __fastcall CallCenterId_Specified(int Index)
  {  return FCallCenterId_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  UnicodeString __fastcall GetPhone(int Index)
  {  return FPhone;  }
  void __fastcall SetPhone(int Index, UnicodeString _prop_val)
  {  FPhone = _prop_val; FPhone_Specified = true;  }
  bool __fastcall Phone_Specified(int Index)
  {  return FPhone_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~AdditionalNumber();
__published:
  __property ID         CallCenterId = { index=(IS_OPTN|IS_NLBL), read=FCallCenterId, write=SetCallCenterId, stored = CallCenterId_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property UnicodeString      Phone = { index=(IS_OPTN|IS_NLBL), read=FPhone, write=SetPhone, stored = Phone_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : ActivityHistory, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class ActivityHistory : public sObject {
private:
  Account*        FAccount;
  bool            FAccount_Specified;
  ID              FAccountId;
  bool            FAccountId_Specified;
  TXSDate*        FActivityDate;
  bool            FActivityDate_Specified;
  UnicodeString   FActivityType;
  bool            FActivityType_Specified;
  UnicodeString   FCallDisposition;
  bool            FCallDisposition_Specified;
  int             FCallDurationInSeconds;
  bool            FCallDurationInSeconds_Specified;
  UnicodeString   FCallObject;
  bool            FCallObject_Specified;
  UnicodeString   FCallType;
  bool            FCallType_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  int             FDurationInMinutes;
  bool            FDurationInMinutes_Specified;
  bool            FIsAllDayEvent;
  bool            FIsAllDayEvent_Specified;
  bool            FIsClosed;
  bool            FIsClosed_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsReminderSet;
  bool            FIsReminderSet_Specified;
  bool            FIsTask;
  bool            FIsTask_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FLocation;
  bool            FLocation_Specified;
  Name_*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  UnicodeString   FPriority;
  bool            FPriority_Specified;
  TXSDateTime*    FReminderDateTime;
  bool            FReminderDateTime_Specified;
  UnicodeString   FStatus;
  bool            FStatus_Specified;
  UnicodeString   FSubject;
  bool            FSubject_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  Name_*           FWhat;
  bool            FWhat_Specified;
  ID              FWhatId;
  bool            FWhatId_Specified;
  Name_*           FWho;
  bool            FWho_Specified;
  ID              FWhoId;
  bool            FWhoId_Specified;
  Account* __fastcall GetAccount(int Index)
  {  return FAccount;  }
  void __fastcall SetAccount(int Index, Account* _prop_val)
  {  FAccount = _prop_val; FAccount_Specified = true;  }
  bool __fastcall Account_Specified(int Index)
  {  return FAccount_Specified;  } 
  ID __fastcall GetAccountId(int Index)
  {  return FAccountId;  }
  void __fastcall SetAccountId(int Index, ID _prop_val)
  {  FAccountId = _prop_val; FAccountId_Specified = true;  }
  bool __fastcall AccountId_Specified(int Index)
  {  return FAccountId_Specified;  } 
  TXSDate* __fastcall GetActivityDate(int Index)
  {  return FActivityDate;  }
  void __fastcall SetActivityDate(int Index, TXSDate* _prop_val)
  {  FActivityDate = _prop_val; FActivityDate_Specified = true;  }
  bool __fastcall ActivityDate_Specified(int Index)
  {  return FActivityDate_Specified;  } 
  UnicodeString __fastcall GetActivityType(int Index)
  {  return FActivityType;  }
  void __fastcall SetActivityType(int Index, UnicodeString _prop_val)
  {  FActivityType = _prop_val; FActivityType_Specified = true;  }
  bool __fastcall ActivityType_Specified(int Index)
  {  return FActivityType_Specified;  } 
  UnicodeString __fastcall GetCallDisposition(int Index)
  {  return FCallDisposition;  }
  void __fastcall SetCallDisposition(int Index, UnicodeString _prop_val)
  {  FCallDisposition = _prop_val; FCallDisposition_Specified = true;  }
  bool __fastcall CallDisposition_Specified(int Index)
  {  return FCallDisposition_Specified;  } 
  int __fastcall GetCallDurationInSeconds(int Index)
  {  return FCallDurationInSeconds;  }
  void __fastcall SetCallDurationInSeconds(int Index, int _prop_val)
  {  FCallDurationInSeconds = _prop_val; FCallDurationInSeconds_Specified = true;  }
  bool __fastcall CallDurationInSeconds_Specified(int Index)
  {  return FCallDurationInSeconds_Specified;  } 
  UnicodeString __fastcall GetCallObject(int Index)
  {  return FCallObject;  }
  void __fastcall SetCallObject(int Index, UnicodeString _prop_val)
  {  FCallObject = _prop_val; FCallObject_Specified = true;  }
  bool __fastcall CallObject_Specified(int Index)
  {  return FCallObject_Specified;  } 
  UnicodeString __fastcall GetCallType(int Index)
  {  return FCallType;  }
  void __fastcall SetCallType(int Index, UnicodeString _prop_val)
  {  FCallType = _prop_val; FCallType_Specified = true;  }
  bool __fastcall CallType_Specified(int Index)
  {  return FCallType_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  int __fastcall GetDurationInMinutes(int Index)
  {  return FDurationInMinutes;  }
  void __fastcall SetDurationInMinutes(int Index, int _prop_val)
  {  FDurationInMinutes = _prop_val; FDurationInMinutes_Specified = true;  }
  bool __fastcall DurationInMinutes_Specified(int Index)
  {  return FDurationInMinutes_Specified;  } 
  bool __fastcall GetIsAllDayEvent(int Index)
  {  return FIsAllDayEvent;  }
  void __fastcall SetIsAllDayEvent(int Index, bool _prop_val)
  {  FIsAllDayEvent = _prop_val; FIsAllDayEvent_Specified = true;  }
  bool __fastcall IsAllDayEvent_Specified(int Index)
  {  return FIsAllDayEvent_Specified;  } 
  bool __fastcall GetIsClosed(int Index)
  {  return FIsClosed;  }
  void __fastcall SetIsClosed(int Index, bool _prop_val)
  {  FIsClosed = _prop_val; FIsClosed_Specified = true;  }
  bool __fastcall IsClosed_Specified(int Index)
  {  return FIsClosed_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsReminderSet(int Index)
  {  return FIsReminderSet;  }
  void __fastcall SetIsReminderSet(int Index, bool _prop_val)
  {  FIsReminderSet = _prop_val; FIsReminderSet_Specified = true;  }
  bool __fastcall IsReminderSet_Specified(int Index)
  {  return FIsReminderSet_Specified;  } 
  bool __fastcall GetIsTask(int Index)
  {  return FIsTask;  }
  void __fastcall SetIsTask(int Index, bool _prop_val)
  {  FIsTask = _prop_val; FIsTask_Specified = true;  }
  bool __fastcall IsTask_Specified(int Index)
  {  return FIsTask_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetLocation(int Index)
  {  return FLocation;  }
  void __fastcall SetLocation(int Index, UnicodeString _prop_val)
  {  FLocation = _prop_val; FLocation_Specified = true;  }
  bool __fastcall Location_Specified(int Index)
  {  return FLocation_Specified;  } 
  Name_* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, Name_* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  UnicodeString __fastcall GetPriority(int Index)
  {  return FPriority;  }
  void __fastcall SetPriority(int Index, UnicodeString _prop_val)
  {  FPriority = _prop_val; FPriority_Specified = true;  }
  bool __fastcall Priority_Specified(int Index)
  {  return FPriority_Specified;  } 
  TXSDateTime* __fastcall GetReminderDateTime(int Index)
  {  return FReminderDateTime;  }
  void __fastcall SetReminderDateTime(int Index, TXSDateTime* _prop_val)
  {  FReminderDateTime = _prop_val; FReminderDateTime_Specified = true;  }
  bool __fastcall ReminderDateTime_Specified(int Index)
  {  return FReminderDateTime_Specified;  } 
  UnicodeString __fastcall GetStatus(int Index)
  {  return FStatus;  }
  void __fastcall SetStatus(int Index, UnicodeString _prop_val)
  {  FStatus = _prop_val; FStatus_Specified = true;  }
  bool __fastcall Status_Specified(int Index)
  {  return FStatus_Specified;  } 
  UnicodeString __fastcall GetSubject(int Index)
  {  return FSubject;  }
  void __fastcall SetSubject(int Index, UnicodeString _prop_val)
  {  FSubject = _prop_val; FSubject_Specified = true;  }
  bool __fastcall Subject_Specified(int Index)
  {  return FSubject_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  Name_* __fastcall GetWhat(int Index)
  {  return FWhat;  }
  void __fastcall SetWhat(int Index, Name_* _prop_val)
  {  FWhat = _prop_val; FWhat_Specified = true;  }
  bool __fastcall What_Specified(int Index)
  {  return FWhat_Specified;  } 
  ID __fastcall GetWhatId(int Index)
  {  return FWhatId;  }
  void __fastcall SetWhatId(int Index, ID _prop_val)
  {  FWhatId = _prop_val; FWhatId_Specified = true;  }
  bool __fastcall WhatId_Specified(int Index)
  {  return FWhatId_Specified;  } 
  Name_* __fastcall GetWho(int Index)
  {  return FWho;  }
  void __fastcall SetWho(int Index, Name_* _prop_val)
  {  FWho = _prop_val; FWho_Specified = true;  }
  bool __fastcall Who_Specified(int Index)
  {  return FWho_Specified;  } 
  ID __fastcall GetWhoId(int Index)
  {  return FWhoId;  }
  void __fastcall SetWhoId(int Index, ID _prop_val)
  {  FWhoId = _prop_val; FWhoId_Specified = true;  }
  bool __fastcall WhoId_Specified(int Index)
  {  return FWhoId_Specified;  } 

public:
  __fastcall ~ActivityHistory();
__published:
  __property Account*      Account = { index=(IS_OPTN|IS_NLBL), read=FAccount, write=SetAccount, stored = Account_Specified };
  __property ID          AccountId = { index=(IS_OPTN|IS_NLBL), read=FAccountId, write=SetAccountId, stored = AccountId_Specified };
  __property TXSDate*   ActivityDate = { index=(IS_OPTN|IS_NLBL), read=FActivityDate, write=SetActivityDate, stored = ActivityDate_Specified };
  __property UnicodeString ActivityType = { index=(IS_OPTN|IS_NLBL), read=FActivityType, write=SetActivityType, stored = ActivityType_Specified };
  __property UnicodeString CallDisposition = { index=(IS_OPTN|IS_NLBL), read=FCallDisposition, write=SetCallDisposition, stored = CallDisposition_Specified };
  __property int        CallDurationInSeconds = { index=(IS_OPTN|IS_NLBL), read=FCallDurationInSeconds, write=SetCallDurationInSeconds, stored = CallDurationInSeconds_Specified };
  __property UnicodeString CallObject = { index=(IS_OPTN|IS_NLBL), read=FCallObject, write=SetCallObject, stored = CallObject_Specified };
  __property UnicodeString   CallType = { index=(IS_OPTN|IS_NLBL), read=FCallType, write=SetCallType, stored = CallType_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property int        DurationInMinutes = { index=(IS_OPTN|IS_NLBL), read=FDurationInMinutes, write=SetDurationInMinutes, stored = DurationInMinutes_Specified };
  __property bool       IsAllDayEvent = { index=(IS_OPTN|IS_NLBL), read=FIsAllDayEvent, write=SetIsAllDayEvent, stored = IsAllDayEvent_Specified };
  __property bool         IsClosed = { index=(IS_OPTN|IS_NLBL), read=FIsClosed, write=SetIsClosed, stored = IsClosed_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool       IsReminderSet = { index=(IS_OPTN|IS_NLBL), read=FIsReminderSet, write=SetIsReminderSet, stored = IsReminderSet_Specified };
  __property bool           IsTask = { index=(IS_OPTN|IS_NLBL), read=FIsTask, write=SetIsTask, stored = IsTask_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString   Location = { index=(IS_OPTN|IS_NLBL), read=FLocation, write=SetLocation, stored = Location_Specified };
  __property Name_*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property UnicodeString   Priority = { index=(IS_OPTN|IS_NLBL), read=FPriority, write=SetPriority, stored = Priority_Specified };
  __property TXSDateTime* ReminderDateTime = { index=(IS_OPTN|IS_NLBL), read=FReminderDateTime, write=SetReminderDateTime, stored = ReminderDateTime_Specified };
  __property UnicodeString     Status = { index=(IS_OPTN|IS_NLBL), read=FStatus, write=SetStatus, stored = Status_Specified };
  __property UnicodeString    Subject = { index=(IS_OPTN|IS_NLBL), read=FSubject, write=SetSubject, stored = Subject_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property Name_*            What = { index=(IS_OPTN|IS_NLBL), read=FWhat, write=SetWhat, stored = What_Specified };
  __property ID             WhatId = { index=(IS_OPTN|IS_NLBL), read=FWhatId, write=SetWhatId, stored = WhatId_Specified };
  __property Name_*             Who = { index=(IS_OPTN|IS_NLBL), read=FWho, write=SetWho, stored = Who_Specified };
  __property ID              WhoId = { index=(IS_OPTN|IS_NLBL), read=FWhoId, write=SetWhoId, stored = WhoId_Specified };
};




// ************************************************************************ //
// XML       : AccountShare, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class AccountShare : public sObject {
private:
  Account*        FAccount;
  bool            FAccount_Specified;
  UnicodeString   FAccountAccessLevel;
  bool            FAccountAccessLevel_Specified;
  ID              FAccountId;
  bool            FAccountId_Specified;
  UnicodeString   FCaseAccessLevel;
  bool            FCaseAccessLevel_Specified;
  UnicodeString   FContactAccessLevel;
  bool            FContactAccessLevel_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FOpportunityAccessLevel;
  bool            FOpportunityAccessLevel_Specified;
  UnicodeString   FRowCause;
  bool            FRowCause_Specified;
  ID              FUserOrGroupId;
  bool            FUserOrGroupId_Specified;
  Account* __fastcall GetAccount(int Index)
  {  return FAccount;  }
  void __fastcall SetAccount(int Index, Account* _prop_val)
  {  FAccount = _prop_val; FAccount_Specified = true;  }
  bool __fastcall Account_Specified(int Index)
  {  return FAccount_Specified;  } 
  UnicodeString __fastcall GetAccountAccessLevel(int Index)
  {  return FAccountAccessLevel;  }
  void __fastcall SetAccountAccessLevel(int Index, UnicodeString _prop_val)
  {  FAccountAccessLevel = _prop_val; FAccountAccessLevel_Specified = true;  }
  bool __fastcall AccountAccessLevel_Specified(int Index)
  {  return FAccountAccessLevel_Specified;  } 
  ID __fastcall GetAccountId(int Index)
  {  return FAccountId;  }
  void __fastcall SetAccountId(int Index, ID _prop_val)
  {  FAccountId = _prop_val; FAccountId_Specified = true;  }
  bool __fastcall AccountId_Specified(int Index)
  {  return FAccountId_Specified;  } 
  UnicodeString __fastcall GetCaseAccessLevel(int Index)
  {  return FCaseAccessLevel;  }
  void __fastcall SetCaseAccessLevel(int Index, UnicodeString _prop_val)
  {  FCaseAccessLevel = _prop_val; FCaseAccessLevel_Specified = true;  }
  bool __fastcall CaseAccessLevel_Specified(int Index)
  {  return FCaseAccessLevel_Specified;  } 
  UnicodeString __fastcall GetContactAccessLevel(int Index)
  {  return FContactAccessLevel;  }
  void __fastcall SetContactAccessLevel(int Index, UnicodeString _prop_val)
  {  FContactAccessLevel = _prop_val; FContactAccessLevel_Specified = true;  }
  bool __fastcall ContactAccessLevel_Specified(int Index)
  {  return FContactAccessLevel_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetOpportunityAccessLevel(int Index)
  {  return FOpportunityAccessLevel;  }
  void __fastcall SetOpportunityAccessLevel(int Index, UnicodeString _prop_val)
  {  FOpportunityAccessLevel = _prop_val; FOpportunityAccessLevel_Specified = true;  }
  bool __fastcall OpportunityAccessLevel_Specified(int Index)
  {  return FOpportunityAccessLevel_Specified;  } 
  UnicodeString __fastcall GetRowCause(int Index)
  {  return FRowCause;  }
  void __fastcall SetRowCause(int Index, UnicodeString _prop_val)
  {  FRowCause = _prop_val; FRowCause_Specified = true;  }
  bool __fastcall RowCause_Specified(int Index)
  {  return FRowCause_Specified;  } 
  ID __fastcall GetUserOrGroupId(int Index)
  {  return FUserOrGroupId;  }
  void __fastcall SetUserOrGroupId(int Index, ID _prop_val)
  {  FUserOrGroupId = _prop_val; FUserOrGroupId_Specified = true;  }
  bool __fastcall UserOrGroupId_Specified(int Index)
  {  return FUserOrGroupId_Specified;  } 

public:
  __fastcall ~AccountShare();
__published:
  __property Account*      Account = { index=(IS_OPTN|IS_NLBL), read=FAccount, write=SetAccount, stored = Account_Specified };
  __property UnicodeString AccountAccessLevel = { index=(IS_OPTN|IS_NLBL), read=FAccountAccessLevel, write=SetAccountAccessLevel, stored = AccountAccessLevel_Specified };
  __property ID          AccountId = { index=(IS_OPTN|IS_NLBL), read=FAccountId, write=SetAccountId, stored = AccountId_Specified };
  __property UnicodeString CaseAccessLevel = { index=(IS_OPTN|IS_NLBL), read=FCaseAccessLevel, write=SetCaseAccessLevel, stored = CaseAccessLevel_Specified };
  __property UnicodeString ContactAccessLevel = { index=(IS_OPTN|IS_NLBL), read=FContactAccessLevel, write=SetContactAccessLevel, stored = ContactAccessLevel_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString OpportunityAccessLevel = { index=(IS_OPTN|IS_NLBL), read=FOpportunityAccessLevel, write=SetOpportunityAccessLevel, stored = OpportunityAccessLevel_Specified };
  __property UnicodeString   RowCause = { index=(IS_OPTN|IS_NLBL), read=FRowCause, write=SetRowCause, stored = RowCause_Specified };
  __property ID         UserOrGroupId = { index=(IS_OPTN|IS_NLBL), read=FUserOrGroupId, write=SetUserOrGroupId, stored = UserOrGroupId_Specified };
};




// ************************************************************************ //
// XML       : Opportunity, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Opportunity : public sObject {
private:
  Account*        FAccount;
  bool            FAccount_Specified;
  ID              FAccountId;
  bool            FAccountId_Specified;
  QueryResult*    FAccountPartners;
  bool            FAccountPartners_Specified;
  QueryResult*    FActivityHistories;
  bool            FActivityHistories_Specified;
  double          FAmount;
  bool            FAmount_Specified;
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  TXSDate*        FCloseDate;
  bool            FCloseDate_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  QueryResult*    FEvents;
  bool            FEvents_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  QueryResult*    FFeeds;
  bool            FFeeds_Specified;
  UnicodeString   FFiscal;
  bool            FFiscal_Specified;
  int             FFiscalQuarter;
  bool            FFiscalQuarter_Specified;
  int             FFiscalYear;
  bool            FFiscalYear_Specified;
  UnicodeString   FForecastCategory;
  bool            FForecastCategory_Specified;
  UnicodeString   FForecastCategoryName;
  bool            FForecastCategoryName_Specified;
  bool            FHasOpportunityLineItem;
  bool            FHasOpportunityLineItem_Specified;
  QueryResult*    FHistories;
  bool            FHistories_Specified;
  bool            FIsClosed;
  bool            FIsClosed_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsWon;
  bool            FIsWon_Specified;
  TXSDate*        FLastActivityDate;
  bool            FLastActivityDate_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FLeadSource;
  bool            FLeadSource_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  UnicodeString   FNextStep;
  bool            FNextStep_Specified;
  QueryResult*    FNotes;
  bool            FNotes_Specified;
  QueryResult*    FNotesAndAttachments;
  bool            FNotesAndAttachments_Specified;
  QueryResult*    FOpenActivities;
  bool            FOpenActivities_Specified;
  QueryResult*    FOpportunityCompetitors;
  bool            FOpportunityCompetitors_Specified;
  QueryResult*    FOpportunityContactRoles;
  bool            FOpportunityContactRoles_Specified;
  QueryResult*    FOpportunityHistories;
  bool            FOpportunityHistories_Specified;
  QueryResult*    FOpportunityLineItems;
  bool            FOpportunityLineItems_Specified;
  QueryResult*    FOpportunityPartnersFrom;
  bool            FOpportunityPartnersFrom_Specified;
  User*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  QueryResult*    FPartners;
  bool            FPartners_Specified;
  Pricebook2*     FPricebook2;
  bool            FPricebook2_Specified;
  ID              FPricebook2Id;
  bool            FPricebook2Id_Specified;
  double          FProbability;
  bool            FProbability_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  QueryResult*    FShares;
  bool            FShares_Specified;
  UnicodeString   FStageName;
  bool            FStageName_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  QueryResult*    FTasks;
  bool            FTasks_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  Account* __fastcall GetAccount(int Index)
  {  return FAccount;  }
  void __fastcall SetAccount(int Index, Account* _prop_val)
  {  FAccount = _prop_val; FAccount_Specified = true;  }
  bool __fastcall Account_Specified(int Index)
  {  return FAccount_Specified;  } 
  ID __fastcall GetAccountId(int Index)
  {  return FAccountId;  }
  void __fastcall SetAccountId(int Index, ID _prop_val)
  {  FAccountId = _prop_val; FAccountId_Specified = true;  }
  bool __fastcall AccountId_Specified(int Index)
  {  return FAccountId_Specified;  } 
  QueryResult* __fastcall GetAccountPartners(int Index)
  {  return FAccountPartners;  }
  void __fastcall SetAccountPartners(int Index, QueryResult* _prop_val)
  {  FAccountPartners = _prop_val; FAccountPartners_Specified = true;  }
  bool __fastcall AccountPartners_Specified(int Index)
  {  return FAccountPartners_Specified;  } 
  QueryResult* __fastcall GetActivityHistories(int Index)
  {  return FActivityHistories;  }
  void __fastcall SetActivityHistories(int Index, QueryResult* _prop_val)
  {  FActivityHistories = _prop_val; FActivityHistories_Specified = true;  }
  bool __fastcall ActivityHistories_Specified(int Index)
  {  return FActivityHistories_Specified;  } 
  double __fastcall GetAmount(int Index)
  {  return FAmount;  }
  void __fastcall SetAmount(int Index, double _prop_val)
  {  FAmount = _prop_val; FAmount_Specified = true;  }
  bool __fastcall Amount_Specified(int Index)
  {  return FAmount_Specified;  } 
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  TXSDate* __fastcall GetCloseDate(int Index)
  {  return FCloseDate;  }
  void __fastcall SetCloseDate(int Index, TXSDate* _prop_val)
  {  FCloseDate = _prop_val; FCloseDate_Specified = true;  }
  bool __fastcall CloseDate_Specified(int Index)
  {  return FCloseDate_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  QueryResult* __fastcall GetEvents(int Index)
  {  return FEvents;  }
  void __fastcall SetEvents(int Index, QueryResult* _prop_val)
  {  FEvents = _prop_val; FEvents_Specified = true;  }
  bool __fastcall Events_Specified(int Index)
  {  return FEvents_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  QueryResult* __fastcall GetFeeds(int Index)
  {  return FFeeds;  }
  void __fastcall SetFeeds(int Index, QueryResult* _prop_val)
  {  FFeeds = _prop_val; FFeeds_Specified = true;  }
  bool __fastcall Feeds_Specified(int Index)
  {  return FFeeds_Specified;  } 
  UnicodeString __fastcall GetFiscal(int Index)
  {  return FFiscal;  }
  void __fastcall SetFiscal(int Index, UnicodeString _prop_val)
  {  FFiscal = _prop_val; FFiscal_Specified = true;  }
  bool __fastcall Fiscal_Specified(int Index)
  {  return FFiscal_Specified;  } 
  int __fastcall GetFiscalQuarter(int Index)
  {  return FFiscalQuarter;  }
  void __fastcall SetFiscalQuarter(int Index, int _prop_val)
  {  FFiscalQuarter = _prop_val; FFiscalQuarter_Specified = true;  }
  bool __fastcall FiscalQuarter_Specified(int Index)
  {  return FFiscalQuarter_Specified;  } 
  int __fastcall GetFiscalYear(int Index)
  {  return FFiscalYear;  }
  void __fastcall SetFiscalYear(int Index, int _prop_val)
  {  FFiscalYear = _prop_val; FFiscalYear_Specified = true;  }
  bool __fastcall FiscalYear_Specified(int Index)
  {  return FFiscalYear_Specified;  } 
  UnicodeString __fastcall GetForecastCategory(int Index)
  {  return FForecastCategory;  }
  void __fastcall SetForecastCategory(int Index, UnicodeString _prop_val)
  {  FForecastCategory = _prop_val; FForecastCategory_Specified = true;  }
  bool __fastcall ForecastCategory_Specified(int Index)
  {  return FForecastCategory_Specified;  } 
  UnicodeString __fastcall GetForecastCategoryName(int Index)
  {  return FForecastCategoryName;  }
  void __fastcall SetForecastCategoryName(int Index, UnicodeString _prop_val)
  {  FForecastCategoryName = _prop_val; FForecastCategoryName_Specified = true;  }
  bool __fastcall ForecastCategoryName_Specified(int Index)
  {  return FForecastCategoryName_Specified;  } 
  bool __fastcall GetHasOpportunityLineItem(int Index)
  {  return FHasOpportunityLineItem;  }
  void __fastcall SetHasOpportunityLineItem(int Index, bool _prop_val)
  {  FHasOpportunityLineItem = _prop_val; FHasOpportunityLineItem_Specified = true;  }
  bool __fastcall HasOpportunityLineItem_Specified(int Index)
  {  return FHasOpportunityLineItem_Specified;  } 
  QueryResult* __fastcall GetHistories(int Index)
  {  return FHistories;  }
  void __fastcall SetHistories(int Index, QueryResult* _prop_val)
  {  FHistories = _prop_val; FHistories_Specified = true;  }
  bool __fastcall Histories_Specified(int Index)
  {  return FHistories_Specified;  } 
  bool __fastcall GetIsClosed(int Index)
  {  return FIsClosed;  }
  void __fastcall SetIsClosed(int Index, bool _prop_val)
  {  FIsClosed = _prop_val; FIsClosed_Specified = true;  }
  bool __fastcall IsClosed_Specified(int Index)
  {  return FIsClosed_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsWon(int Index)
  {  return FIsWon;  }
  void __fastcall SetIsWon(int Index, bool _prop_val)
  {  FIsWon = _prop_val; FIsWon_Specified = true;  }
  bool __fastcall IsWon_Specified(int Index)
  {  return FIsWon_Specified;  } 
  TXSDate* __fastcall GetLastActivityDate(int Index)
  {  return FLastActivityDate;  }
  void __fastcall SetLastActivityDate(int Index, TXSDate* _prop_val)
  {  FLastActivityDate = _prop_val; FLastActivityDate_Specified = true;  }
  bool __fastcall LastActivityDate_Specified(int Index)
  {  return FLastActivityDate_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetLeadSource(int Index)
  {  return FLeadSource;  }
  void __fastcall SetLeadSource(int Index, UnicodeString _prop_val)
  {  FLeadSource = _prop_val; FLeadSource_Specified = true;  }
  bool __fastcall LeadSource_Specified(int Index)
  {  return FLeadSource_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  UnicodeString __fastcall GetNextStep(int Index)
  {  return FNextStep;  }
  void __fastcall SetNextStep(int Index, UnicodeString _prop_val)
  {  FNextStep = _prop_val; FNextStep_Specified = true;  }
  bool __fastcall NextStep_Specified(int Index)
  {  return FNextStep_Specified;  } 
  QueryResult* __fastcall GetNotes(int Index)
  {  return FNotes;  }
  void __fastcall SetNotes(int Index, QueryResult* _prop_val)
  {  FNotes = _prop_val; FNotes_Specified = true;  }
  bool __fastcall Notes_Specified(int Index)
  {  return FNotes_Specified;  } 
  QueryResult* __fastcall GetNotesAndAttachments(int Index)
  {  return FNotesAndAttachments;  }
  void __fastcall SetNotesAndAttachments(int Index, QueryResult* _prop_val)
  {  FNotesAndAttachments = _prop_val; FNotesAndAttachments_Specified = true;  }
  bool __fastcall NotesAndAttachments_Specified(int Index)
  {  return FNotesAndAttachments_Specified;  } 
  QueryResult* __fastcall GetOpenActivities(int Index)
  {  return FOpenActivities;  }
  void __fastcall SetOpenActivities(int Index, QueryResult* _prop_val)
  {  FOpenActivities = _prop_val; FOpenActivities_Specified = true;  }
  bool __fastcall OpenActivities_Specified(int Index)
  {  return FOpenActivities_Specified;  } 
  QueryResult* __fastcall GetOpportunityCompetitors(int Index)
  {  return FOpportunityCompetitors;  }
  void __fastcall SetOpportunityCompetitors(int Index, QueryResult* _prop_val)
  {  FOpportunityCompetitors = _prop_val; FOpportunityCompetitors_Specified = true;  }
  bool __fastcall OpportunityCompetitors_Specified(int Index)
  {  return FOpportunityCompetitors_Specified;  } 
  QueryResult* __fastcall GetOpportunityContactRoles(int Index)
  {  return FOpportunityContactRoles;  }
  void __fastcall SetOpportunityContactRoles(int Index, QueryResult* _prop_val)
  {  FOpportunityContactRoles = _prop_val; FOpportunityContactRoles_Specified = true;  }
  bool __fastcall OpportunityContactRoles_Specified(int Index)
  {  return FOpportunityContactRoles_Specified;  } 
  QueryResult* __fastcall GetOpportunityHistories(int Index)
  {  return FOpportunityHistories;  }
  void __fastcall SetOpportunityHistories(int Index, QueryResult* _prop_val)
  {  FOpportunityHistories = _prop_val; FOpportunityHistories_Specified = true;  }
  bool __fastcall OpportunityHistories_Specified(int Index)
  {  return FOpportunityHistories_Specified;  } 
  QueryResult* __fastcall GetOpportunityLineItems(int Index)
  {  return FOpportunityLineItems;  }
  void __fastcall SetOpportunityLineItems(int Index, QueryResult* _prop_val)
  {  FOpportunityLineItems = _prop_val; FOpportunityLineItems_Specified = true;  }
  bool __fastcall OpportunityLineItems_Specified(int Index)
  {  return FOpportunityLineItems_Specified;  } 
  QueryResult* __fastcall GetOpportunityPartnersFrom(int Index)
  {  return FOpportunityPartnersFrom;  }
  void __fastcall SetOpportunityPartnersFrom(int Index, QueryResult* _prop_val)
  {  FOpportunityPartnersFrom = _prop_val; FOpportunityPartnersFrom_Specified = true;  }
  bool __fastcall OpportunityPartnersFrom_Specified(int Index)
  {  return FOpportunityPartnersFrom_Specified;  } 
  User* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, User* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  QueryResult* __fastcall GetPartners(int Index)
  {  return FPartners;  }
  void __fastcall SetPartners(int Index, QueryResult* _prop_val)
  {  FPartners = _prop_val; FPartners_Specified = true;  }
  bool __fastcall Partners_Specified(int Index)
  {  return FPartners_Specified;  } 
  Pricebook2* __fastcall GetPricebook2(int Index)
  {  return FPricebook2;  }
  void __fastcall SetPricebook2(int Index, Pricebook2* _prop_val)
  {  FPricebook2 = _prop_val; FPricebook2_Specified = true;  }
  bool __fastcall Pricebook2_Specified(int Index)
  {  return FPricebook2_Specified;  } 
  ID __fastcall GetPricebook2Id(int Index)
  {  return FPricebook2Id;  }
  void __fastcall SetPricebook2Id(int Index, ID _prop_val)
  {  FPricebook2Id = _prop_val; FPricebook2Id_Specified = true;  }
  bool __fastcall Pricebook2Id_Specified(int Index)
  {  return FPricebook2Id_Specified;  } 
  double __fastcall GetProbability(int Index)
  {  return FProbability;  }
  void __fastcall SetProbability(int Index, double _prop_val)
  {  FProbability = _prop_val; FProbability_Specified = true;  }
  bool __fastcall Probability_Specified(int Index)
  {  return FProbability_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  QueryResult* __fastcall GetShares(int Index)
  {  return FShares;  }
  void __fastcall SetShares(int Index, QueryResult* _prop_val)
  {  FShares = _prop_val; FShares_Specified = true;  }
  bool __fastcall Shares_Specified(int Index)
  {  return FShares_Specified;  } 
  UnicodeString __fastcall GetStageName(int Index)
  {  return FStageName;  }
  void __fastcall SetStageName(int Index, UnicodeString _prop_val)
  {  FStageName = _prop_val; FStageName_Specified = true;  }
  bool __fastcall StageName_Specified(int Index)
  {  return FStageName_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  QueryResult* __fastcall GetTasks(int Index)
  {  return FTasks;  }
  void __fastcall SetTasks(int Index, QueryResult* _prop_val)
  {  FTasks = _prop_val; FTasks_Specified = true;  }
  bool __fastcall Tasks_Specified(int Index)
  {  return FTasks_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~Opportunity();
__published:
  __property Account*      Account = { index=(IS_OPTN|IS_NLBL), read=FAccount, write=SetAccount, stored = Account_Specified };
  __property ID          AccountId = { index=(IS_OPTN|IS_NLBL), read=FAccountId, write=SetAccountId, stored = AccountId_Specified };
  __property QueryResult* AccountPartners = { index=(IS_OPTN|IS_NLBL), read=FAccountPartners, write=SetAccountPartners, stored = AccountPartners_Specified };
  __property QueryResult* ActivityHistories = { index=(IS_OPTN|IS_NLBL), read=FActivityHistories, write=SetActivityHistories, stored = ActivityHistories_Specified };
  __property double         Amount = { index=(IS_OPTN|IS_NLBL), read=FAmount, write=SetAmount, stored = Amount_Specified };
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property TXSDate*    CloseDate = { index=(IS_OPTN|IS_NLBL), read=FCloseDate, write=SetCloseDate, stored = CloseDate_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property QueryResult*     Events = { index=(IS_OPTN|IS_NLBL), read=FEvents, write=SetEvents, stored = Events_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property QueryResult*      Feeds = { index=(IS_OPTN|IS_NLBL), read=FFeeds, write=SetFeeds, stored = Feeds_Specified };
  __property UnicodeString     Fiscal = { index=(IS_OPTN|IS_NLBL), read=FFiscal, write=SetFiscal, stored = Fiscal_Specified };
  __property int        FiscalQuarter = { index=(IS_OPTN|IS_NLBL), read=FFiscalQuarter, write=SetFiscalQuarter, stored = FiscalQuarter_Specified };
  __property int        FiscalYear = { index=(IS_OPTN|IS_NLBL), read=FFiscalYear, write=SetFiscalYear, stored = FiscalYear_Specified };
  __property UnicodeString ForecastCategory = { index=(IS_OPTN|IS_NLBL), read=FForecastCategory, write=SetForecastCategory, stored = ForecastCategory_Specified };
  __property UnicodeString ForecastCategoryName = { index=(IS_OPTN|IS_NLBL), read=FForecastCategoryName, write=SetForecastCategoryName, stored = ForecastCategoryName_Specified };
  __property bool       HasOpportunityLineItem = { index=(IS_OPTN|IS_NLBL), read=FHasOpportunityLineItem, write=SetHasOpportunityLineItem, stored = HasOpportunityLineItem_Specified };
  __property QueryResult*  Histories = { index=(IS_OPTN|IS_NLBL), read=FHistories, write=SetHistories, stored = Histories_Specified };
  __property bool         IsClosed = { index=(IS_OPTN|IS_NLBL), read=FIsClosed, write=SetIsClosed, stored = IsClosed_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool            IsWon = { index=(IS_OPTN|IS_NLBL), read=FIsWon, write=SetIsWon, stored = IsWon_Specified };
  __property TXSDate*   LastActivityDate = { index=(IS_OPTN|IS_NLBL), read=FLastActivityDate, write=SetLastActivityDate, stored = LastActivityDate_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString LeadSource = { index=(IS_OPTN|IS_NLBL), read=FLeadSource, write=SetLeadSource, stored = LeadSource_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property UnicodeString   NextStep = { index=(IS_OPTN|IS_NLBL), read=FNextStep, write=SetNextStep, stored = NextStep_Specified };
  __property QueryResult*      Notes = { index=(IS_OPTN|IS_NLBL), read=FNotes, write=SetNotes, stored = Notes_Specified };
  __property QueryResult* NotesAndAttachments = { index=(IS_OPTN|IS_NLBL), read=FNotesAndAttachments, write=SetNotesAndAttachments, stored = NotesAndAttachments_Specified };
  __property QueryResult* OpenActivities = { index=(IS_OPTN|IS_NLBL), read=FOpenActivities, write=SetOpenActivities, stored = OpenActivities_Specified };
  __property QueryResult* OpportunityCompetitors = { index=(IS_OPTN|IS_NLBL), read=FOpportunityCompetitors, write=SetOpportunityCompetitors, stored = OpportunityCompetitors_Specified };
  __property QueryResult* OpportunityContactRoles = { index=(IS_OPTN|IS_NLBL), read=FOpportunityContactRoles, write=SetOpportunityContactRoles, stored = OpportunityContactRoles_Specified };
  __property QueryResult* OpportunityHistories = { index=(IS_OPTN|IS_NLBL), read=FOpportunityHistories, write=SetOpportunityHistories, stored = OpportunityHistories_Specified };
  __property QueryResult* OpportunityLineItems = { index=(IS_OPTN|IS_NLBL), read=FOpportunityLineItems, write=SetOpportunityLineItems, stored = OpportunityLineItems_Specified };
  __property QueryResult* OpportunityPartnersFrom = { index=(IS_OPTN|IS_NLBL), read=FOpportunityPartnersFrom, write=SetOpportunityPartnersFrom, stored = OpportunityPartnersFrom_Specified };
  __property User*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property QueryResult*   Partners = { index=(IS_OPTN|IS_NLBL), read=FPartners, write=SetPartners, stored = Partners_Specified };
  __property Pricebook2* Pricebook2 = { index=(IS_OPTN|IS_NLBL), read=FPricebook2, write=SetPricebook2, stored = Pricebook2_Specified };
  __property ID         Pricebook2Id = { index=(IS_OPTN|IS_NLBL), read=FPricebook2Id, write=SetPricebook2Id, stored = Pricebook2Id_Specified };
  __property double     Probability = { index=(IS_OPTN|IS_NLBL), read=FProbability, write=SetProbability, stored = Probability_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property QueryResult*     Shares = { index=(IS_OPTN|IS_NLBL), read=FShares, write=SetShares, stored = Shares_Specified };
  __property UnicodeString  StageName = { index=(IS_OPTN|IS_NLBL), read=FStageName, write=SetStageName, stored = StageName_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property QueryResult*      Tasks = { index=(IS_OPTN|IS_NLBL), read=FTasks, write=SetTasks, stored = Tasks_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : AccountPartner, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class AccountPartner : public sObject {
private:
  Account*        FAccountFrom;
  bool            FAccountFrom_Specified;
  ID              FAccountFromId;
  bool            FAccountFromId_Specified;
  Account*        FAccountTo;
  bool            FAccountTo_Specified;
  ID              FAccountToId;
  bool            FAccountToId_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsPrimary;
  bool            FIsPrimary_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  Opportunity*    FOpportunity;
  bool            FOpportunity_Specified;
  ID              FOpportunityId;
  bool            FOpportunityId_Specified;
  ID              FReversePartnerId;
  bool            FReversePartnerId_Specified;
  UnicodeString   FRole;
  bool            FRole_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  Account* __fastcall GetAccountFrom(int Index)
  {  return FAccountFrom;  }
  void __fastcall SetAccountFrom(int Index, Account* _prop_val)
  {  FAccountFrom = _prop_val; FAccountFrom_Specified = true;  }
  bool __fastcall AccountFrom_Specified(int Index)
  {  return FAccountFrom_Specified;  } 
  ID __fastcall GetAccountFromId(int Index)
  {  return FAccountFromId;  }
  void __fastcall SetAccountFromId(int Index, ID _prop_val)
  {  FAccountFromId = _prop_val; FAccountFromId_Specified = true;  }
  bool __fastcall AccountFromId_Specified(int Index)
  {  return FAccountFromId_Specified;  } 
  Account* __fastcall GetAccountTo(int Index)
  {  return FAccountTo;  }
  void __fastcall SetAccountTo(int Index, Account* _prop_val)
  {  FAccountTo = _prop_val; FAccountTo_Specified = true;  }
  bool __fastcall AccountTo_Specified(int Index)
  {  return FAccountTo_Specified;  } 
  ID __fastcall GetAccountToId(int Index)
  {  return FAccountToId;  }
  void __fastcall SetAccountToId(int Index, ID _prop_val)
  {  FAccountToId = _prop_val; FAccountToId_Specified = true;  }
  bool __fastcall AccountToId_Specified(int Index)
  {  return FAccountToId_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsPrimary(int Index)
  {  return FIsPrimary;  }
  void __fastcall SetIsPrimary(int Index, bool _prop_val)
  {  FIsPrimary = _prop_val; FIsPrimary_Specified = true;  }
  bool __fastcall IsPrimary_Specified(int Index)
  {  return FIsPrimary_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  Opportunity* __fastcall GetOpportunity(int Index)
  {  return FOpportunity;  }
  void __fastcall SetOpportunity(int Index, Opportunity* _prop_val)
  {  FOpportunity = _prop_val; FOpportunity_Specified = true;  }
  bool __fastcall Opportunity_Specified(int Index)
  {  return FOpportunity_Specified;  } 
  ID __fastcall GetOpportunityId(int Index)
  {  return FOpportunityId;  }
  void __fastcall SetOpportunityId(int Index, ID _prop_val)
  {  FOpportunityId = _prop_val; FOpportunityId_Specified = true;  }
  bool __fastcall OpportunityId_Specified(int Index)
  {  return FOpportunityId_Specified;  } 
  ID __fastcall GetReversePartnerId(int Index)
  {  return FReversePartnerId;  }
  void __fastcall SetReversePartnerId(int Index, ID _prop_val)
  {  FReversePartnerId = _prop_val; FReversePartnerId_Specified = true;  }
  bool __fastcall ReversePartnerId_Specified(int Index)
  {  return FReversePartnerId_Specified;  } 
  UnicodeString __fastcall GetRole(int Index)
  {  return FRole;  }
  void __fastcall SetRole(int Index, UnicodeString _prop_val)
  {  FRole = _prop_val; FRole_Specified = true;  }
  bool __fastcall Role_Specified(int Index)
  {  return FRole_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~AccountPartner();
__published:
  __property Account*   AccountFrom = { index=(IS_OPTN|IS_NLBL), read=FAccountFrom, write=SetAccountFrom, stored = AccountFrom_Specified };
  __property ID         AccountFromId = { index=(IS_OPTN|IS_NLBL), read=FAccountFromId, write=SetAccountFromId, stored = AccountFromId_Specified };
  __property Account*    AccountTo = { index=(IS_OPTN|IS_NLBL), read=FAccountTo, write=SetAccountTo, stored = AccountTo_Specified };
  __property ID         AccountToId = { index=(IS_OPTN|IS_NLBL), read=FAccountToId, write=SetAccountToId, stored = AccountToId_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool        IsPrimary = { index=(IS_OPTN|IS_NLBL), read=FIsPrimary, write=SetIsPrimary, stored = IsPrimary_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property Opportunity* Opportunity = { index=(IS_OPTN|IS_NLBL), read=FOpportunity, write=SetOpportunity, stored = Opportunity_Specified };
  __property ID         OpportunityId = { index=(IS_OPTN|IS_NLBL), read=FOpportunityId, write=SetOpportunityId, stored = OpportunityId_Specified };
  __property ID         ReversePartnerId = { index=(IS_OPTN|IS_NLBL), read=FReversePartnerId, write=SetReversePartnerId, stored = ReversePartnerId_Specified };
  __property UnicodeString       Role = { index=(IS_OPTN|IS_NLBL), read=FRole, write=SetRole, stored = Role_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : AccountHistory, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class AccountHistory : public sObject {
private:
  Account*        FAccount;
  bool            FAccount_Specified;
  ID              FAccountId;
  bool            FAccountId_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FField;
  bool            FField_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  Variant         FNewValue;
  bool            FNewValue_Specified;
  Variant         FOldValue;
  bool            FOldValue_Specified;
  Account* __fastcall GetAccount(int Index)
  {  return FAccount;  }
  void __fastcall SetAccount(int Index, Account* _prop_val)
  {  FAccount = _prop_val; FAccount_Specified = true;  }
  bool __fastcall Account_Specified(int Index)
  {  return FAccount_Specified;  } 
  ID __fastcall GetAccountId(int Index)
  {  return FAccountId;  }
  void __fastcall SetAccountId(int Index, ID _prop_val)
  {  FAccountId = _prop_val; FAccountId_Specified = true;  }
  bool __fastcall AccountId_Specified(int Index)
  {  return FAccountId_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetField(int Index)
  {  return FField;  }
  void __fastcall SetField(int Index, UnicodeString _prop_val)
  {  FField = _prop_val; FField_Specified = true;  }
  bool __fastcall Field_Specified(int Index)
  {  return FField_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  Variant __fastcall GetNewValue(int Index)
  {  return FNewValue;  }
  void __fastcall SetNewValue(int Index, Variant _prop_val)
  {  FNewValue = _prop_val; FNewValue_Specified = true;  }
  bool __fastcall NewValue_Specified(int Index)
  {  return FNewValue_Specified;  } 
  Variant __fastcall GetOldValue(int Index)
  {  return FOldValue;  }
  void __fastcall SetOldValue(int Index, Variant _prop_val)
  {  FOldValue = _prop_val; FOldValue_Specified = true;  }
  bool __fastcall OldValue_Specified(int Index)
  {  return FOldValue_Specified;  } 

public:
  __fastcall ~AccountHistory();
__published:
  __property Account*      Account = { index=(IS_OPTN|IS_NLBL), read=FAccount, write=SetAccount, stored = Account_Specified };
  __property ID          AccountId = { index=(IS_OPTN|IS_NLBL), read=FAccountId, write=SetAccountId, stored = AccountId_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString      Field = { index=(IS_OPTN|IS_NLBL), read=FField, write=SetField, stored = Field_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property Variant      NewValue = { index=(IS_OPTN|IS_NLBL), read=FNewValue, write=SetNewValue, stored = NewValue_Specified };
  __property Variant      OldValue = { index=(IS_OPTN|IS_NLBL), read=FOldValue, write=SetOldValue, stored = OldValue_Specified };
};




// ************************************************************************ //
// XML       : Name, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Name_ : public sObject {
private:
  UnicodeString   FAlias;
  bool            FAlias_Specified;
  UnicodeString   FEmail;
  bool            FEmail_Specified;
  UnicodeString   FFirstName;
  bool            FFirstName_Specified;
  bool            FIsActive;
  bool            FIsActive_Specified;
  UnicodeString   FLastName;
  bool            FLastName_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  UnicodeString   FPhone;
  bool            FPhone_Specified;
  Profile*        FProfile;
  bool            FProfile_Specified;
  ID              FProfileId;
  bool            FProfileId_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UserRole*       FUserRole;
  bool            FUserRole_Specified;
  ID              FUserRoleId;
  bool            FUserRoleId_Specified;
  UnicodeString   FUsername;
  bool            FUsername_Specified;
  UnicodeString __fastcall GetAlias(int Index)
  {  return FAlias;  }
  void __fastcall SetAlias(int Index, UnicodeString _prop_val)
  {  FAlias = _prop_val; FAlias_Specified = true;  }
  bool __fastcall Alias_Specified(int Index)
  {  return FAlias_Specified;  } 
  UnicodeString __fastcall GetEmail(int Index)
  {  return FEmail;  }
  void __fastcall SetEmail(int Index, UnicodeString _prop_val)
  {  FEmail = _prop_val; FEmail_Specified = true;  }
  bool __fastcall Email_Specified(int Index)
  {  return FEmail_Specified;  } 
  UnicodeString __fastcall GetFirstName(int Index)
  {  return FFirstName;  }
  void __fastcall SetFirstName(int Index, UnicodeString _prop_val)
  {  FFirstName = _prop_val; FFirstName_Specified = true;  }
  bool __fastcall FirstName_Specified(int Index)
  {  return FFirstName_Specified;  } 
  bool __fastcall GetIsActive(int Index)
  {  return FIsActive;  }
  void __fastcall SetIsActive(int Index, bool _prop_val)
  {  FIsActive = _prop_val; FIsActive_Specified = true;  }
  bool __fastcall IsActive_Specified(int Index)
  {  return FIsActive_Specified;  } 
  UnicodeString __fastcall GetLastName(int Index)
  {  return FLastName;  }
  void __fastcall SetLastName(int Index, UnicodeString _prop_val)
  {  FLastName = _prop_val; FLastName_Specified = true;  }
  bool __fastcall LastName_Specified(int Index)
  {  return FLastName_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  UnicodeString __fastcall GetPhone(int Index)
  {  return FPhone;  }
  void __fastcall SetPhone(int Index, UnicodeString _prop_val)
  {  FPhone = _prop_val; FPhone_Specified = true;  }
  bool __fastcall Phone_Specified(int Index)
  {  return FPhone_Specified;  } 
  Profile* __fastcall GetProfile(int Index)
  {  return FProfile;  }
  void __fastcall SetProfile(int Index, Profile* _prop_val)
  {  FProfile = _prop_val; FProfile_Specified = true;  }
  bool __fastcall Profile_Specified(int Index)
  {  return FProfile_Specified;  } 
  ID __fastcall GetProfileId(int Index)
  {  return FProfileId;  }
  void __fastcall SetProfileId(int Index, ID _prop_val)
  {  FProfileId = _prop_val; FProfileId_Specified = true;  }
  bool __fastcall ProfileId_Specified(int Index)
  {  return FProfileId_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 
  UserRole* __fastcall GetUserRole(int Index)
  {  return FUserRole;  }
  void __fastcall SetUserRole(int Index, UserRole* _prop_val)
  {  FUserRole = _prop_val; FUserRole_Specified = true;  }
  bool __fastcall UserRole_Specified(int Index)
  {  return FUserRole_Specified;  } 
  ID __fastcall GetUserRoleId(int Index)
  {  return FUserRoleId;  }
  void __fastcall SetUserRoleId(int Index, ID _prop_val)
  {  FUserRoleId = _prop_val; FUserRoleId_Specified = true;  }
  bool __fastcall UserRoleId_Specified(int Index)
  {  return FUserRoleId_Specified;  } 
  UnicodeString __fastcall GetUsername(int Index)
  {  return FUsername;  }
  void __fastcall SetUsername(int Index, UnicodeString _prop_val)
  {  FUsername = _prop_val; FUsername_Specified = true;  }
  bool __fastcall Username_Specified(int Index)
  {  return FUsername_Specified;  } 

public:
  __fastcall ~Name_();
__published:
  __property UnicodeString      Alias = { index=(IS_OPTN|IS_NLBL), read=FAlias, write=SetAlias, stored = Alias_Specified };
  __property UnicodeString      Email = { index=(IS_OPTN|IS_NLBL), read=FEmail, write=SetEmail, stored = Email_Specified };
  __property UnicodeString  FirstName = { index=(IS_OPTN|IS_NLBL), read=FFirstName, write=SetFirstName, stored = FirstName_Specified };
  __property bool         IsActive = { index=(IS_OPTN|IS_NLBL), read=FIsActive, write=SetIsActive, stored = IsActive_Specified };
  __property UnicodeString   LastName = { index=(IS_OPTN|IS_NLBL), read=FLastName, write=SetLastName, stored = LastName_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property UnicodeString      Phone = { index=(IS_OPTN|IS_NLBL), read=FPhone, write=SetPhone, stored = Phone_Specified };
  __property Profile*      Profile = { index=(IS_OPTN|IS_NLBL), read=FProfile, write=SetProfile, stored = Profile_Specified };
  __property ID          ProfileId = { index=(IS_OPTN|IS_NLBL), read=FProfileId, write=SetProfileId, stored = ProfileId_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
  __property UserRole*    UserRole = { index=(IS_OPTN|IS_NLBL), read=FUserRole, write=SetUserRole, stored = UserRole_Specified };
  __property ID         UserRoleId = { index=(IS_OPTN|IS_NLBL), read=FUserRoleId, write=SetUserRoleId, stored = UserRoleId_Specified };
  __property UnicodeString   Username = { index=(IS_OPTN|IS_NLBL), read=FUsername, write=SetUsername, stored = Username_Specified };
};




// ************************************************************************ //
// XML       : AccountFeed, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class AccountFeed : public sObject {
private:
  UnicodeString   FBody;
  bool            FBody_Specified;
  int             FCommentCount;
  bool            FCommentCount_Specified;
  TByteDynArray   FContentData;
  bool            FContentData_Specified;
  UnicodeString   FContentDescription;
  bool            FContentDescription_Specified;
  UnicodeString   FContentFileName;
  bool            FContentFileName_Specified;
  int             FContentSize;
  bool            FContentSize_Specified;
  UnicodeString   FContentType;
  bool            FContentType_Specified;
  Name_*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  QueryResult*    FFeedComments;
  bool            FFeedComments_Specified;
  QueryResult*    FFeedLikes;
  bool            FFeedLikes_Specified;
  QueryResult*    FFeedTrackedChanges;
  bool            FFeedTrackedChanges_Specified;
  Name_*           FInsertedBy;
  bool            FInsertedBy_Specified;
  ID              FInsertedById;
  bool            FInsertedById_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  int             FLikeCount;
  bool            FLikeCount_Specified;
  UnicodeString   FLinkUrl;
  bool            FLinkUrl_Specified;
  Account*        FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  ID              FRelatedRecordId;
  bool            FRelatedRecordId_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString __fastcall GetBody(int Index)
  {  return FBody;  }
  void __fastcall SetBody(int Index, UnicodeString _prop_val)
  {  FBody = _prop_val; FBody_Specified = true;  }
  bool __fastcall Body_Specified(int Index)
  {  return FBody_Specified;  } 
  int __fastcall GetCommentCount(int Index)
  {  return FCommentCount;  }
  void __fastcall SetCommentCount(int Index, int _prop_val)
  {  FCommentCount = _prop_val; FCommentCount_Specified = true;  }
  bool __fastcall CommentCount_Specified(int Index)
  {  return FCommentCount_Specified;  } 
  TByteDynArray __fastcall GetContentData(int Index)
  {  return FContentData;  }
  void __fastcall SetContentData(int Index, TByteDynArray _prop_val)
  {  FContentData = _prop_val; FContentData_Specified = true;  }
  bool __fastcall ContentData_Specified(int Index)
  {  return FContentData_Specified;  } 
  UnicodeString __fastcall GetContentDescription(int Index)
  {  return FContentDescription;  }
  void __fastcall SetContentDescription(int Index, UnicodeString _prop_val)
  {  FContentDescription = _prop_val; FContentDescription_Specified = true;  }
  bool __fastcall ContentDescription_Specified(int Index)
  {  return FContentDescription_Specified;  } 
  UnicodeString __fastcall GetContentFileName(int Index)
  {  return FContentFileName;  }
  void __fastcall SetContentFileName(int Index, UnicodeString _prop_val)
  {  FContentFileName = _prop_val; FContentFileName_Specified = true;  }
  bool __fastcall ContentFileName_Specified(int Index)
  {  return FContentFileName_Specified;  } 
  int __fastcall GetContentSize(int Index)
  {  return FContentSize;  }
  void __fastcall SetContentSize(int Index, int _prop_val)
  {  FContentSize = _prop_val; FContentSize_Specified = true;  }
  bool __fastcall ContentSize_Specified(int Index)
  {  return FContentSize_Specified;  } 
  UnicodeString __fastcall GetContentType(int Index)
  {  return FContentType;  }
  void __fastcall SetContentType(int Index, UnicodeString _prop_val)
  {  FContentType = _prop_val; FContentType_Specified = true;  }
  bool __fastcall ContentType_Specified(int Index)
  {  return FContentType_Specified;  } 
  Name_* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, Name_* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  QueryResult* __fastcall GetFeedComments(int Index)
  {  return FFeedComments;  }
  void __fastcall SetFeedComments(int Index, QueryResult* _prop_val)
  {  FFeedComments = _prop_val; FFeedComments_Specified = true;  }
  bool __fastcall FeedComments_Specified(int Index)
  {  return FFeedComments_Specified;  } 
  QueryResult* __fastcall GetFeedLikes(int Index)
  {  return FFeedLikes;  }
  void __fastcall SetFeedLikes(int Index, QueryResult* _prop_val)
  {  FFeedLikes = _prop_val; FFeedLikes_Specified = true;  }
  bool __fastcall FeedLikes_Specified(int Index)
  {  return FFeedLikes_Specified;  } 
  QueryResult* __fastcall GetFeedTrackedChanges(int Index)
  {  return FFeedTrackedChanges;  }
  void __fastcall SetFeedTrackedChanges(int Index, QueryResult* _prop_val)
  {  FFeedTrackedChanges = _prop_val; FFeedTrackedChanges_Specified = true;  }
  bool __fastcall FeedTrackedChanges_Specified(int Index)
  {  return FFeedTrackedChanges_Specified;  } 
  Name_* __fastcall GetInsertedBy(int Index)
  {  return FInsertedBy;  }
  void __fastcall SetInsertedBy(int Index, Name_* _prop_val)
  {  FInsertedBy = _prop_val; FInsertedBy_Specified = true;  }
  bool __fastcall InsertedBy_Specified(int Index)
  {  return FInsertedBy_Specified;  } 
  ID __fastcall GetInsertedById(int Index)
  {  return FInsertedById;  }
  void __fastcall SetInsertedById(int Index, ID _prop_val)
  {  FInsertedById = _prop_val; FInsertedById_Specified = true;  }
  bool __fastcall InsertedById_Specified(int Index)
  {  return FInsertedById_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  int __fastcall GetLikeCount(int Index)
  {  return FLikeCount;  }
  void __fastcall SetLikeCount(int Index, int _prop_val)
  {  FLikeCount = _prop_val; FLikeCount_Specified = true;  }
  bool __fastcall LikeCount_Specified(int Index)
  {  return FLikeCount_Specified;  } 
  UnicodeString __fastcall GetLinkUrl(int Index)
  {  return FLinkUrl;  }
  void __fastcall SetLinkUrl(int Index, UnicodeString _prop_val)
  {  FLinkUrl = _prop_val; FLinkUrl_Specified = true;  }
  bool __fastcall LinkUrl_Specified(int Index)
  {  return FLinkUrl_Specified;  } 
  Account* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Account* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  ID __fastcall GetRelatedRecordId(int Index)
  {  return FRelatedRecordId;  }
  void __fastcall SetRelatedRecordId(int Index, ID _prop_val)
  {  FRelatedRecordId = _prop_val; FRelatedRecordId_Specified = true;  }
  bool __fastcall RelatedRecordId_Specified(int Index)
  {  return FRelatedRecordId_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 

public:
  __fastcall ~AccountFeed();
__published:
  __property UnicodeString       Body = { index=(IS_OPTN|IS_NLBL), read=FBody, write=SetBody, stored = Body_Specified };
  __property int        CommentCount = { index=(IS_OPTN|IS_NLBL), read=FCommentCount, write=SetCommentCount, stored = CommentCount_Specified };
  __property TByteDynArray ContentData = { index=(IS_OPTN|IS_NLBL), read=FContentData, write=SetContentData, stored = ContentData_Specified };
  __property UnicodeString ContentDescription = { index=(IS_OPTN|IS_NLBL), read=FContentDescription, write=SetContentDescription, stored = ContentDescription_Specified };
  __property UnicodeString ContentFileName = { index=(IS_OPTN|IS_NLBL), read=FContentFileName, write=SetContentFileName, stored = ContentFileName_Specified };
  __property int        ContentSize = { index=(IS_OPTN|IS_NLBL), read=FContentSize, write=SetContentSize, stored = ContentSize_Specified };
  __property UnicodeString ContentType = { index=(IS_OPTN|IS_NLBL), read=FContentType, write=SetContentType, stored = ContentType_Specified };
  __property Name_*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property QueryResult* FeedComments = { index=(IS_OPTN|IS_NLBL), read=FFeedComments, write=SetFeedComments, stored = FeedComments_Specified };
  __property QueryResult*  FeedLikes = { index=(IS_OPTN|IS_NLBL), read=FFeedLikes, write=SetFeedLikes, stored = FeedLikes_Specified };
  __property QueryResult* FeedTrackedChanges = { index=(IS_OPTN|IS_NLBL), read=FFeedTrackedChanges, write=SetFeedTrackedChanges, stored = FeedTrackedChanges_Specified };
  __property Name_*      InsertedBy = { index=(IS_OPTN|IS_NLBL), read=FInsertedBy, write=SetInsertedBy, stored = InsertedBy_Specified };
  __property ID         InsertedById = { index=(IS_OPTN|IS_NLBL), read=FInsertedById, write=SetInsertedById, stored = InsertedById_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property int         LikeCount = { index=(IS_OPTN|IS_NLBL), read=FLikeCount, write=SetLikeCount, stored = LikeCount_Specified };
  __property UnicodeString    LinkUrl = { index=(IS_OPTN|IS_NLBL), read=FLinkUrl, write=SetLinkUrl, stored = LinkUrl_Specified };
  __property Account*       Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property ID         RelatedRecordId = { index=(IS_OPTN|IS_NLBL), read=FRelatedRecordId, write=SetRelatedRecordId, stored = RelatedRecordId_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
};




// ************************************************************************ //
// XML       : Contact, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Contact : public sObject {
private:
  Account*        FAccount;
  bool            FAccount_Specified;
  QueryResult*    FAccountContactRoles;
  bool            FAccountContactRoles_Specified;
  ID              FAccountId;
  bool            FAccountId_Specified;
  QueryResult*    FActivityHistories;
  bool            FActivityHistories_Specified;
  QueryResult*    FAssets;
  bool            FAssets_Specified;
  UnicodeString   FAssistantName;
  bool            FAssistantName_Specified;
  UnicodeString   FAssistantPhone;
  bool            FAssistantPhone_Specified;
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  TXSDate*        FBirthdate;
  bool            FBirthdate_Specified;
  QueryResult*    FCaseContactRoles;
  bool            FCaseContactRoles_Specified;
  QueryResult*    FCases;
  bool            FCases_Specified;
  QueryResult*    FContractContactRoles;
  bool            FContractContactRoles_Specified;
  QueryResult*    FContractsSigned;
  bool            FContractsSigned_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDepartment;
  bool            FDepartment_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  UnicodeString   FEmail;
  bool            FEmail_Specified;
  TXSDateTime*    FEmailBouncedDate;
  bool            FEmailBouncedDate_Specified;
  UnicodeString   FEmailBouncedReason;
  bool            FEmailBouncedReason_Specified;
  QueryResult*    FEmailStatuses;
  bool            FEmailStatuses_Specified;
  QueryResult*    FEvents;
  bool            FEvents_Specified;
  UnicodeString   FFax;
  bool            FFax_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  QueryResult*    FFeeds;
  bool            FFeeds_Specified;
  UnicodeString   FFirstName;
  bool            FFirstName_Specified;
  QueryResult*    FHistories;
  bool            FHistories_Specified;
  UnicodeString   FHomePhone;
  bool            FHomePhone_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  UnicodeString   FJigsaw;
  bool            FJigsaw_Specified;
  UnicodeString   FJigsawContactId;
  bool            FJigsawContactId_Specified;
  TXSDate*        FLastActivityDate;
  bool            FLastActivityDate_Specified;
  TXSDateTime*    FLastCURequestDate;
  bool            FLastCURequestDate_Specified;
  TXSDateTime*    FLastCUUpdateDate;
  bool            FLastCUUpdateDate_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FLastName;
  bool            FLastName_Specified;
  UnicodeString   FLeadSource;
  bool            FLeadSource_Specified;
  UnicodeString   FMailingCity;
  bool            FMailingCity_Specified;
  UnicodeString   FMailingCountry;
  bool            FMailingCountry_Specified;
  UnicodeString   FMailingPostalCode;
  bool            FMailingPostalCode_Specified;
  UnicodeString   FMailingState;
  bool            FMailingState_Specified;
  UnicodeString   FMailingStreet;
  bool            FMailingStreet_Specified;
  Contact*        FMasterRecord;
  bool            FMasterRecord_Specified;
  ID              FMasterRecordId;
  bool            FMasterRecordId_Specified;
  UnicodeString   FMobilePhone;
  bool            FMobilePhone_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  QueryResult*    FNotes;
  bool            FNotes_Specified;
  QueryResult*    FNotesAndAttachments;
  bool            FNotesAndAttachments_Specified;
  QueryResult*    FOpenActivities;
  bool            FOpenActivities_Specified;
  QueryResult*    FOpportunities;
  bool            FOpportunities_Specified;
  QueryResult*    FOpportunityContactRoles;
  bool            FOpportunityContactRoles_Specified;
  UnicodeString   FOtherCity;
  bool            FOtherCity_Specified;
  UnicodeString   FOtherCountry;
  bool            FOtherCountry_Specified;
  UnicodeString   FOtherPhone;
  bool            FOtherPhone_Specified;
  UnicodeString   FOtherPostalCode;
  bool            FOtherPostalCode_Specified;
  UnicodeString   FOtherState;
  bool            FOtherState_Specified;
  UnicodeString   FOtherStreet;
  bool            FOtherStreet_Specified;
  User*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  UnicodeString   FPhone;
  bool            FPhone_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  Contact*        FReportsTo;
  bool            FReportsTo_Specified;
  ID              FReportsToId;
  bool            FReportsToId_Specified;
  UnicodeString   FSalutation;
  bool            FSalutation_Specified;
  QueryResult*    FShares;
  bool            FShares_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  QueryResult*    FTasks;
  bool            FTasks_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  Account* __fastcall GetAccount(int Index)
  {  return FAccount;  }
  void __fastcall SetAccount(int Index, Account* _prop_val)
  {  FAccount = _prop_val; FAccount_Specified = true;  }
  bool __fastcall Account_Specified(int Index)
  {  return FAccount_Specified;  } 
  QueryResult* __fastcall GetAccountContactRoles(int Index)
  {  return FAccountContactRoles;  }
  void __fastcall SetAccountContactRoles(int Index, QueryResult* _prop_val)
  {  FAccountContactRoles = _prop_val; FAccountContactRoles_Specified = true;  }
  bool __fastcall AccountContactRoles_Specified(int Index)
  {  return FAccountContactRoles_Specified;  } 
  ID __fastcall GetAccountId(int Index)
  {  return FAccountId;  }
  void __fastcall SetAccountId(int Index, ID _prop_val)
  {  FAccountId = _prop_val; FAccountId_Specified = true;  }
  bool __fastcall AccountId_Specified(int Index)
  {  return FAccountId_Specified;  } 
  QueryResult* __fastcall GetActivityHistories(int Index)
  {  return FActivityHistories;  }
  void __fastcall SetActivityHistories(int Index, QueryResult* _prop_val)
  {  FActivityHistories = _prop_val; FActivityHistories_Specified = true;  }
  bool __fastcall ActivityHistories_Specified(int Index)
  {  return FActivityHistories_Specified;  } 
  QueryResult* __fastcall GetAssets(int Index)
  {  return FAssets;  }
  void __fastcall SetAssets(int Index, QueryResult* _prop_val)
  {  FAssets = _prop_val; FAssets_Specified = true;  }
  bool __fastcall Assets_Specified(int Index)
  {  return FAssets_Specified;  } 
  UnicodeString __fastcall GetAssistantName(int Index)
  {  return FAssistantName;  }
  void __fastcall SetAssistantName(int Index, UnicodeString _prop_val)
  {  FAssistantName = _prop_val; FAssistantName_Specified = true;  }
  bool __fastcall AssistantName_Specified(int Index)
  {  return FAssistantName_Specified;  } 
  UnicodeString __fastcall GetAssistantPhone(int Index)
  {  return FAssistantPhone;  }
  void __fastcall SetAssistantPhone(int Index, UnicodeString _prop_val)
  {  FAssistantPhone = _prop_val; FAssistantPhone_Specified = true;  }
  bool __fastcall AssistantPhone_Specified(int Index)
  {  return FAssistantPhone_Specified;  } 
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  TXSDate* __fastcall GetBirthdate(int Index)
  {  return FBirthdate;  }
  void __fastcall SetBirthdate(int Index, TXSDate* _prop_val)
  {  FBirthdate = _prop_val; FBirthdate_Specified = true;  }
  bool __fastcall Birthdate_Specified(int Index)
  {  return FBirthdate_Specified;  } 
  QueryResult* __fastcall GetCaseContactRoles(int Index)
  {  return FCaseContactRoles;  }
  void __fastcall SetCaseContactRoles(int Index, QueryResult* _prop_val)
  {  FCaseContactRoles = _prop_val; FCaseContactRoles_Specified = true;  }
  bool __fastcall CaseContactRoles_Specified(int Index)
  {  return FCaseContactRoles_Specified;  } 
  QueryResult* __fastcall GetCases(int Index)
  {  return FCases;  }
  void __fastcall SetCases(int Index, QueryResult* _prop_val)
  {  FCases = _prop_val; FCases_Specified = true;  }
  bool __fastcall Cases_Specified(int Index)
  {  return FCases_Specified;  } 
  QueryResult* __fastcall GetContractContactRoles(int Index)
  {  return FContractContactRoles;  }
  void __fastcall SetContractContactRoles(int Index, QueryResult* _prop_val)
  {  FContractContactRoles = _prop_val; FContractContactRoles_Specified = true;  }
  bool __fastcall ContractContactRoles_Specified(int Index)
  {  return FContractContactRoles_Specified;  } 
  QueryResult* __fastcall GetContractsSigned(int Index)
  {  return FContractsSigned;  }
  void __fastcall SetContractsSigned(int Index, QueryResult* _prop_val)
  {  FContractsSigned = _prop_val; FContractsSigned_Specified = true;  }
  bool __fastcall ContractsSigned_Specified(int Index)
  {  return FContractsSigned_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDepartment(int Index)
  {  return FDepartment;  }
  void __fastcall SetDepartment(int Index, UnicodeString _prop_val)
  {  FDepartment = _prop_val; FDepartment_Specified = true;  }
  bool __fastcall Department_Specified(int Index)
  {  return FDepartment_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  UnicodeString __fastcall GetEmail(int Index)
  {  return FEmail;  }
  void __fastcall SetEmail(int Index, UnicodeString _prop_val)
  {  FEmail = _prop_val; FEmail_Specified = true;  }
  bool __fastcall Email_Specified(int Index)
  {  return FEmail_Specified;  } 
  TXSDateTime* __fastcall GetEmailBouncedDate(int Index)
  {  return FEmailBouncedDate;  }
  void __fastcall SetEmailBouncedDate(int Index, TXSDateTime* _prop_val)
  {  FEmailBouncedDate = _prop_val; FEmailBouncedDate_Specified = true;  }
  bool __fastcall EmailBouncedDate_Specified(int Index)
  {  return FEmailBouncedDate_Specified;  } 
  UnicodeString __fastcall GetEmailBouncedReason(int Index)
  {  return FEmailBouncedReason;  }
  void __fastcall SetEmailBouncedReason(int Index, UnicodeString _prop_val)
  {  FEmailBouncedReason = _prop_val; FEmailBouncedReason_Specified = true;  }
  bool __fastcall EmailBouncedReason_Specified(int Index)
  {  return FEmailBouncedReason_Specified;  } 
  QueryResult* __fastcall GetEmailStatuses(int Index)
  {  return FEmailStatuses;  }
  void __fastcall SetEmailStatuses(int Index, QueryResult* _prop_val)
  {  FEmailStatuses = _prop_val; FEmailStatuses_Specified = true;  }
  bool __fastcall EmailStatuses_Specified(int Index)
  {  return FEmailStatuses_Specified;  } 
  QueryResult* __fastcall GetEvents(int Index)
  {  return FEvents;  }
  void __fastcall SetEvents(int Index, QueryResult* _prop_val)
  {  FEvents = _prop_val; FEvents_Specified = true;  }
  bool __fastcall Events_Specified(int Index)
  {  return FEvents_Specified;  } 
  UnicodeString __fastcall GetFax(int Index)
  {  return FFax;  }
  void __fastcall SetFax(int Index, UnicodeString _prop_val)
  {  FFax = _prop_val; FFax_Specified = true;  }
  bool __fastcall Fax_Specified(int Index)
  {  return FFax_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  QueryResult* __fastcall GetFeeds(int Index)
  {  return FFeeds;  }
  void __fastcall SetFeeds(int Index, QueryResult* _prop_val)
  {  FFeeds = _prop_val; FFeeds_Specified = true;  }
  bool __fastcall Feeds_Specified(int Index)
  {  return FFeeds_Specified;  } 
  UnicodeString __fastcall GetFirstName(int Index)
  {  return FFirstName;  }
  void __fastcall SetFirstName(int Index, UnicodeString _prop_val)
  {  FFirstName = _prop_val; FFirstName_Specified = true;  }
  bool __fastcall FirstName_Specified(int Index)
  {  return FFirstName_Specified;  } 
  QueryResult* __fastcall GetHistories(int Index)
  {  return FHistories;  }
  void __fastcall SetHistories(int Index, QueryResult* _prop_val)
  {  FHistories = _prop_val; FHistories_Specified = true;  }
  bool __fastcall Histories_Specified(int Index)
  {  return FHistories_Specified;  } 
  UnicodeString __fastcall GetHomePhone(int Index)
  {  return FHomePhone;  }
  void __fastcall SetHomePhone(int Index, UnicodeString _prop_val)
  {  FHomePhone = _prop_val; FHomePhone_Specified = true;  }
  bool __fastcall HomePhone_Specified(int Index)
  {  return FHomePhone_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  UnicodeString __fastcall GetJigsaw(int Index)
  {  return FJigsaw;  }
  void __fastcall SetJigsaw(int Index, UnicodeString _prop_val)
  {  FJigsaw = _prop_val; FJigsaw_Specified = true;  }
  bool __fastcall Jigsaw_Specified(int Index)
  {  return FJigsaw_Specified;  } 
  UnicodeString __fastcall GetJigsawContactId(int Index)
  {  return FJigsawContactId;  }
  void __fastcall SetJigsawContactId(int Index, UnicodeString _prop_val)
  {  FJigsawContactId = _prop_val; FJigsawContactId_Specified = true;  }
  bool __fastcall JigsawContactId_Specified(int Index)
  {  return FJigsawContactId_Specified;  } 
  TXSDate* __fastcall GetLastActivityDate(int Index)
  {  return FLastActivityDate;  }
  void __fastcall SetLastActivityDate(int Index, TXSDate* _prop_val)
  {  FLastActivityDate = _prop_val; FLastActivityDate_Specified = true;  }
  bool __fastcall LastActivityDate_Specified(int Index)
  {  return FLastActivityDate_Specified;  } 
  TXSDateTime* __fastcall GetLastCURequestDate(int Index)
  {  return FLastCURequestDate;  }
  void __fastcall SetLastCURequestDate(int Index, TXSDateTime* _prop_val)
  {  FLastCURequestDate = _prop_val; FLastCURequestDate_Specified = true;  }
  bool __fastcall LastCURequestDate_Specified(int Index)
  {  return FLastCURequestDate_Specified;  } 
  TXSDateTime* __fastcall GetLastCUUpdateDate(int Index)
  {  return FLastCUUpdateDate;  }
  void __fastcall SetLastCUUpdateDate(int Index, TXSDateTime* _prop_val)
  {  FLastCUUpdateDate = _prop_val; FLastCUUpdateDate_Specified = true;  }
  bool __fastcall LastCUUpdateDate_Specified(int Index)
  {  return FLastCUUpdateDate_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetLastName(int Index)
  {  return FLastName;  }
  void __fastcall SetLastName(int Index, UnicodeString _prop_val)
  {  FLastName = _prop_val; FLastName_Specified = true;  }
  bool __fastcall LastName_Specified(int Index)
  {  return FLastName_Specified;  } 
  UnicodeString __fastcall GetLeadSource(int Index)
  {  return FLeadSource;  }
  void __fastcall SetLeadSource(int Index, UnicodeString _prop_val)
  {  FLeadSource = _prop_val; FLeadSource_Specified = true;  }
  bool __fastcall LeadSource_Specified(int Index)
  {  return FLeadSource_Specified;  } 
  UnicodeString __fastcall GetMailingCity(int Index)
  {  return FMailingCity;  }
  void __fastcall SetMailingCity(int Index, UnicodeString _prop_val)
  {  FMailingCity = _prop_val; FMailingCity_Specified = true;  }
  bool __fastcall MailingCity_Specified(int Index)
  {  return FMailingCity_Specified;  } 
  UnicodeString __fastcall GetMailingCountry(int Index)
  {  return FMailingCountry;  }
  void __fastcall SetMailingCountry(int Index, UnicodeString _prop_val)
  {  FMailingCountry = _prop_val; FMailingCountry_Specified = true;  }
  bool __fastcall MailingCountry_Specified(int Index)
  {  return FMailingCountry_Specified;  } 
  UnicodeString __fastcall GetMailingPostalCode(int Index)
  {  return FMailingPostalCode;  }
  void __fastcall SetMailingPostalCode(int Index, UnicodeString _prop_val)
  {  FMailingPostalCode = _prop_val; FMailingPostalCode_Specified = true;  }
  bool __fastcall MailingPostalCode_Specified(int Index)
  {  return FMailingPostalCode_Specified;  } 
  UnicodeString __fastcall GetMailingState(int Index)
  {  return FMailingState;  }
  void __fastcall SetMailingState(int Index, UnicodeString _prop_val)
  {  FMailingState = _prop_val; FMailingState_Specified = true;  }
  bool __fastcall MailingState_Specified(int Index)
  {  return FMailingState_Specified;  } 
  UnicodeString __fastcall GetMailingStreet(int Index)
  {  return FMailingStreet;  }
  void __fastcall SetMailingStreet(int Index, UnicodeString _prop_val)
  {  FMailingStreet = _prop_val; FMailingStreet_Specified = true;  }
  bool __fastcall MailingStreet_Specified(int Index)
  {  return FMailingStreet_Specified;  } 
  Contact* __fastcall GetMasterRecord(int Index)
  {  return FMasterRecord;  }
  void __fastcall SetMasterRecord(int Index, Contact* _prop_val)
  {  FMasterRecord = _prop_val; FMasterRecord_Specified = true;  }
  bool __fastcall MasterRecord_Specified(int Index)
  {  return FMasterRecord_Specified;  } 
  ID __fastcall GetMasterRecordId(int Index)
  {  return FMasterRecordId;  }
  void __fastcall SetMasterRecordId(int Index, ID _prop_val)
  {  FMasterRecordId = _prop_val; FMasterRecordId_Specified = true;  }
  bool __fastcall MasterRecordId_Specified(int Index)
  {  return FMasterRecordId_Specified;  } 
  UnicodeString __fastcall GetMobilePhone(int Index)
  {  return FMobilePhone;  }
  void __fastcall SetMobilePhone(int Index, UnicodeString _prop_val)
  {  FMobilePhone = _prop_val; FMobilePhone_Specified = true;  }
  bool __fastcall MobilePhone_Specified(int Index)
  {  return FMobilePhone_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  QueryResult* __fastcall GetNotes(int Index)
  {  return FNotes;  }
  void __fastcall SetNotes(int Index, QueryResult* _prop_val)
  {  FNotes = _prop_val; FNotes_Specified = true;  }
  bool __fastcall Notes_Specified(int Index)
  {  return FNotes_Specified;  } 
  QueryResult* __fastcall GetNotesAndAttachments(int Index)
  {  return FNotesAndAttachments;  }
  void __fastcall SetNotesAndAttachments(int Index, QueryResult* _prop_val)
  {  FNotesAndAttachments = _prop_val; FNotesAndAttachments_Specified = true;  }
  bool __fastcall NotesAndAttachments_Specified(int Index)
  {  return FNotesAndAttachments_Specified;  } 
  QueryResult* __fastcall GetOpenActivities(int Index)
  {  return FOpenActivities;  }
  void __fastcall SetOpenActivities(int Index, QueryResult* _prop_val)
  {  FOpenActivities = _prop_val; FOpenActivities_Specified = true;  }
  bool __fastcall OpenActivities_Specified(int Index)
  {  return FOpenActivities_Specified;  } 
  QueryResult* __fastcall GetOpportunities(int Index)
  {  return FOpportunities;  }
  void __fastcall SetOpportunities(int Index, QueryResult* _prop_val)
  {  FOpportunities = _prop_val; FOpportunities_Specified = true;  }
  bool __fastcall Opportunities_Specified(int Index)
  {  return FOpportunities_Specified;  } 
  QueryResult* __fastcall GetOpportunityContactRoles(int Index)
  {  return FOpportunityContactRoles;  }
  void __fastcall SetOpportunityContactRoles(int Index, QueryResult* _prop_val)
  {  FOpportunityContactRoles = _prop_val; FOpportunityContactRoles_Specified = true;  }
  bool __fastcall OpportunityContactRoles_Specified(int Index)
  {  return FOpportunityContactRoles_Specified;  } 
  UnicodeString __fastcall GetOtherCity(int Index)
  {  return FOtherCity;  }
  void __fastcall SetOtherCity(int Index, UnicodeString _prop_val)
  {  FOtherCity = _prop_val; FOtherCity_Specified = true;  }
  bool __fastcall OtherCity_Specified(int Index)
  {  return FOtherCity_Specified;  } 
  UnicodeString __fastcall GetOtherCountry(int Index)
  {  return FOtherCountry;  }
  void __fastcall SetOtherCountry(int Index, UnicodeString _prop_val)
  {  FOtherCountry = _prop_val; FOtherCountry_Specified = true;  }
  bool __fastcall OtherCountry_Specified(int Index)
  {  return FOtherCountry_Specified;  } 
  UnicodeString __fastcall GetOtherPhone(int Index)
  {  return FOtherPhone;  }
  void __fastcall SetOtherPhone(int Index, UnicodeString _prop_val)
  {  FOtherPhone = _prop_val; FOtherPhone_Specified = true;  }
  bool __fastcall OtherPhone_Specified(int Index)
  {  return FOtherPhone_Specified;  } 
  UnicodeString __fastcall GetOtherPostalCode(int Index)
  {  return FOtherPostalCode;  }
  void __fastcall SetOtherPostalCode(int Index, UnicodeString _prop_val)
  {  FOtherPostalCode = _prop_val; FOtherPostalCode_Specified = true;  }
  bool __fastcall OtherPostalCode_Specified(int Index)
  {  return FOtherPostalCode_Specified;  } 
  UnicodeString __fastcall GetOtherState(int Index)
  {  return FOtherState;  }
  void __fastcall SetOtherState(int Index, UnicodeString _prop_val)
  {  FOtherState = _prop_val; FOtherState_Specified = true;  }
  bool __fastcall OtherState_Specified(int Index)
  {  return FOtherState_Specified;  } 
  UnicodeString __fastcall GetOtherStreet(int Index)
  {  return FOtherStreet;  }
  void __fastcall SetOtherStreet(int Index, UnicodeString _prop_val)
  {  FOtherStreet = _prop_val; FOtherStreet_Specified = true;  }
  bool __fastcall OtherStreet_Specified(int Index)
  {  return FOtherStreet_Specified;  } 
  User* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, User* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  UnicodeString __fastcall GetPhone(int Index)
  {  return FPhone;  }
  void __fastcall SetPhone(int Index, UnicodeString _prop_val)
  {  FPhone = _prop_val; FPhone_Specified = true;  }
  bool __fastcall Phone_Specified(int Index)
  {  return FPhone_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  Contact* __fastcall GetReportsTo(int Index)
  {  return FReportsTo;  }
  void __fastcall SetReportsTo(int Index, Contact* _prop_val)
  {  FReportsTo = _prop_val; FReportsTo_Specified = true;  }
  bool __fastcall ReportsTo_Specified(int Index)
  {  return FReportsTo_Specified;  } 
  ID __fastcall GetReportsToId(int Index)
  {  return FReportsToId;  }
  void __fastcall SetReportsToId(int Index, ID _prop_val)
  {  FReportsToId = _prop_val; FReportsToId_Specified = true;  }
  bool __fastcall ReportsToId_Specified(int Index)
  {  return FReportsToId_Specified;  } 
  UnicodeString __fastcall GetSalutation(int Index)
  {  return FSalutation;  }
  void __fastcall SetSalutation(int Index, UnicodeString _prop_val)
  {  FSalutation = _prop_val; FSalutation_Specified = true;  }
  bool __fastcall Salutation_Specified(int Index)
  {  return FSalutation_Specified;  } 
  QueryResult* __fastcall GetShares(int Index)
  {  return FShares;  }
  void __fastcall SetShares(int Index, QueryResult* _prop_val)
  {  FShares = _prop_val; FShares_Specified = true;  }
  bool __fastcall Shares_Specified(int Index)
  {  return FShares_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  QueryResult* __fastcall GetTasks(int Index)
  {  return FTasks;  }
  void __fastcall SetTasks(int Index, QueryResult* _prop_val)
  {  FTasks = _prop_val; FTasks_Specified = true;  }
  bool __fastcall Tasks_Specified(int Index)
  {  return FTasks_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 

public:
  __fastcall ~Contact();
__published:
  __property Account*      Account = { index=(IS_OPTN|IS_NLBL), read=FAccount, write=SetAccount, stored = Account_Specified };
  __property QueryResult* AccountContactRoles = { index=(IS_OPTN|IS_NLBL), read=FAccountContactRoles, write=SetAccountContactRoles, stored = AccountContactRoles_Specified };
  __property ID          AccountId = { index=(IS_OPTN|IS_NLBL), read=FAccountId, write=SetAccountId, stored = AccountId_Specified };
  __property QueryResult* ActivityHistories = { index=(IS_OPTN|IS_NLBL), read=FActivityHistories, write=SetActivityHistories, stored = ActivityHistories_Specified };
  __property QueryResult*     Assets = { index=(IS_OPTN|IS_NLBL), read=FAssets, write=SetAssets, stored = Assets_Specified };
  __property UnicodeString AssistantName = { index=(IS_OPTN|IS_NLBL), read=FAssistantName, write=SetAssistantName, stored = AssistantName_Specified };
  __property UnicodeString AssistantPhone = { index=(IS_OPTN|IS_NLBL), read=FAssistantPhone, write=SetAssistantPhone, stored = AssistantPhone_Specified };
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property TXSDate*    Birthdate = { index=(IS_OPTN|IS_NLBL), read=FBirthdate, write=SetBirthdate, stored = Birthdate_Specified };
  __property QueryResult* CaseContactRoles = { index=(IS_OPTN|IS_NLBL), read=FCaseContactRoles, write=SetCaseContactRoles, stored = CaseContactRoles_Specified };
  __property QueryResult*      Cases = { index=(IS_OPTN|IS_NLBL), read=FCases, write=SetCases, stored = Cases_Specified };
  __property QueryResult* ContractContactRoles = { index=(IS_OPTN|IS_NLBL), read=FContractContactRoles, write=SetContractContactRoles, stored = ContractContactRoles_Specified };
  __property QueryResult* ContractsSigned = { index=(IS_OPTN|IS_NLBL), read=FContractsSigned, write=SetContractsSigned, stored = ContractsSigned_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Department = { index=(IS_OPTN|IS_NLBL), read=FDepartment, write=SetDepartment, stored = Department_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property UnicodeString      Email = { index=(IS_OPTN|IS_NLBL), read=FEmail, write=SetEmail, stored = Email_Specified };
  __property TXSDateTime* EmailBouncedDate = { index=(IS_OPTN|IS_NLBL), read=FEmailBouncedDate, write=SetEmailBouncedDate, stored = EmailBouncedDate_Specified };
  __property UnicodeString EmailBouncedReason = { index=(IS_OPTN|IS_NLBL), read=FEmailBouncedReason, write=SetEmailBouncedReason, stored = EmailBouncedReason_Specified };
  __property QueryResult* EmailStatuses = { index=(IS_OPTN|IS_NLBL), read=FEmailStatuses, write=SetEmailStatuses, stored = EmailStatuses_Specified };
  __property QueryResult*     Events = { index=(IS_OPTN|IS_NLBL), read=FEvents, write=SetEvents, stored = Events_Specified };
  __property UnicodeString        Fax = { index=(IS_OPTN|IS_NLBL), read=FFax, write=SetFax, stored = Fax_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property QueryResult*      Feeds = { index=(IS_OPTN|IS_NLBL), read=FFeeds, write=SetFeeds, stored = Feeds_Specified };
  __property UnicodeString  FirstName = { index=(IS_OPTN|IS_NLBL), read=FFirstName, write=SetFirstName, stored = FirstName_Specified };
  __property QueryResult*  Histories = { index=(IS_OPTN|IS_NLBL), read=FHistories, write=SetHistories, stored = Histories_Specified };
  __property UnicodeString  HomePhone = { index=(IS_OPTN|IS_NLBL), read=FHomePhone, write=SetHomePhone, stored = HomePhone_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property UnicodeString     Jigsaw = { index=(IS_OPTN|IS_NLBL), read=FJigsaw, write=SetJigsaw, stored = Jigsaw_Specified };
  __property UnicodeString JigsawContactId = { index=(IS_OPTN|IS_NLBL), read=FJigsawContactId, write=SetJigsawContactId, stored = JigsawContactId_Specified };
  __property TXSDate*   LastActivityDate = { index=(IS_OPTN|IS_NLBL), read=FLastActivityDate, write=SetLastActivityDate, stored = LastActivityDate_Specified };
  __property TXSDateTime* LastCURequestDate = { index=(IS_OPTN|IS_NLBL), read=FLastCURequestDate, write=SetLastCURequestDate, stored = LastCURequestDate_Specified };
  __property TXSDateTime* LastCUUpdateDate = { index=(IS_OPTN|IS_NLBL), read=FLastCUUpdateDate, write=SetLastCUUpdateDate, stored = LastCUUpdateDate_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString   LastName = { index=(IS_OPTN|IS_NLBL), read=FLastName, write=SetLastName, stored = LastName_Specified };
  __property UnicodeString LeadSource = { index=(IS_OPTN|IS_NLBL), read=FLeadSource, write=SetLeadSource, stored = LeadSource_Specified };
  __property UnicodeString MailingCity = { index=(IS_OPTN|IS_NLBL), read=FMailingCity, write=SetMailingCity, stored = MailingCity_Specified };
  __property UnicodeString MailingCountry = { index=(IS_OPTN|IS_NLBL), read=FMailingCountry, write=SetMailingCountry, stored = MailingCountry_Specified };
  __property UnicodeString MailingPostalCode = { index=(IS_OPTN|IS_NLBL), read=FMailingPostalCode, write=SetMailingPostalCode, stored = MailingPostalCode_Specified };
  __property UnicodeString MailingState = { index=(IS_OPTN|IS_NLBL), read=FMailingState, write=SetMailingState, stored = MailingState_Specified };
  __property UnicodeString MailingStreet = { index=(IS_OPTN|IS_NLBL), read=FMailingStreet, write=SetMailingStreet, stored = MailingStreet_Specified };
  __property Contact*   MasterRecord = { index=(IS_OPTN|IS_NLBL), read=FMasterRecord, write=SetMasterRecord, stored = MasterRecord_Specified };
  __property ID         MasterRecordId = { index=(IS_OPTN|IS_NLBL), read=FMasterRecordId, write=SetMasterRecordId, stored = MasterRecordId_Specified };
  __property UnicodeString MobilePhone = { index=(IS_OPTN|IS_NLBL), read=FMobilePhone, write=SetMobilePhone, stored = MobilePhone_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property QueryResult*      Notes = { index=(IS_OPTN|IS_NLBL), read=FNotes, write=SetNotes, stored = Notes_Specified };
  __property QueryResult* NotesAndAttachments = { index=(IS_OPTN|IS_NLBL), read=FNotesAndAttachments, write=SetNotesAndAttachments, stored = NotesAndAttachments_Specified };
  __property QueryResult* OpenActivities = { index=(IS_OPTN|IS_NLBL), read=FOpenActivities, write=SetOpenActivities, stored = OpenActivities_Specified };
  __property QueryResult* Opportunities = { index=(IS_OPTN|IS_NLBL), read=FOpportunities, write=SetOpportunities, stored = Opportunities_Specified };
  __property QueryResult* OpportunityContactRoles = { index=(IS_OPTN|IS_NLBL), read=FOpportunityContactRoles, write=SetOpportunityContactRoles, stored = OpportunityContactRoles_Specified };
  __property UnicodeString  OtherCity = { index=(IS_OPTN|IS_NLBL), read=FOtherCity, write=SetOtherCity, stored = OtherCity_Specified };
  __property UnicodeString OtherCountry = { index=(IS_OPTN|IS_NLBL), read=FOtherCountry, write=SetOtherCountry, stored = OtherCountry_Specified };
  __property UnicodeString OtherPhone = { index=(IS_OPTN|IS_NLBL), read=FOtherPhone, write=SetOtherPhone, stored = OtherPhone_Specified };
  __property UnicodeString OtherPostalCode = { index=(IS_OPTN|IS_NLBL), read=FOtherPostalCode, write=SetOtherPostalCode, stored = OtherPostalCode_Specified };
  __property UnicodeString OtherState = { index=(IS_OPTN|IS_NLBL), read=FOtherState, write=SetOtherState, stored = OtherState_Specified };
  __property UnicodeString OtherStreet = { index=(IS_OPTN|IS_NLBL), read=FOtherStreet, write=SetOtherStreet, stored = OtherStreet_Specified };
  __property User*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property UnicodeString      Phone = { index=(IS_OPTN|IS_NLBL), read=FPhone, write=SetPhone, stored = Phone_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property Contact*    ReportsTo = { index=(IS_OPTN|IS_NLBL), read=FReportsTo, write=SetReportsTo, stored = ReportsTo_Specified };
  __property ID         ReportsToId = { index=(IS_OPTN|IS_NLBL), read=FReportsToId, write=SetReportsToId, stored = ReportsToId_Specified };
  __property UnicodeString Salutation = { index=(IS_OPTN|IS_NLBL), read=FSalutation, write=SetSalutation, stored = Salutation_Specified };
  __property QueryResult*     Shares = { index=(IS_OPTN|IS_NLBL), read=FShares, write=SetShares, stored = Shares_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property QueryResult*      Tasks = { index=(IS_OPTN|IS_NLBL), read=FTasks, write=SetTasks, stored = Tasks_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
};




// ************************************************************************ //
// XML       : AccountContactRole, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class AccountContactRole : public sObject {
private:
  Account*        FAccount;
  bool            FAccount_Specified;
  ID              FAccountId;
  bool            FAccountId_Specified;
  Contact*        FContact;
  bool            FContact_Specified;
  ID              FContactId;
  bool            FContactId_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  bool            FIsPrimary;
  bool            FIsPrimary_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FRole;
  bool            FRole_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  Account* __fastcall GetAccount(int Index)
  {  return FAccount;  }
  void __fastcall SetAccount(int Index, Account* _prop_val)
  {  FAccount = _prop_val; FAccount_Specified = true;  }
  bool __fastcall Account_Specified(int Index)
  {  return FAccount_Specified;  } 
  ID __fastcall GetAccountId(int Index)
  {  return FAccountId;  }
  void __fastcall SetAccountId(int Index, ID _prop_val)
  {  FAccountId = _prop_val; FAccountId_Specified = true;  }
  bool __fastcall AccountId_Specified(int Index)
  {  return FAccountId_Specified;  } 
  Contact* __fastcall GetContact(int Index)
  {  return FContact;  }
  void __fastcall SetContact(int Index, Contact* _prop_val)
  {  FContact = _prop_val; FContact_Specified = true;  }
  bool __fastcall Contact_Specified(int Index)
  {  return FContact_Specified;  } 
  ID __fastcall GetContactId(int Index)
  {  return FContactId;  }
  void __fastcall SetContactId(int Index, ID _prop_val)
  {  FContactId = _prop_val; FContactId_Specified = true;  }
  bool __fastcall ContactId_Specified(int Index)
  {  return FContactId_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  bool __fastcall GetIsPrimary(int Index)
  {  return FIsPrimary;  }
  void __fastcall SetIsPrimary(int Index, bool _prop_val)
  {  FIsPrimary = _prop_val; FIsPrimary_Specified = true;  }
  bool __fastcall IsPrimary_Specified(int Index)
  {  return FIsPrimary_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetRole(int Index)
  {  return FRole;  }
  void __fastcall SetRole(int Index, UnicodeString _prop_val)
  {  FRole = _prop_val; FRole_Specified = true;  }
  bool __fastcall Role_Specified(int Index)
  {  return FRole_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 

public:
  __fastcall ~AccountContactRole();
__published:
  __property Account*      Account = { index=(IS_OPTN|IS_NLBL), read=FAccount, write=SetAccount, stored = Account_Specified };
  __property ID          AccountId = { index=(IS_OPTN|IS_NLBL), read=FAccountId, write=SetAccountId, stored = AccountId_Specified };
  __property Contact*      Contact = { index=(IS_OPTN|IS_NLBL), read=FContact, write=SetContact, stored = Contact_Specified };
  __property ID          ContactId = { index=(IS_OPTN|IS_NLBL), read=FContactId, write=SetContactId, stored = ContactId_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property bool        IsPrimary = { index=(IS_OPTN|IS_NLBL), read=FIsPrimary, write=SetIsPrimary, stored = IsPrimary_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString       Role = { index=(IS_OPTN|IS_NLBL), read=FRole, write=SetRole, stored = Role_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
};




// ************************************************************************ //
// XML       : User, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class User : public sObject {
private:
  UnicodeString   FAboutMe;
  bool            FAboutMe_Specified;
  ID              FAccountId;
  bool            FAccountId_Specified;
  UnicodeString   FAlias;
  bool            FAlias_Specified;
  ID              FCallCenterId;
  bool            FCallCenterId_Specified;
  UnicodeString   FCity;
  bool            FCity_Specified;
  UnicodeString   FCommunityNickname;
  bool            FCommunityNickname_Specified;
  UnicodeString   FCompanyName;
  bool            FCompanyName_Specified;
  Contact*        FContact;
  bool            FContact_Specified;
  ID              FContactId;
  bool            FContactId_Specified;
  QueryResult*    FContractsSigned;
  bool            FContractsSigned_Specified;
  UnicodeString   FCountry;
  bool            FCountry_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDefaultGroupNotificationFrequency;
  bool            FDefaultGroupNotificationFrequency_Specified;
  ID              FDelegatedApproverId;
  bool            FDelegatedApproverId_Specified;
  QueryResult*    FDelegatedUsers;
  bool            FDelegatedUsers_Specified;
  UnicodeString   FDepartment;
  bool            FDepartment_Specified;
  UnicodeString   FDigestFrequency;
  bool            FDigestFrequency_Specified;
  UnicodeString   FDivision;
  bool            FDivision_Specified;
  UnicodeString   FEmail;
  bool            FEmail_Specified;
  UnicodeString   FEmailEncodingKey;
  bool            FEmailEncodingKey_Specified;
  UnicodeString   FEmployeeNumber;
  bool            FEmployeeNumber_Specified;
  UnicodeString   FExtension;
  bool            FExtension_Specified;
  UnicodeString   FFax;
  bool            FFax_Specified;
  UnicodeString   FFederationIdentifier;
  bool            FFederationIdentifier_Specified;
  QueryResult*    FFeedSubscriptions;
  bool            FFeedSubscriptions_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  QueryResult*    FFeeds;
  bool            FFeeds_Specified;
  UnicodeString   FFirstName;
  bool            FFirstName_Specified;
  bool            FForecastEnabled;
  bool            FForecastEnabled_Specified;
  UnicodeString   FFullPhotoUrl;
  bool            FFullPhotoUrl_Specified;
  bool            FIsActive;
  bool            FIsActive_Specified;
  UnicodeString   FLanguageLocaleKey;
  bool            FLanguageLocaleKey_Specified;
  TXSDateTime*    FLastLoginDate;
  bool            FLastLoginDate_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  UnicodeString   FLastName;
  bool            FLastName_Specified;
  TXSDateTime*    FLastPasswordChangeDate;
  bool            FLastPasswordChangeDate_Specified;
  UnicodeString   FLocaleSidKey;
  bool            FLocaleSidKey_Specified;
  User*           FManager;
  bool            FManager_Specified;
  ID              FManagerId;
  bool            FManagerId_Specified;
  UnicodeString   FMobilePhone;
  bool            FMobilePhone_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  TXSDateTime*    FOfflinePdaTrialExpirationDate;
  bool            FOfflinePdaTrialExpirationDate_Specified;
  TXSDateTime*    FOfflineTrialExpirationDate;
  bool            FOfflineTrialExpirationDate_Specified;
  QueryResult*    FPermissionSetAssignments;
  bool            FPermissionSetAssignments_Specified;
  UnicodeString   FPhone;
  bool            FPhone_Specified;
  UnicodeString   FPostalCode;
  bool            FPostalCode_Specified;
  Profile*        FProfile;
  bool            FProfile_Specified;
  ID              FProfileId;
  bool            FProfileId_Specified;
  bool            FReceivesAdminInfoEmails;
  bool            FReceivesAdminInfoEmails_Specified;
  bool            FReceivesInfoEmails;
  bool            FReceivesInfoEmails_Specified;
  UnicodeString   FSmallPhotoUrl;
  bool            FSmallPhotoUrl_Specified;
  UnicodeString   FState;
  bool            FState_Specified;
  UnicodeString   FStreet;
  bool            FStreet_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  UnicodeString   FTimeZoneSidKey;
  bool            FTimeZoneSidKey_Specified;
  UnicodeString   FTitle;
  bool            FTitle_Specified;
  bool            FUserPermissionsAvantgoUser;
  bool            FUserPermissionsAvantgoUser_Specified;
  bool            FUserPermissionsCallCenterAutoLogin;
  bool            FUserPermissionsCallCenterAutoLogin_Specified;
  bool            FUserPermissionsInteractionUser;
  bool            FUserPermissionsInteractionUser_Specified;
  bool            FUserPermissionsMarketingUser;
  bool            FUserPermissionsMarketingUser_Specified;
  bool            FUserPermissionsMobileUser;
  bool            FUserPermissionsMobileUser_Specified;
  bool            FUserPermissionsOfflineUser;
  bool            FUserPermissionsOfflineUser_Specified;
  bool            FUserPermissionsSFContentUser;
  bool            FUserPermissionsSFContentUser_Specified;
  QueryResult*    FUserPreferences;
  bool            FUserPreferences_Specified;
  bool            FUserPreferencesActivityRemindersPopup;
  bool            FUserPreferencesActivityRemindersPopup_Specified;
  bool            FUserPreferencesApexPagesDeveloperMode;
  bool            FUserPreferencesApexPagesDeveloperMode_Specified;
  bool            FUserPreferencesDisCommentAfterLikeEmail;
  bool            FUserPreferencesDisCommentAfterLikeEmail_Specified;
  bool            FUserPreferencesDisMentionsCommentEmail;
  bool            FUserPreferencesDisMentionsCommentEmail_Specified;
  bool            FUserPreferencesDisProfPostCommentEmail;
  bool            FUserPreferencesDisProfPostCommentEmail_Specified;
  bool            FUserPreferencesDisableAllFeedsEmail;
  bool            FUserPreferencesDisableAllFeedsEmail_Specified;
  bool            FUserPreferencesDisableBookmarkEmail;
  bool            FUserPreferencesDisableBookmarkEmail_Specified;
  bool            FUserPreferencesDisableChangeCommentEmail;
  bool            FUserPreferencesDisableChangeCommentEmail_Specified;
  bool            FUserPreferencesDisableFileShareNotificationsForApi;
  bool            FUserPreferencesDisableFileShareNotificationsForApi_Specified;
  bool            FUserPreferencesDisableFollowersEmail;
  bool            FUserPreferencesDisableFollowersEmail_Specified;
  bool            FUserPreferencesDisableLaterCommentEmail;
  bool            FUserPreferencesDisableLaterCommentEmail_Specified;
  bool            FUserPreferencesDisableLikeEmail;
  bool            FUserPreferencesDisableLikeEmail_Specified;
  bool            FUserPreferencesDisableMentionsPostEmail;
  bool            FUserPreferencesDisableMentionsPostEmail_Specified;
  bool            FUserPreferencesDisableMessageEmail;
  bool            FUserPreferencesDisableMessageEmail_Specified;
  bool            FUserPreferencesDisableProfilePostEmail;
  bool            FUserPreferencesDisableProfilePostEmail_Specified;
  bool            FUserPreferencesDisableSharePostEmail;
  bool            FUserPreferencesDisableSharePostEmail_Specified;
  bool            FUserPreferencesEnableAutoSubForFeeds;
  bool            FUserPreferencesEnableAutoSubForFeeds_Specified;
  bool            FUserPreferencesEventRemindersCheckboxDefault;
  bool            FUserPreferencesEventRemindersCheckboxDefault_Specified;
  bool            FUserPreferencesReminderSoundOff;
  bool            FUserPreferencesReminderSoundOff_Specified;
  bool            FUserPreferencesTaskRemindersCheckboxDefault;
  bool            FUserPreferencesTaskRemindersCheckboxDefault_Specified;
  UserRole*       FUserRole;
  bool            FUserRole_Specified;
  ID              FUserRoleId;
  bool            FUserRoleId_Specified;
  UnicodeString   FUserType;
  bool            FUserType_Specified;
  UnicodeString   FUsername;
  bool            FUsername_Specified;
  ID              FWorkspaceId;
  bool            FWorkspaceId_Specified;
  UnicodeString __fastcall GetAboutMe(int Index)
  {  return FAboutMe;  }
  void __fastcall SetAboutMe(int Index, UnicodeString _prop_val)
  {  FAboutMe = _prop_val; FAboutMe_Specified = true;  }
  bool __fastcall AboutMe_Specified(int Index)
  {  return FAboutMe_Specified;  } 
  ID __fastcall GetAccountId(int Index)
  {  return FAccountId;  }
  void __fastcall SetAccountId(int Index, ID _prop_val)
  {  FAccountId = _prop_val; FAccountId_Specified = true;  }
  bool __fastcall AccountId_Specified(int Index)
  {  return FAccountId_Specified;  } 
  UnicodeString __fastcall GetAlias(int Index)
  {  return FAlias;  }
  void __fastcall SetAlias(int Index, UnicodeString _prop_val)
  {  FAlias = _prop_val; FAlias_Specified = true;  }
  bool __fastcall Alias_Specified(int Index)
  {  return FAlias_Specified;  } 
  ID __fastcall GetCallCenterId(int Index)
  {  return FCallCenterId;  }
  void __fastcall SetCallCenterId(int Index, ID _prop_val)
  {  FCallCenterId = _prop_val; FCallCenterId_Specified = true;  }
  bool __fastcall CallCenterId_Specified(int Index)
  {  return FCallCenterId_Specified;  } 
  UnicodeString __fastcall GetCity(int Index)
  {  return FCity;  }
  void __fastcall SetCity(int Index, UnicodeString _prop_val)
  {  FCity = _prop_val; FCity_Specified = true;  }
  bool __fastcall City_Specified(int Index)
  {  return FCity_Specified;  } 
  UnicodeString __fastcall GetCommunityNickname(int Index)
  {  return FCommunityNickname;  }
  void __fastcall SetCommunityNickname(int Index, UnicodeString _prop_val)
  {  FCommunityNickname = _prop_val; FCommunityNickname_Specified = true;  }
  bool __fastcall CommunityNickname_Specified(int Index)
  {  return FCommunityNickname_Specified;  } 
  UnicodeString __fastcall GetCompanyName(int Index)
  {  return FCompanyName;  }
  void __fastcall SetCompanyName(int Index, UnicodeString _prop_val)
  {  FCompanyName = _prop_val; FCompanyName_Specified = true;  }
  bool __fastcall CompanyName_Specified(int Index)
  {  return FCompanyName_Specified;  } 
  Contact* __fastcall GetContact(int Index)
  {  return FContact;  }
  void __fastcall SetContact(int Index, Contact* _prop_val)
  {  FContact = _prop_val; FContact_Specified = true;  }
  bool __fastcall Contact_Specified(int Index)
  {  return FContact_Specified;  } 
  ID __fastcall GetContactId(int Index)
  {  return FContactId;  }
  void __fastcall SetContactId(int Index, ID _prop_val)
  {  FContactId = _prop_val; FContactId_Specified = true;  }
  bool __fastcall ContactId_Specified(int Index)
  {  return FContactId_Specified;  } 
  QueryResult* __fastcall GetContractsSigned(int Index)
  {  return FContractsSigned;  }
  void __fastcall SetContractsSigned(int Index, QueryResult* _prop_val)
  {  FContractsSigned = _prop_val; FContractsSigned_Specified = true;  }
  bool __fastcall ContractsSigned_Specified(int Index)
  {  return FContractsSigned_Specified;  } 
  UnicodeString __fastcall GetCountry(int Index)
  {  return FCountry;  }
  void __fastcall SetCountry(int Index, UnicodeString _prop_val)
  {  FCountry = _prop_val; FCountry_Specified = true;  }
  bool __fastcall Country_Specified(int Index)
  {  return FCountry_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDefaultGroupNotificationFrequency(int Index)
  {  return FDefaultGroupNotificationFrequency;  }
  void __fastcall SetDefaultGroupNotificationFrequency(int Index, UnicodeString _prop_val)
  {  FDefaultGroupNotificationFrequency = _prop_val; FDefaultGroupNotificationFrequency_Specified = true;  }
  bool __fastcall DefaultGroupNotificationFrequency_Specified(int Index)
  {  return FDefaultGroupNotificationFrequency_Specified;  } 
  ID __fastcall GetDelegatedApproverId(int Index)
  {  return FDelegatedApproverId;  }
  void __fastcall SetDelegatedApproverId(int Index, ID _prop_val)
  {  FDelegatedApproverId = _prop_val; FDelegatedApproverId_Specified = true;  }
  bool __fastcall DelegatedApproverId_Specified(int Index)
  {  return FDelegatedApproverId_Specified;  } 
  QueryResult* __fastcall GetDelegatedUsers(int Index)
  {  return FDelegatedUsers;  }
  void __fastcall SetDelegatedUsers(int Index, QueryResult* _prop_val)
  {  FDelegatedUsers = _prop_val; FDelegatedUsers_Specified = true;  }
  bool __fastcall DelegatedUsers_Specified(int Index)
  {  return FDelegatedUsers_Specified;  } 
  UnicodeString __fastcall GetDepartment(int Index)
  {  return FDepartment;  }
  void __fastcall SetDepartment(int Index, UnicodeString _prop_val)
  {  FDepartment = _prop_val; FDepartment_Specified = true;  }
  bool __fastcall Department_Specified(int Index)
  {  return FDepartment_Specified;  } 
  UnicodeString __fastcall GetDigestFrequency(int Index)
  {  return FDigestFrequency;  }
  void __fastcall SetDigestFrequency(int Index, UnicodeString _prop_val)
  {  FDigestFrequency = _prop_val; FDigestFrequency_Specified = true;  }
  bool __fastcall DigestFrequency_Specified(int Index)
  {  return FDigestFrequency_Specified;  } 
  UnicodeString __fastcall GetDivision(int Index)
  {  return FDivision;  }
  void __fastcall SetDivision(int Index, UnicodeString _prop_val)
  {  FDivision = _prop_val; FDivision_Specified = true;  }
  bool __fastcall Division_Specified(int Index)
  {  return FDivision_Specified;  } 
  UnicodeString __fastcall GetEmail(int Index)
  {  return FEmail;  }
  void __fastcall SetEmail(int Index, UnicodeString _prop_val)
  {  FEmail = _prop_val; FEmail_Specified = true;  }
  bool __fastcall Email_Specified(int Index)
  {  return FEmail_Specified;  } 
  UnicodeString __fastcall GetEmailEncodingKey(int Index)
  {  return FEmailEncodingKey;  }
  void __fastcall SetEmailEncodingKey(int Index, UnicodeString _prop_val)
  {  FEmailEncodingKey = _prop_val; FEmailEncodingKey_Specified = true;  }
  bool __fastcall EmailEncodingKey_Specified(int Index)
  {  return FEmailEncodingKey_Specified;  } 
  UnicodeString __fastcall GetEmployeeNumber(int Index)
  {  return FEmployeeNumber;  }
  void __fastcall SetEmployeeNumber(int Index, UnicodeString _prop_val)
  {  FEmployeeNumber = _prop_val; FEmployeeNumber_Specified = true;  }
  bool __fastcall EmployeeNumber_Specified(int Index)
  {  return FEmployeeNumber_Specified;  } 
  UnicodeString __fastcall GetExtension(int Index)
  {  return FExtension;  }
  void __fastcall SetExtension(int Index, UnicodeString _prop_val)
  {  FExtension = _prop_val; FExtension_Specified = true;  }
  bool __fastcall Extension_Specified(int Index)
  {  return FExtension_Specified;  } 
  UnicodeString __fastcall GetFax(int Index)
  {  return FFax;  }
  void __fastcall SetFax(int Index, UnicodeString _prop_val)
  {  FFax = _prop_val; FFax_Specified = true;  }
  bool __fastcall Fax_Specified(int Index)
  {  return FFax_Specified;  } 
  UnicodeString __fastcall GetFederationIdentifier(int Index)
  {  return FFederationIdentifier;  }
  void __fastcall SetFederationIdentifier(int Index, UnicodeString _prop_val)
  {  FFederationIdentifier = _prop_val; FFederationIdentifier_Specified = true;  }
  bool __fastcall FederationIdentifier_Specified(int Index)
  {  return FFederationIdentifier_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptions(int Index)
  {  return FFeedSubscriptions;  }
  void __fastcall SetFeedSubscriptions(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptions = _prop_val; FFeedSubscriptions_Specified = true;  }
  bool __fastcall FeedSubscriptions_Specified(int Index)
  {  return FFeedSubscriptions_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  QueryResult* __fastcall GetFeeds(int Index)
  {  return FFeeds;  }
  void __fastcall SetFeeds(int Index, QueryResult* _prop_val)
  {  FFeeds = _prop_val; FFeeds_Specified = true;  }
  bool __fastcall Feeds_Specified(int Index)
  {  return FFeeds_Specified;  } 
  UnicodeString __fastcall GetFirstName(int Index)
  {  return FFirstName;  }
  void __fastcall SetFirstName(int Index, UnicodeString _prop_val)
  {  FFirstName = _prop_val; FFirstName_Specified = true;  }
  bool __fastcall FirstName_Specified(int Index)
  {  return FFirstName_Specified;  } 
  bool __fastcall GetForecastEnabled(int Index)
  {  return FForecastEnabled;  }
  void __fastcall SetForecastEnabled(int Index, bool _prop_val)
  {  FForecastEnabled = _prop_val; FForecastEnabled_Specified = true;  }
  bool __fastcall ForecastEnabled_Specified(int Index)
  {  return FForecastEnabled_Specified;  } 
  UnicodeString __fastcall GetFullPhotoUrl(int Index)
  {  return FFullPhotoUrl;  }
  void __fastcall SetFullPhotoUrl(int Index, UnicodeString _prop_val)
  {  FFullPhotoUrl = _prop_val; FFullPhotoUrl_Specified = true;  }
  bool __fastcall FullPhotoUrl_Specified(int Index)
  {  return FFullPhotoUrl_Specified;  } 
  bool __fastcall GetIsActive(int Index)
  {  return FIsActive;  }
  void __fastcall SetIsActive(int Index, bool _prop_val)
  {  FIsActive = _prop_val; FIsActive_Specified = true;  }
  bool __fastcall IsActive_Specified(int Index)
  {  return FIsActive_Specified;  } 
  UnicodeString __fastcall GetLanguageLocaleKey(int Index)
  {  return FLanguageLocaleKey;  }
  void __fastcall SetLanguageLocaleKey(int Index, UnicodeString _prop_val)
  {  FLanguageLocaleKey = _prop_val; FLanguageLocaleKey_Specified = true;  }
  bool __fastcall LanguageLocaleKey_Specified(int Index)
  {  return FLanguageLocaleKey_Specified;  } 
  TXSDateTime* __fastcall GetLastLoginDate(int Index)
  {  return FLastLoginDate;  }
  void __fastcall SetLastLoginDate(int Index, TXSDateTime* _prop_val)
  {  FLastLoginDate = _prop_val; FLastLoginDate_Specified = true;  }
  bool __fastcall LastLoginDate_Specified(int Index)
  {  return FLastLoginDate_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  UnicodeString __fastcall GetLastName(int Index)
  {  return FLastName;  }
  void __fastcall SetLastName(int Index, UnicodeString _prop_val)
  {  FLastName = _prop_val; FLastName_Specified = true;  }
  bool __fastcall LastName_Specified(int Index)
  {  return FLastName_Specified;  } 
  TXSDateTime* __fastcall GetLastPasswordChangeDate(int Index)
  {  return FLastPasswordChangeDate;  }
  void __fastcall SetLastPasswordChangeDate(int Index, TXSDateTime* _prop_val)
  {  FLastPasswordChangeDate = _prop_val; FLastPasswordChangeDate_Specified = true;  }
  bool __fastcall LastPasswordChangeDate_Specified(int Index)
  {  return FLastPasswordChangeDate_Specified;  } 
  UnicodeString __fastcall GetLocaleSidKey(int Index)
  {  return FLocaleSidKey;  }
  void __fastcall SetLocaleSidKey(int Index, UnicodeString _prop_val)
  {  FLocaleSidKey = _prop_val; FLocaleSidKey_Specified = true;  }
  bool __fastcall LocaleSidKey_Specified(int Index)
  {  return FLocaleSidKey_Specified;  } 
  User* __fastcall GetManager(int Index)
  {  return FManager;  }
  void __fastcall SetManager(int Index, User* _prop_val)
  {  FManager = _prop_val; FManager_Specified = true;  }
  bool __fastcall Manager_Specified(int Index)
  {  return FManager_Specified;  } 
  ID __fastcall GetManagerId(int Index)
  {  return FManagerId;  }
  void __fastcall SetManagerId(int Index, ID _prop_val)
  {  FManagerId = _prop_val; FManagerId_Specified = true;  }
  bool __fastcall ManagerId_Specified(int Index)
  {  return FManagerId_Specified;  } 
  UnicodeString __fastcall GetMobilePhone(int Index)
  {  return FMobilePhone;  }
  void __fastcall SetMobilePhone(int Index, UnicodeString _prop_val)
  {  FMobilePhone = _prop_val; FMobilePhone_Specified = true;  }
  bool __fastcall MobilePhone_Specified(int Index)
  {  return FMobilePhone_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  TXSDateTime* __fastcall GetOfflinePdaTrialExpirationDate(int Index)
  {  return FOfflinePdaTrialExpirationDate;  }
  void __fastcall SetOfflinePdaTrialExpirationDate(int Index, TXSDateTime* _prop_val)
  {  FOfflinePdaTrialExpirationDate = _prop_val; FOfflinePdaTrialExpirationDate_Specified = true;  }
  bool __fastcall OfflinePdaTrialExpirationDate_Specified(int Index)
  {  return FOfflinePdaTrialExpirationDate_Specified;  } 
  TXSDateTime* __fastcall GetOfflineTrialExpirationDate(int Index)
  {  return FOfflineTrialExpirationDate;  }
  void __fastcall SetOfflineTrialExpirationDate(int Index, TXSDateTime* _prop_val)
  {  FOfflineTrialExpirationDate = _prop_val; FOfflineTrialExpirationDate_Specified = true;  }
  bool __fastcall OfflineTrialExpirationDate_Specified(int Index)
  {  return FOfflineTrialExpirationDate_Specified;  } 
  QueryResult* __fastcall GetPermissionSetAssignments(int Index)
  {  return FPermissionSetAssignments;  }
  void __fastcall SetPermissionSetAssignments(int Index, QueryResult* _prop_val)
  {  FPermissionSetAssignments = _prop_val; FPermissionSetAssignments_Specified = true;  }
  bool __fastcall PermissionSetAssignments_Specified(int Index)
  {  return FPermissionSetAssignments_Specified;  } 
  UnicodeString __fastcall GetPhone(int Index)
  {  return FPhone;  }
  void __fastcall SetPhone(int Index, UnicodeString _prop_val)
  {  FPhone = _prop_val; FPhone_Specified = true;  }
  bool __fastcall Phone_Specified(int Index)
  {  return FPhone_Specified;  } 
  UnicodeString __fastcall GetPostalCode(int Index)
  {  return FPostalCode;  }
  void __fastcall SetPostalCode(int Index, UnicodeString _prop_val)
  {  FPostalCode = _prop_val; FPostalCode_Specified = true;  }
  bool __fastcall PostalCode_Specified(int Index)
  {  return FPostalCode_Specified;  } 
  Profile* __fastcall GetProfile(int Index)
  {  return FProfile;  }
  void __fastcall SetProfile(int Index, Profile* _prop_val)
  {  FProfile = _prop_val; FProfile_Specified = true;  }
  bool __fastcall Profile_Specified(int Index)
  {  return FProfile_Specified;  } 
  ID __fastcall GetProfileId(int Index)
  {  return FProfileId;  }
  void __fastcall SetProfileId(int Index, ID _prop_val)
  {  FProfileId = _prop_val; FProfileId_Specified = true;  }
  bool __fastcall ProfileId_Specified(int Index)
  {  return FProfileId_Specified;  } 
  bool __fastcall GetReceivesAdminInfoEmails(int Index)
  {  return FReceivesAdminInfoEmails;  }
  void __fastcall SetReceivesAdminInfoEmails(int Index, bool _prop_val)
  {  FReceivesAdminInfoEmails = _prop_val; FReceivesAdminInfoEmails_Specified = true;  }
  bool __fastcall ReceivesAdminInfoEmails_Specified(int Index)
  {  return FReceivesAdminInfoEmails_Specified;  } 
  bool __fastcall GetReceivesInfoEmails(int Index)
  {  return FReceivesInfoEmails;  }
  void __fastcall SetReceivesInfoEmails(int Index, bool _prop_val)
  {  FReceivesInfoEmails = _prop_val; FReceivesInfoEmails_Specified = true;  }
  bool __fastcall ReceivesInfoEmails_Specified(int Index)
  {  return FReceivesInfoEmails_Specified;  } 
  UnicodeString __fastcall GetSmallPhotoUrl(int Index)
  {  return FSmallPhotoUrl;  }
  void __fastcall SetSmallPhotoUrl(int Index, UnicodeString _prop_val)
  {  FSmallPhotoUrl = _prop_val; FSmallPhotoUrl_Specified = true;  }
  bool __fastcall SmallPhotoUrl_Specified(int Index)
  {  return FSmallPhotoUrl_Specified;  } 
  UnicodeString __fastcall GetState(int Index)
  {  return FState;  }
  void __fastcall SetState(int Index, UnicodeString _prop_val)
  {  FState = _prop_val; FState_Specified = true;  }
  bool __fastcall State_Specified(int Index)
  {  return FState_Specified;  } 
  UnicodeString __fastcall GetStreet(int Index)
  {  return FStreet;  }
  void __fastcall SetStreet(int Index, UnicodeString _prop_val)
  {  FStreet = _prop_val; FStreet_Specified = true;  }
  bool __fastcall Street_Specified(int Index)
  {  return FStreet_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  UnicodeString __fastcall GetTimeZoneSidKey(int Index)
  {  return FTimeZoneSidKey;  }
  void __fastcall SetTimeZoneSidKey(int Index, UnicodeString _prop_val)
  {  FTimeZoneSidKey = _prop_val; FTimeZoneSidKey_Specified = true;  }
  bool __fastcall TimeZoneSidKey_Specified(int Index)
  {  return FTimeZoneSidKey_Specified;  } 
  UnicodeString __fastcall GetTitle(int Index)
  {  return FTitle;  }
  void __fastcall SetTitle(int Index, UnicodeString _prop_val)
  {  FTitle = _prop_val; FTitle_Specified = true;  }
  bool __fastcall Title_Specified(int Index)
  {  return FTitle_Specified;  } 
  bool __fastcall GetUserPermissionsAvantgoUser(int Index)
  {  return FUserPermissionsAvantgoUser;  }
  void __fastcall SetUserPermissionsAvantgoUser(int Index, bool _prop_val)
  {  FUserPermissionsAvantgoUser = _prop_val; FUserPermissionsAvantgoUser_Specified = true;  }
  bool __fastcall UserPermissionsAvantgoUser_Specified(int Index)
  {  return FUserPermissionsAvantgoUser_Specified;  } 
  bool __fastcall GetUserPermissionsCallCenterAutoLogin(int Index)
  {  return FUserPermissionsCallCenterAutoLogin;  }
  void __fastcall SetUserPermissionsCallCenterAutoLogin(int Index, bool _prop_val)
  {  FUserPermissionsCallCenterAutoLogin = _prop_val; FUserPermissionsCallCenterAutoLogin_Specified = true;  }
  bool __fastcall UserPermissionsCallCenterAutoLogin_Specified(int Index)
  {  return FUserPermissionsCallCenterAutoLogin_Specified;  } 
  bool __fastcall GetUserPermissionsInteractionUser(int Index)
  {  return FUserPermissionsInteractionUser;  }
  void __fastcall SetUserPermissionsInteractionUser(int Index, bool _prop_val)
  {  FUserPermissionsInteractionUser = _prop_val; FUserPermissionsInteractionUser_Specified = true;  }
  bool __fastcall UserPermissionsInteractionUser_Specified(int Index)
  {  return FUserPermissionsInteractionUser_Specified;  } 
  bool __fastcall GetUserPermissionsMarketingUser(int Index)
  {  return FUserPermissionsMarketingUser;  }
  void __fastcall SetUserPermissionsMarketingUser(int Index, bool _prop_val)
  {  FUserPermissionsMarketingUser = _prop_val; FUserPermissionsMarketingUser_Specified = true;  }
  bool __fastcall UserPermissionsMarketingUser_Specified(int Index)
  {  return FUserPermissionsMarketingUser_Specified;  } 
  bool __fastcall GetUserPermissionsMobileUser(int Index)
  {  return FUserPermissionsMobileUser;  }
  void __fastcall SetUserPermissionsMobileUser(int Index, bool _prop_val)
  {  FUserPermissionsMobileUser = _prop_val; FUserPermissionsMobileUser_Specified = true;  }
  bool __fastcall UserPermissionsMobileUser_Specified(int Index)
  {  return FUserPermissionsMobileUser_Specified;  } 
  bool __fastcall GetUserPermissionsOfflineUser(int Index)
  {  return FUserPermissionsOfflineUser;  }
  void __fastcall SetUserPermissionsOfflineUser(int Index, bool _prop_val)
  {  FUserPermissionsOfflineUser = _prop_val; FUserPermissionsOfflineUser_Specified = true;  }
  bool __fastcall UserPermissionsOfflineUser_Specified(int Index)
  {  return FUserPermissionsOfflineUser_Specified;  } 
  bool __fastcall GetUserPermissionsSFContentUser(int Index)
  {  return FUserPermissionsSFContentUser;  }
  void __fastcall SetUserPermissionsSFContentUser(int Index, bool _prop_val)
  {  FUserPermissionsSFContentUser = _prop_val; FUserPermissionsSFContentUser_Specified = true;  }
  bool __fastcall UserPermissionsSFContentUser_Specified(int Index)
  {  return FUserPermissionsSFContentUser_Specified;  } 
  QueryResult* __fastcall GetUserPreferences(int Index)
  {  return FUserPreferences;  }
  void __fastcall SetUserPreferences(int Index, QueryResult* _prop_val)
  {  FUserPreferences = _prop_val; FUserPreferences_Specified = true;  }
  bool __fastcall UserPreferences_Specified(int Index)
  {  return FUserPreferences_Specified;  } 
  bool __fastcall GetUserPreferencesActivityRemindersPopup(int Index)
  {  return FUserPreferencesActivityRemindersPopup;  }
  void __fastcall SetUserPreferencesActivityRemindersPopup(int Index, bool _prop_val)
  {  FUserPreferencesActivityRemindersPopup = _prop_val; FUserPreferencesActivityRemindersPopup_Specified = true;  }
  bool __fastcall UserPreferencesActivityRemindersPopup_Specified(int Index)
  {  return FUserPreferencesActivityRemindersPopup_Specified;  } 
  bool __fastcall GetUserPreferencesApexPagesDeveloperMode(int Index)
  {  return FUserPreferencesApexPagesDeveloperMode;  }
  void __fastcall SetUserPreferencesApexPagesDeveloperMode(int Index, bool _prop_val)
  {  FUserPreferencesApexPagesDeveloperMode = _prop_val; FUserPreferencesApexPagesDeveloperMode_Specified = true;  }
  bool __fastcall UserPreferencesApexPagesDeveloperMode_Specified(int Index)
  {  return FUserPreferencesApexPagesDeveloperMode_Specified;  } 
  bool __fastcall GetUserPreferencesDisCommentAfterLikeEmail(int Index)
  {  return FUserPreferencesDisCommentAfterLikeEmail;  }
  void __fastcall SetUserPreferencesDisCommentAfterLikeEmail(int Index, bool _prop_val)
  {  FUserPreferencesDisCommentAfterLikeEmail = _prop_val; FUserPreferencesDisCommentAfterLikeEmail_Specified = true;  }
  bool __fastcall UserPreferencesDisCommentAfterLikeEmail_Specified(int Index)
  {  return FUserPreferencesDisCommentAfterLikeEmail_Specified;  } 
  bool __fastcall GetUserPreferencesDisMentionsCommentEmail(int Index)
  {  return FUserPreferencesDisMentionsCommentEmail;  }
  void __fastcall SetUserPreferencesDisMentionsCommentEmail(int Index, bool _prop_val)
  {  FUserPreferencesDisMentionsCommentEmail = _prop_val; FUserPreferencesDisMentionsCommentEmail_Specified = true;  }
  bool __fastcall UserPreferencesDisMentionsCommentEmail_Specified(int Index)
  {  return FUserPreferencesDisMentionsCommentEmail_Specified;  } 
  bool __fastcall GetUserPreferencesDisProfPostCommentEmail(int Index)
  {  return FUserPreferencesDisProfPostCommentEmail;  }
  void __fastcall SetUserPreferencesDisProfPostCommentEmail(int Index, bool _prop_val)
  {  FUserPreferencesDisProfPostCommentEmail = _prop_val; FUserPreferencesDisProfPostCommentEmail_Specified = true;  }
  bool __fastcall UserPreferencesDisProfPostCommentEmail_Specified(int Index)
  {  return FUserPreferencesDisProfPostCommentEmail_Specified;  } 
  bool __fastcall GetUserPreferencesDisableAllFeedsEmail(int Index)
  {  return FUserPreferencesDisableAllFeedsEmail;  }
  void __fastcall SetUserPreferencesDisableAllFeedsEmail(int Index, bool _prop_val)
  {  FUserPreferencesDisableAllFeedsEmail = _prop_val; FUserPreferencesDisableAllFeedsEmail_Specified = true;  }
  bool __fastcall UserPreferencesDisableAllFeedsEmail_Specified(int Index)
  {  return FUserPreferencesDisableAllFeedsEmail_Specified;  } 
  bool __fastcall GetUserPreferencesDisableBookmarkEmail(int Index)
  {  return FUserPreferencesDisableBookmarkEmail;  }
  void __fastcall SetUserPreferencesDisableBookmarkEmail(int Index, bool _prop_val)
  {  FUserPreferencesDisableBookmarkEmail = _prop_val; FUserPreferencesDisableBookmarkEmail_Specified = true;  }
  bool __fastcall UserPreferencesDisableBookmarkEmail_Specified(int Index)
  {  return FUserPreferencesDisableBookmarkEmail_Specified;  } 
  bool __fastcall GetUserPreferencesDisableChangeCommentEmail(int Index)
  {  return FUserPreferencesDisableChangeCommentEmail;  }
  void __fastcall SetUserPreferencesDisableChangeCommentEmail(int Index, bool _prop_val)
  {  FUserPreferencesDisableChangeCommentEmail = _prop_val; FUserPreferencesDisableChangeCommentEmail_Specified = true;  }
  bool __fastcall UserPreferencesDisableChangeCommentEmail_Specified(int Index)
  {  return FUserPreferencesDisableChangeCommentEmail_Specified;  } 
  bool __fastcall GetUserPreferencesDisableFileShareNotificationsForApi(int Index)
  {  return FUserPreferencesDisableFileShareNotificationsForApi;  }
  void __fastcall SetUserPreferencesDisableFileShareNotificationsForApi(int Index, bool _prop_val)
  {  FUserPreferencesDisableFileShareNotificationsForApi = _prop_val; FUserPreferencesDisableFileShareNotificationsForApi_Specified = true;  }
  bool __fastcall UserPreferencesDisableFileShareNotificationsForApi_Specified(int Index)
  {  return FUserPreferencesDisableFileShareNotificationsForApi_Specified;  } 
  bool __fastcall GetUserPreferencesDisableFollowersEmail(int Index)
  {  return FUserPreferencesDisableFollowersEmail;  }
  void __fastcall SetUserPreferencesDisableFollowersEmail(int Index, bool _prop_val)
  {  FUserPreferencesDisableFollowersEmail = _prop_val; FUserPreferencesDisableFollowersEmail_Specified = true;  }
  bool __fastcall UserPreferencesDisableFollowersEmail_Specified(int Index)
  {  return FUserPreferencesDisableFollowersEmail_Specified;  } 
  bool __fastcall GetUserPreferencesDisableLaterCommentEmail(int Index)
  {  return FUserPreferencesDisableLaterCommentEmail;  }
  void __fastcall SetUserPreferencesDisableLaterCommentEmail(int Index, bool _prop_val)
  {  FUserPreferencesDisableLaterCommentEmail = _prop_val; FUserPreferencesDisableLaterCommentEmail_Specified = true;  }
  bool __fastcall UserPreferencesDisableLaterCommentEmail_Specified(int Index)
  {  return FUserPreferencesDisableLaterCommentEmail_Specified;  } 
  bool __fastcall GetUserPreferencesDisableLikeEmail(int Index)
  {  return FUserPreferencesDisableLikeEmail;  }
  void __fastcall SetUserPreferencesDisableLikeEmail(int Index, bool _prop_val)
  {  FUserPreferencesDisableLikeEmail = _prop_val; FUserPreferencesDisableLikeEmail_Specified = true;  }
  bool __fastcall UserPreferencesDisableLikeEmail_Specified(int Index)
  {  return FUserPreferencesDisableLikeEmail_Specified;  } 
  bool __fastcall GetUserPreferencesDisableMentionsPostEmail(int Index)
  {  return FUserPreferencesDisableMentionsPostEmail;  }
  void __fastcall SetUserPreferencesDisableMentionsPostEmail(int Index, bool _prop_val)
  {  FUserPreferencesDisableMentionsPostEmail = _prop_val; FUserPreferencesDisableMentionsPostEmail_Specified = true;  }
  bool __fastcall UserPreferencesDisableMentionsPostEmail_Specified(int Index)
  {  return FUserPreferencesDisableMentionsPostEmail_Specified;  } 
  bool __fastcall GetUserPreferencesDisableMessageEmail(int Index)
  {  return FUserPreferencesDisableMessageEmail;  }
  void __fastcall SetUserPreferencesDisableMessageEmail(int Index, bool _prop_val)
  {  FUserPreferencesDisableMessageEmail = _prop_val; FUserPreferencesDisableMessageEmail_Specified = true;  }
  bool __fastcall UserPreferencesDisableMessageEmail_Specified(int Index)
  {  return FUserPreferencesDisableMessageEmail_Specified;  } 
  bool __fastcall GetUserPreferencesDisableProfilePostEmail(int Index)
  {  return FUserPreferencesDisableProfilePostEmail;  }
  void __fastcall SetUserPreferencesDisableProfilePostEmail(int Index, bool _prop_val)
  {  FUserPreferencesDisableProfilePostEmail = _prop_val; FUserPreferencesDisableProfilePostEmail_Specified = true;  }
  bool __fastcall UserPreferencesDisableProfilePostEmail_Specified(int Index)
  {  return FUserPreferencesDisableProfilePostEmail_Specified;  } 
  bool __fastcall GetUserPreferencesDisableSharePostEmail(int Index)
  {  return FUserPreferencesDisableSharePostEmail;  }
  void __fastcall SetUserPreferencesDisableSharePostEmail(int Index, bool _prop_val)
  {  FUserPreferencesDisableSharePostEmail = _prop_val; FUserPreferencesDisableSharePostEmail_Specified = true;  }
  bool __fastcall UserPreferencesDisableSharePostEmail_Specified(int Index)
  {  return FUserPreferencesDisableSharePostEmail_Specified;  } 
  bool __fastcall GetUserPreferencesEnableAutoSubForFeeds(int Index)
  {  return FUserPreferencesEnableAutoSubForFeeds;  }
  void __fastcall SetUserPreferencesEnableAutoSubForFeeds(int Index, bool _prop_val)
  {  FUserPreferencesEnableAutoSubForFeeds = _prop_val; FUserPreferencesEnableAutoSubForFeeds_Specified = true;  }
  bool __fastcall UserPreferencesEnableAutoSubForFeeds_Specified(int Index)
  {  return FUserPreferencesEnableAutoSubForFeeds_Specified;  } 
  bool __fastcall GetUserPreferencesEventRemindersCheckboxDefault(int Index)
  {  return FUserPreferencesEventRemindersCheckboxDefault;  }
  void __fastcall SetUserPreferencesEventRemindersCheckboxDefault(int Index, bool _prop_val)
  {  FUserPreferencesEventRemindersCheckboxDefault = _prop_val; FUserPreferencesEventRemindersCheckboxDefault_Specified = true;  }
  bool __fastcall UserPreferencesEventRemindersCheckboxDefault_Specified(int Index)
  {  return FUserPreferencesEventRemindersCheckboxDefault_Specified;  } 
  bool __fastcall GetUserPreferencesReminderSoundOff(int Index)
  {  return FUserPreferencesReminderSoundOff;  }
  void __fastcall SetUserPreferencesReminderSoundOff(int Index, bool _prop_val)
  {  FUserPreferencesReminderSoundOff = _prop_val; FUserPreferencesReminderSoundOff_Specified = true;  }
  bool __fastcall UserPreferencesReminderSoundOff_Specified(int Index)
  {  return FUserPreferencesReminderSoundOff_Specified;  } 
  bool __fastcall GetUserPreferencesTaskRemindersCheckboxDefault(int Index)
  {  return FUserPreferencesTaskRemindersCheckboxDefault;  }
  void __fastcall SetUserPreferencesTaskRemindersCheckboxDefault(int Index, bool _prop_val)
  {  FUserPreferencesTaskRemindersCheckboxDefault = _prop_val; FUserPreferencesTaskRemindersCheckboxDefault_Specified = true;  }
  bool __fastcall UserPreferencesTaskRemindersCheckboxDefault_Specified(int Index)
  {  return FUserPreferencesTaskRemindersCheckboxDefault_Specified;  } 
  UserRole* __fastcall GetUserRole(int Index)
  {  return FUserRole;  }
  void __fastcall SetUserRole(int Index, UserRole* _prop_val)
  {  FUserRole = _prop_val; FUserRole_Specified = true;  }
  bool __fastcall UserRole_Specified(int Index)
  {  return FUserRole_Specified;  } 
  ID __fastcall GetUserRoleId(int Index)
  {  return FUserRoleId;  }
  void __fastcall SetUserRoleId(int Index, ID _prop_val)
  {  FUserRoleId = _prop_val; FUserRoleId_Specified = true;  }
  bool __fastcall UserRoleId_Specified(int Index)
  {  return FUserRoleId_Specified;  } 
  UnicodeString __fastcall GetUserType(int Index)
  {  return FUserType;  }
  void __fastcall SetUserType(int Index, UnicodeString _prop_val)
  {  FUserType = _prop_val; FUserType_Specified = true;  }
  bool __fastcall UserType_Specified(int Index)
  {  return FUserType_Specified;  } 
  UnicodeString __fastcall GetUsername(int Index)
  {  return FUsername;  }
  void __fastcall SetUsername(int Index, UnicodeString _prop_val)
  {  FUsername = _prop_val; FUsername_Specified = true;  }
  bool __fastcall Username_Specified(int Index)
  {  return FUsername_Specified;  } 
  ID __fastcall GetWorkspaceId(int Index)
  {  return FWorkspaceId;  }
  void __fastcall SetWorkspaceId(int Index, ID _prop_val)
  {  FWorkspaceId = _prop_val; FWorkspaceId_Specified = true;  }
  bool __fastcall WorkspaceId_Specified(int Index)
  {  return FWorkspaceId_Specified;  } 

public:
  __fastcall ~User();
__published:
  __property UnicodeString    AboutMe = { index=(IS_OPTN|IS_NLBL), read=FAboutMe, write=SetAboutMe, stored = AboutMe_Specified };
  __property ID          AccountId = { index=(IS_OPTN|IS_NLBL), read=FAccountId, write=SetAccountId, stored = AccountId_Specified };
  __property UnicodeString      Alias = { index=(IS_OPTN|IS_NLBL), read=FAlias, write=SetAlias, stored = Alias_Specified };
  __property ID         CallCenterId = { index=(IS_OPTN|IS_NLBL), read=FCallCenterId, write=SetCallCenterId, stored = CallCenterId_Specified };
  __property UnicodeString       City = { index=(IS_OPTN|IS_NLBL), read=FCity, write=SetCity, stored = City_Specified };
  __property UnicodeString CommunityNickname = { index=(IS_OPTN|IS_NLBL), read=FCommunityNickname, write=SetCommunityNickname, stored = CommunityNickname_Specified };
  __property UnicodeString CompanyName = { index=(IS_OPTN|IS_NLBL), read=FCompanyName, write=SetCompanyName, stored = CompanyName_Specified };
  __property Contact*      Contact = { index=(IS_OPTN|IS_NLBL), read=FContact, write=SetContact, stored = Contact_Specified };
  __property ID          ContactId = { index=(IS_OPTN|IS_NLBL), read=FContactId, write=SetContactId, stored = ContactId_Specified };
  __property QueryResult* ContractsSigned = { index=(IS_OPTN|IS_NLBL), read=FContractsSigned, write=SetContractsSigned, stored = ContractsSigned_Specified };
  __property UnicodeString    Country = { index=(IS_OPTN|IS_NLBL), read=FCountry, write=SetCountry, stored = Country_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString DefaultGroupNotificationFrequency = { index=(IS_OPTN|IS_NLBL), read=FDefaultGroupNotificationFrequency, write=SetDefaultGroupNotificationFrequency, stored = DefaultGroupNotificationFrequency_Specified };
  __property ID         DelegatedApproverId = { index=(IS_OPTN|IS_NLBL), read=FDelegatedApproverId, write=SetDelegatedApproverId, stored = DelegatedApproverId_Specified };
  __property QueryResult* DelegatedUsers = { index=(IS_OPTN|IS_NLBL), read=FDelegatedUsers, write=SetDelegatedUsers, stored = DelegatedUsers_Specified };
  __property UnicodeString Department = { index=(IS_OPTN|IS_NLBL), read=FDepartment, write=SetDepartment, stored = Department_Specified };
  __property UnicodeString DigestFrequency = { index=(IS_OPTN|IS_NLBL), read=FDigestFrequency, write=SetDigestFrequency, stored = DigestFrequency_Specified };
  __property UnicodeString   Division = { index=(IS_OPTN|IS_NLBL), read=FDivision, write=SetDivision, stored = Division_Specified };
  __property UnicodeString      Email = { index=(IS_OPTN|IS_NLBL), read=FEmail, write=SetEmail, stored = Email_Specified };
  __property UnicodeString EmailEncodingKey = { index=(IS_OPTN|IS_NLBL), read=FEmailEncodingKey, write=SetEmailEncodingKey, stored = EmailEncodingKey_Specified };
  __property UnicodeString EmployeeNumber = { index=(IS_OPTN|IS_NLBL), read=FEmployeeNumber, write=SetEmployeeNumber, stored = EmployeeNumber_Specified };
  __property UnicodeString  Extension = { index=(IS_OPTN|IS_NLBL), read=FExtension, write=SetExtension, stored = Extension_Specified };
  __property UnicodeString        Fax = { index=(IS_OPTN|IS_NLBL), read=FFax, write=SetFax, stored = Fax_Specified };
  __property UnicodeString FederationIdentifier = { index=(IS_OPTN|IS_NLBL), read=FFederationIdentifier, write=SetFederationIdentifier, stored = FederationIdentifier_Specified };
  __property QueryResult* FeedSubscriptions = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptions, write=SetFeedSubscriptions, stored = FeedSubscriptions_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property QueryResult*      Feeds = { index=(IS_OPTN|IS_NLBL), read=FFeeds, write=SetFeeds, stored = Feeds_Specified };
  __property UnicodeString  FirstName = { index=(IS_OPTN|IS_NLBL), read=FFirstName, write=SetFirstName, stored = FirstName_Specified };
  __property bool       ForecastEnabled = { index=(IS_OPTN|IS_NLBL), read=FForecastEnabled, write=SetForecastEnabled, stored = ForecastEnabled_Specified };
  __property UnicodeString FullPhotoUrl = { index=(IS_OPTN|IS_NLBL), read=FFullPhotoUrl, write=SetFullPhotoUrl, stored = FullPhotoUrl_Specified };
  __property bool         IsActive = { index=(IS_OPTN|IS_NLBL), read=FIsActive, write=SetIsActive, stored = IsActive_Specified };
  __property UnicodeString LanguageLocaleKey = { index=(IS_OPTN|IS_NLBL), read=FLanguageLocaleKey, write=SetLanguageLocaleKey, stored = LanguageLocaleKey_Specified };
  __property TXSDateTime* LastLoginDate = { index=(IS_OPTN|IS_NLBL), read=FLastLoginDate, write=SetLastLoginDate, stored = LastLoginDate_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property UnicodeString   LastName = { index=(IS_OPTN|IS_NLBL), read=FLastName, write=SetLastName, stored = LastName_Specified };
  __property TXSDateTime* LastPasswordChangeDate = { index=(IS_OPTN|IS_NLBL), read=FLastPasswordChangeDate, write=SetLastPasswordChangeDate, stored = LastPasswordChangeDate_Specified };
  __property UnicodeString LocaleSidKey = { index=(IS_OPTN|IS_NLBL), read=FLocaleSidKey, write=SetLocaleSidKey, stored = LocaleSidKey_Specified };
  __property User*         Manager = { index=(IS_OPTN|IS_NLBL), read=FManager, write=SetManager, stored = Manager_Specified };
  __property ID          ManagerId = { index=(IS_OPTN|IS_NLBL), read=FManagerId, write=SetManagerId, stored = ManagerId_Specified };
  __property UnicodeString MobilePhone = { index=(IS_OPTN|IS_NLBL), read=FMobilePhone, write=SetMobilePhone, stored = MobilePhone_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property TXSDateTime* OfflinePdaTrialExpirationDate = { index=(IS_OPTN|IS_NLBL), read=FOfflinePdaTrialExpirationDate, write=SetOfflinePdaTrialExpirationDate, stored = OfflinePdaTrialExpirationDate_Specified };
  __property TXSDateTime* OfflineTrialExpirationDate = { index=(IS_OPTN|IS_NLBL), read=FOfflineTrialExpirationDate, write=SetOfflineTrialExpirationDate, stored = OfflineTrialExpirationDate_Specified };
  __property QueryResult* PermissionSetAssignments = { index=(IS_OPTN|IS_NLBL), read=FPermissionSetAssignments, write=SetPermissionSetAssignments, stored = PermissionSetAssignments_Specified };
  __property UnicodeString      Phone = { index=(IS_OPTN|IS_NLBL), read=FPhone, write=SetPhone, stored = Phone_Specified };
  __property UnicodeString PostalCode = { index=(IS_OPTN|IS_NLBL), read=FPostalCode, write=SetPostalCode, stored = PostalCode_Specified };
  __property Profile*      Profile = { index=(IS_OPTN|IS_NLBL), read=FProfile, write=SetProfile, stored = Profile_Specified };
  __property ID          ProfileId = { index=(IS_OPTN|IS_NLBL), read=FProfileId, write=SetProfileId, stored = ProfileId_Specified };
  __property bool       ReceivesAdminInfoEmails = { index=(IS_OPTN|IS_NLBL), read=FReceivesAdminInfoEmails, write=SetReceivesAdminInfoEmails, stored = ReceivesAdminInfoEmails_Specified };
  __property bool       ReceivesInfoEmails = { index=(IS_OPTN|IS_NLBL), read=FReceivesInfoEmails, write=SetReceivesInfoEmails, stored = ReceivesInfoEmails_Specified };
  __property UnicodeString SmallPhotoUrl = { index=(IS_OPTN|IS_NLBL), read=FSmallPhotoUrl, write=SetSmallPhotoUrl, stored = SmallPhotoUrl_Specified };
  __property UnicodeString      State = { index=(IS_OPTN|IS_NLBL), read=FState, write=SetState, stored = State_Specified };
  __property UnicodeString     Street = { index=(IS_OPTN|IS_NLBL), read=FStreet, write=SetStreet, stored = Street_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property UnicodeString TimeZoneSidKey = { index=(IS_OPTN|IS_NLBL), read=FTimeZoneSidKey, write=SetTimeZoneSidKey, stored = TimeZoneSidKey_Specified };
  __property UnicodeString      Title = { index=(IS_OPTN|IS_NLBL), read=FTitle, write=SetTitle, stored = Title_Specified };
  __property bool       UserPermissionsAvantgoUser = { index=(IS_OPTN|IS_NLBL), read=FUserPermissionsAvantgoUser, write=SetUserPermissionsAvantgoUser, stored = UserPermissionsAvantgoUser_Specified };
  __property bool       UserPermissionsCallCenterAutoLogin = { index=(IS_OPTN|IS_NLBL), read=FUserPermissionsCallCenterAutoLogin, write=SetUserPermissionsCallCenterAutoLogin, stored = UserPermissionsCallCenterAutoLogin_Specified };
  __property bool       UserPermissionsInteractionUser = { index=(IS_OPTN|IS_NLBL), read=FUserPermissionsInteractionUser, write=SetUserPermissionsInteractionUser, stored = UserPermissionsInteractionUser_Specified };
  __property bool       UserPermissionsMarketingUser = { index=(IS_OPTN|IS_NLBL), read=FUserPermissionsMarketingUser, write=SetUserPermissionsMarketingUser, stored = UserPermissionsMarketingUser_Specified };
  __property bool       UserPermissionsMobileUser = { index=(IS_OPTN|IS_NLBL), read=FUserPermissionsMobileUser, write=SetUserPermissionsMobileUser, stored = UserPermissionsMobileUser_Specified };
  __property bool       UserPermissionsOfflineUser = { index=(IS_OPTN|IS_NLBL), read=FUserPermissionsOfflineUser, write=SetUserPermissionsOfflineUser, stored = UserPermissionsOfflineUser_Specified };
  __property bool       UserPermissionsSFContentUser = { index=(IS_OPTN|IS_NLBL), read=FUserPermissionsSFContentUser, write=SetUserPermissionsSFContentUser, stored = UserPermissionsSFContentUser_Specified };
  __property QueryResult* UserPreferences = { index=(IS_OPTN|IS_NLBL), read=FUserPreferences, write=SetUserPreferences, stored = UserPreferences_Specified };
  __property bool       UserPreferencesActivityRemindersPopup = { index=(IS_OPTN|IS_NLBL), read=FUserPreferencesActivityRemindersPopup, write=SetUserPreferencesActivityRemindersPopup, stored = UserPreferencesActivityRemindersPopup_Specified };
  __property bool       UserPreferencesApexPagesDeveloperMode = { index=(IS_OPTN|IS_NLBL), read=FUserPreferencesApexPagesDeveloperMode, write=SetUserPreferencesApexPagesDeveloperMode, stored = UserPreferencesApexPagesDeveloperMode_Specified };
  __property bool       UserPreferencesDisCommentAfterLikeEmail = { index=(IS_OPTN|IS_NLBL), read=FUserPreferencesDisCommentAfterLikeEmail, write=SetUserPreferencesDisCommentAfterLikeEmail, stored = UserPreferencesDisCommentAfterLikeEmail_Specified };
  __property bool       UserPreferencesDisMentionsCommentEmail = { index=(IS_OPTN|IS_NLBL), read=FUserPreferencesDisMentionsCommentEmail, write=SetUserPreferencesDisMentionsCommentEmail, stored = UserPreferencesDisMentionsCommentEmail_Specified };
  __property bool       UserPreferencesDisProfPostCommentEmail = { index=(IS_OPTN|IS_NLBL), read=FUserPreferencesDisProfPostCommentEmail, write=SetUserPreferencesDisProfPostCommentEmail, stored = UserPreferencesDisProfPostCommentEmail_Specified };
  __property bool       UserPreferencesDisableAllFeedsEmail = { index=(IS_OPTN|IS_NLBL), read=FUserPreferencesDisableAllFeedsEmail, write=SetUserPreferencesDisableAllFeedsEmail, stored = UserPreferencesDisableAllFeedsEmail_Specified };
  __property bool       UserPreferencesDisableBookmarkEmail = { index=(IS_OPTN|IS_NLBL), read=FUserPreferencesDisableBookmarkEmail, write=SetUserPreferencesDisableBookmarkEmail, stored = UserPreferencesDisableBookmarkEmail_Specified };
  __property bool       UserPreferencesDisableChangeCommentEmail = { index=(IS_OPTN|IS_NLBL), read=FUserPreferencesDisableChangeCommentEmail, write=SetUserPreferencesDisableChangeCommentEmail, stored = UserPreferencesDisableChangeCommentEmail_Specified };
  __property bool       UserPreferencesDisableFileShareNotificationsForApi = { index=(IS_OPTN|IS_NLBL), read=FUserPreferencesDisableFileShareNotificationsForApi, write=SetUserPreferencesDisableFileShareNotificationsForApi, stored = UserPreferencesDisableFileShareNotificationsForApi_Specified };
  __property bool       UserPreferencesDisableFollowersEmail = { index=(IS_OPTN|IS_NLBL), read=FUserPreferencesDisableFollowersEmail, write=SetUserPreferencesDisableFollowersEmail, stored = UserPreferencesDisableFollowersEmail_Specified };
  __property bool       UserPreferencesDisableLaterCommentEmail = { index=(IS_OPTN|IS_NLBL), read=FUserPreferencesDisableLaterCommentEmail, write=SetUserPreferencesDisableLaterCommentEmail, stored = UserPreferencesDisableLaterCommentEmail_Specified };
  __property bool       UserPreferencesDisableLikeEmail = { index=(IS_OPTN|IS_NLBL), read=FUserPreferencesDisableLikeEmail, write=SetUserPreferencesDisableLikeEmail, stored = UserPreferencesDisableLikeEmail_Specified };
  __property bool       UserPreferencesDisableMentionsPostEmail = { index=(IS_OPTN|IS_NLBL), read=FUserPreferencesDisableMentionsPostEmail, write=SetUserPreferencesDisableMentionsPostEmail, stored = UserPreferencesDisableMentionsPostEmail_Specified };
  __property bool       UserPreferencesDisableMessageEmail = { index=(IS_OPTN|IS_NLBL), read=FUserPreferencesDisableMessageEmail, write=SetUserPreferencesDisableMessageEmail, stored = UserPreferencesDisableMessageEmail_Specified };
  __property bool       UserPreferencesDisableProfilePostEmail = { index=(IS_OPTN|IS_NLBL), read=FUserPreferencesDisableProfilePostEmail, write=SetUserPreferencesDisableProfilePostEmail, stored = UserPreferencesDisableProfilePostEmail_Specified };
  __property bool       UserPreferencesDisableSharePostEmail = { index=(IS_OPTN|IS_NLBL), read=FUserPreferencesDisableSharePostEmail, write=SetUserPreferencesDisableSharePostEmail, stored = UserPreferencesDisableSharePostEmail_Specified };
  __property bool       UserPreferencesEnableAutoSubForFeeds = { index=(IS_OPTN|IS_NLBL), read=FUserPreferencesEnableAutoSubForFeeds, write=SetUserPreferencesEnableAutoSubForFeeds, stored = UserPreferencesEnableAutoSubForFeeds_Specified };
  __property bool       UserPreferencesEventRemindersCheckboxDefault = { index=(IS_OPTN|IS_NLBL), read=FUserPreferencesEventRemindersCheckboxDefault, write=SetUserPreferencesEventRemindersCheckboxDefault, stored = UserPreferencesEventRemindersCheckboxDefault_Specified };
  __property bool       UserPreferencesReminderSoundOff = { index=(IS_OPTN|IS_NLBL), read=FUserPreferencesReminderSoundOff, write=SetUserPreferencesReminderSoundOff, stored = UserPreferencesReminderSoundOff_Specified };
  __property bool       UserPreferencesTaskRemindersCheckboxDefault = { index=(IS_OPTN|IS_NLBL), read=FUserPreferencesTaskRemindersCheckboxDefault, write=SetUserPreferencesTaskRemindersCheckboxDefault, stored = UserPreferencesTaskRemindersCheckboxDefault_Specified };
  __property UserRole*    UserRole = { index=(IS_OPTN|IS_NLBL), read=FUserRole, write=SetUserRole, stored = UserRole_Specified };
  __property ID         UserRoleId = { index=(IS_OPTN|IS_NLBL), read=FUserRoleId, write=SetUserRoleId, stored = UserRoleId_Specified };
  __property UnicodeString   UserType = { index=(IS_OPTN|IS_NLBL), read=FUserType, write=SetUserType, stored = UserType_Specified };
  __property UnicodeString   Username = { index=(IS_OPTN|IS_NLBL), read=FUsername, write=SetUsername, stored = Username_Specified };
  __property ID         WorkspaceId = { index=(IS_OPTN|IS_NLBL), read=FWorkspaceId, write=SetWorkspaceId, stored = WorkspaceId_Specified };
};




// ************************************************************************ //
// XML       : Account, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class Account : public sObject {
private:
  QueryResult*    FAccountContactRoles;
  bool            FAccountContactRoles_Specified;
  QueryResult*    FAccountPartnersFrom;
  bool            FAccountPartnersFrom_Specified;
  QueryResult*    FAccountPartnersTo;
  bool            FAccountPartnersTo_Specified;
  UnicodeString   FAccountSource;
  bool            FAccountSource_Specified;
  QueryResult*    FActivityHistories;
  bool            FActivityHistories_Specified;
  double          FAnnualRevenue;
  bool            FAnnualRevenue_Specified;
  QueryResult*    FAssets;
  bool            FAssets_Specified;
  QueryResult*    FAttachments;
  bool            FAttachments_Specified;
  UnicodeString   FBillingCity;
  bool            FBillingCity_Specified;
  UnicodeString   FBillingCountry;
  bool            FBillingCountry_Specified;
  UnicodeString   FBillingPostalCode;
  bool            FBillingPostalCode_Specified;
  UnicodeString   FBillingState;
  bool            FBillingState_Specified;
  UnicodeString   FBillingStreet;
  bool            FBillingStreet_Specified;
  QueryResult*    FCases;
  bool            FCases_Specified;
  QueryResult*    FContacts;
  bool            FContacts_Specified;
  QueryResult*    FContracts;
  bool            FContracts_Specified;
  User*           FCreatedBy;
  bool            FCreatedBy_Specified;
  ID              FCreatedById;
  bool            FCreatedById_Specified;
  TXSDateTime*    FCreatedDate;
  bool            FCreatedDate_Specified;
  UnicodeString   FDescription;
  bool            FDescription_Specified;
  QueryResult*    FEvents;
  bool            FEvents_Specified;
  UnicodeString   FFax;
  bool            FFax_Specified;
  QueryResult*    FFeedSubscriptionsForEntity;
  bool            FFeedSubscriptionsForEntity_Specified;
  QueryResult*    FFeeds;
  bool            FFeeds_Specified;
  QueryResult*    FHistories;
  bool            FHistories_Specified;
  UnicodeString   FIndustry;
  bool            FIndustry_Specified;
  bool            FIsDeleted;
  bool            FIsDeleted_Specified;
  UnicodeString   FJigsaw;
  bool            FJigsaw_Specified;
  UnicodeString   FJigsawCompanyId;
  bool            FJigsawCompanyId_Specified;
  TXSDate*        FLastActivityDate;
  bool            FLastActivityDate_Specified;
  User*           FLastModifiedBy;
  bool            FLastModifiedBy_Specified;
  ID              FLastModifiedById;
  bool            FLastModifiedById_Specified;
  TXSDateTime*    FLastModifiedDate;
  bool            FLastModifiedDate_Specified;
  Account*        FMasterRecord;
  bool            FMasterRecord_Specified;
  ID              FMasterRecordId;
  bool            FMasterRecordId_Specified;
  UnicodeString   FName;
  bool            FName_Specified;
  QueryResult*    FNotes;
  bool            FNotes_Specified;
  QueryResult*    FNotesAndAttachments;
  bool            FNotesAndAttachments_Specified;
  int             FNumberOfEmployees;
  bool            FNumberOfEmployees_Specified;
  QueryResult*    FOpenActivities;
  bool            FOpenActivities_Specified;
  QueryResult*    FOpportunities;
  bool            FOpportunities_Specified;
  QueryResult*    FOpportunityPartnersTo;
  bool            FOpportunityPartnersTo_Specified;
  User*           FOwner;
  bool            FOwner_Specified;
  ID              FOwnerId;
  bool            FOwnerId_Specified;
  Account*        FParent;
  bool            FParent_Specified;
  ID              FParentId;
  bool            FParentId_Specified;
  QueryResult*    FPartnersFrom;
  bool            FPartnersFrom_Specified;
  QueryResult*    FPartnersTo;
  bool            FPartnersTo_Specified;
  UnicodeString   FPhone;
  bool            FPhone_Specified;
  QueryResult*    FProcessInstances;
  bool            FProcessInstances_Specified;
  QueryResult*    FProcessSteps;
  bool            FProcessSteps_Specified;
  QueryResult*    FShares;
  bool            FShares_Specified;
  UnicodeString   FShippingCity;
  bool            FShippingCity_Specified;
  UnicodeString   FShippingCountry;
  bool            FShippingCountry_Specified;
  UnicodeString   FShippingPostalCode;
  bool            FShippingPostalCode_Specified;
  UnicodeString   FShippingState;
  bool            FShippingState_Specified;
  UnicodeString   FShippingStreet;
  bool            FShippingStreet_Specified;
  UnicodeString   FSicDesc;
  bool            FSicDesc_Specified;
  TXSDateTime*    FSystemModstamp;
  bool            FSystemModstamp_Specified;
  QueryResult*    FTasks;
  bool            FTasks_Specified;
  UnicodeString   FType;
  bool            FType_Specified;
  UnicodeString   FWebsite;
  bool            FWebsite_Specified;
  QueryResult* __fastcall GetAccountContactRoles(int Index)
  {  return FAccountContactRoles;  }
  void __fastcall SetAccountContactRoles(int Index, QueryResult* _prop_val)
  {  FAccountContactRoles = _prop_val; FAccountContactRoles_Specified = true;  }
  bool __fastcall AccountContactRoles_Specified(int Index)
  {  return FAccountContactRoles_Specified;  } 
  QueryResult* __fastcall GetAccountPartnersFrom(int Index)
  {  return FAccountPartnersFrom;  }
  void __fastcall SetAccountPartnersFrom(int Index, QueryResult* _prop_val)
  {  FAccountPartnersFrom = _prop_val; FAccountPartnersFrom_Specified = true;  }
  bool __fastcall AccountPartnersFrom_Specified(int Index)
  {  return FAccountPartnersFrom_Specified;  } 
  QueryResult* __fastcall GetAccountPartnersTo(int Index)
  {  return FAccountPartnersTo;  }
  void __fastcall SetAccountPartnersTo(int Index, QueryResult* _prop_val)
  {  FAccountPartnersTo = _prop_val; FAccountPartnersTo_Specified = true;  }
  bool __fastcall AccountPartnersTo_Specified(int Index)
  {  return FAccountPartnersTo_Specified;  } 
  UnicodeString __fastcall GetAccountSource(int Index)
  {  return FAccountSource;  }
  void __fastcall SetAccountSource(int Index, UnicodeString _prop_val)
  {  FAccountSource = _prop_val; FAccountSource_Specified = true;  }
  bool __fastcall AccountSource_Specified(int Index)
  {  return FAccountSource_Specified;  } 
  QueryResult* __fastcall GetActivityHistories(int Index)
  {  return FActivityHistories;  }
  void __fastcall SetActivityHistories(int Index, QueryResult* _prop_val)
  {  FActivityHistories = _prop_val; FActivityHistories_Specified = true;  }
  bool __fastcall ActivityHistories_Specified(int Index)
  {  return FActivityHistories_Specified;  } 
  double __fastcall GetAnnualRevenue(int Index)
  {  return FAnnualRevenue;  }
  void __fastcall SetAnnualRevenue(int Index, double _prop_val)
  {  FAnnualRevenue = _prop_val; FAnnualRevenue_Specified = true;  }
  bool __fastcall AnnualRevenue_Specified(int Index)
  {  return FAnnualRevenue_Specified;  } 
  QueryResult* __fastcall GetAssets(int Index)
  {  return FAssets;  }
  void __fastcall SetAssets(int Index, QueryResult* _prop_val)
  {  FAssets = _prop_val; FAssets_Specified = true;  }
  bool __fastcall Assets_Specified(int Index)
  {  return FAssets_Specified;  } 
  QueryResult* __fastcall GetAttachments(int Index)
  {  return FAttachments;  }
  void __fastcall SetAttachments(int Index, QueryResult* _prop_val)
  {  FAttachments = _prop_val; FAttachments_Specified = true;  }
  bool __fastcall Attachments_Specified(int Index)
  {  return FAttachments_Specified;  } 
  UnicodeString __fastcall GetBillingCity(int Index)
  {  return FBillingCity;  }
  void __fastcall SetBillingCity(int Index, UnicodeString _prop_val)
  {  FBillingCity = _prop_val; FBillingCity_Specified = true;  }
  bool __fastcall BillingCity_Specified(int Index)
  {  return FBillingCity_Specified;  } 
  UnicodeString __fastcall GetBillingCountry(int Index)
  {  return FBillingCountry;  }
  void __fastcall SetBillingCountry(int Index, UnicodeString _prop_val)
  {  FBillingCountry = _prop_val; FBillingCountry_Specified = true;  }
  bool __fastcall BillingCountry_Specified(int Index)
  {  return FBillingCountry_Specified;  } 
  UnicodeString __fastcall GetBillingPostalCode(int Index)
  {  return FBillingPostalCode;  }
  void __fastcall SetBillingPostalCode(int Index, UnicodeString _prop_val)
  {  FBillingPostalCode = _prop_val; FBillingPostalCode_Specified = true;  }
  bool __fastcall BillingPostalCode_Specified(int Index)
  {  return FBillingPostalCode_Specified;  } 
  UnicodeString __fastcall GetBillingState(int Index)
  {  return FBillingState;  }
  void __fastcall SetBillingState(int Index, UnicodeString _prop_val)
  {  FBillingState = _prop_val; FBillingState_Specified = true;  }
  bool __fastcall BillingState_Specified(int Index)
  {  return FBillingState_Specified;  } 
  UnicodeString __fastcall GetBillingStreet(int Index)
  {  return FBillingStreet;  }
  void __fastcall SetBillingStreet(int Index, UnicodeString _prop_val)
  {  FBillingStreet = _prop_val; FBillingStreet_Specified = true;  }
  bool __fastcall BillingStreet_Specified(int Index)
  {  return FBillingStreet_Specified;  } 
  QueryResult* __fastcall GetCases(int Index)
  {  return FCases;  }
  void __fastcall SetCases(int Index, QueryResult* _prop_val)
  {  FCases = _prop_val; FCases_Specified = true;  }
  bool __fastcall Cases_Specified(int Index)
  {  return FCases_Specified;  } 
  QueryResult* __fastcall GetContacts(int Index)
  {  return FContacts;  }
  void __fastcall SetContacts(int Index, QueryResult* _prop_val)
  {  FContacts = _prop_val; FContacts_Specified = true;  }
  bool __fastcall Contacts_Specified(int Index)
  {  return FContacts_Specified;  } 
  QueryResult* __fastcall GetContracts(int Index)
  {  return FContracts;  }
  void __fastcall SetContracts(int Index, QueryResult* _prop_val)
  {  FContracts = _prop_val; FContracts_Specified = true;  }
  bool __fastcall Contracts_Specified(int Index)
  {  return FContracts_Specified;  } 
  User* __fastcall GetCreatedBy(int Index)
  {  return FCreatedBy;  }
  void __fastcall SetCreatedBy(int Index, User* _prop_val)
  {  FCreatedBy = _prop_val; FCreatedBy_Specified = true;  }
  bool __fastcall CreatedBy_Specified(int Index)
  {  return FCreatedBy_Specified;  } 
  ID __fastcall GetCreatedById(int Index)
  {  return FCreatedById;  }
  void __fastcall SetCreatedById(int Index, ID _prop_val)
  {  FCreatedById = _prop_val; FCreatedById_Specified = true;  }
  bool __fastcall CreatedById_Specified(int Index)
  {  return FCreatedById_Specified;  } 
  TXSDateTime* __fastcall GetCreatedDate(int Index)
  {  return FCreatedDate;  }
  void __fastcall SetCreatedDate(int Index, TXSDateTime* _prop_val)
  {  FCreatedDate = _prop_val; FCreatedDate_Specified = true;  }
  bool __fastcall CreatedDate_Specified(int Index)
  {  return FCreatedDate_Specified;  } 
  UnicodeString __fastcall GetDescription(int Index)
  {  return FDescription;  }
  void __fastcall SetDescription(int Index, UnicodeString _prop_val)
  {  FDescription = _prop_val; FDescription_Specified = true;  }
  bool __fastcall Description_Specified(int Index)
  {  return FDescription_Specified;  } 
  QueryResult* __fastcall GetEvents(int Index)
  {  return FEvents;  }
  void __fastcall SetEvents(int Index, QueryResult* _prop_val)
  {  FEvents = _prop_val; FEvents_Specified = true;  }
  bool __fastcall Events_Specified(int Index)
  {  return FEvents_Specified;  } 
  UnicodeString __fastcall GetFax(int Index)
  {  return FFax;  }
  void __fastcall SetFax(int Index, UnicodeString _prop_val)
  {  FFax = _prop_val; FFax_Specified = true;  }
  bool __fastcall Fax_Specified(int Index)
  {  return FFax_Specified;  } 
  QueryResult* __fastcall GetFeedSubscriptionsForEntity(int Index)
  {  return FFeedSubscriptionsForEntity;  }
  void __fastcall SetFeedSubscriptionsForEntity(int Index, QueryResult* _prop_val)
  {  FFeedSubscriptionsForEntity = _prop_val; FFeedSubscriptionsForEntity_Specified = true;  }
  bool __fastcall FeedSubscriptionsForEntity_Specified(int Index)
  {  return FFeedSubscriptionsForEntity_Specified;  } 
  QueryResult* __fastcall GetFeeds(int Index)
  {  return FFeeds;  }
  void __fastcall SetFeeds(int Index, QueryResult* _prop_val)
  {  FFeeds = _prop_val; FFeeds_Specified = true;  }
  bool __fastcall Feeds_Specified(int Index)
  {  return FFeeds_Specified;  } 
  QueryResult* __fastcall GetHistories(int Index)
  {  return FHistories;  }
  void __fastcall SetHistories(int Index, QueryResult* _prop_val)
  {  FHistories = _prop_val; FHistories_Specified = true;  }
  bool __fastcall Histories_Specified(int Index)
  {  return FHistories_Specified;  } 
  UnicodeString __fastcall GetIndustry(int Index)
  {  return FIndustry;  }
  void __fastcall SetIndustry(int Index, UnicodeString _prop_val)
  {  FIndustry = _prop_val; FIndustry_Specified = true;  }
  bool __fastcall Industry_Specified(int Index)
  {  return FIndustry_Specified;  } 
  bool __fastcall GetIsDeleted(int Index)
  {  return FIsDeleted;  }
  void __fastcall SetIsDeleted(int Index, bool _prop_val)
  {  FIsDeleted = _prop_val; FIsDeleted_Specified = true;  }
  bool __fastcall IsDeleted_Specified(int Index)
  {  return FIsDeleted_Specified;  } 
  UnicodeString __fastcall GetJigsaw(int Index)
  {  return FJigsaw;  }
  void __fastcall SetJigsaw(int Index, UnicodeString _prop_val)
  {  FJigsaw = _prop_val; FJigsaw_Specified = true;  }
  bool __fastcall Jigsaw_Specified(int Index)
  {  return FJigsaw_Specified;  } 
  UnicodeString __fastcall GetJigsawCompanyId(int Index)
  {  return FJigsawCompanyId;  }
  void __fastcall SetJigsawCompanyId(int Index, UnicodeString _prop_val)
  {  FJigsawCompanyId = _prop_val; FJigsawCompanyId_Specified = true;  }
  bool __fastcall JigsawCompanyId_Specified(int Index)
  {  return FJigsawCompanyId_Specified;  } 
  TXSDate* __fastcall GetLastActivityDate(int Index)
  {  return FLastActivityDate;  }
  void __fastcall SetLastActivityDate(int Index, TXSDate* _prop_val)
  {  FLastActivityDate = _prop_val; FLastActivityDate_Specified = true;  }
  bool __fastcall LastActivityDate_Specified(int Index)
  {  return FLastActivityDate_Specified;  } 
  User* __fastcall GetLastModifiedBy(int Index)
  {  return FLastModifiedBy;  }
  void __fastcall SetLastModifiedBy(int Index, User* _prop_val)
  {  FLastModifiedBy = _prop_val; FLastModifiedBy_Specified = true;  }
  bool __fastcall LastModifiedBy_Specified(int Index)
  {  return FLastModifiedBy_Specified;  } 
  ID __fastcall GetLastModifiedById(int Index)
  {  return FLastModifiedById;  }
  void __fastcall SetLastModifiedById(int Index, ID _prop_val)
  {  FLastModifiedById = _prop_val; FLastModifiedById_Specified = true;  }
  bool __fastcall LastModifiedById_Specified(int Index)
  {  return FLastModifiedById_Specified;  } 
  TXSDateTime* __fastcall GetLastModifiedDate(int Index)
  {  return FLastModifiedDate;  }
  void __fastcall SetLastModifiedDate(int Index, TXSDateTime* _prop_val)
  {  FLastModifiedDate = _prop_val; FLastModifiedDate_Specified = true;  }
  bool __fastcall LastModifiedDate_Specified(int Index)
  {  return FLastModifiedDate_Specified;  } 
  Account* __fastcall GetMasterRecord(int Index)
  {  return FMasterRecord;  }
  void __fastcall SetMasterRecord(int Index, Account* _prop_val)
  {  FMasterRecord = _prop_val; FMasterRecord_Specified = true;  }
  bool __fastcall MasterRecord_Specified(int Index)
  {  return FMasterRecord_Specified;  } 
  ID __fastcall GetMasterRecordId(int Index)
  {  return FMasterRecordId;  }
  void __fastcall SetMasterRecordId(int Index, ID _prop_val)
  {  FMasterRecordId = _prop_val; FMasterRecordId_Specified = true;  }
  bool __fastcall MasterRecordId_Specified(int Index)
  {  return FMasterRecordId_Specified;  } 
  UnicodeString __fastcall GetName(int Index)
  {  return FName;  }
  void __fastcall SetName(int Index, UnicodeString _prop_val)
  {  FName = _prop_val; FName_Specified = true;  }
  bool __fastcall Name_Specified(int Index)
  {  return FName_Specified;  } 
  QueryResult* __fastcall GetNotes(int Index)
  {  return FNotes;  }
  void __fastcall SetNotes(int Index, QueryResult* _prop_val)
  {  FNotes = _prop_val; FNotes_Specified = true;  }
  bool __fastcall Notes_Specified(int Index)
  {  return FNotes_Specified;  } 
  QueryResult* __fastcall GetNotesAndAttachments(int Index)
  {  return FNotesAndAttachments;  }
  void __fastcall SetNotesAndAttachments(int Index, QueryResult* _prop_val)
  {  FNotesAndAttachments = _prop_val; FNotesAndAttachments_Specified = true;  }
  bool __fastcall NotesAndAttachments_Specified(int Index)
  {  return FNotesAndAttachments_Specified;  } 
  int __fastcall GetNumberOfEmployees(int Index)
  {  return FNumberOfEmployees;  }
  void __fastcall SetNumberOfEmployees(int Index, int _prop_val)
  {  FNumberOfEmployees = _prop_val; FNumberOfEmployees_Specified = true;  }
  bool __fastcall NumberOfEmployees_Specified(int Index)
  {  return FNumberOfEmployees_Specified;  } 
  QueryResult* __fastcall GetOpenActivities(int Index)
  {  return FOpenActivities;  }
  void __fastcall SetOpenActivities(int Index, QueryResult* _prop_val)
  {  FOpenActivities = _prop_val; FOpenActivities_Specified = true;  }
  bool __fastcall OpenActivities_Specified(int Index)
  {  return FOpenActivities_Specified;  } 
  QueryResult* __fastcall GetOpportunities(int Index)
  {  return FOpportunities;  }
  void __fastcall SetOpportunities(int Index, QueryResult* _prop_val)
  {  FOpportunities = _prop_val; FOpportunities_Specified = true;  }
  bool __fastcall Opportunities_Specified(int Index)
  {  return FOpportunities_Specified;  } 
  QueryResult* __fastcall GetOpportunityPartnersTo(int Index)
  {  return FOpportunityPartnersTo;  }
  void __fastcall SetOpportunityPartnersTo(int Index, QueryResult* _prop_val)
  {  FOpportunityPartnersTo = _prop_val; FOpportunityPartnersTo_Specified = true;  }
  bool __fastcall OpportunityPartnersTo_Specified(int Index)
  {  return FOpportunityPartnersTo_Specified;  } 
  User* __fastcall GetOwner(int Index)
  {  return FOwner;  }
  void __fastcall SetOwner(int Index, User* _prop_val)
  {  FOwner = _prop_val; FOwner_Specified = true;  }
  bool __fastcall Owner_Specified(int Index)
  {  return FOwner_Specified;  } 
  ID __fastcall GetOwnerId(int Index)
  {  return FOwnerId;  }
  void __fastcall SetOwnerId(int Index, ID _prop_val)
  {  FOwnerId = _prop_val; FOwnerId_Specified = true;  }
  bool __fastcall OwnerId_Specified(int Index)
  {  return FOwnerId_Specified;  } 
  Account* __fastcall GetParent(int Index)
  {  return FParent;  }
  void __fastcall SetParent(int Index, Account* _prop_val)
  {  FParent = _prop_val; FParent_Specified = true;  }
  bool __fastcall Parent_Specified(int Index)
  {  return FParent_Specified;  } 
  ID __fastcall GetParentId(int Index)
  {  return FParentId;  }
  void __fastcall SetParentId(int Index, ID _prop_val)
  {  FParentId = _prop_val; FParentId_Specified = true;  }
  bool __fastcall ParentId_Specified(int Index)
  {  return FParentId_Specified;  } 
  QueryResult* __fastcall GetPartnersFrom(int Index)
  {  return FPartnersFrom;  }
  void __fastcall SetPartnersFrom(int Index, QueryResult* _prop_val)
  {  FPartnersFrom = _prop_val; FPartnersFrom_Specified = true;  }
  bool __fastcall PartnersFrom_Specified(int Index)
  {  return FPartnersFrom_Specified;  } 
  QueryResult* __fastcall GetPartnersTo(int Index)
  {  return FPartnersTo;  }
  void __fastcall SetPartnersTo(int Index, QueryResult* _prop_val)
  {  FPartnersTo = _prop_val; FPartnersTo_Specified = true;  }
  bool __fastcall PartnersTo_Specified(int Index)
  {  return FPartnersTo_Specified;  } 
  UnicodeString __fastcall GetPhone(int Index)
  {  return FPhone;  }
  void __fastcall SetPhone(int Index, UnicodeString _prop_val)
  {  FPhone = _prop_val; FPhone_Specified = true;  }
  bool __fastcall Phone_Specified(int Index)
  {  return FPhone_Specified;  } 
  QueryResult* __fastcall GetProcessInstances(int Index)
  {  return FProcessInstances;  }
  void __fastcall SetProcessInstances(int Index, QueryResult* _prop_val)
  {  FProcessInstances = _prop_val; FProcessInstances_Specified = true;  }
  bool __fastcall ProcessInstances_Specified(int Index)
  {  return FProcessInstances_Specified;  } 
  QueryResult* __fastcall GetProcessSteps(int Index)
  {  return FProcessSteps;  }
  void __fastcall SetProcessSteps(int Index, QueryResult* _prop_val)
  {  FProcessSteps = _prop_val; FProcessSteps_Specified = true;  }
  bool __fastcall ProcessSteps_Specified(int Index)
  {  return FProcessSteps_Specified;  } 
  QueryResult* __fastcall GetShares(int Index)
  {  return FShares;  }
  void __fastcall SetShares(int Index, QueryResult* _prop_val)
  {  FShares = _prop_val; FShares_Specified = true;  }
  bool __fastcall Shares_Specified(int Index)
  {  return FShares_Specified;  } 
  UnicodeString __fastcall GetShippingCity(int Index)
  {  return FShippingCity;  }
  void __fastcall SetShippingCity(int Index, UnicodeString _prop_val)
  {  FShippingCity = _prop_val; FShippingCity_Specified = true;  }
  bool __fastcall ShippingCity_Specified(int Index)
  {  return FShippingCity_Specified;  } 
  UnicodeString __fastcall GetShippingCountry(int Index)
  {  return FShippingCountry;  }
  void __fastcall SetShippingCountry(int Index, UnicodeString _prop_val)
  {  FShippingCountry = _prop_val; FShippingCountry_Specified = true;  }
  bool __fastcall ShippingCountry_Specified(int Index)
  {  return FShippingCountry_Specified;  } 
  UnicodeString __fastcall GetShippingPostalCode(int Index)
  {  return FShippingPostalCode;  }
  void __fastcall SetShippingPostalCode(int Index, UnicodeString _prop_val)
  {  FShippingPostalCode = _prop_val; FShippingPostalCode_Specified = true;  }
  bool __fastcall ShippingPostalCode_Specified(int Index)
  {  return FShippingPostalCode_Specified;  } 
  UnicodeString __fastcall GetShippingState(int Index)
  {  return FShippingState;  }
  void __fastcall SetShippingState(int Index, UnicodeString _prop_val)
  {  FShippingState = _prop_val; FShippingState_Specified = true;  }
  bool __fastcall ShippingState_Specified(int Index)
  {  return FShippingState_Specified;  } 
  UnicodeString __fastcall GetShippingStreet(int Index)
  {  return FShippingStreet;  }
  void __fastcall SetShippingStreet(int Index, UnicodeString _prop_val)
  {  FShippingStreet = _prop_val; FShippingStreet_Specified = true;  }
  bool __fastcall ShippingStreet_Specified(int Index)
  {  return FShippingStreet_Specified;  } 
  UnicodeString __fastcall GetSicDesc(int Index)
  {  return FSicDesc;  }
  void __fastcall SetSicDesc(int Index, UnicodeString _prop_val)
  {  FSicDesc = _prop_val; FSicDesc_Specified = true;  }
  bool __fastcall SicDesc_Specified(int Index)
  {  return FSicDesc_Specified;  } 
  TXSDateTime* __fastcall GetSystemModstamp(int Index)
  {  return FSystemModstamp;  }
  void __fastcall SetSystemModstamp(int Index, TXSDateTime* _prop_val)
  {  FSystemModstamp = _prop_val; FSystemModstamp_Specified = true;  }
  bool __fastcall SystemModstamp_Specified(int Index)
  {  return FSystemModstamp_Specified;  } 
  QueryResult* __fastcall GetTasks(int Index)
  {  return FTasks;  }
  void __fastcall SetTasks(int Index, QueryResult* _prop_val)
  {  FTasks = _prop_val; FTasks_Specified = true;  }
  bool __fastcall Tasks_Specified(int Index)
  {  return FTasks_Specified;  } 
  UnicodeString __fastcall GetType(int Index)
  {  return FType;  }
  void __fastcall SetType(int Index, UnicodeString _prop_val)
  {  FType = _prop_val; FType_Specified = true;  }
  bool __fastcall Type_Specified(int Index)
  {  return FType_Specified;  } 
  UnicodeString __fastcall GetWebsite(int Index)
  {  return FWebsite;  }
  void __fastcall SetWebsite(int Index, UnicodeString _prop_val)
  {  FWebsite = _prop_val; FWebsite_Specified = true;  }
  bool __fastcall Website_Specified(int Index)
  {  return FWebsite_Specified;  } 

public:
  __fastcall ~Account();
__published:
  __property QueryResult* AccountContactRoles = { index=(IS_OPTN|IS_NLBL), read=FAccountContactRoles, write=SetAccountContactRoles, stored = AccountContactRoles_Specified };
  __property QueryResult* AccountPartnersFrom = { index=(IS_OPTN|IS_NLBL), read=FAccountPartnersFrom, write=SetAccountPartnersFrom, stored = AccountPartnersFrom_Specified };
  __property QueryResult* AccountPartnersTo = { index=(IS_OPTN|IS_NLBL), read=FAccountPartnersTo, write=SetAccountPartnersTo, stored = AccountPartnersTo_Specified };
  __property UnicodeString AccountSource = { index=(IS_OPTN|IS_NLBL), read=FAccountSource, write=SetAccountSource, stored = AccountSource_Specified };
  __property QueryResult* ActivityHistories = { index=(IS_OPTN|IS_NLBL), read=FActivityHistories, write=SetActivityHistories, stored = ActivityHistories_Specified };
  __property double     AnnualRevenue = { index=(IS_OPTN|IS_NLBL), read=FAnnualRevenue, write=SetAnnualRevenue, stored = AnnualRevenue_Specified };
  __property QueryResult*     Assets = { index=(IS_OPTN|IS_NLBL), read=FAssets, write=SetAssets, stored = Assets_Specified };
  __property QueryResult* Attachments = { index=(IS_OPTN|IS_NLBL), read=FAttachments, write=SetAttachments, stored = Attachments_Specified };
  __property UnicodeString BillingCity = { index=(IS_OPTN|IS_NLBL), read=FBillingCity, write=SetBillingCity, stored = BillingCity_Specified };
  __property UnicodeString BillingCountry = { index=(IS_OPTN|IS_NLBL), read=FBillingCountry, write=SetBillingCountry, stored = BillingCountry_Specified };
  __property UnicodeString BillingPostalCode = { index=(IS_OPTN|IS_NLBL), read=FBillingPostalCode, write=SetBillingPostalCode, stored = BillingPostalCode_Specified };
  __property UnicodeString BillingState = { index=(IS_OPTN|IS_NLBL), read=FBillingState, write=SetBillingState, stored = BillingState_Specified };
  __property UnicodeString BillingStreet = { index=(IS_OPTN|IS_NLBL), read=FBillingStreet, write=SetBillingStreet, stored = BillingStreet_Specified };
  __property QueryResult*      Cases = { index=(IS_OPTN|IS_NLBL), read=FCases, write=SetCases, stored = Cases_Specified };
  __property QueryResult*   Contacts = { index=(IS_OPTN|IS_NLBL), read=FContacts, write=SetContacts, stored = Contacts_Specified };
  __property QueryResult*  Contracts = { index=(IS_OPTN|IS_NLBL), read=FContracts, write=SetContracts, stored = Contracts_Specified };
  __property User*       CreatedBy = { index=(IS_OPTN|IS_NLBL), read=FCreatedBy, write=SetCreatedBy, stored = CreatedBy_Specified };
  __property ID         CreatedById = { index=(IS_OPTN|IS_NLBL), read=FCreatedById, write=SetCreatedById, stored = CreatedById_Specified };
  __property TXSDateTime* CreatedDate = { index=(IS_OPTN|IS_NLBL), read=FCreatedDate, write=SetCreatedDate, stored = CreatedDate_Specified };
  __property UnicodeString Description = { index=(IS_OPTN|IS_NLBL), read=FDescription, write=SetDescription, stored = Description_Specified };
  __property QueryResult*     Events = { index=(IS_OPTN|IS_NLBL), read=FEvents, write=SetEvents, stored = Events_Specified };
  __property UnicodeString        Fax = { index=(IS_OPTN|IS_NLBL), read=FFax, write=SetFax, stored = Fax_Specified };
  __property QueryResult* FeedSubscriptionsForEntity = { index=(IS_OPTN|IS_NLBL), read=FFeedSubscriptionsForEntity, write=SetFeedSubscriptionsForEntity, stored = FeedSubscriptionsForEntity_Specified };
  __property QueryResult*      Feeds = { index=(IS_OPTN|IS_NLBL), read=FFeeds, write=SetFeeds, stored = Feeds_Specified };
  __property QueryResult*  Histories = { index=(IS_OPTN|IS_NLBL), read=FHistories, write=SetHistories, stored = Histories_Specified };
  __property UnicodeString   Industry = { index=(IS_OPTN|IS_NLBL), read=FIndustry, write=SetIndustry, stored = Industry_Specified };
  __property bool        IsDeleted = { index=(IS_OPTN|IS_NLBL), read=FIsDeleted, write=SetIsDeleted, stored = IsDeleted_Specified };
  __property UnicodeString     Jigsaw = { index=(IS_OPTN|IS_NLBL), read=FJigsaw, write=SetJigsaw, stored = Jigsaw_Specified };
  __property UnicodeString JigsawCompanyId = { index=(IS_OPTN|IS_NLBL), read=FJigsawCompanyId, write=SetJigsawCompanyId, stored = JigsawCompanyId_Specified };
  __property TXSDate*   LastActivityDate = { index=(IS_OPTN|IS_NLBL), read=FLastActivityDate, write=SetLastActivityDate, stored = LastActivityDate_Specified };
  __property User*      LastModifiedBy = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedBy, write=SetLastModifiedBy, stored = LastModifiedBy_Specified };
  __property ID         LastModifiedById = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedById, write=SetLastModifiedById, stored = LastModifiedById_Specified };
  __property TXSDateTime* LastModifiedDate = { index=(IS_OPTN|IS_NLBL), read=FLastModifiedDate, write=SetLastModifiedDate, stored = LastModifiedDate_Specified };
  __property Account*   MasterRecord = { index=(IS_OPTN|IS_NLBL), read=FMasterRecord, write=SetMasterRecord, stored = MasterRecord_Specified };
  __property ID         MasterRecordId = { index=(IS_OPTN|IS_NLBL), read=FMasterRecordId, write=SetMasterRecordId, stored = MasterRecordId_Specified };
  __property UnicodeString       Name = { index=(IS_OPTN|IS_NLBL), read=FName, write=SetName, stored = Name_Specified };
  __property QueryResult*      Notes = { index=(IS_OPTN|IS_NLBL), read=FNotes, write=SetNotes, stored = Notes_Specified };
  __property QueryResult* NotesAndAttachments = { index=(IS_OPTN|IS_NLBL), read=FNotesAndAttachments, write=SetNotesAndAttachments, stored = NotesAndAttachments_Specified };
  __property int        NumberOfEmployees = { index=(IS_OPTN|IS_NLBL), read=FNumberOfEmployees, write=SetNumberOfEmployees, stored = NumberOfEmployees_Specified };
  __property QueryResult* OpenActivities = { index=(IS_OPTN|IS_NLBL), read=FOpenActivities, write=SetOpenActivities, stored = OpenActivities_Specified };
  __property QueryResult* Opportunities = { index=(IS_OPTN|IS_NLBL), read=FOpportunities, write=SetOpportunities, stored = Opportunities_Specified };
  __property QueryResult* OpportunityPartnersTo = { index=(IS_OPTN|IS_NLBL), read=FOpportunityPartnersTo, write=SetOpportunityPartnersTo, stored = OpportunityPartnersTo_Specified };
  __property User*           Owner = { index=(IS_OPTN|IS_NLBL), read=FOwner, write=SetOwner, stored = Owner_Specified };
  __property ID            OwnerId = { index=(IS_OPTN|IS_NLBL), read=FOwnerId, write=SetOwnerId, stored = OwnerId_Specified };
  __property Account*       Parent = { index=(IS_OPTN|IS_NLBL), read=FParent, write=SetParent, stored = Parent_Specified };
  __property ID           ParentId = { index=(IS_OPTN|IS_NLBL), read=FParentId, write=SetParentId, stored = ParentId_Specified };
  __property QueryResult* PartnersFrom = { index=(IS_OPTN|IS_NLBL), read=FPartnersFrom, write=SetPartnersFrom, stored = PartnersFrom_Specified };
  __property QueryResult* PartnersTo = { index=(IS_OPTN|IS_NLBL), read=FPartnersTo, write=SetPartnersTo, stored = PartnersTo_Specified };
  __property UnicodeString      Phone = { index=(IS_OPTN|IS_NLBL), read=FPhone, write=SetPhone, stored = Phone_Specified };
  __property QueryResult* ProcessInstances = { index=(IS_OPTN|IS_NLBL), read=FProcessInstances, write=SetProcessInstances, stored = ProcessInstances_Specified };
  __property QueryResult* ProcessSteps = { index=(IS_OPTN|IS_NLBL), read=FProcessSteps, write=SetProcessSteps, stored = ProcessSteps_Specified };
  __property QueryResult*     Shares = { index=(IS_OPTN|IS_NLBL), read=FShares, write=SetShares, stored = Shares_Specified };
  __property UnicodeString ShippingCity = { index=(IS_OPTN|IS_NLBL), read=FShippingCity, write=SetShippingCity, stored = ShippingCity_Specified };
  __property UnicodeString ShippingCountry = { index=(IS_OPTN|IS_NLBL), read=FShippingCountry, write=SetShippingCountry, stored = ShippingCountry_Specified };
  __property UnicodeString ShippingPostalCode = { index=(IS_OPTN|IS_NLBL), read=FShippingPostalCode, write=SetShippingPostalCode, stored = ShippingPostalCode_Specified };
  __property UnicodeString ShippingState = { index=(IS_OPTN|IS_NLBL), read=FShippingState, write=SetShippingState, stored = ShippingState_Specified };
  __property UnicodeString ShippingStreet = { index=(IS_OPTN|IS_NLBL), read=FShippingStreet, write=SetShippingStreet, stored = ShippingStreet_Specified };
  __property UnicodeString    SicDesc = { index=(IS_OPTN|IS_NLBL), read=FSicDesc, write=SetSicDesc, stored = SicDesc_Specified };
  __property TXSDateTime* SystemModstamp = { index=(IS_OPTN|IS_NLBL), read=FSystemModstamp, write=SetSystemModstamp, stored = SystemModstamp_Specified };
  __property QueryResult*      Tasks = { index=(IS_OPTN|IS_NLBL), read=FTasks, write=SetTasks, stored = Tasks_Specified };
  __property UnicodeString       Type = { index=(IS_OPTN|IS_NLBL), read=FType, write=SetType, stored = Type_Specified };
  __property UnicodeString    Website = { index=(IS_OPTN|IS_NLBL), read=FWebsite, write=SetWebsite, stored = Website_Specified };
};




// ************************************************************************ //
// XML       : AggregateResult, global, <complexType>
// Namespace : urn:sobject.enterprise.soap.sforce.com
// ************************************************************************ //
class AggregateResult : public sObject {
private:
__published:
};


typedef DynamicArray<sObject*>    Array_Of_sObject; /* "urn:sobject.enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : QueryResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class QueryResult : public TRemotable {
private:
  bool            Fdone;
  QueryLocator    FqueryLocator;
  Array_Of_sObject Frecords;
  bool            Frecords_Specified;
  int             Fsize;
  bool __fastcall Getdone()
  {  return Fdone;  }
  void __fastcall Setdone(bool _prop_val)
  {  Fdone = _prop_val;  }
  QueryLocator __fastcall GetqueryLocator(int Index)
  {  return FqueryLocator;  }
  void __fastcall SetqueryLocator(int Index, QueryLocator _prop_val)
  {  FqueryLocator = _prop_val;  }
  Array_Of_sObject __fastcall Getrecords(int Index)
  {  return Frecords;  }
  void __fastcall Setrecords(int Index, Array_Of_sObject _prop_val)
  {  Frecords = _prop_val; Frecords_Specified = true;  }
  bool __fastcall records_Specified(int Index)
  {  return Frecords_Specified;  } 
  int __fastcall Getsize()
  {  return Fsize;  }
  void __fastcall Setsize(int _prop_val)
  {  Fsize = _prop_val;  }

public:
  __fastcall ~QueryResult();
__published:
  __property bool             done = { read=Fdone, write=Setdone };
  __property QueryLocator queryLocator = { index=(IS_NLBL), read=FqueryLocator, write=SetqueryLocator };
  __property Array_Of_sObject    records = { index=(IS_OPTN|IS_UNBD|IS_NLBL), read=Frecords, write=Setrecords, stored = records_Specified };
  __property int              size = { read=Fsize, write=Setsize };
};


typedef DynamicArray<SearchRecord*> Array_Of_SearchRecord; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : SearchResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class SearchResult : public TRemotable {
private:
  Array_Of_SearchRecord FsearchRecords;
  bool            FsearchRecords_Specified;
  UnicodeString   FsforceReserved;
  bool            FsforceReserved_Specified;
  Array_Of_SearchRecord __fastcall GetsearchRecords(int Index)
  {  return FsearchRecords;  }
  void __fastcall SetsearchRecords(int Index, Array_Of_SearchRecord _prop_val)
  {  FsearchRecords = _prop_val; FsearchRecords_Specified = true;  }
  bool __fastcall searchRecords_Specified(int Index)
  {  return FsearchRecords_Specified;  } 
  UnicodeString __fastcall GetsforceReserved(int Index)
  {  return FsforceReserved;  }
  void __fastcall SetsforceReserved(int Index, UnicodeString _prop_val)
  {  FsforceReserved = _prop_val; FsforceReserved_Specified = true;  }
  bool __fastcall sforceReserved_Specified(int Index)
  {  return FsforceReserved_Specified;  } 

public:
  __fastcall ~SearchResult();
__published:
  __property Array_Of_SearchRecord searchRecords = { index=(IS_OPTN|IS_UNBD), read=FsearchRecords, write=SetsearchRecords, stored = searchRecords_Specified };
  __property UnicodeString sforceReserved = { index=(IS_OPTN), read=FsforceReserved, write=SetsforceReserved, stored = sforceReserved_Specified };
};


typedef DynamicArray<ID>          Array_Of_ID;    /* "urn:enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : MassEmailMessage, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class MassEmailMessage : public Email {
private:
  UnicodeString   Fdescription;
  Array_Of_ID     FtargetObjectIds;
  bool            FtargetObjectIds_Specified;
  ID              FtemplateId;
  Array_Of_ID     FwhatIds;
  bool            FwhatIds_Specified;
  UnicodeString __fastcall Getdescription(int Index)
  {  return Fdescription;  }
  void __fastcall Setdescription(int Index, UnicodeString _prop_val)
  {  Fdescription = _prop_val;  }
  Array_Of_ID __fastcall GettargetObjectIds(int Index)
  {  return FtargetObjectIds;  }
  void __fastcall SettargetObjectIds(int Index, Array_Of_ID _prop_val)
  {  FtargetObjectIds = _prop_val; FtargetObjectIds_Specified = true;  }
  bool __fastcall targetObjectIds_Specified(int Index)
  {  return FtargetObjectIds_Specified;  } 
  ID __fastcall GettemplateId()
  {  return FtemplateId;  }
  void __fastcall SettemplateId(ID _prop_val)
  {  FtemplateId = _prop_val;  }
  Array_Of_ID __fastcall GetwhatIds(int Index)
  {  return FwhatIds;  }
  void __fastcall SetwhatIds(int Index, Array_Of_ID _prop_val)
  {  FwhatIds = _prop_val; FwhatIds_Specified = true;  }
  bool __fastcall whatIds_Specified(int Index)
  {  return FwhatIds_Specified;  } 
__published:
  __property UnicodeString description = { index=(IS_NLBL), read=Fdescription, write=Setdescription };
  __property Array_Of_ID targetObjectIds = { index=(IS_OPTN|IS_UNBD), read=FtargetObjectIds, write=SettargetObjectIds, stored = targetObjectIds_Specified };
  __property ID         templateId = { read=FtemplateId, write=SettemplateId };
  __property Array_Of_ID    whatIds = { index=(IS_OPTN|IS_UNBD), read=FwhatIds, write=SetwhatIds, stored = whatIds_Specified };
};




// ************************************************************************ //
// XML       : ProcessRequest, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class ProcessRequest : public TRemotable {
private:
  UnicodeString   Fcomments;
  Array_Of_ID     FnextApproverIds;
  bool            FnextApproverIds_Specified;
  UnicodeString __fastcall Getcomments(int Index)
  {  return Fcomments;  }
  void __fastcall Setcomments(int Index, UnicodeString _prop_val)
  {  Fcomments = _prop_val;  }
  Array_Of_ID __fastcall GetnextApproverIds(int Index)
  {  return FnextApproverIds;  }
  void __fastcall SetnextApproverIds(int Index, Array_Of_ID _prop_val)
  {  FnextApproverIds = _prop_val; FnextApproverIds_Specified = true;  }
  bool __fastcall nextApproverIds_Specified(int Index)
  {  return FnextApproverIds_Specified;  } 
__published:
  __property UnicodeString   comments = { index=(IS_NLBL), read=Fcomments, write=Setcomments };
  __property Array_Of_ID nextApproverIds = { index=(IS_OPTN|IS_UNBD|IS_NLBL), read=FnextApproverIds, write=SetnextApproverIds, stored = nextApproverIds_Specified };
};




// ************************************************************************ //
// XML       : ProcessWorkitemRequest, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class ProcessWorkitemRequest : public ProcessRequest {
private:
  UnicodeString   Faction;
  ID              FworkitemId;
  UnicodeString __fastcall Getaction()
  {  return Faction;  }
  void __fastcall Setaction(UnicodeString _prop_val)
  {  Faction = _prop_val;  }
  ID __fastcall GetworkitemId()
  {  return FworkitemId;  }
  void __fastcall SetworkitemId(ID _prop_val)
  {  FworkitemId = _prop_val;  }
__published:
  __property UnicodeString     action = { read=Faction, write=Setaction };
  __property ID         workitemId = { read=FworkitemId, write=SetworkitemId };
};




// ************************************************************************ //
// XML       : ProcessSubmitRequest, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class ProcessSubmitRequest : public ProcessRequest {
private:
  ID              FobjectId;
  ID __fastcall GetobjectId()
  {  return FobjectId;  }
  void __fastcall SetobjectId(ID _prop_val)
  {  FobjectId = _prop_val;  }
__published:
  __property ID           objectId = { read=FobjectId, write=SetobjectId };
};




// ************************************************************************ //
// XML       : MergeRequest, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class MergeRequest : public TRemotable {
private:
  sObject*        FmasterRecord;
  Array_Of_ID     FrecordToMergeIds;
  sObject* __fastcall GetmasterRecord()
  {  return FmasterRecord;  }
  void __fastcall SetmasterRecord(sObject* _prop_val)
  {  FmasterRecord = _prop_val;  }
  Array_Of_ID __fastcall GetrecordToMergeIds(int Index)
  {  return FrecordToMergeIds;  }
  void __fastcall SetrecordToMergeIds(int Index, Array_Of_ID _prop_val)
  {  FrecordToMergeIds = _prop_val;  }

public:
  __fastcall ~MergeRequest();
__published:
  __property sObject*   masterRecord = { read=FmasterRecord, write=SetmasterRecord };
  __property Array_Of_ID recordToMergeIds = { index=(IS_UNBD), read=FrecordToMergeIds, write=SetrecordToMergeIds };
};




// ************************************************************************ //
// XML       : GetUpdatedResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class GetUpdatedResult : public TRemotable {
private:
  Array_Of_ID     Fids;
  bool            Fids_Specified;
  TXSDateTime*    FlatestDateCovered;
  UnicodeString   FsforceReserved;
  bool            FsforceReserved_Specified;
  Array_Of_ID __fastcall Getids(int Index)
  {  return Fids;  }
  void __fastcall Setids(int Index, Array_Of_ID _prop_val)
  {  Fids = _prop_val; Fids_Specified = true;  }
  bool __fastcall ids_Specified(int Index)
  {  return Fids_Specified;  } 
  TXSDateTime* __fastcall GetlatestDateCovered()
  {  return FlatestDateCovered;  }
  void __fastcall SetlatestDateCovered(TXSDateTime* _prop_val)
  {  FlatestDateCovered = _prop_val;  }
  UnicodeString __fastcall GetsforceReserved(int Index)
  {  return FsforceReserved;  }
  void __fastcall SetsforceReserved(int Index, UnicodeString _prop_val)
  {  FsforceReserved = _prop_val; FsforceReserved_Specified = true;  }
  bool __fastcall sforceReserved_Specified(int Index)
  {  return FsforceReserved_Specified;  } 

public:
  __fastcall ~GetUpdatedResult();
__published:
  __property Array_Of_ID        ids = { index=(IS_OPTN|IS_UNBD), read=Fids, write=Setids, stored = ids_Specified };
  __property TXSDateTime* latestDateCovered = { read=FlatestDateCovered, write=SetlatestDateCovered };
  __property UnicodeString sforceReserved = { index=(IS_OPTN), read=FsforceReserved, write=SetsforceReserved, stored = sforceReserved_Specified };
};


typedef DynamicArray<DeletedRecord*> Array_Of_DeletedRecord; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : GetDeletedResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class GetDeletedResult : public TRemotable {
private:
  Array_Of_DeletedRecord FdeletedRecords;
  bool            FdeletedRecords_Specified;
  TXSDateTime*    FearliestDateAvailable;
  TXSDateTime*    FlatestDateCovered;
  UnicodeString   FsforceReserved;
  bool            FsforceReserved_Specified;
  Array_Of_DeletedRecord __fastcall GetdeletedRecords(int Index)
  {  return FdeletedRecords;  }
  void __fastcall SetdeletedRecords(int Index, Array_Of_DeletedRecord _prop_val)
  {  FdeletedRecords = _prop_val; FdeletedRecords_Specified = true;  }
  bool __fastcall deletedRecords_Specified(int Index)
  {  return FdeletedRecords_Specified;  } 
  TXSDateTime* __fastcall GetearliestDateAvailable()
  {  return FearliestDateAvailable;  }
  void __fastcall SetearliestDateAvailable(TXSDateTime* _prop_val)
  {  FearliestDateAvailable = _prop_val;  }
  TXSDateTime* __fastcall GetlatestDateCovered()
  {  return FlatestDateCovered;  }
  void __fastcall SetlatestDateCovered(TXSDateTime* _prop_val)
  {  FlatestDateCovered = _prop_val;  }
  UnicodeString __fastcall GetsforceReserved(int Index)
  {  return FsforceReserved;  }
  void __fastcall SetsforceReserved(int Index, UnicodeString _prop_val)
  {  FsforceReserved = _prop_val; FsforceReserved_Specified = true;  }
  bool __fastcall sforceReserved_Specified(int Index)
  {  return FsforceReserved_Specified;  } 

public:
  __fastcall ~GetDeletedResult();
__published:
  __property Array_Of_DeletedRecord deletedRecords = { index=(IS_OPTN|IS_UNBD), read=FdeletedRecords, write=SetdeletedRecords, stored = deletedRecords_Specified };
  __property TXSDateTime* earliestDateAvailable = { read=FearliestDateAvailable, write=SetearliestDateAvailable };
  __property TXSDateTime* latestDateCovered = { read=FlatestDateCovered, write=SetlatestDateCovered };
  __property UnicodeString sforceReserved = { index=(IS_OPTN), read=FsforceReserved, write=SetsforceReserved, stored = sforceReserved_Specified };
};


typedef DynamicArray<Error*>      Array_Of_Error; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : LeadConvertResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class LeadConvertResult : public TRemotable {
private:
  ID              FaccountId;
  ID              FcontactId;
  Array_Of_Error  Ferrors;
  bool            Ferrors_Specified;
  ID              FleadId;
  ID              FopportunityId;
  bool            Fsuccess;
  ID __fastcall GetaccountId(int Index)
  {  return FaccountId;  }
  void __fastcall SetaccountId(int Index, ID _prop_val)
  {  FaccountId = _prop_val;  }
  ID __fastcall GetcontactId(int Index)
  {  return FcontactId;  }
  void __fastcall SetcontactId(int Index, ID _prop_val)
  {  FcontactId = _prop_val;  }
  Array_Of_Error __fastcall Geterrors(int Index)
  {  return Ferrors;  }
  void __fastcall Seterrors(int Index, Array_Of_Error _prop_val)
  {  Ferrors = _prop_val; Ferrors_Specified = true;  }
  bool __fastcall errors_Specified(int Index)
  {  return Ferrors_Specified;  } 
  ID __fastcall GetleadId(int Index)
  {  return FleadId;  }
  void __fastcall SetleadId(int Index, ID _prop_val)
  {  FleadId = _prop_val;  }
  ID __fastcall GetopportunityId(int Index)
  {  return FopportunityId;  }
  void __fastcall SetopportunityId(int Index, ID _prop_val)
  {  FopportunityId = _prop_val;  }
  bool __fastcall Getsuccess()
  {  return Fsuccess;  }
  void __fastcall Setsuccess(bool _prop_val)
  {  Fsuccess = _prop_val;  }

public:
  __fastcall ~LeadConvertResult();
__published:
  __property ID          accountId = { index=(IS_NLBL), read=FaccountId, write=SetaccountId };
  __property ID          contactId = { index=(IS_NLBL), read=FcontactId, write=SetcontactId };
  __property Array_Of_Error     errors = { index=(IS_OPTN|IS_UNBD), read=Ferrors, write=Seterrors, stored = errors_Specified };
  __property ID             leadId = { index=(IS_NLBL), read=FleadId, write=SetleadId };
  __property ID         opportunityId = { index=(IS_NLBL), read=FopportunityId, write=SetopportunityId };
  __property bool          success = { read=Fsuccess, write=Setsuccess };
};




// ************************************************************************ //
// XML       : EmptyRecycleBinResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class EmptyRecycleBinResult : public TRemotable {
private:
  Array_Of_Error  Ferrors;
  bool            Ferrors_Specified;
  ID              Fid;
  bool            Fsuccess;
  Array_Of_Error __fastcall Geterrors(int Index)
  {  return Ferrors;  }
  void __fastcall Seterrors(int Index, Array_Of_Error _prop_val)
  {  Ferrors = _prop_val; Ferrors_Specified = true;  }
  bool __fastcall errors_Specified(int Index)
  {  return Ferrors_Specified;  } 
  ID __fastcall Getid(int Index)
  {  return Fid;  }
  void __fastcall Setid(int Index, ID _prop_val)
  {  Fid = _prop_val;  }
  bool __fastcall Getsuccess()
  {  return Fsuccess;  }
  void __fastcall Setsuccess(bool _prop_val)
  {  Fsuccess = _prop_val;  }

public:
  __fastcall ~EmptyRecycleBinResult();
__published:
  __property Array_Of_Error     errors = { index=(IS_OPTN|IS_UNBD), read=Ferrors, write=Seterrors, stored = errors_Specified };
  __property ID                 id = { index=(IS_NLBL), read=Fid, write=Setid };
  __property bool          success = { read=Fsuccess, write=Setsuccess };
};




// ************************************************************************ //
// XML       : UndeleteResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class UndeleteResult : public TRemotable {
private:
  Array_Of_Error  Ferrors;
  bool            Ferrors_Specified;
  ID              Fid;
  bool            Fsuccess;
  Array_Of_Error __fastcall Geterrors(int Index)
  {  return Ferrors;  }
  void __fastcall Seterrors(int Index, Array_Of_Error _prop_val)
  {  Ferrors = _prop_val; Ferrors_Specified = true;  }
  bool __fastcall errors_Specified(int Index)
  {  return Ferrors_Specified;  } 
  ID __fastcall Getid(int Index)
  {  return Fid;  }
  void __fastcall Setid(int Index, ID _prop_val)
  {  Fid = _prop_val;  }
  bool __fastcall Getsuccess()
  {  return Fsuccess;  }
  void __fastcall Setsuccess(bool _prop_val)
  {  Fsuccess = _prop_val;  }

public:
  __fastcall ~UndeleteResult();
__published:
  __property Array_Of_Error     errors = { index=(IS_OPTN|IS_UNBD), read=Ferrors, write=Seterrors, stored = errors_Specified };
  __property ID                 id = { index=(IS_NLBL), read=Fid, write=Setid };
  __property bool          success = { read=Fsuccess, write=Setsuccess };
};




// ************************************************************************ //
// XML       : DeleteResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DeleteResult : public TRemotable {
private:
  Array_Of_Error  Ferrors;
  bool            Ferrors_Specified;
  ID              Fid;
  bool            Fsuccess;
  Array_Of_Error __fastcall Geterrors(int Index)
  {  return Ferrors;  }
  void __fastcall Seterrors(int Index, Array_Of_Error _prop_val)
  {  Ferrors = _prop_val; Ferrors_Specified = true;  }
  bool __fastcall errors_Specified(int Index)
  {  return Ferrors_Specified;  } 
  ID __fastcall Getid(int Index)
  {  return Fid;  }
  void __fastcall Setid(int Index, ID _prop_val)
  {  Fid = _prop_val;  }
  bool __fastcall Getsuccess()
  {  return Fsuccess;  }
  void __fastcall Setsuccess(bool _prop_val)
  {  Fsuccess = _prop_val;  }

public:
  __fastcall ~DeleteResult();
__published:
  __property Array_Of_Error     errors = { index=(IS_OPTN|IS_UNBD|IS_NLBL), read=Ferrors, write=Seterrors, stored = errors_Specified };
  __property ID                 id = { index=(IS_NLBL), read=Fid, write=Setid };
  __property bool          success = { read=Fsuccess, write=Setsuccess };
};




// ************************************************************************ //
// XML       : ProcessResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class ProcessResult : public TRemotable {
private:
  Array_Of_ID     FactorIds;
  bool            FactorIds_Specified;
  ID              FentityId;
  Array_Of_Error  Ferrors;
  bool            Ferrors_Specified;
  ID              FinstanceId;
  UnicodeString   FinstanceStatus;
  Array_Of_ID     FnewWorkitemIds;
  bool            FnewWorkitemIds_Specified;
  bool            Fsuccess;
  Array_Of_ID __fastcall GetactorIds(int Index)
  {  return FactorIds;  }
  void __fastcall SetactorIds(int Index, Array_Of_ID _prop_val)
  {  FactorIds = _prop_val; FactorIds_Specified = true;  }
  bool __fastcall actorIds_Specified(int Index)
  {  return FactorIds_Specified;  } 
  ID __fastcall GetentityId(int Index)
  {  return FentityId;  }
  void __fastcall SetentityId(int Index, ID _prop_val)
  {  FentityId = _prop_val;  }
  Array_Of_Error __fastcall Geterrors(int Index)
  {  return Ferrors;  }
  void __fastcall Seterrors(int Index, Array_Of_Error _prop_val)
  {  Ferrors = _prop_val; Ferrors_Specified = true;  }
  bool __fastcall errors_Specified(int Index)
  {  return Ferrors_Specified;  } 
  ID __fastcall GetinstanceId(int Index)
  {  return FinstanceId;  }
  void __fastcall SetinstanceId(int Index, ID _prop_val)
  {  FinstanceId = _prop_val;  }
  UnicodeString __fastcall GetinstanceStatus(int Index)
  {  return FinstanceStatus;  }
  void __fastcall SetinstanceStatus(int Index, UnicodeString _prop_val)
  {  FinstanceStatus = _prop_val;  }
  Array_Of_ID __fastcall GetnewWorkitemIds(int Index)
  {  return FnewWorkitemIds;  }
  void __fastcall SetnewWorkitemIds(int Index, Array_Of_ID _prop_val)
  {  FnewWorkitemIds = _prop_val; FnewWorkitemIds_Specified = true;  }
  bool __fastcall newWorkitemIds_Specified(int Index)
  {  return FnewWorkitemIds_Specified;  } 
  bool __fastcall Getsuccess()
  {  return Fsuccess;  }
  void __fastcall Setsuccess(bool _prop_val)
  {  Fsuccess = _prop_val;  }

public:
  __fastcall ~ProcessResult();
__published:
  __property Array_Of_ID   actorIds = { index=(IS_OPTN|IS_UNBD), read=FactorIds, write=SetactorIds, stored = actorIds_Specified };
  __property ID           entityId = { index=(IS_NLBL), read=FentityId, write=SetentityId };
  __property Array_Of_Error     errors = { index=(IS_OPTN|IS_UNBD), read=Ferrors, write=Seterrors, stored = errors_Specified };
  __property ID         instanceId = { index=(IS_NLBL), read=FinstanceId, write=SetinstanceId };
  __property UnicodeString instanceStatus = { index=(IS_NLBL), read=FinstanceStatus, write=SetinstanceStatus };
  __property Array_Of_ID newWorkitemIds = { index=(IS_OPTN|IS_UNBD|IS_NLBL), read=FnewWorkitemIds, write=SetnewWorkitemIds, stored = newWorkitemIds_Specified };
  __property bool          success = { read=Fsuccess, write=Setsuccess };
};




// ************************************************************************ //
// XML       : MergeResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class MergeResult : public TRemotable {
private:
  Array_Of_Error  Ferrors;
  bool            Ferrors_Specified;
  ID              Fid;
  Array_Of_ID     FmergedRecordIds;
  bool            FmergedRecordIds_Specified;
  bool            Fsuccess;
  Array_Of_ID     FupdatedRelatedIds;
  bool            FupdatedRelatedIds_Specified;
  Array_Of_Error __fastcall Geterrors(int Index)
  {  return Ferrors;  }
  void __fastcall Seterrors(int Index, Array_Of_Error _prop_val)
  {  Ferrors = _prop_val; Ferrors_Specified = true;  }
  bool __fastcall errors_Specified(int Index)
  {  return Ferrors_Specified;  } 
  ID __fastcall Getid(int Index)
  {  return Fid;  }
  void __fastcall Setid(int Index, ID _prop_val)
  {  Fid = _prop_val;  }
  Array_Of_ID __fastcall GetmergedRecordIds(int Index)
  {  return FmergedRecordIds;  }
  void __fastcall SetmergedRecordIds(int Index, Array_Of_ID _prop_val)
  {  FmergedRecordIds = _prop_val; FmergedRecordIds_Specified = true;  }
  bool __fastcall mergedRecordIds_Specified(int Index)
  {  return FmergedRecordIds_Specified;  } 
  bool __fastcall Getsuccess()
  {  return Fsuccess;  }
  void __fastcall Setsuccess(bool _prop_val)
  {  Fsuccess = _prop_val;  }
  Array_Of_ID __fastcall GetupdatedRelatedIds(int Index)
  {  return FupdatedRelatedIds;  }
  void __fastcall SetupdatedRelatedIds(int Index, Array_Of_ID _prop_val)
  {  FupdatedRelatedIds = _prop_val; FupdatedRelatedIds_Specified = true;  }
  bool __fastcall updatedRelatedIds_Specified(int Index)
  {  return FupdatedRelatedIds_Specified;  } 

public:
  __fastcall ~MergeResult();
__published:
  __property Array_Of_Error     errors = { index=(IS_OPTN|IS_UNBD), read=Ferrors, write=Seterrors, stored = errors_Specified };
  __property ID                 id = { index=(IS_NLBL), read=Fid, write=Setid };
  __property Array_Of_ID mergedRecordIds = { index=(IS_OPTN|IS_UNBD), read=FmergedRecordIds, write=SetmergedRecordIds, stored = mergedRecordIds_Specified };
  __property bool          success = { read=Fsuccess, write=Setsuccess };
  __property Array_Of_ID updatedRelatedIds = { index=(IS_OPTN|IS_UNBD), read=FupdatedRelatedIds, write=SetupdatedRelatedIds, stored = updatedRelatedIds_Specified };
};




// ************************************************************************ //
// XML       : UpsertResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class UpsertResult : public TRemotable {
private:
  bool            Fcreated;
  Array_Of_Error  Ferrors;
  bool            Ferrors_Specified;
  ID              Fid;
  bool            Fsuccess;
  bool __fastcall Getcreated()
  {  return Fcreated;  }
  void __fastcall Setcreated(bool _prop_val)
  {  Fcreated = _prop_val;  }
  Array_Of_Error __fastcall Geterrors(int Index)
  {  return Ferrors;  }
  void __fastcall Seterrors(int Index, Array_Of_Error _prop_val)
  {  Ferrors = _prop_val; Ferrors_Specified = true;  }
  bool __fastcall errors_Specified(int Index)
  {  return Ferrors_Specified;  } 
  ID __fastcall Getid(int Index)
  {  return Fid;  }
  void __fastcall Setid(int Index, ID _prop_val)
  {  Fid = _prop_val;  }
  bool __fastcall Getsuccess()
  {  return Fsuccess;  }
  void __fastcall Setsuccess(bool _prop_val)
  {  Fsuccess = _prop_val;  }

public:
  __fastcall ~UpsertResult();
__published:
  __property bool          created = { read=Fcreated, write=Setcreated };
  __property Array_Of_Error     errors = { index=(IS_OPTN|IS_UNBD), read=Ferrors, write=Seterrors, stored = errors_Specified };
  __property ID                 id = { index=(IS_NLBL), read=Fid, write=Setid };
  __property bool          success = { read=Fsuccess, write=Setsuccess };
};




// ************************************************************************ //
// XML       : SaveResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class SaveResult : public TRemotable {
private:
  Array_Of_Error  Ferrors;
  bool            Ferrors_Specified;
  ID              Fid;
  bool            Fsuccess;
  Array_Of_Error __fastcall Geterrors(int Index)
  {  return Ferrors;  }
  void __fastcall Seterrors(int Index, Array_Of_Error _prop_val)
  {  Ferrors = _prop_val; Ferrors_Specified = true;  }
  bool __fastcall errors_Specified(int Index)
  {  return Ferrors_Specified;  } 
  ID __fastcall Getid(int Index)
  {  return Fid;  }
  void __fastcall Setid(int Index, ID _prop_val)
  {  Fid = _prop_val;  }
  bool __fastcall Getsuccess()
  {  return Fsuccess;  }
  void __fastcall Setsuccess(bool _prop_val)
  {  Fsuccess = _prop_val;  }

public:
  __fastcall ~SaveResult();
__published:
  __property Array_Of_Error     errors = { index=(IS_OPTN|IS_UNBD), read=Ferrors, write=Seterrors, stored = errors_Specified };
  __property ID                 id = { index=(IS_NLBL), read=Fid, write=Setid };
  __property bool          success = { read=Fsuccess, write=Setsuccess };
};




// ************************************************************************ //
// XML       : InvalidateSessionsResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class InvalidateSessionsResult : public TRemotable {
private:
  Array_Of_Error  Ferrors;
  bool            Ferrors_Specified;
  bool            Fsuccess;
  Array_Of_Error __fastcall Geterrors(int Index)
  {  return Ferrors;  }
  void __fastcall Seterrors(int Index, Array_Of_Error _prop_val)
  {  Ferrors = _prop_val; Ferrors_Specified = true;  }
  bool __fastcall errors_Specified(int Index)
  {  return Ferrors_Specified;  } 
  bool __fastcall Getsuccess()
  {  return Fsuccess;  }
  void __fastcall Setsuccess(bool _prop_val)
  {  Fsuccess = _prop_val;  }

public:
  __fastcall ~InvalidateSessionsResult();
__published:
  __property Array_Of_Error     errors = { index=(IS_OPTN|IS_UNBD), read=Ferrors, write=Seterrors, stored = errors_Specified };
  __property bool          success = { read=Fsuccess, write=Setsuccess };
};


typedef DynamicArray<ChildRelationship*> Array_Of_ChildRelationship; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<Field*>      Array_Of_Field; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<RecordTypeInfo*> Array_Of_RecordTypeInfo; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : DescribeSObjectResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DescribeSObjectResult : public TRemotable {
private:
  bool            Factivateable;
  Array_Of_ChildRelationship FchildRelationships;
  bool            FchildRelationships_Specified;
  bool            Fcreateable;
  bool            Fcustom;
  bool            FcustomSetting;
  bool            Fdeletable;
  bool            FdeprecatedAndHidden;
  bool            FfeedEnabled;
  Array_Of_Field  Ffields;
  bool            Ffields_Specified;
  UnicodeString   FkeyPrefix;
  UnicodeString   Flabel;
  UnicodeString   FlabelPlural;
  bool            Flayoutable;
  bool            Fmergeable;
  UnicodeString   Fname;
  bool            Fqueryable;
  Array_Of_RecordTypeInfo FrecordTypeInfos;
  bool            FrecordTypeInfos_Specified;
  bool            Freplicateable;
  bool            Fretrieveable;
  bool            Fsearchable;
  bool            Ftriggerable;
  bool            Ftriggerable_Specified;
  bool            Fundeletable;
  bool            Fupdateable;
  UnicodeString   FurlDetail;
  UnicodeString   FurlEdit;
  UnicodeString   FurlNew;
  bool __fastcall Getactivateable()
  {  return Factivateable;  }
  void __fastcall Setactivateable(bool _prop_val)
  {  Factivateable = _prop_val;  }
  Array_Of_ChildRelationship __fastcall GetchildRelationships(int Index)
  {  return FchildRelationships;  }
  void __fastcall SetchildRelationships(int Index, Array_Of_ChildRelationship _prop_val)
  {  FchildRelationships = _prop_val; FchildRelationships_Specified = true;  }
  bool __fastcall childRelationships_Specified(int Index)
  {  return FchildRelationships_Specified;  } 
  bool __fastcall Getcreateable()
  {  return Fcreateable;  }
  void __fastcall Setcreateable(bool _prop_val)
  {  Fcreateable = _prop_val;  }
  bool __fastcall Getcustom()
  {  return Fcustom;  }
  void __fastcall Setcustom(bool _prop_val)
  {  Fcustom = _prop_val;  }
  bool __fastcall GetcustomSetting()
  {  return FcustomSetting;  }
  void __fastcall SetcustomSetting(bool _prop_val)
  {  FcustomSetting = _prop_val;  }
  bool __fastcall Getdeletable()
  {  return Fdeletable;  }
  void __fastcall Setdeletable(bool _prop_val)
  {  Fdeletable = _prop_val;  }
  bool __fastcall GetdeprecatedAndHidden()
  {  return FdeprecatedAndHidden;  }
  void __fastcall SetdeprecatedAndHidden(bool _prop_val)
  {  FdeprecatedAndHidden = _prop_val;  }
  bool __fastcall GetfeedEnabled()
  {  return FfeedEnabled;  }
  void __fastcall SetfeedEnabled(bool _prop_val)
  {  FfeedEnabled = _prop_val;  }
  Array_Of_Field __fastcall Getfields(int Index)
  {  return Ffields;  }
  void __fastcall Setfields(int Index, Array_Of_Field _prop_val)
  {  Ffields = _prop_val; Ffields_Specified = true;  }
  bool __fastcall fields_Specified(int Index)
  {  return Ffields_Specified;  } 
  UnicodeString __fastcall GetkeyPrefix(int Index)
  {  return FkeyPrefix;  }
  void __fastcall SetkeyPrefix(int Index, UnicodeString _prop_val)
  {  FkeyPrefix = _prop_val;  }
  UnicodeString __fastcall Getlabel()
  {  return Flabel;  }
  void __fastcall Setlabel(UnicodeString _prop_val)
  {  Flabel = _prop_val;  }
  UnicodeString __fastcall GetlabelPlural()
  {  return FlabelPlural;  }
  void __fastcall SetlabelPlural(UnicodeString _prop_val)
  {  FlabelPlural = _prop_val;  }
  bool __fastcall Getlayoutable()
  {  return Flayoutable;  }
  void __fastcall Setlayoutable(bool _prop_val)
  {  Flayoutable = _prop_val;  }
  bool __fastcall Getmergeable()
  {  return Fmergeable;  }
  void __fastcall Setmergeable(bool _prop_val)
  {  Fmergeable = _prop_val;  }
  UnicodeString __fastcall Getname()
  {  return Fname;  }
  void __fastcall Setname(UnicodeString _prop_val)
  {  Fname = _prop_val;  }
  bool __fastcall Getqueryable()
  {  return Fqueryable;  }
  void __fastcall Setqueryable(bool _prop_val)
  {  Fqueryable = _prop_val;  }
  Array_Of_RecordTypeInfo __fastcall GetrecordTypeInfos(int Index)
  {  return FrecordTypeInfos;  }
  void __fastcall SetrecordTypeInfos(int Index, Array_Of_RecordTypeInfo _prop_val)
  {  FrecordTypeInfos = _prop_val; FrecordTypeInfos_Specified = true;  }
  bool __fastcall recordTypeInfos_Specified(int Index)
  {  return FrecordTypeInfos_Specified;  } 
  bool __fastcall Getreplicateable()
  {  return Freplicateable;  }
  void __fastcall Setreplicateable(bool _prop_val)
  {  Freplicateable = _prop_val;  }
  bool __fastcall Getretrieveable()
  {  return Fretrieveable;  }
  void __fastcall Setretrieveable(bool _prop_val)
  {  Fretrieveable = _prop_val;  }
  bool __fastcall Getsearchable()
  {  return Fsearchable;  }
  void __fastcall Setsearchable(bool _prop_val)
  {  Fsearchable = _prop_val;  }
  bool __fastcall Gettriggerable(int Index)
  {  return Ftriggerable;  }
  void __fastcall Settriggerable(int Index, bool _prop_val)
  {  Ftriggerable = _prop_val; Ftriggerable_Specified = true;  }
  bool __fastcall triggerable_Specified(int Index)
  {  return Ftriggerable_Specified;  } 
  bool __fastcall Getundeletable()
  {  return Fundeletable;  }
  void __fastcall Setundeletable(bool _prop_val)
  {  Fundeletable = _prop_val;  }
  bool __fastcall Getupdateable()
  {  return Fupdateable;  }
  void __fastcall Setupdateable(bool _prop_val)
  {  Fupdateable = _prop_val;  }
  UnicodeString __fastcall GeturlDetail(int Index)
  {  return FurlDetail;  }
  void __fastcall SeturlDetail(int Index, UnicodeString _prop_val)
  {  FurlDetail = _prop_val;  }
  UnicodeString __fastcall GeturlEdit(int Index)
  {  return FurlEdit;  }
  void __fastcall SeturlEdit(int Index, UnicodeString _prop_val)
  {  FurlEdit = _prop_val;  }
  UnicodeString __fastcall GeturlNew(int Index)
  {  return FurlNew;  }
  void __fastcall SeturlNew(int Index, UnicodeString _prop_val)
  {  FurlNew = _prop_val;  }

public:
  __fastcall ~DescribeSObjectResult();
__published:
  __property bool       activateable = { read=Factivateable, write=Setactivateable };
  __property Array_Of_ChildRelationship childRelationships = { index=(IS_OPTN|IS_UNBD), read=FchildRelationships, write=SetchildRelationships, stored = childRelationships_Specified };
  __property bool       createable = { read=Fcreateable, write=Setcreateable };
  __property bool           custom = { read=Fcustom, write=Setcustom };
  __property bool       customSetting = { read=FcustomSetting, write=SetcustomSetting };
  __property bool        deletable = { read=Fdeletable, write=Setdeletable };
  __property bool       deprecatedAndHidden = { read=FdeprecatedAndHidden, write=SetdeprecatedAndHidden };
  __property bool       feedEnabled = { read=FfeedEnabled, write=SetfeedEnabled };
  __property Array_Of_Field     fields = { index=(IS_OPTN|IS_UNBD|IS_NLBL), read=Ffields, write=Setfields, stored = fields_Specified };
  __property UnicodeString  keyPrefix = { index=(IS_NLBL), read=FkeyPrefix, write=SetkeyPrefix };
  __property UnicodeString      label = { read=Flabel, write=Setlabel };
  __property UnicodeString labelPlural = { read=FlabelPlural, write=SetlabelPlural };
  __property bool       layoutable = { read=Flayoutable, write=Setlayoutable };
  __property bool        mergeable = { read=Fmergeable, write=Setmergeable };
  __property UnicodeString       name = { read=Fname, write=Setname };
  __property bool        queryable = { read=Fqueryable, write=Setqueryable };
  __property Array_Of_RecordTypeInfo recordTypeInfos = { index=(IS_OPTN|IS_UNBD), read=FrecordTypeInfos, write=SetrecordTypeInfos, stored = recordTypeInfos_Specified };
  __property bool       replicateable = { read=Freplicateable, write=Setreplicateable };
  __property bool       retrieveable = { read=Fretrieveable, write=Setretrieveable };
  __property bool       searchable = { read=Fsearchable, write=Setsearchable };
  __property bool       triggerable = { index=(IS_OPTN), read=Ftriggerable, write=Settriggerable, stored = triggerable_Specified };
  __property bool       undeletable = { read=Fundeletable, write=Setundeletable };
  __property bool       updateable = { read=Fupdateable, write=Setupdateable };
  __property UnicodeString  urlDetail = { index=(IS_NLBL), read=FurlDetail, write=SeturlDetail };
  __property UnicodeString    urlEdit = { index=(IS_NLBL), read=FurlEdit, write=SeturlEdit };
  __property UnicodeString     urlNew = { index=(IS_NLBL), read=FurlNew, write=SeturlNew };
};


typedef DynamicArray<PicklistEntry*> Array_Of_PicklistEntry; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : PicklistForRecordType, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class PicklistForRecordType : public TRemotable {
private:
  UnicodeString   FpicklistName;
  Array_Of_PicklistEntry FpicklistValues;
  bool            FpicklistValues_Specified;
  UnicodeString __fastcall GetpicklistName()
  {  return FpicklistName;  }
  void __fastcall SetpicklistName(UnicodeString _prop_val)
  {  FpicklistName = _prop_val;  }
  Array_Of_PicklistEntry __fastcall GetpicklistValues(int Index)
  {  return FpicklistValues;  }
  void __fastcall SetpicklistValues(int Index, Array_Of_PicklistEntry _prop_val)
  {  FpicklistValues = _prop_val; FpicklistValues_Specified = true;  }
  bool __fastcall picklistValues_Specified(int Index)
  {  return FpicklistValues_Specified;  } 

public:
  __fastcall ~PicklistForRecordType();
__published:
  __property UnicodeString picklistName = { read=FpicklistName, write=SetpicklistName };
  __property Array_Of_PicklistEntry picklistValues = { index=(IS_OPTN|IS_UNBD|IS_NLBL), read=FpicklistValues, write=SetpicklistValues, stored = picklistValues_Specified };
};




// ************************************************************************ //
// XML       : Field, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class Field : public TRemotable {
private:
  bool            FautoNumber;
  int             FbyteLength;
  bool            Fcalculated;
  UnicodeString   FcalculatedFormula;
  bool            FcalculatedFormula_Specified;
  bool            FcascadeDelete;
  bool            FcascadeDelete_Specified;
  bool            FcaseSensitive;
  UnicodeString   FcontrollerName;
  bool            FcontrollerName_Specified;
  bool            Fcreateable;
  bool            Fcustom;
  UnicodeString   FdefaultValueFormula;
  bool            FdefaultValueFormula_Specified;
  bool            FdefaultedOnCreate;
  bool            FdependentPicklist;
  bool            FdependentPicklist_Specified;
  bool            FdeprecatedAndHidden;
  int             Fdigits;
  bool            FdisplayLocationInDecimal;
  bool            FdisplayLocationInDecimal_Specified;
  bool            FexternalId;
  bool            FexternalId_Specified;
  bool            Ffilterable;
  bool            Fgroupable;
  bool            FhtmlFormatted;
  bool            FhtmlFormatted_Specified;
  bool            FidLookup;
  UnicodeString   FinlineHelpText;
  bool            FinlineHelpText_Specified;
  UnicodeString   Flabel;
  int             Flength;
  UnicodeString   Fname;
  bool            FnameField;
  bool            FnamePointing;
  bool            FnamePointing_Specified;
  bool            Fnillable;
  bool            Fpermissionable;
  Array_Of_PicklistEntry FpicklistValues;
  bool            FpicklistValues_Specified;
  int             Fprecision;
  Array_Of_string FreferenceTo;
  bool            FreferenceTo_Specified;
  UnicodeString   FrelationshipName;
  bool            FrelationshipName_Specified;
  int             FrelationshipOrder;
  bool            FrelationshipOrder_Specified;
  bool            FrestrictedDelete;
  bool            FrestrictedDelete_Specified;
  bool            FrestrictedPicklist;
  int             Fscale;
  soapType        FsoapType;
  bool            Fsortable;
  bool            Fsortable_Specified;
  fieldType       Ftype;
  bool            Funique;
  bool            Fupdateable;
  bool            FwriteRequiresMasterRead;
  bool            FwriteRequiresMasterRead_Specified;
  bool __fastcall GetautoNumber()
  {  return FautoNumber;  }
  void __fastcall SetautoNumber(bool _prop_val)
  {  FautoNumber = _prop_val;  }
  int __fastcall GetbyteLength()
  {  return FbyteLength;  }
  void __fastcall SetbyteLength(int _prop_val)
  {  FbyteLength = _prop_val;  }
  bool __fastcall Getcalculated()
  {  return Fcalculated;  }
  void __fastcall Setcalculated(bool _prop_val)
  {  Fcalculated = _prop_val;  }
  UnicodeString __fastcall GetcalculatedFormula(int Index)
  {  return FcalculatedFormula;  }
  void __fastcall SetcalculatedFormula(int Index, UnicodeString _prop_val)
  {  FcalculatedFormula = _prop_val; FcalculatedFormula_Specified = true;  }
  bool __fastcall calculatedFormula_Specified(int Index)
  {  return FcalculatedFormula_Specified;  } 
  bool __fastcall GetcascadeDelete(int Index)
  {  return FcascadeDelete;  }
  void __fastcall SetcascadeDelete(int Index, bool _prop_val)
  {  FcascadeDelete = _prop_val; FcascadeDelete_Specified = true;  }
  bool __fastcall cascadeDelete_Specified(int Index)
  {  return FcascadeDelete_Specified;  } 
  bool __fastcall GetcaseSensitive()
  {  return FcaseSensitive;  }
  void __fastcall SetcaseSensitive(bool _prop_val)
  {  FcaseSensitive = _prop_val;  }
  UnicodeString __fastcall GetcontrollerName(int Index)
  {  return FcontrollerName;  }
  void __fastcall SetcontrollerName(int Index, UnicodeString _prop_val)
  {  FcontrollerName = _prop_val; FcontrollerName_Specified = true;  }
  bool __fastcall controllerName_Specified(int Index)
  {  return FcontrollerName_Specified;  } 
  bool __fastcall Getcreateable()
  {  return Fcreateable;  }
  void __fastcall Setcreateable(bool _prop_val)
  {  Fcreateable = _prop_val;  }
  bool __fastcall Getcustom()
  {  return Fcustom;  }
  void __fastcall Setcustom(bool _prop_val)
  {  Fcustom = _prop_val;  }
  UnicodeString __fastcall GetdefaultValueFormula(int Index)
  {  return FdefaultValueFormula;  }
  void __fastcall SetdefaultValueFormula(int Index, UnicodeString _prop_val)
  {  FdefaultValueFormula = _prop_val; FdefaultValueFormula_Specified = true;  }
  bool __fastcall defaultValueFormula_Specified(int Index)
  {  return FdefaultValueFormula_Specified;  } 
  bool __fastcall GetdefaultedOnCreate()
  {  return FdefaultedOnCreate;  }
  void __fastcall SetdefaultedOnCreate(bool _prop_val)
  {  FdefaultedOnCreate = _prop_val;  }
  bool __fastcall GetdependentPicklist(int Index)
  {  return FdependentPicklist;  }
  void __fastcall SetdependentPicklist(int Index, bool _prop_val)
  {  FdependentPicklist = _prop_val; FdependentPicklist_Specified = true;  }
  bool __fastcall dependentPicklist_Specified(int Index)
  {  return FdependentPicklist_Specified;  } 
  bool __fastcall GetdeprecatedAndHidden()
  {  return FdeprecatedAndHidden;  }
  void __fastcall SetdeprecatedAndHidden(bool _prop_val)
  {  FdeprecatedAndHidden = _prop_val;  }
  int __fastcall Getdigits()
  {  return Fdigits;  }
  void __fastcall Setdigits(int _prop_val)
  {  Fdigits = _prop_val;  }
  bool __fastcall GetdisplayLocationInDecimal(int Index)
  {  return FdisplayLocationInDecimal;  }
  void __fastcall SetdisplayLocationInDecimal(int Index, bool _prop_val)
  {  FdisplayLocationInDecimal = _prop_val; FdisplayLocationInDecimal_Specified = true;  }
  bool __fastcall displayLocationInDecimal_Specified(int Index)
  {  return FdisplayLocationInDecimal_Specified;  } 
  bool __fastcall GetexternalId(int Index)
  {  return FexternalId;  }
  void __fastcall SetexternalId(int Index, bool _prop_val)
  {  FexternalId = _prop_val; FexternalId_Specified = true;  }
  bool __fastcall externalId_Specified(int Index)
  {  return FexternalId_Specified;  } 
  bool __fastcall Getfilterable()
  {  return Ffilterable;  }
  void __fastcall Setfilterable(bool _prop_val)
  {  Ffilterable = _prop_val;  }
  bool __fastcall Getgroupable()
  {  return Fgroupable;  }
  void __fastcall Setgroupable(bool _prop_val)
  {  Fgroupable = _prop_val;  }
  bool __fastcall GethtmlFormatted(int Index)
  {  return FhtmlFormatted;  }
  void __fastcall SethtmlFormatted(int Index, bool _prop_val)
  {  FhtmlFormatted = _prop_val; FhtmlFormatted_Specified = true;  }
  bool __fastcall htmlFormatted_Specified(int Index)
  {  return FhtmlFormatted_Specified;  } 
  bool __fastcall GetidLookup()
  {  return FidLookup;  }
  void __fastcall SetidLookup(bool _prop_val)
  {  FidLookup = _prop_val;  }
  UnicodeString __fastcall GetinlineHelpText(int Index)
  {  return FinlineHelpText;  }
  void __fastcall SetinlineHelpText(int Index, UnicodeString _prop_val)
  {  FinlineHelpText = _prop_val; FinlineHelpText_Specified = true;  }
  bool __fastcall inlineHelpText_Specified(int Index)
  {  return FinlineHelpText_Specified;  } 
  UnicodeString __fastcall Getlabel()
  {  return Flabel;  }
  void __fastcall Setlabel(UnicodeString _prop_val)
  {  Flabel = _prop_val;  }
  int __fastcall Getlength()
  {  return Flength;  }
  void __fastcall Setlength(int _prop_val)
  {  Flength = _prop_val;  }
  UnicodeString __fastcall Getname()
  {  return Fname;  }
  void __fastcall Setname(UnicodeString _prop_val)
  {  Fname = _prop_val;  }
  bool __fastcall GetnameField()
  {  return FnameField;  }
  void __fastcall SetnameField(bool _prop_val)
  {  FnameField = _prop_val;  }
  bool __fastcall GetnamePointing(int Index)
  {  return FnamePointing;  }
  void __fastcall SetnamePointing(int Index, bool _prop_val)
  {  FnamePointing = _prop_val; FnamePointing_Specified = true;  }
  bool __fastcall namePointing_Specified(int Index)
  {  return FnamePointing_Specified;  } 
  bool __fastcall Getnillable()
  {  return Fnillable;  }
  void __fastcall Setnillable(bool _prop_val)
  {  Fnillable = _prop_val;  }
  bool __fastcall Getpermissionable()
  {  return Fpermissionable;  }
  void __fastcall Setpermissionable(bool _prop_val)
  {  Fpermissionable = _prop_val;  }
  Array_Of_PicklistEntry __fastcall GetpicklistValues(int Index)
  {  return FpicklistValues;  }
  void __fastcall SetpicklistValues(int Index, Array_Of_PicklistEntry _prop_val)
  {  FpicklistValues = _prop_val; FpicklistValues_Specified = true;  }
  bool __fastcall picklistValues_Specified(int Index)
  {  return FpicklistValues_Specified;  } 
  int __fastcall Getprecision()
  {  return Fprecision;  }
  void __fastcall Setprecision(int _prop_val)
  {  Fprecision = _prop_val;  }
  Array_Of_string __fastcall GetreferenceTo(int Index)
  {  return FreferenceTo;  }
  void __fastcall SetreferenceTo(int Index, Array_Of_string _prop_val)
  {  FreferenceTo = _prop_val; FreferenceTo_Specified = true;  }
  bool __fastcall referenceTo_Specified(int Index)
  {  return FreferenceTo_Specified;  } 
  UnicodeString __fastcall GetrelationshipName(int Index)
  {  return FrelationshipName;  }
  void __fastcall SetrelationshipName(int Index, UnicodeString _prop_val)
  {  FrelationshipName = _prop_val; FrelationshipName_Specified = true;  }
  bool __fastcall relationshipName_Specified(int Index)
  {  return FrelationshipName_Specified;  } 
  int __fastcall GetrelationshipOrder(int Index)
  {  return FrelationshipOrder;  }
  void __fastcall SetrelationshipOrder(int Index, int _prop_val)
  {  FrelationshipOrder = _prop_val; FrelationshipOrder_Specified = true;  }
  bool __fastcall relationshipOrder_Specified(int Index)
  {  return FrelationshipOrder_Specified;  } 
  bool __fastcall GetrestrictedDelete(int Index)
  {  return FrestrictedDelete;  }
  void __fastcall SetrestrictedDelete(int Index, bool _prop_val)
  {  FrestrictedDelete = _prop_val; FrestrictedDelete_Specified = true;  }
  bool __fastcall restrictedDelete_Specified(int Index)
  {  return FrestrictedDelete_Specified;  } 
  bool __fastcall GetrestrictedPicklist()
  {  return FrestrictedPicklist;  }
  void __fastcall SetrestrictedPicklist(bool _prop_val)
  {  FrestrictedPicklist = _prop_val;  }
  int __fastcall Getscale()
  {  return Fscale;  }
  void __fastcall Setscale(int _prop_val)
  {  Fscale = _prop_val;  }
  soapType __fastcall GetsoapType()
  {  return FsoapType;  }
  void __fastcall SetsoapType(soapType _prop_val)
  {  FsoapType = _prop_val;  }
  bool __fastcall Getsortable(int Index)
  {  return Fsortable;  }
  void __fastcall Setsortable(int Index, bool _prop_val)
  {  Fsortable = _prop_val; Fsortable_Specified = true;  }
  bool __fastcall sortable_Specified(int Index)
  {  return Fsortable_Specified;  } 
  fieldType __fastcall Gettype()
  {  return Ftype;  }
  void __fastcall Settype(fieldType _prop_val)
  {  Ftype = _prop_val;  }
  bool __fastcall Getunique()
  {  return Funique;  }
  void __fastcall Setunique(bool _prop_val)
  {  Funique = _prop_val;  }
  bool __fastcall Getupdateable()
  {  return Fupdateable;  }
  void __fastcall Setupdateable(bool _prop_val)
  {  Fupdateable = _prop_val;  }
  bool __fastcall GetwriteRequiresMasterRead(int Index)
  {  return FwriteRequiresMasterRead;  }
  void __fastcall SetwriteRequiresMasterRead(int Index, bool _prop_val)
  {  FwriteRequiresMasterRead = _prop_val; FwriteRequiresMasterRead_Specified = true;  }
  bool __fastcall writeRequiresMasterRead_Specified(int Index)
  {  return FwriteRequiresMasterRead_Specified;  } 

public:
  __fastcall ~Field();
__published:
  __property bool       autoNumber = { read=FautoNumber, write=SetautoNumber };
  __property int        byteLength = { read=FbyteLength, write=SetbyteLength };
  __property bool       calculated = { read=Fcalculated, write=Setcalculated };
  __property UnicodeString calculatedFormula = { index=(IS_OPTN), read=FcalculatedFormula, write=SetcalculatedFormula, stored = calculatedFormula_Specified };
  __property bool       cascadeDelete = { index=(IS_OPTN), read=FcascadeDelete, write=SetcascadeDelete, stored = cascadeDelete_Specified };
  __property bool       caseSensitive = { read=FcaseSensitive, write=SetcaseSensitive };
  __property UnicodeString controllerName = { index=(IS_OPTN), read=FcontrollerName, write=SetcontrollerName, stored = controllerName_Specified };
  __property bool       createable = { read=Fcreateable, write=Setcreateable };
  __property bool           custom = { read=Fcustom, write=Setcustom };
  __property UnicodeString defaultValueFormula = { index=(IS_OPTN), read=FdefaultValueFormula, write=SetdefaultValueFormula, stored = defaultValueFormula_Specified };
  __property bool       defaultedOnCreate = { read=FdefaultedOnCreate, write=SetdefaultedOnCreate };
  __property bool       dependentPicklist = { index=(IS_OPTN), read=FdependentPicklist, write=SetdependentPicklist, stored = dependentPicklist_Specified };
  __property bool       deprecatedAndHidden = { read=FdeprecatedAndHidden, write=SetdeprecatedAndHidden };
  __property int            digits = { read=Fdigits, write=Setdigits };
  __property bool       displayLocationInDecimal = { index=(IS_OPTN), read=FdisplayLocationInDecimal, write=SetdisplayLocationInDecimal, stored = displayLocationInDecimal_Specified };
  __property bool       externalId = { index=(IS_OPTN), read=FexternalId, write=SetexternalId, stored = externalId_Specified };
  __property bool       filterable = { read=Ffilterable, write=Setfilterable };
  __property bool        groupable = { read=Fgroupable, write=Setgroupable };
  __property bool       htmlFormatted = { index=(IS_OPTN), read=FhtmlFormatted, write=SethtmlFormatted, stored = htmlFormatted_Specified };
  __property bool         idLookup = { read=FidLookup, write=SetidLookup };
  __property UnicodeString inlineHelpText = { index=(IS_OPTN), read=FinlineHelpText, write=SetinlineHelpText, stored = inlineHelpText_Specified };
  __property UnicodeString      label = { read=Flabel, write=Setlabel };
  __property int            length = { read=Flength, write=Setlength };
  __property UnicodeString       name = { read=Fname, write=Setname };
  __property bool        nameField = { read=FnameField, write=SetnameField };
  __property bool       namePointing = { index=(IS_OPTN), read=FnamePointing, write=SetnamePointing, stored = namePointing_Specified };
  __property bool         nillable = { read=Fnillable, write=Setnillable };
  __property bool       permissionable = { read=Fpermissionable, write=Setpermissionable };
  __property Array_Of_PicklistEntry picklistValues = { index=(IS_OPTN|IS_UNBD|IS_NLBL), read=FpicklistValues, write=SetpicklistValues, stored = picklistValues_Specified };
  __property int         precision = { read=Fprecision, write=Setprecision };
  __property Array_Of_string referenceTo = { index=(IS_OPTN|IS_UNBD|IS_NLBL), read=FreferenceTo, write=SetreferenceTo, stored = referenceTo_Specified };
  __property UnicodeString relationshipName = { index=(IS_OPTN), read=FrelationshipName, write=SetrelationshipName, stored = relationshipName_Specified };
  __property int        relationshipOrder = { index=(IS_OPTN), read=FrelationshipOrder, write=SetrelationshipOrder, stored = relationshipOrder_Specified };
  __property bool       restrictedDelete = { index=(IS_OPTN), read=FrestrictedDelete, write=SetrestrictedDelete, stored = restrictedDelete_Specified };
  __property bool       restrictedPicklist = { read=FrestrictedPicklist, write=SetrestrictedPicklist };
  __property int             scale = { read=Fscale, write=Setscale };
  __property soapType     soapType = { read=FsoapType, write=SetsoapType };
  __property bool         sortable = { index=(IS_OPTN), read=Fsortable, write=Setsortable, stored = sortable_Specified };
  __property fieldType        type = { read=Ftype, write=Settype };
  __property bool           unique = { read=Funique, write=Setunique };
  __property bool       updateable = { read=Fupdateable, write=Setupdateable };
  __property bool       writeRequiresMasterRead = { index=(IS_OPTN), read=FwriteRequiresMasterRead, write=SetwriteRequiresMasterRead, stored = writeRequiresMasterRead_Specified };
};


typedef DynamicArray<DescribeGlobalSObjectResult*> Array_Of_DescribeGlobalSObjectResult; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : DescribeGlobalResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DescribeGlobalResult : public TRemotable {
private:
  UnicodeString   Fencoding;
  int             FmaxBatchSize;
  Array_Of_DescribeGlobalSObjectResult Fsobjects;
  bool            Fsobjects_Specified;
  UnicodeString __fastcall Getencoding(int Index)
  {  return Fencoding;  }
  void __fastcall Setencoding(int Index, UnicodeString _prop_val)
  {  Fencoding = _prop_val;  }
  int __fastcall GetmaxBatchSize()
  {  return FmaxBatchSize;  }
  void __fastcall SetmaxBatchSize(int _prop_val)
  {  FmaxBatchSize = _prop_val;  }
  Array_Of_DescribeGlobalSObjectResult __fastcall Getsobjects(int Index)
  {  return Fsobjects;  }
  void __fastcall Setsobjects(int Index, Array_Of_DescribeGlobalSObjectResult _prop_val)
  {  Fsobjects = _prop_val; Fsobjects_Specified = true;  }
  bool __fastcall sobjects_Specified(int Index)
  {  return Fsobjects_Specified;  } 

public:
  __fastcall ~DescribeGlobalResult();
__published:
  __property UnicodeString   encoding = { index=(IS_NLBL), read=Fencoding, write=Setencoding };
  __property int        maxBatchSize = { read=FmaxBatchSize, write=SetmaxBatchSize };
  __property Array_Of_DescribeGlobalSObjectResult   sobjects = { index=(IS_OPTN|IS_UNBD), read=Fsobjects, write=Setsobjects, stored = sobjects_Specified };
};


typedef DynamicArray<DataCategory*> Array_Of_DataCategory; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : DataCategory, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DataCategory : public TRemotable {
private:
  Array_Of_DataCategory FchildCategories;
  bool            FchildCategories_Specified;
  UnicodeString   Flabel;
  UnicodeString   Fname;
  Array_Of_DataCategory __fastcall GetchildCategories(int Index)
  {  return FchildCategories;  }
  void __fastcall SetchildCategories(int Index, Array_Of_DataCategory _prop_val)
  {  FchildCategories = _prop_val; FchildCategories_Specified = true;  }
  bool __fastcall childCategories_Specified(int Index)
  {  return FchildCategories_Specified;  } 
  UnicodeString __fastcall Getlabel()
  {  return Flabel;  }
  void __fastcall Setlabel(UnicodeString _prop_val)
  {  Flabel = _prop_val;  }
  UnicodeString __fastcall Getname()
  {  return Fname;  }
  void __fastcall Setname(UnicodeString _prop_val)
  {  Fname = _prop_val;  }

public:
  __fastcall ~DataCategory();
__published:
  __property Array_Of_DataCategory childCategories = { index=(IS_OPTN|IS_UNBD), read=FchildCategories, write=SetchildCategories, stored = childCategories_Specified };
  __property UnicodeString      label = { read=Flabel, write=Setlabel };
  __property UnicodeString       name = { read=Fname, write=Setname };
};




// ************************************************************************ //
// XML       : DescribeDataCategoryGroupStructureResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DescribeDataCategoryGroupStructureResult : public TRemotable {
private:
  UnicodeString   Fdescription;
  UnicodeString   Flabel;
  UnicodeString   Fname;
  UnicodeString   Fsobject;
  Array_Of_DataCategory FtopCategories;
  bool            FtopCategories_Specified;
  UnicodeString __fastcall Getdescription()
  {  return Fdescription;  }
  void __fastcall Setdescription(UnicodeString _prop_val)
  {  Fdescription = _prop_val;  }
  UnicodeString __fastcall Getlabel()
  {  return Flabel;  }
  void __fastcall Setlabel(UnicodeString _prop_val)
  {  Flabel = _prop_val;  }
  UnicodeString __fastcall Getname()
  {  return Fname;  }
  void __fastcall Setname(UnicodeString _prop_val)
  {  Fname = _prop_val;  }
  UnicodeString __fastcall Getsobject()
  {  return Fsobject;  }
  void __fastcall Setsobject(UnicodeString _prop_val)
  {  Fsobject = _prop_val;  }
  Array_Of_DataCategory __fastcall GettopCategories(int Index)
  {  return FtopCategories;  }
  void __fastcall SettopCategories(int Index, Array_Of_DataCategory _prop_val)
  {  FtopCategories = _prop_val; FtopCategories_Specified = true;  }
  bool __fastcall topCategories_Specified(int Index)
  {  return FtopCategories_Specified;  } 

public:
  __fastcall ~DescribeDataCategoryGroupStructureResult();
__published:
  __property UnicodeString description = { read=Fdescription, write=Setdescription };
  __property UnicodeString      label = { read=Flabel, write=Setlabel };
  __property UnicodeString       name = { read=Fname, write=Setname };
  __property UnicodeString    sobject = { read=Fsobject, write=Setsobject };
  __property Array_Of_DataCategory topCategories = { index=(IS_OPTN|IS_UNBD), read=FtopCategories, write=SettopCategories, stored = topCategories_Specified };
};


typedef DynamicArray<DescribeSoftphoneLayoutCallType*> Array_Of_DescribeSoftphoneLayoutCallType; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : DescribeSoftphoneLayoutResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DescribeSoftphoneLayoutResult : public TRemotable {
private:
  Array_Of_DescribeSoftphoneLayoutCallType FcallTypes;
  ID              Fid;
  UnicodeString   Fname;
  Array_Of_DescribeSoftphoneLayoutCallType __fastcall GetcallTypes(int Index)
  {  return FcallTypes;  }
  void __fastcall SetcallTypes(int Index, Array_Of_DescribeSoftphoneLayoutCallType _prop_val)
  {  FcallTypes = _prop_val;  }
  ID __fastcall Getid()
  {  return Fid;  }
  void __fastcall Setid(ID _prop_val)
  {  Fid = _prop_val;  }
  UnicodeString __fastcall Getname()
  {  return Fname;  }
  void __fastcall Setname(UnicodeString _prop_val)
  {  Fname = _prop_val;  }

public:
  __fastcall ~DescribeSoftphoneLayoutResult();
__published:
  __property Array_Of_DescribeSoftphoneLayoutCallType  callTypes = { index=(IS_UNBD), read=FcallTypes, write=SetcallTypes };
  __property ID                 id = { read=Fid, write=Setid };
  __property UnicodeString       name = { read=Fname, write=Setname };
};


typedef DynamicArray<DescribeSoftphoneLayoutInfoField*> Array_Of_DescribeSoftphoneLayoutInfoField; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<DescribeSoftphoneScreenPopOption*> Array_Of_DescribeSoftphoneScreenPopOption; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<DescribeSoftphoneLayoutSection*> Array_Of_DescribeSoftphoneLayoutSection; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : DescribeSoftphoneLayoutCallType, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DescribeSoftphoneLayoutCallType : public TRemotable {
private:
  Array_Of_DescribeSoftphoneLayoutInfoField FinfoFields;
  UnicodeString   Fname;
  Array_Of_DescribeSoftphoneScreenPopOption FscreenPopOptions;
  bool            FscreenPopOptions_Specified;
  UnicodeString   FscreenPopsOpenWithin;
  bool            FscreenPopsOpenWithin_Specified;
  Array_Of_DescribeSoftphoneLayoutSection Fsections;
  bool            Fsections_Specified;
  Array_Of_DescribeSoftphoneLayoutInfoField __fastcall GetinfoFields(int Index)
  {  return FinfoFields;  }
  void __fastcall SetinfoFields(int Index, Array_Of_DescribeSoftphoneLayoutInfoField _prop_val)
  {  FinfoFields = _prop_val;  }
  UnicodeString __fastcall Getname()
  {  return Fname;  }
  void __fastcall Setname(UnicodeString _prop_val)
  {  Fname = _prop_val;  }
  Array_Of_DescribeSoftphoneScreenPopOption __fastcall GetscreenPopOptions(int Index)
  {  return FscreenPopOptions;  }
  void __fastcall SetscreenPopOptions(int Index, Array_Of_DescribeSoftphoneScreenPopOption _prop_val)
  {  FscreenPopOptions = _prop_val; FscreenPopOptions_Specified = true;  }
  bool __fastcall screenPopOptions_Specified(int Index)
  {  return FscreenPopOptions_Specified;  } 
  UnicodeString __fastcall GetscreenPopsOpenWithin(int Index)
  {  return FscreenPopsOpenWithin;  }
  void __fastcall SetscreenPopsOpenWithin(int Index, UnicodeString _prop_val)
  {  FscreenPopsOpenWithin = _prop_val; FscreenPopsOpenWithin_Specified = true;  }
  bool __fastcall screenPopsOpenWithin_Specified(int Index)
  {  return FscreenPopsOpenWithin_Specified;  } 
  Array_Of_DescribeSoftphoneLayoutSection __fastcall Getsections(int Index)
  {  return Fsections;  }
  void __fastcall Setsections(int Index, Array_Of_DescribeSoftphoneLayoutSection _prop_val)
  {  Fsections = _prop_val; Fsections_Specified = true;  }
  bool __fastcall sections_Specified(int Index)
  {  return Fsections_Specified;  } 

public:
  __fastcall ~DescribeSoftphoneLayoutCallType();
__published:
  __property Array_Of_DescribeSoftphoneLayoutInfoField infoFields = { index=(IS_UNBD), read=FinfoFields, write=SetinfoFields };
  __property UnicodeString       name = { read=Fname, write=Setname };
  __property Array_Of_DescribeSoftphoneScreenPopOption screenPopOptions = { index=(IS_OPTN|IS_UNBD), read=FscreenPopOptions, write=SetscreenPopOptions, stored = screenPopOptions_Specified };
  __property UnicodeString screenPopsOpenWithin = { index=(IS_OPTN), read=FscreenPopsOpenWithin, write=SetscreenPopsOpenWithin, stored = screenPopsOpenWithin_Specified };
  __property Array_Of_DescribeSoftphoneLayoutSection   sections = { index=(IS_OPTN|IS_UNBD), read=Fsections, write=Setsections, stored = sections_Specified };
};


typedef DynamicArray<DescribeSoftphoneLayoutItem*> Array_Of_DescribeSoftphoneLayoutItem; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : DescribeSoftphoneLayoutSection, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DescribeSoftphoneLayoutSection : public TRemotable {
private:
  UnicodeString   FentityApiName;
  Array_Of_DescribeSoftphoneLayoutItem Fitems;
  UnicodeString __fastcall GetentityApiName()
  {  return FentityApiName;  }
  void __fastcall SetentityApiName(UnicodeString _prop_val)
  {  FentityApiName = _prop_val;  }
  Array_Of_DescribeSoftphoneLayoutItem __fastcall Getitems(int Index)
  {  return Fitems;  }
  void __fastcall Setitems(int Index, Array_Of_DescribeSoftphoneLayoutItem _prop_val)
  {  Fitems = _prop_val;  }

public:
  __fastcall ~DescribeSoftphoneLayoutSection();
__published:
  __property UnicodeString entityApiName = { read=FentityApiName, write=SetentityApiName };
  __property Array_Of_DescribeSoftphoneLayoutItem      items = { index=(IS_UNBD), read=Fitems, write=Setitems };
};


typedef DynamicArray<DescribeLayout*> Array_Of_DescribeLayout; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<RecordTypeMapping*> Array_Of_RecordTypeMapping; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : DescribeLayoutResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DescribeLayoutResult : public TRemotable {
private:
  Array_Of_DescribeLayout Flayouts;
  Array_Of_RecordTypeMapping FrecordTypeMappings;
  bool            FrecordTypeMappings_Specified;
  bool            FrecordTypeSelectorRequired;
  Array_Of_DescribeLayout __fastcall Getlayouts(int Index)
  {  return Flayouts;  }
  void __fastcall Setlayouts(int Index, Array_Of_DescribeLayout _prop_val)
  {  Flayouts = _prop_val;  }
  Array_Of_RecordTypeMapping __fastcall GetrecordTypeMappings(int Index)
  {  return FrecordTypeMappings;  }
  void __fastcall SetrecordTypeMappings(int Index, Array_Of_RecordTypeMapping _prop_val)
  {  FrecordTypeMappings = _prop_val; FrecordTypeMappings_Specified = true;  }
  bool __fastcall recordTypeMappings_Specified(int Index)
  {  return FrecordTypeMappings_Specified;  } 
  bool __fastcall GetrecordTypeSelectorRequired()
  {  return FrecordTypeSelectorRequired;  }
  void __fastcall SetrecordTypeSelectorRequired(bool _prop_val)
  {  FrecordTypeSelectorRequired = _prop_val;  }

public:
  __fastcall ~DescribeLayoutResult();
__published:
  __property Array_Of_DescribeLayout    layouts = { index=(IS_UNBD), read=Flayouts, write=Setlayouts };
  __property Array_Of_RecordTypeMapping recordTypeMappings = { index=(IS_OPTN|IS_UNBD), read=FrecordTypeMappings, write=SetrecordTypeMappings, stored = recordTypeMappings_Specified };
  __property bool       recordTypeSelectorRequired = { read=FrecordTypeSelectorRequired, write=SetrecordTypeSelectorRequired };
};


typedef DynamicArray<DescribeLayoutSection*> Array_Of_DescribeLayoutSection; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<RelatedList*> Array_Of_RelatedList; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : DescribeLayout, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DescribeLayout : public TRemotable {
private:
  DescribeLayoutButtonSection* FbuttonLayoutSection;
  bool            FbuttonLayoutSection_Specified;
  Array_Of_DescribeLayoutSection FdetailLayoutSections;
  bool            FdetailLayoutSections_Specified;
  Array_Of_DescribeLayoutSection FeditLayoutSections;
  bool            FeditLayoutSections_Specified;
  ID              Fid;
  Array_Of_RelatedList FrelatedLists;
  bool            FrelatedLists_Specified;
  DescribeLayoutButtonSection* __fastcall GetbuttonLayoutSection(int Index)
  {  return FbuttonLayoutSection;  }
  void __fastcall SetbuttonLayoutSection(int Index, DescribeLayoutButtonSection* _prop_val)
  {  FbuttonLayoutSection = _prop_val; FbuttonLayoutSection_Specified = true;  }
  bool __fastcall buttonLayoutSection_Specified(int Index)
  {  return FbuttonLayoutSection_Specified;  } 
  Array_Of_DescribeLayoutSection __fastcall GetdetailLayoutSections(int Index)
  {  return FdetailLayoutSections;  }
  void __fastcall SetdetailLayoutSections(int Index, Array_Of_DescribeLayoutSection _prop_val)
  {  FdetailLayoutSections = _prop_val; FdetailLayoutSections_Specified = true;  }
  bool __fastcall detailLayoutSections_Specified(int Index)
  {  return FdetailLayoutSections_Specified;  } 
  Array_Of_DescribeLayoutSection __fastcall GeteditLayoutSections(int Index)
  {  return FeditLayoutSections;  }
  void __fastcall SeteditLayoutSections(int Index, Array_Of_DescribeLayoutSection _prop_val)
  {  FeditLayoutSections = _prop_val; FeditLayoutSections_Specified = true;  }
  bool __fastcall editLayoutSections_Specified(int Index)
  {  return FeditLayoutSections_Specified;  } 
  ID __fastcall Getid()
  {  return Fid;  }
  void __fastcall Setid(ID _prop_val)
  {  Fid = _prop_val;  }
  Array_Of_RelatedList __fastcall GetrelatedLists(int Index)
  {  return FrelatedLists;  }
  void __fastcall SetrelatedLists(int Index, Array_Of_RelatedList _prop_val)
  {  FrelatedLists = _prop_val; FrelatedLists_Specified = true;  }
  bool __fastcall relatedLists_Specified(int Index)
  {  return FrelatedLists_Specified;  } 

public:
  __fastcall ~DescribeLayout();
__published:
  __property DescribeLayoutButtonSection* buttonLayoutSection = { index=(IS_OPTN), read=FbuttonLayoutSection, write=SetbuttonLayoutSection, stored = buttonLayoutSection_Specified };
  __property Array_Of_DescribeLayoutSection detailLayoutSections = { index=(IS_OPTN|IS_UNBD), read=FdetailLayoutSections, write=SetdetailLayoutSections, stored = detailLayoutSections_Specified };
  __property Array_Of_DescribeLayoutSection editLayoutSections = { index=(IS_OPTN|IS_UNBD), read=FeditLayoutSections, write=SeteditLayoutSections, stored = editLayoutSections_Specified };
  __property ID                 id = { read=Fid, write=Setid };
  __property Array_Of_RelatedList relatedLists = { index=(IS_OPTN|IS_UNBD), read=FrelatedLists, write=SetrelatedLists, stored = relatedLists_Specified };
};


typedef DynamicArray<PicklistForRecordType*> Array_Of_PicklistForRecordType; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : RecordTypeMapping, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class RecordTypeMapping : public TRemotable {
private:
  bool            Favailable;
  bool            FdefaultRecordTypeMapping;
  ID              FlayoutId;
  UnicodeString   Fname;
  Array_Of_PicklistForRecordType FpicklistsForRecordType;
  bool            FpicklistsForRecordType_Specified;
  ID              FrecordTypeId;
  bool __fastcall Getavailable()
  {  return Favailable;  }
  void __fastcall Setavailable(bool _prop_val)
  {  Favailable = _prop_val;  }
  bool __fastcall GetdefaultRecordTypeMapping()
  {  return FdefaultRecordTypeMapping;  }
  void __fastcall SetdefaultRecordTypeMapping(bool _prop_val)
  {  FdefaultRecordTypeMapping = _prop_val;  }
  ID __fastcall GetlayoutId()
  {  return FlayoutId;  }
  void __fastcall SetlayoutId(ID _prop_val)
  {  FlayoutId = _prop_val;  }
  UnicodeString __fastcall Getname()
  {  return Fname;  }
  void __fastcall Setname(UnicodeString _prop_val)
  {  Fname = _prop_val;  }
  Array_Of_PicklistForRecordType __fastcall GetpicklistsForRecordType(int Index)
  {  return FpicklistsForRecordType;  }
  void __fastcall SetpicklistsForRecordType(int Index, Array_Of_PicklistForRecordType _prop_val)
  {  FpicklistsForRecordType = _prop_val; FpicklistsForRecordType_Specified = true;  }
  bool __fastcall picklistsForRecordType_Specified(int Index)
  {  return FpicklistsForRecordType_Specified;  } 
  ID __fastcall GetrecordTypeId(int Index)
  {  return FrecordTypeId;  }
  void __fastcall SetrecordTypeId(int Index, ID _prop_val)
  {  FrecordTypeId = _prop_val;  }

public:
  __fastcall ~RecordTypeMapping();
__published:
  __property bool        available = { read=Favailable, write=Setavailable };
  __property bool       defaultRecordTypeMapping = { read=FdefaultRecordTypeMapping, write=SetdefaultRecordTypeMapping };
  __property ID           layoutId = { read=FlayoutId, write=SetlayoutId };
  __property UnicodeString       name = { read=Fname, write=Setname };
  __property Array_Of_PicklistForRecordType picklistsForRecordType = { index=(IS_OPTN|IS_UNBD|IS_NLBL), read=FpicklistsForRecordType, write=SetpicklistsForRecordType, stored = picklistsForRecordType_Specified };
  __property ID         recordTypeId = { index=(IS_NLBL), read=FrecordTypeId, write=SetrecordTypeId };
};


typedef DynamicArray<DescribeLayoutButton*> Array_Of_DescribeLayoutButton; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : DescribeLayoutButtonSection, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DescribeLayoutButtonSection : public TRemotable {
private:
  Array_Of_DescribeLayoutButton FdetailButtons;
  Array_Of_DescribeLayoutButton __fastcall GetdetailButtons(int Index)
  {  return FdetailButtons;  }
  void __fastcall SetdetailButtons(int Index, Array_Of_DescribeLayoutButton _prop_val)
  {  FdetailButtons = _prop_val;  }

  int  GetLength() const  { return FdetailButtons.get_length(); }
  void SetLength(int len) { FdetailButtons.set_length(len); }

public:
  __fastcall ~DescribeLayoutButtonSection();

  DescribeLayoutButton*& operator[](int index) { return FdetailButtons[index]; }
  __property int Len = { read=GetLength, write=SetLength };

__published:
  __property Array_Of_DescribeLayoutButton detailButtons = { index=(IS_UNBD), read=FdetailButtons, write=SetdetailButtons };
};


typedef DynamicArray<DescribeLayoutRow*> Array_Of_DescribeLayoutRow; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : DescribeLayoutSection, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DescribeLayoutSection : public TRemotable {
private:
  int             Fcolumns;
  UnicodeString   Fheading;
  Array_Of_DescribeLayoutRow FlayoutRows;
  int             Frows;
  bool            FuseCollapsibleSection;
  bool            FuseHeading;
  int __fastcall Getcolumns()
  {  return Fcolumns;  }
  void __fastcall Setcolumns(int _prop_val)
  {  Fcolumns = _prop_val;  }
  UnicodeString __fastcall Getheading()
  {  return Fheading;  }
  void __fastcall Setheading(UnicodeString _prop_val)
  {  Fheading = _prop_val;  }
  Array_Of_DescribeLayoutRow __fastcall GetlayoutRows(int Index)
  {  return FlayoutRows;  }
  void __fastcall SetlayoutRows(int Index, Array_Of_DescribeLayoutRow _prop_val)
  {  FlayoutRows = _prop_val;  }
  int __fastcall Getrows()
  {  return Frows;  }
  void __fastcall Setrows(int _prop_val)
  {  Frows = _prop_val;  }
  bool __fastcall GetuseCollapsibleSection()
  {  return FuseCollapsibleSection;  }
  void __fastcall SetuseCollapsibleSection(bool _prop_val)
  {  FuseCollapsibleSection = _prop_val;  }
  bool __fastcall GetuseHeading()
  {  return FuseHeading;  }
  void __fastcall SetuseHeading(bool _prop_val)
  {  FuseHeading = _prop_val;  }

public:
  __fastcall ~DescribeLayoutSection();
__published:
  __property int           columns = { read=Fcolumns, write=Setcolumns };
  __property UnicodeString    heading = { read=Fheading, write=Setheading };
  __property Array_Of_DescribeLayoutRow layoutRows = { index=(IS_UNBD), read=FlayoutRows, write=SetlayoutRows };
  __property int              rows = { read=Frows, write=Setrows };
  __property bool       useCollapsibleSection = { read=FuseCollapsibleSection, write=SetuseCollapsibleSection };
  __property bool       useHeading = { read=FuseHeading, write=SetuseHeading };
};


typedef DynamicArray<RelatedListColumn*> Array_Of_RelatedListColumn; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<RelatedListSort*> Array_Of_RelatedListSort; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : RelatedList, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class RelatedList : public TRemotable {
private:
  Array_Of_RelatedListColumn Fcolumns;
  bool            Fcustom;
  UnicodeString   Ffield;
  UnicodeString   Flabel;
  int             FlimitRows;
  UnicodeString   Fname;
  UnicodeString   Fsobject;
  Array_Of_RelatedListSort Fsort;
  bool            Fsort_Specified;
  Array_Of_RelatedListColumn __fastcall Getcolumns(int Index)
  {  return Fcolumns;  }
  void __fastcall Setcolumns(int Index, Array_Of_RelatedListColumn _prop_val)
  {  Fcolumns = _prop_val;  }
  bool __fastcall Getcustom()
  {  return Fcustom;  }
  void __fastcall Setcustom(bool _prop_val)
  {  Fcustom = _prop_val;  }
  UnicodeString __fastcall Getfield(int Index)
  {  return Ffield;  }
  void __fastcall Setfield(int Index, UnicodeString _prop_val)
  {  Ffield = _prop_val;  }
  UnicodeString __fastcall Getlabel()
  {  return Flabel;  }
  void __fastcall Setlabel(UnicodeString _prop_val)
  {  Flabel = _prop_val;  }
  int __fastcall GetlimitRows()
  {  return FlimitRows;  }
  void __fastcall SetlimitRows(int _prop_val)
  {  FlimitRows = _prop_val;  }
  UnicodeString __fastcall Getname()
  {  return Fname;  }
  void __fastcall Setname(UnicodeString _prop_val)
  {  Fname = _prop_val;  }
  UnicodeString __fastcall Getsobject(int Index)
  {  return Fsobject;  }
  void __fastcall Setsobject(int Index, UnicodeString _prop_val)
  {  Fsobject = _prop_val;  }
  Array_Of_RelatedListSort __fastcall Getsort(int Index)
  {  return Fsort;  }
  void __fastcall Setsort(int Index, Array_Of_RelatedListSort _prop_val)
  {  Fsort = _prop_val; Fsort_Specified = true;  }
  bool __fastcall sort_Specified(int Index)
  {  return Fsort_Specified;  } 

public:
  __fastcall ~RelatedList();
__published:
  __property Array_Of_RelatedListColumn    columns = { index=(IS_UNBD), read=Fcolumns, write=Setcolumns };
  __property bool           custom = { read=Fcustom, write=Setcustom };
  __property UnicodeString      field = { index=(IS_NLBL), read=Ffield, write=Setfield };
  __property UnicodeString      label = { read=Flabel, write=Setlabel };
  __property int         limitRows = { read=FlimitRows, write=SetlimitRows };
  __property UnicodeString       name = { read=Fname, write=Setname };
  __property UnicodeString    sobject = { index=(IS_NLBL), read=Fsobject, write=Setsobject };
  __property Array_Of_RelatedListSort       sort = { index=(IS_OPTN|IS_UNBD), read=Fsort, write=Setsort, stored = sort_Specified };
};


typedef DynamicArray<DescribeLayoutItem*> Array_Of_DescribeLayoutItem; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : DescribeLayoutRow, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DescribeLayoutRow : public TRemotable {
private:
  Array_Of_DescribeLayoutItem FlayoutItems;
  int             FnumItems;
  Array_Of_DescribeLayoutItem __fastcall GetlayoutItems(int Index)
  {  return FlayoutItems;  }
  void __fastcall SetlayoutItems(int Index, Array_Of_DescribeLayoutItem _prop_val)
  {  FlayoutItems = _prop_val;  }
  int __fastcall GetnumItems()
  {  return FnumItems;  }
  void __fastcall SetnumItems(int _prop_val)
  {  FnumItems = _prop_val;  }

public:
  __fastcall ~DescribeLayoutRow();
__published:
  __property Array_Of_DescribeLayoutItem layoutItems = { index=(IS_UNBD), read=FlayoutItems, write=SetlayoutItems };
  __property int          numItems = { read=FnumItems, write=SetnumItems };
};


typedef DynamicArray<DescribeLayoutComponent*> Array_Of_DescribeLayoutComponent; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : DescribeLayoutItem, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DescribeLayoutItem : public TRemotable {
private:
  bool            Feditable;
  UnicodeString   Flabel;
  Array_Of_DescribeLayoutComponent FlayoutComponents;
  bool            FlayoutComponents_Specified;
  bool            Fplaceholder;
  bool            Frequired;
  bool __fastcall Geteditable()
  {  return Feditable;  }
  void __fastcall Seteditable(bool _prop_val)
  {  Feditable = _prop_val;  }
  UnicodeString __fastcall Getlabel(int Index)
  {  return Flabel;  }
  void __fastcall Setlabel(int Index, UnicodeString _prop_val)
  {  Flabel = _prop_val;  }
  Array_Of_DescribeLayoutComponent __fastcall GetlayoutComponents(int Index)
  {  return FlayoutComponents;  }
  void __fastcall SetlayoutComponents(int Index, Array_Of_DescribeLayoutComponent _prop_val)
  {  FlayoutComponents = _prop_val; FlayoutComponents_Specified = true;  }
  bool __fastcall layoutComponents_Specified(int Index)
  {  return FlayoutComponents_Specified;  } 
  bool __fastcall Getplaceholder()
  {  return Fplaceholder;  }
  void __fastcall Setplaceholder(bool _prop_val)
  {  Fplaceholder = _prop_val;  }
  bool __fastcall Getrequired()
  {  return Frequired;  }
  void __fastcall Setrequired(bool _prop_val)
  {  Frequired = _prop_val;  }

public:
  __fastcall ~DescribeLayoutItem();
__published:
  __property bool         editable = { read=Feditable, write=Seteditable };
  __property UnicodeString      label = { index=(IS_NLBL), read=Flabel, write=Setlabel };
  __property Array_Of_DescribeLayoutComponent layoutComponents = { index=(IS_OPTN|IS_UNBD), read=FlayoutComponents, write=SetlayoutComponents, stored = layoutComponents_Specified };
  __property bool       placeholder = { read=Fplaceholder, write=Setplaceholder };
  __property bool         required = { read=Frequired, write=Setrequired };
};


typedef DynamicArray<EmailFileAttachment*> Array_Of_EmailFileAttachment; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : SingleEmailMessage, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class SingleEmailMessage : public Email {
private:
  Array_Of_string FbccAddresses;
  bool            FbccAddresses_Specified;
  Array_Of_string FccAddresses;
  bool            FccAddresses_Specified;
  UnicodeString   Fcharset;
  Array_Of_ID     FdocumentAttachments;
  bool            FdocumentAttachments_Specified;
  UnicodeString   FhtmlBody;
  UnicodeString   FinReplyTo;
  bool            FinReplyTo_Specified;
  Array_Of_EmailFileAttachment FfileAttachments;
  bool            FfileAttachments_Specified;
  ID              ForgWideEmailAddressId;
  bool            ForgWideEmailAddressId_Specified;
  UnicodeString   FplainTextBody;
  UnicodeString   Freferences;
  bool            Freferences_Specified;
  ID              FtargetObjectId;
  ID              FtemplateId;
  Array_Of_string FtoAddresses;
  bool            FtoAddresses_Specified;
  ID              FwhatId;
  Array_Of_string __fastcall GetbccAddresses(int Index)
  {  return FbccAddresses;  }
  void __fastcall SetbccAddresses(int Index, Array_Of_string _prop_val)
  {  FbccAddresses = _prop_val; FbccAddresses_Specified = true;  }
  bool __fastcall bccAddresses_Specified(int Index)
  {  return FbccAddresses_Specified;  } 
  Array_Of_string __fastcall GetccAddresses(int Index)
  {  return FccAddresses;  }
  void __fastcall SetccAddresses(int Index, Array_Of_string _prop_val)
  {  FccAddresses = _prop_val; FccAddresses_Specified = true;  }
  bool __fastcall ccAddresses_Specified(int Index)
  {  return FccAddresses_Specified;  } 
  UnicodeString __fastcall Getcharset(int Index)
  {  return Fcharset;  }
  void __fastcall Setcharset(int Index, UnicodeString _prop_val)
  {  Fcharset = _prop_val;  }
  Array_Of_ID __fastcall GetdocumentAttachments(int Index)
  {  return FdocumentAttachments;  }
  void __fastcall SetdocumentAttachments(int Index, Array_Of_ID _prop_val)
  {  FdocumentAttachments = _prop_val; FdocumentAttachments_Specified = true;  }
  bool __fastcall documentAttachments_Specified(int Index)
  {  return FdocumentAttachments_Specified;  } 
  UnicodeString __fastcall GethtmlBody(int Index)
  {  return FhtmlBody;  }
  void __fastcall SethtmlBody(int Index, UnicodeString _prop_val)
  {  FhtmlBody = _prop_val;  }
  UnicodeString __fastcall GetinReplyTo(int Index)
  {  return FinReplyTo;  }
  void __fastcall SetinReplyTo(int Index, UnicodeString _prop_val)
  {  FinReplyTo = _prop_val; FinReplyTo_Specified = true;  }
  bool __fastcall inReplyTo_Specified(int Index)
  {  return FinReplyTo_Specified;  } 
  Array_Of_EmailFileAttachment __fastcall GetfileAttachments(int Index)
  {  return FfileAttachments;  }
  void __fastcall SetfileAttachments(int Index, Array_Of_EmailFileAttachment _prop_val)
  {  FfileAttachments = _prop_val; FfileAttachments_Specified = true;  }
  bool __fastcall fileAttachments_Specified(int Index)
  {  return FfileAttachments_Specified;  } 
  ID __fastcall GetorgWideEmailAddressId(int Index)
  {  return ForgWideEmailAddressId;  }
  void __fastcall SetorgWideEmailAddressId(int Index, ID _prop_val)
  {  ForgWideEmailAddressId = _prop_val; ForgWideEmailAddressId_Specified = true;  }
  bool __fastcall orgWideEmailAddressId_Specified(int Index)
  {  return ForgWideEmailAddressId_Specified;  } 
  UnicodeString __fastcall GetplainTextBody(int Index)
  {  return FplainTextBody;  }
  void __fastcall SetplainTextBody(int Index, UnicodeString _prop_val)
  {  FplainTextBody = _prop_val;  }
  UnicodeString __fastcall Getreferences(int Index)
  {  return Freferences;  }
  void __fastcall Setreferences(int Index, UnicodeString _prop_val)
  {  Freferences = _prop_val; Freferences_Specified = true;  }
  bool __fastcall references_Specified(int Index)
  {  return Freferences_Specified;  } 
  ID __fastcall GettargetObjectId(int Index)
  {  return FtargetObjectId;  }
  void __fastcall SettargetObjectId(int Index, ID _prop_val)
  {  FtargetObjectId = _prop_val;  }
  ID __fastcall GettemplateId(int Index)
  {  return FtemplateId;  }
  void __fastcall SettemplateId(int Index, ID _prop_val)
  {  FtemplateId = _prop_val;  }
  Array_Of_string __fastcall GettoAddresses(int Index)
  {  return FtoAddresses;  }
  void __fastcall SettoAddresses(int Index, Array_Of_string _prop_val)
  {  FtoAddresses = _prop_val; FtoAddresses_Specified = true;  }
  bool __fastcall toAddresses_Specified(int Index)
  {  return FtoAddresses_Specified;  } 
  ID __fastcall GetwhatId(int Index)
  {  return FwhatId;  }
  void __fastcall SetwhatId(int Index, ID _prop_val)
  {  FwhatId = _prop_val;  }

public:
  __fastcall ~SingleEmailMessage();
__published:
  __property Array_Of_string bccAddresses = { index=(IS_OPTN|IS_UNBD|IS_NLBL), read=FbccAddresses, write=SetbccAddresses, stored = bccAddresses_Specified };
  __property Array_Of_string ccAddresses = { index=(IS_OPTN|IS_UNBD|IS_NLBL), read=FccAddresses, write=SetccAddresses, stored = ccAddresses_Specified };
  __property UnicodeString    charset = { index=(IS_NLBL), read=Fcharset, write=Setcharset };
  __property Array_Of_ID documentAttachments = { index=(IS_OPTN|IS_UNBD), read=FdocumentAttachments, write=SetdocumentAttachments, stored = documentAttachments_Specified };
  __property UnicodeString   htmlBody = { index=(IS_NLBL), read=FhtmlBody, write=SethtmlBody };
  __property UnicodeString  inReplyTo = { index=(IS_OPTN|IS_NLBL), read=FinReplyTo, write=SetinReplyTo, stored = inReplyTo_Specified };
  __property Array_Of_EmailFileAttachment fileAttachments = { index=(IS_OPTN|IS_UNBD), read=FfileAttachments, write=SetfileAttachments, stored = fileAttachments_Specified };
  __property ID         orgWideEmailAddressId = { index=(IS_OPTN|IS_NLBL), read=ForgWideEmailAddressId, write=SetorgWideEmailAddressId, stored = orgWideEmailAddressId_Specified };
  __property UnicodeString plainTextBody = { index=(IS_NLBL), read=FplainTextBody, write=SetplainTextBody };
  __property UnicodeString references = { index=(IS_OPTN|IS_NLBL), read=Freferences, write=Setreferences, stored = references_Specified };
  __property ID         targetObjectId = { index=(IS_NLBL), read=FtargetObjectId, write=SettargetObjectId };
  __property ID         templateId = { index=(IS_NLBL), read=FtemplateId, write=SettemplateId };
  __property Array_Of_string toAddresses = { index=(IS_OPTN|IS_UNBD|IS_NLBL), read=FtoAddresses, write=SettoAddresses, stored = toAddresses_Specified };
  __property ID             whatId = { index=(IS_NLBL), read=FwhatId, write=SetwhatId };
};


typedef DynamicArray<SendEmailError*> Array_Of_SendEmailError; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : SendEmailResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class SendEmailResult : public TRemotable {
private:
  Array_Of_SendEmailError Ferrors;
  bool            Ferrors_Specified;
  bool            Fsuccess;
  Array_Of_SendEmailError __fastcall Geterrors(int Index)
  {  return Ferrors;  }
  void __fastcall Seterrors(int Index, Array_Of_SendEmailError _prop_val)
  {  Ferrors = _prop_val; Ferrors_Specified = true;  }
  bool __fastcall errors_Specified(int Index)
  {  return Ferrors_Specified;  } 
  bool __fastcall Getsuccess()
  {  return Fsuccess;  }
  void __fastcall Setsuccess(bool _prop_val)
  {  Fsuccess = _prop_val;  }

public:
  __fastcall ~SendEmailResult();
__published:
  __property Array_Of_SendEmailError     errors = { index=(IS_OPTN|IS_UNBD), read=Ferrors, write=Seterrors, stored = errors_Specified };
  __property bool          success = { read=Fsuccess, write=Setsuccess };
};


typedef DynamicArray<DescribeTab*> Array_Of_DescribeTab; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : DescribeTabSetResult, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class DescribeTabSetResult : public TRemotable {
private:
  UnicodeString   Flabel;
  UnicodeString   FlogoUrl;
  UnicodeString   Fnamespace;
  bool            Fnamespace_Specified;
  bool            Fselected;
  Array_Of_DescribeTab Ftabs;
  bool            Ftabs_Specified;
  UnicodeString __fastcall Getlabel()
  {  return Flabel;  }
  void __fastcall Setlabel(UnicodeString _prop_val)
  {  Flabel = _prop_val;  }
  UnicodeString __fastcall GetlogoUrl()
  {  return FlogoUrl;  }
  void __fastcall SetlogoUrl(UnicodeString _prop_val)
  {  FlogoUrl = _prop_val;  }
  UnicodeString __fastcall Getnamespace(int Index)
  {  return Fnamespace;  }
  void __fastcall Setnamespace(int Index, UnicodeString _prop_val)
  {  Fnamespace = _prop_val; Fnamespace_Specified = true;  }
  bool __fastcall namespace_Specified(int Index)
  {  return Fnamespace_Specified;  } 
  bool __fastcall Getselected()
  {  return Fselected;  }
  void __fastcall Setselected(bool _prop_val)
  {  Fselected = _prop_val;  }
  Array_Of_DescribeTab __fastcall Gettabs(int Index)
  {  return Ftabs;  }
  void __fastcall Settabs(int Index, Array_Of_DescribeTab _prop_val)
  {  Ftabs = _prop_val; Ftabs_Specified = true;  }
  bool __fastcall tabs_Specified(int Index)
  {  return Ftabs_Specified;  } 

public:
  __fastcall ~DescribeTabSetResult();
__published:
  __property UnicodeString      label = { read=Flabel, write=Setlabel };
  __property UnicodeString    logoUrl = { read=FlogoUrl, write=SetlogoUrl };
  __property UnicodeString  namespace_ = { index=(IS_OPTN), read=Fnamespace, write=Setnamespace, stored = namespace_Specified };
  __property bool         selected = { read=Fselected, write=Setselected };
  __property Array_Of_DescribeTab       tabs = { index=(IS_OPTN|IS_UNBD), read=Ftabs, write=Settabs, stored = tabs_Specified };
};


typedef DynamicArray<DescribeSObjectResult*> Array_Of_DescribeSObjectResult; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<DescribeDataCategoryGroupResult*> Array_Of_DescribeDataCategoryGroupResult; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<DataCategoryGroupSobjectTypePair*> Array_Of_DataCategoryGroupSobjectTypePair; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<DescribeDataCategoryGroupStructureResult*> Array_Of_DescribeDataCategoryGroupStructureResult; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<DescribeTabSetResult*> Array_Of_DescribeTabSetResult; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<SaveResult*> Array_Of_SaveResult; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<Email*>      Array_Of_Email; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<SendEmailResult*> Array_Of_SendEmailResult; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<UpsertResult*> Array_Of_UpsertResult; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<MergeRequest*> Array_Of_MergeRequest; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<MergeResult*> Array_Of_MergeResult; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<DeleteResult*> Array_Of_DeleteResult; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<UndeleteResult*> Array_Of_UndeleteResult; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<EmptyRecycleBinResult*> Array_Of_EmptyRecycleBinResult; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<ProcessRequest*> Array_Of_ProcessRequest; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<ProcessResult*> Array_Of_ProcessResult; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<LeadConvert*> Array_Of_LeadConvert; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<LeadConvertResult*> Array_Of_LeadConvertResult; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<InvalidateSessionsResult*> Array_Of_InvalidateSessionsResult; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */
typedef DynamicArray<PackageVersion*> Array_Of_PackageVersion; /* "urn:enterprise.soap.sforce.com"[GblUbnd] */


// ************************************************************************ //
// XML       : PackageVersionHeader, global, <element>
// Namespace : urn:enterprise.soap.sforce.com
// Info      : Header
// ************************************************************************ //
class PackageVersionHeader : public TSOAPHeader {
private:
  Array_Of_PackageVersion FpackageVersions;
  bool            FpackageVersions_Specified;
  Array_Of_PackageVersion __fastcall GetpackageVersions(int Index)
  {  return FpackageVersions;  }
  void __fastcall SetpackageVersions(int Index, Array_Of_PackageVersion _prop_val)
  {  FpackageVersions = _prop_val; FpackageVersions_Specified = true;  }
  bool __fastcall packageVersions_Specified(int Index)
  {  return FpackageVersions_Specified;  } 

  int  GetLength() const  { return FpackageVersions.get_length(); }
  void SetLength(int len) { FpackageVersions_Specified = true; FpackageVersions.set_length(len); }

public:
  __fastcall ~PackageVersionHeader();

  PackageVersion*& operator[](int index) { FpackageVersions_Specified = true; return FpackageVersions[index]; }
  __property int Len = { read=GetLength, write=SetLength };

__published:
  __property Array_Of_PackageVersion packageVersions = { index=(IS_OPTN|IS_UNBD), read=FpackageVersions, write=SetpackageVersions, stored = packageVersions_Specified };
};




// ************************************************************************ //
// XML       : EmailFileAttachment, global, <complexType>
// Namespace : urn:enterprise.soap.sforce.com
// ************************************************************************ //
class EmailFileAttachment : public TRemotable {
private:
  TByteDynArray   Fbody;
  bool            Fbody_Specified;
  UnicodeString   FcontentType;
  bool            FcontentType_Specified;
  UnicodeString   FfileName;
  bool            Finline_;
  bool            Finline__Specified;
  TByteDynArray __fastcall Getbody(int Index)
  {  return Fbody;  }
  void __fastcall Setbody(int Index, TByteDynArray _prop_val)
  {  Fbody = _prop_val; Fbody_Specified = true;  }
  bool __fastcall body_Specified(int Index)
  {  return Fbody_Specified;  } 
  UnicodeString __fastcall GetcontentType(int Index)
  {  return FcontentType;  }
  void __fastcall SetcontentType(int Index, UnicodeString _prop_val)
  {  FcontentType = _prop_val; FcontentType_Specified = true;  }
  bool __fastcall contentType_Specified(int Index)
  {  return FcontentType_Specified;  } 
  UnicodeString __fastcall GetfileName()
  {  return FfileName;  }
  void __fastcall SetfileName(UnicodeString _prop_val)
  {  FfileName = _prop_val;  }
  bool __fastcall Getinline_(int Index)
  {  return Finline_;  }
  void __fastcall Setinline_(int Index, bool _prop_val)
  {  Finline_ = _prop_val; Finline__Specified = true;  }
  bool __fastcall inline__Specified(int Index)
  {  return Finline__Specified;  } 
__published:
  __property TByteDynArray       body = { index=(IS_OPTN|IS_NLBL), read=Fbody, write=Setbody, stored = body_Specified };
  __property UnicodeString contentType = { index=(IS_OPTN|IS_NLBL), read=FcontentType, write=SetcontentType, stored = contentType_Specified };
  __property UnicodeString   fileName = { read=FfileName, write=SetfileName };
  __property bool          inline_ = { index=(IS_OPTN), read=Finline_, write=Setinline_, stored = inline__Specified };
};



// ************************************************************************ //
// Namespace : urn:enterprise.soap.sforce.com
// transport : http://schemas.xmlsoap.org/soap/http
// style     : document
// binding   : SoapBinding
// service   : SforceService
// port      : Soap
// URL       : https://login.salesforce.com/services/Soap/c/25.0
// ************************************************************************ //
__interface INTERFACE_UUID("{411B3400-0956-7A65-AEB7-D66F9CD89840}") Soap : public IInvokable
{
public:

    // Headers: LoginScopeHeader:pIn
  virtual LoginResult*    login(const UnicodeString username, const UnicodeString password) = 0; 

    // Headers: SessionHeader:pIn, PackageVersionHeader:pIn, LocaleOptions:pIn
  virtual DescribeSObjectResult* describeSObject(const UnicodeString sObjectType) = 0; 

    // Headers: SessionHeader:pIn, PackageVersionHeader:pIn, LocaleOptions:pIn
  virtual Array_Of_DescribeSObjectResult describeSObjects(const Array_Of_string sObjectType) = 0; 

    // Headers: SessionHeader:pIn, PackageVersionHeader:pIn
  virtual DescribeGlobalResult* describeGlobal() = 0; 

    // Headers: SessionHeader:pIn, PackageVersionHeader:pIn, LocaleOptions:pIn
  virtual Array_Of_DescribeDataCategoryGroupResult describeDataCategoryGroups(const Array_Of_string sObjectType) = 0; 

    // Headers: SessionHeader:pIn, PackageVersionHeader:pIn, LocaleOptions:pIn
  virtual Array_Of_DescribeDataCategoryGroupStructureResult describeDataCategoryGroupStructures(const Array_Of_DataCategoryGroupSobjectTypePair pairs, const bool topCategoriesOnly) = 0; 

    // Headers: SessionHeader:pIn, PackageVersionHeader:pIn
  virtual DescribeLayoutResult* describeLayout(const UnicodeString sObjectType, const Array_Of_ID recordTypeIds) = 0; 

    // Headers: SessionHeader:pIn, PackageVersionHeader:pIn
  virtual DescribeSoftphoneLayoutResult* describeSoftphoneLayout() = 0; 

    // Headers: SessionHeader:pIn, PackageVersionHeader:pIn
  virtual Array_Of_DescribeTabSetResult describeTabs() = 0; 

    // Headers: SessionHeader:pIn, AssignmentRuleHeader:pIn, MruHeader:pIn, AllowFieldTruncationHeader:pIn, DisableFeedTrackingHeader:pIn, StreamingEnabledHeader:pIn, AllOrNoneHeader:pIn, DebuggingHeader:pIn, PackageVersionHeader:pIn, EmailHeader:pIn, DebuggingInfo:pOut
  virtual Array_Of_SaveResult create(const Array_Of_sObject sObjects) = 0; 

    // Headers: SessionHeader:pIn, AssignmentRuleHeader:pIn, MruHeader:pIn, AllowFieldTruncationHeader:pIn, DisableFeedTrackingHeader:pIn, StreamingEnabledHeader:pIn, AllOrNoneHeader:pIn, DebuggingHeader:pIn, PackageVersionHeader:pIn, EmailHeader:pIn, DebuggingInfo:pOut
  virtual Array_Of_SaveResult update(const Array_Of_sObject sObjects) = 0; 

    // Headers: SessionHeader:pIn, AssignmentRuleHeader:pIn, MruHeader:pIn, AllowFieldTruncationHeader:pIn, DisableFeedTrackingHeader:pIn, StreamingEnabledHeader:pIn, AllOrNoneHeader:pIn, DebuggingHeader:pIn, PackageVersionHeader:pIn, EmailHeader:pIn, DebuggingInfo:pOut
  virtual Array_Of_UpsertResult upsert(const UnicodeString externalIDFieldName, const Array_Of_sObject sObjects) = 0; 

    // Headers: SessionHeader:pIn, AssignmentRuleHeader:pIn, MruHeader:pIn, AllowFieldTruncationHeader:pIn, DisableFeedTrackingHeader:pIn, StreamingEnabledHeader:pIn, DebuggingHeader:pIn, PackageVersionHeader:pIn, EmailHeader:pIn, DebuggingInfo:pOut
  virtual Array_Of_MergeResult merge(const Array_Of_MergeRequest request) = 0; 

    // Headers: SessionHeader:pIn, PackageVersionHeader:pIn, UserTerritoryDeleteHeader:pIn, EmailHeader:pIn, AllowFieldTruncationHeader:pIn, DisableFeedTrackingHeader:pIn, StreamingEnabledHeader:pIn, AllOrNoneHeader:pIn, DebuggingHeader:pIn, DebuggingInfo:pOut
  virtual Array_Of_DeleteResult delete_(const Array_Of_ID ids) = 0; 

    // Headers: SessionHeader:pIn, AllowFieldTruncationHeader:pIn, DisableFeedTrackingHeader:pIn, StreamingEnabledHeader:pIn, AllOrNoneHeader:pIn, DebuggingHeader:pIn, PackageVersionHeader:pIn, DebuggingInfo:pOut
  virtual Array_Of_UndeleteResult undelete(const Array_Of_ID ids) = 0; 

    // Headers: SessionHeader:pIn
  virtual Array_Of_EmptyRecycleBinResult emptyRecycleBin(const Array_Of_ID ids) = 0; 

    // Headers: SessionHeader:pIn, QueryOptions:pIn, MruHeader:pIn, PackageVersionHeader:pIn
  virtual Array_Of_sObject retrieve(const UnicodeString fieldList, const UnicodeString sObjectType, const Array_Of_ID ids) = 0; 

    // Headers: SessionHeader:pIn, AllowFieldTruncationHeader:pIn, DisableFeedTrackingHeader:pIn, StreamingEnabledHeader:pIn, DebuggingHeader:pIn, PackageVersionHeader:pIn, DebuggingInfo:pOut
  virtual Array_Of_ProcessResult process(const Array_Of_ProcessRequest actions) = 0; 

    // Headers: SessionHeader:pIn, AllowFieldTruncationHeader:pIn, DisableFeedTrackingHeader:pIn, StreamingEnabledHeader:pIn, DebuggingHeader:pIn, PackageVersionHeader:pIn, DebuggingInfo:pOut
  virtual Array_Of_LeadConvertResult convertLead(const Array_Of_LeadConvert leadConverts) = 0; 

    // Headers: SessionHeader:pIn
  virtual void            logout() = 0; 

    // Headers: SessionHeader:pIn
  virtual Array_Of_InvalidateSessionsResult invalidateSessions(const Array_Of_string sessionIds) = 0; 

    // Headers: SessionHeader:pIn
  virtual GetDeletedResult* getDeleted(const UnicodeString sObjectType, const TXSDateTime* startDate, const TXSDateTime* endDate) = 0; 

    // Headers: SessionHeader:pIn
  virtual GetUpdatedResult* getUpdated(const UnicodeString sObjectType, const TXSDateTime* startDate, const TXSDateTime* endDate) = 0; 

    // Headers: SessionHeader:pIn, QueryOptions:pIn, MruHeader:pIn, PackageVersionHeader:pIn
  virtual QueryResult*    query(const UnicodeString queryString) = 0; 

    // Headers: SessionHeader:pIn, QueryOptions:pIn
  virtual QueryResult*    queryAll(const UnicodeString queryString) = 0; 

    // Headers: SessionHeader:pIn, QueryOptions:pIn
  virtual QueryResult*    queryMore(const QueryLocator queryLocator) = 0; 

    // Headers: SessionHeader:pIn, PackageVersionHeader:pIn
  virtual SearchResult*   search(const UnicodeString searchString) = 0; 

    // Headers: SessionHeader:pIn
  virtual GetServerTimestampResult* getServerTimestamp() = 0; 

    // Headers: SessionHeader:pIn
  virtual SetPasswordResult* setPassword(const ID userId, const UnicodeString password) = 0; 

    // Headers: SessionHeader:pIn, EmailHeader:pIn
  virtual ResetPasswordResult* resetPassword(const ID userId) = 0; 

    // Headers: SessionHeader:pIn
  virtual GetUserInfoResult* getUserInfo() = 0; 

    // Headers: SessionHeader:pIn
  virtual Array_Of_SendEmailResult sendEmail(const Array_Of_Email messages) = 0; 
};
typedef DelphiInterface<Soap> _di_Soap;

_di_Soap GetSoap(bool useWSDL=false, AnsiString addr="", THTTPRIO* HTTPRIO=0);

}; /* SfIntegration */

#endif // ! __h_magic_memories_sf_binding__

